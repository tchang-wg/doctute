<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="autolink_8cpp" kind="file" language="C++">
    <compoundname>autolink.cpp</compoundname>
    <innerclass refid="class_autolink___test" prot="public">Autolink_Test</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="autolink_8cpp_1a996f7be338ccb40d1a2a5abc1ad61759" prot="public" static="no">
        <name>ABS</name>
        <param><defname>x</defname></param>
        <initializer>(((x)&gt;0)?(x):-(x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_a" kindref="compound">A</ref> macro definition. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="autolink.cpp" line="93" column="9" bodyfile="autolink.cpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5e" prot="public" static="no">
        <name>GlobEnum</name>
        <enumvalue id="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5ea0f016f49e4f3bcd072319b9d68bc927d" prot="public">
          <name>GVal1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>global enum value 1 </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5ea811876e2eea5c16ae0594a95d98fbd55" prot="public">
          <name>GVal2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>global enum value 2 </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_a" kindref="compound">A</ref> global enum. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="autolink.cpp" line="85" column="1" bodyfile="autolink.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="autolink_8cpp_1a7ddc550b157ed6f8db58e462b504ab0f" prot="public" static="no">
        <type><ref refid="class_autolink___test" kindref="compound">Autolink_Test</ref></type>
        <definition>typedef Autolink_Test B</definition>
        <argsstring></argsstring>
        <name>B</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="autolink.cpp" line="95" column="1" bodyfile="autolink.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="autolink_8cpp_1a88d0bae800d600a11d7bd60f0bc4b858" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int globVar</definition>
        <argsstring></argsstring>
        <name>globVar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_a" kindref="compound">A</ref> global variable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="autolink.cpp" line="82" column="1" bodyfile="autolink.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Testing automatic link generation.</para><para><ref refid="class_a" kindref="compound">A</ref> link to a member of the <ref refid="class_autolink___test" kindref="compound">Autolink_Test</ref> class: <ref refid="class_autolink___test_1a393ea281f235a2f603d98daf72b0d411" kindref="member">Autolink_Test::member</ref>,</para><para>More specific links to the each of the overloaded members: <ref refid="class_autolink___test_1a393ea281f235a2f603d98daf72b0d411" kindref="member">Autolink_Test::member(int)</ref> and <ref refid="class_autolink___test_1acf783a43c2b4b6cc9dd2361784eca2e1" kindref="member">Autolink_Test::member(int,int)</ref></para><para><ref refid="class_a" kindref="compound">A</ref> link to a protected member variable of <ref refid="class_autolink___test" kindref="compound">Autolink_Test</ref>: <ref refid="class_autolink___test_1a8de85603114bc9b9e53bd40764e9b499" kindref="member">Autolink_Test::var</ref>,</para><para><ref refid="class_a" kindref="compound">A</ref> link to the global enumeration type <ref refid="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5e" kindref="member">GlobEnum</ref>.</para><para><ref refid="class_a" kindref="compound">A</ref> link to the define <ref refid="autolink_8cpp_1a996f7be338ccb40d1a2a5abc1ad61759" kindref="member">ABS(x)</ref>.</para><para><ref refid="class_a" kindref="compound">A</ref> link to the destructor of the <ref refid="class_autolink___test" kindref="compound">Autolink_Test</ref> class: <ref refid="class_autolink___test_1a03bf46c8e2b733680035f524fd7b193b" kindref="member">Autolink_Test::~Autolink_Test</ref>,</para><para><ref refid="class_a" kindref="compound">A</ref> link to the typedef <ref refid="class_b" kindref="compound">B</ref>.</para><para><ref refid="class_a" kindref="compound">A</ref> link to the enumeration type <ref refid="class_autolink___test_1aeb611627c332d067bded1806b1bb45c2" kindref="member">Autolink_Test::EType</ref></para><para><ref refid="class_a" kindref="compound">A</ref> link to some enumeration values <ref refid="class_autolink___test_1aeb611627c332d067bded1806b1bb45c2af70631e295bce280e74762d18af47a94" kindref="member">Autolink_Test::Val1</ref> and <ref refid="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5ea811876e2eea5c16ae0594a95d98fbd55" kindref="member">GVal2</ref> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="57" refid="class_autolink___test" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_autolink___test" kindref="compound">Autolink_Test</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_autolink___test_1a278d631f9943428c05b17d78f14488e2" kindref="member">Autolink_Test</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_autolink___test_1a03bf46c8e2b733680035f524fd7b193b" kindref="member">~Autolink_Test</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_autolink___test_1a393ea281f235a2f603d98daf72b0d411" kindref="member">member</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_autolink___test_1a393ea281f235a2f603d98daf72b0d411" kindref="member">member</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_autolink___test_1aeb611627c332d067bded1806b1bb45c2" kindref="member">EType</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_autolink___test_1aeb611627c332d067bded1806b1bb45c2af70631e295bce280e74762d18af47a94" kindref="member">Val1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_autolink___test_1aeb611627c332d067bded1806b1bb45c2a7d760f44a8971559d108a609b8fb9b3b" kindref="member">Val2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_autolink___test_1a8de85603114bc9b9e53bd40764e9b499" kindref="member">var</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="class_autolink___test_1a278d631f9943428c05b17d78f14488e2" kindref="member">Autolink_Test::Autolink_Test</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="class_autolink___test_1a03bf46c8e2b733680035f524fd7b193b" kindref="member">Autolink_Test::~Autolink_Test</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="autolink_8cpp_1a88d0bae800d600a11d7bd60f0bc4b858" kindref="member">globVar</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5e" kindref="member">GlobEnum</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5ea0f016f49e4f3bcd072319b9d68bc927d" kindref="member">GVal1</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="autolink_8cpp_1a656d63cf384d2a6f23c2c18523a7bc5ea811876e2eea5c16ae0594a95d98fbd55" kindref="member">GVal2</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor">#define<sp/>ABS(x)<sp/>(((x)&gt;0)?(x):-(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_autolink___test" kindref="compound">Autolink_Test</ref><sp/><ref refid="memgrp_8cpp_1a7ddc550b157ed6f8db58e462b504ab0f" kindref="member">B</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="autolink.cpp"/>
  </compounddef>
</doxygen>
