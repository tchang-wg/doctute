<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_self_reply_wrapper" kind="class" language="C++" prot="public">
    <compoundname>SelfReplyWrapper</compoundname>
    <basecompoundref refid="class_connection_wrapper" prot="public" virt="non-virtual">ConnectionWrapper</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_self_reply_wrapper_1a9b37f0ddfe7f032f5d3399e59c6a5ea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SelfReplyWrapper::SelfReplyWrapper</definition>
        <argsstring>(ReadHandler *pReadHandler, u_int32_t networkAddr, u_int16_t networkPort)</argsstring>
        <name>SelfReplyWrapper</name>
        <param>
          <type><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ReadHandler</ref> *</type>
          <declname>pReadHandler</declname>
        </param>
        <param>
          <type>u_int32_t</type>
          <declname>networkAddr</declname>
        </param>
        <param>
          <type>u_int16_t</type>
          <declname>networkPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/top_level_network_node.cpp" line="188" column="1" bodyfile="tools/bwmachined/top_level_network_node.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_self_reply_wrapper_1a4244892b7d8fad5a5a790ccd82142671" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ConnectionWrapper::ReceiveStatus</type>
        <definition>ConnectionWrapper::ReceiveStatus SelfReplyWrapper::recv</definition>
        <argsstring>()</argsstring>
        <name>recv</name>
        <reimplements refid="class_connection_wrapper_1acc58a5b99dea29164f25ec7d81c190f9">recv</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override from <ref refid="class_connection_wrapper" kindref="compound">ConnectionWrapper</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/top_level_network_node.cpp" line="193" column="1" bodyfile="tools/bwmachined/top_level_network_node.cpp" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_self_reply_wrapper_1af8ed259093dc94a398fc734d5bd5dc80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>ConnectionWrapper::SendStatus</type>
        <definition>ConnectionWrapper::SendStatus SelfReplyWrapper::send</definition>
        <argsstring>(BinaryIStream &amp;input)</argsstring>
        <name>send</name>
        <reimplements refid="class_connection_wrapper_1ab1981d0dc34fe0008a06f9367d72d5d2">send</reimplements>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override from <ref refid="class_connection_wrapper" kindref="compound">ConnectionWrapper</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/top_level_network_node.cpp" line="195" column="1" bodyfile="tools/bwmachined/top_level_network_node.cpp" bodystart="220" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_self_reply_wrapper_1a8934adb8fa95a1c64806a2865f586073" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool SelfReplyWrapper::allowOversizedPackets</definition>
        <argsstring>() const </argsstring>
        <name>allowOversizedPackets</name>
        <reimplements refid="class_connection_wrapper_1ac687550868ca61c0017f24cbbb6dd435">allowOversizedPackets</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override from <ref refid="class_connection_wrapper" kindref="compound">ConnectionWrapper</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/top_level_network_node.cpp" line="200" column="1" bodyfile="tools/bwmachined/top_level_network_node.cpp" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_self_reply_wrapper_1aeb5fec50450ac2975718fdf1ea43b6d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int SelfReplyWrapper::sendfd</definition>
        <argsstring>() const </argsstring>
        <name>sendfd</name>
        <reimplements refid="class_connection_wrapper_1af2d8fd83bce3b1099d378be9acca50b9">sendfd</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override from <ref refid="class_connection_wrapper" kindref="compound">ConnectionWrapper</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/top_level_network_node.cpp" line="202" column="1" bodyfile="tools/bwmachined/top_level_network_node.cpp" bodystart="243" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Wrapper for a faux connection; for communicating with oneself. Responses are sent directly back to the handler. This avoids having to create a leaf node connection to oneself, but still allows us to represent this as a connection. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2573">
        <label>ReferenceCount</label>
      </node>
      <node id="2571">
        <label>SelfReplyWrapper</label>
        <link refid="class_self_reply_wrapper"/>
        <childnode refid="2572" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2572">
        <label>ConnectionWrapper</label>
        <link refid="class_connection_wrapper"/>
        <childnode refid="2573" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2577">
        <label>ConnectionWrapper::ReadHandler</label>
        <link refid="class_connection_wrapper_1_1_read_handler"/>
      </node>
      <node id="2576">
        <label>ReferenceCount</label>
      </node>
      <node id="2574">
        <label>SelfReplyWrapper</label>
        <link refid="class_self_reply_wrapper"/>
        <childnode refid="2575" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2575">
        <label>ConnectionWrapper</label>
        <link refid="class_connection_wrapper"/>
        <childnode refid="2576" relation="public-inheritance">
        </childnode>
        <childnode refid="2577" relation="usage">
          <edgelabel>pReadHandler_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tools/bwmachined/top_level_network_node.cpp" line="186" column="1" bodyfile="tools/bwmachined/top_level_network_node.cpp" bodystart="185" bodyend="203"/>
    <listofallmembers>
      <member refid="class_self_reply_wrapper_1a8934adb8fa95a1c64806a2865f586073" prot="public" virt="virtual"><scope>SelfReplyWrapper</scope><name>allowOversizedPackets</name></member>
      <member refid="class_connection_wrapper_1a148b9a810bad2b953b18a26a460fb5c6" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>ConnectionWrapper</name></member>
      <member refid="class_connection_wrapper_1ab3834408026d5b58f72b33e60b69dd04" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>ConnectionWrapper</name></member>
      <member refid="class_connection_wrapper_1ae516e3e8d68202075cb99e2d363da95f" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>getSocketAddress</name></member>
      <member refid="class_connection_wrapper_1a0f18ea193128c62ec31a9776840bf8e9a2ed04db7bb71e673d0be238c2865cb61" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>MAX_BUFFER_SIZE</name></member>
      <member refid="class_connection_wrapper_1ae0d99af2aa3eb5329c0a24db14e4b035" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>networkAddr</name></member>
      <member refid="class_connection_wrapper_1a81e87269c2f2d69a48cc9ffc4d771a07" prot="protected" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>networkAddr_</name></member>
      <member refid="class_connection_wrapper_1a0d25df1d2592cb158de6b0a1ad8653c5" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>networkPort</name></member>
      <member refid="class_connection_wrapper_1a21bba3bb96b40ccd97e4beee8ca4d9ea" prot="protected" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>networkPort_</name></member>
      <member refid="class_connection_wrapper_1aa0aaf803a6acc8cf31aee2ba7f773525" prot="protected" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>pReadHandler_</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a5c5c0e1eed380ddab0ee5987c2de71ea" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>RECEIVE_DATA_ERROR</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a46d6c7a5dca63e4d20531b6ff0c297d9" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>RECEIVE_FAILURE</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502aaaacb0831ad832ab2a4638585c5b2c0c" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>RECEIVE_IN_PROGRESS</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a4b108c3950121b1cc0b5d73c63d235cd" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>RECEIVE_SUCCESS</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>ReceiveStatus</name></member>
      <member refid="class_self_reply_wrapper_1a4244892b7d8fad5a5a790ccd82142671" prot="public" virt="virtual"><scope>SelfReplyWrapper</scope><name>recv</name></member>
      <member refid="class_self_reply_wrapper_1a9b37f0ddfe7f032f5d3399e59c6a5ea4" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>SelfReplyWrapper</name></member>
      <member refid="class_self_reply_wrapper_1af8ed259093dc94a398fc734d5bd5dc80" prot="public" virt="virtual"><scope>SelfReplyWrapper</scope><name>send</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506ae7f522af6f42ac55d54f8f56d86f9d17" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>SEND_FAILURE</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506a50a0aca7b72d6d728b9b3244e3c3d8a8" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>SEND_IN_PROGRESS</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506a5b98951c666199ac68cae12b7bdc8c1c" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>SEND_SUCCESS</name></member>
      <member refid="class_self_reply_wrapper_1aeb5fec50450ac2975718fdf1ea43b6d6" prot="public" virt="virtual"><scope>SelfReplyWrapper</scope><name>sendfd</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506" prot="public" virt="non-virtual"><scope>SelfReplyWrapper</scope><name>SendStatus</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
