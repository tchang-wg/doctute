<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="query__range_8cpp" kind="file" language="C++">
    <compoundname>query_range.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="query__range_8hpp" local="yes">query_range.hpp</includes>
    <includes refid="user__segment__reader_8hpp" local="yes">user_segment_reader.hpp</includes>
    <includes refid="log__entry_8hpp" local="yes">log_entry.hpp</includes>
    <incdepgraph>
      <node id="22242">
        <label>query_range_iterator.hpp</label>
        <link refid="query__range__iterator_8hpp_source"/>
        <childnode refid="22197" relation="include">
        </childnode>
        <childnode refid="22192" relation="include">
        </childnode>
      </node>
      <node id="22223">
        <label>unary_integer_file.hpp</label>
        <link refid="unary__integer__file_8hpp_source"/>
        <childnode refid="22216" relation="include">
        </childnode>
        <childnode refid="22217" relation="include">
        </childnode>
      </node>
      <node id="22234">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="22205">
        <label>query_params.hpp</label>
        <link refid="query__params_8hpp_source"/>
        <childnode refid="22190" relation="include">
        </childnode>
        <childnode refid="22195" relation="include">
        </childnode>
        <childnode refid="22196" relation="include">
        </childnode>
        <childnode refid="22191" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22206" relation="include">
        </childnode>
        <childnode refid="22225" relation="include">
        </childnode>
        <childnode refid="22240" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22237" relation="include">
        </childnode>
        <childnode refid="22241" relation="include">
        </childnode>
      </node>
      <node id="22206">
        <label>user_log_reader.hpp</label>
        <link refid="user__log__reader_8hpp_source"/>
        <childnode refid="22190" relation="include">
        </childnode>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22208" relation="include">
        </childnode>
        <childnode refid="22189" relation="include">
        </childnode>
        <childnode refid="22224" relation="include">
        </childnode>
        <childnode refid="22202" relation="include">
        </childnode>
      </node>
      <node id="22193">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="22188">
        <label>script/first_include.hpp</label>
      </node>
      <node id="22217">
        <label>stdlib.h</label>
      </node>
      <node id="22196">
        <label>log_time.hpp</label>
        <link refid="log__time_8hpp_source"/>
        <childnode refid="22197" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22203" relation="include">
        </childnode>
        <childnode refid="22204" relation="include">
        </childnode>
      </node>
      <node id="22191">
        <label>log_entry_address_reader.hpp</label>
        <link refid="log__entry__address__reader_8hpp_source"/>
        <childnode refid="22192" relation="include">
        </childnode>
        <childnode refid="22195" relation="include">
        </childnode>
      </node>
      <node id="22221">
        <label>user_segment_usage.hpp</label>
        <link refid="user__segment__usage_8hpp_source"/>
        <childnode refid="22222" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
      </node>
      <node id="22233">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22203" relation="include">
        </childnode>
      </node>
      <node id="22187">
        <label>tools/message_logger/query_range.cpp</label>
        <link refid="query_range.cpp"/>
        <childnode refid="22188" relation="include">
        </childnode>
        <childnode refid="22189" relation="include">
        </childnode>
        <childnode refid="22224" relation="include">
        </childnode>
        <childnode refid="22236" relation="include">
        </childnode>
      </node>
      <node id="22203">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="22214">
        <label>mldb/log_component_names.hpp</label>
        <link refid="mldb_2log__component__names_8hpp_source"/>
        <childnode refid="22215" relation="include">
        </childnode>
        <childnode refid="22216" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
      </node>
      <node id="22190">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="22194">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="22239">
        <label>../hostnames.hpp</label>
        <link refid="hostnames_8hpp_source"/>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
      </node>
      <node id="22235">
        <label>network/format_string_handler.hpp</label>
      </node>
      <node id="22207">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="22240">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="22189">
        <label>query_range.hpp</label>
        <link refid="query__range_8hpp_source"/>
        <childnode refid="22190" relation="include">
        </childnode>
        <childnode refid="22191" relation="include">
        </childnode>
        <childnode refid="22196" relation="include">
        </childnode>
        <childnode refid="22205" relation="include">
        </childnode>
        <childnode refid="22242" relation="include">
        </childnode>
        <childnode refid="22206" relation="include">
        </childnode>
        <childnode refid="22236" relation="include">
        </childnode>
      </node>
      <node id="22237">
        <label>cstdmf/debug_message_source.hpp</label>
      </node>
      <node id="22229">
        <label>format_strings.hpp</label>
        <link refid="mldb_2format__strings_8hpp_source"/>
        <childnode refid="22211" relation="include">
        </childnode>
        <childnode refid="22230" relation="include">
        </childnode>
        <childnode refid="22231" relation="include">
        </childnode>
        <childnode refid="22236" relation="include">
        </childnode>
        <childnode refid="22207" relation="include">
        </childnode>
      </node>
      <node id="22227">
        <label>categories.hpp</label>
        <link refid="mldb_2categories_8hpp_source"/>
        <childnode refid="22211" relation="include">
        </childnode>
        <childnode refid="22228" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
      </node>
      <node id="22236">
        <label>log_entry.hpp</label>
        <link refid="log__entry_8hpp_source"/>
        <childnode refid="22196" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22237" relation="include">
        </childnode>
        <childnode refid="22203" relation="include">
        </childnode>
      </node>
      <node id="22195">
        <label>Python.h</label>
      </node>
      <node id="22222">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="22231">
        <label>log_string_interpolator.hpp</label>
        <link refid="log__string__interpolator_8hpp_source"/>
        <childnode refid="22232" relation="include">
        </childnode>
        <childnode refid="22233" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22234" relation="include">
        </childnode>
        <childnode refid="22213" relation="include">
        </childnode>
        <childnode refid="22235" relation="include">
        </childnode>
        <childnode refid="22198" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22202" relation="include">
        </childnode>
      </node>
      <node id="22216">
        <label>../text_file_handler.hpp</label>
        <link refid="text__file__handler_8hpp_source"/>
        <childnode refid="22212" relation="include">
        </childnode>
        <childnode refid="22217" relation="include">
        </childnode>
      </node>
      <node id="22218">
        <label>user_segment.hpp</label>
        <link refid="user__segment_8hpp_source"/>
        <childnode refid="22199" relation="include">
        </childnode>
        <childnode refid="22202" relation="include">
        </childnode>
        <childnode refid="22208" relation="include">
        </childnode>
        <childnode refid="22196" relation="include">
        </childnode>
        <childnode refid="22219" relation="include">
        </childnode>
        <childnode refid="22213" relation="include">
        </childnode>
        <childnode refid="22217" relation="include">
        </childnode>
        <childnode refid="22220" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
      </node>
      <node id="22211">
        <label>binary_file_handler.hpp</label>
        <link refid="binary__file__handler_8hpp_source"/>
        <childnode refid="22212" relation="include">
        </childnode>
        <childnode refid="22213" relation="include">
        </childnode>
      </node>
      <node id="22197">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="22198" relation="include">
        </childnode>
        <childnode refid="22199" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
      </node>
      <node id="22204">
        <label>time.h</label>
      </node>
      <node id="22201">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="22215">
        <label>../log_component_names.hpp</label>
        <link refid="log__component__names_8hpp_source"/>
        <childnode refid="22200" relation="include">
        </childnode>
      </node>
      <node id="22228">
        <label>../categories.hpp</label>
        <link refid="categories_8hpp_source"/>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
      </node>
      <node id="22200">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="22201" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22202" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
      </node>
      <node id="22208">
        <label>user_log.hpp</label>
        <link refid="user__log_8hpp_source"/>
        <childnode refid="22209" relation="include">
        </childnode>
        <childnode refid="22210" relation="include">
        </childnode>
        <childnode refid="22218" relation="include">
        </childnode>
        <childnode refid="22221" relation="include">
        </childnode>
        <childnode refid="22223" relation="include">
        </childnode>
        <childnode refid="22220" relation="include">
        </childnode>
      </node>
      <node id="22238">
        <label>hostnames.hpp</label>
        <link refid="mldb_2hostnames_8hpp_source"/>
        <childnode refid="22239" relation="include">
        </childnode>
        <childnode refid="22216" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
      </node>
      <node id="22199">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="22198">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="22230">
        <label>../format_strings.hpp</label>
        <link refid="format__strings_8hpp_source"/>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22231" relation="include">
        </childnode>
        <childnode refid="22236" relation="include">
        </childnode>
      </node>
      <node id="22232">
        <label>string_offset.hpp</label>
        <link refid="string__offset_8hpp_source"/>
        <childnode refid="22199" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22202" relation="include">
        </childnode>
        <childnode refid="22203" relation="include">
        </childnode>
      </node>
      <node id="22212">
        <label>file_handler.hpp</label>
        <link refid="file__handler_8hpp_source"/>
        <childnode refid="22199" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
      </node>
      <node id="22225">
        <label>mldb/log_reader.hpp</label>
        <link refid="log__reader_8hpp_source"/>
        <childnode refid="22226" relation="include">
        </childnode>
        <childnode refid="22239" relation="include">
        </childnode>
        <childnode refid="22206" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
      </node>
      <node id="22209">
        <label>logging_component.hpp</label>
        <link refid="logging__component_8hpp_source"/>
        <childnode refid="22210" relation="include">
        </childnode>
        <childnode refid="22192" relation="include">
        </childnode>
        <childnode refid="22198" relation="include">
        </childnode>
      </node>
      <node id="22224">
        <label>user_segment_reader.hpp</label>
        <link refid="user__segment__reader_8hpp_source"/>
        <childnode refid="22218" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22202" relation="include">
        </childnode>
      </node>
      <node id="22226">
        <label>log_common.hpp</label>
        <link refid="log__common_8hpp_source"/>
        <childnode refid="22227" relation="include">
        </childnode>
        <childnode refid="22229" relation="include">
        </childnode>
        <childnode refid="22238" relation="include">
        </childnode>
        <childnode refid="22214" relation="include">
        </childnode>
        <childnode refid="22223" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
      </node>
      <node id="22219">
        <label>mldb/metadata.hpp</label>
        <link refid="mldb_2metadata_8hpp_source"/>
        <childnode refid="22211" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22193" relation="include">
        </childnode>
      </node>
      <node id="22202">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="22241">
        <label>regex.h</label>
      </node>
      <node id="22213">
        <label>network/file_stream.hpp</label>
      </node>
      <node id="22210">
        <label>user_components.hpp</label>
        <link refid="user__components_8hpp_source"/>
        <childnode refid="22211" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22214" relation="include">
        </childnode>
        <childnode refid="22201" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22207" relation="include">
        </childnode>
      </node>
      <node id="22192">
        <label>log_entry_address.hpp</label>
        <link refid="log__entry__address_8hpp_source"/>
        <childnode refid="22193" relation="include">
        </childnode>
        <childnode refid="22194" relation="include">
        </childnode>
      </node>
      <node id="22220">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;query_range.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;user_segment_reader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_entry.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="class_query_range_1aab29b7f2b842fa65be2f4bf3182d1e1b" kindref="member">QueryRange::QueryRange</ref>(<sp/><ref refid="class_smart_pointer" kindref="compound">QueryParamsPtr</ref><sp/>pParams,<sp/><ref refid="class_smart_pointer" kindref="compound">UserLogReaderPtr</ref><sp/>pUserLog<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>pUserLog_(<sp/>pUserLog<sp/>),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>startTime_(<sp/><sp/><sp/><sp/>pParams-&gt;getStartTime()<sp/>),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>endTime_(<sp/><sp/><sp/><sp/><sp/><sp/>pParams-&gt;getEndTime()<sp/>),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>startAddress_(<sp/>pParams-&gt;getStartAddress()<sp/>),</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>endAddress_(<sp/><sp/><sp/>pParams-&gt;getEndAddress()<sp/>),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>direction_(<sp/><sp/><sp/><sp/>pParams-&gt;getDirection()<sp/>),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>begin_(<sp/>this<sp/>),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_(<sp/><sp/>this<sp/>),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>end_(<sp/><sp/><sp/>this<sp/>),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>args_(<sp/><sp/>this<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>start<sp/>point<sp/>for<sp/>the<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>begin_<sp/>=<sp/>curr_<sp/>=<sp/>this-&gt;findSentinel(<sp/>direction_<sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>end<sp/>point<sp/>for<sp/>the<sp/>query.<sp/>Even<sp/>though<sp/>this<sp/>might<sp/>seem<sp/>expensive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>there&apos;s<sp/>no<sp/>guarantee<sp/>our<sp/>search<sp/>will<sp/>actually<sp/>reach<sp/>the<sp/>end,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>better<sp/>to<sp/>do<sp/>this<sp/>now<sp/>as<sp/>it<sp/>makes<sp/>checking<sp/>for<sp/>search<sp/>termination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>during<sp/>each<sp/>call<sp/>to<sp/>getNextEntry()<sp/>cheap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>end_<sp/>=<sp/>this-&gt;findSentinel(<sp/>-direction_<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRange::findEntryInSegment(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/>pUserSegment,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchDirection<sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pUserSegment<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>segment<sp/>is<sp/>a<sp/>candidate<sp/>if<sp/>either<sp/>the<sp/>start<sp/>or<sp/>end<sp/>falls<sp/>within</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>limits,<sp/>or<sp/>if<sp/>it&apos;s<sp/>spanned<sp/>by<sp/>the<sp/>start<sp/>and<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>starteq;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startAddress_.isValid())</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>starteq<sp/>=<sp/>(startAddress_.getSuffix()<sp/>==<sp/>pUserSegment-&gt;getSuffix());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>starteq<sp/>=<sp/>((pUserSegment-&gt;getStartLogTime()<sp/>&lt;=<sp/>startTime_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(startTime_<sp/>&lt;=<sp/>pUserSegment-&gt;getEndLogTime()));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>endeq;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endAddress_.isValid())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endeq<sp/>=<sp/>(endAddress_.getSuffix()<sp/>==<sp/>pUserSegment-&gt;getSuffix());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endeq<sp/>=<sp/>((pUserSegment-&gt;getStartLogTime()<sp/>&lt;=<sp/>endTime_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(endTime_<sp/>&lt;=<sp/>pUserSegment-&gt;getEndLogTime()));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>startlt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startAddress_.isValid())</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startlt<sp/>=<sp/>(startAddress_.getSuffix()<sp/>&lt;<sp/>pUserSegment-&gt;getSuffix());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startlt<sp/>=<sp/>(startTime_<sp/>&lt;<sp/>pUserSegment-&gt;getStartLogTime());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>endgt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endAddress_.isValid())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endgt<sp/>=<sp/>(pUserSegment-&gt;getSuffix()<sp/>&lt;<sp/>endAddress_.getSuffix());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endgt<sp/>=<sp/>(pUserSegment-&gt;getEndLogTime()<sp/>&lt;<sp/>endTime_);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(starteq<sp/>||<sp/>endeq<sp/>||<sp/>(startlt<sp/>&amp;&amp;<sp/>endgt))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>QUERY_FORWARDS)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pUserSegment<sp/>)-&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>findEntryNumber(<sp/>startTime_,<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pUserSegment<sp/>)-&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>findEntryNumber(<sp/>endTime_,<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entryNum;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRange::iterator</ref><sp/>QueryRange::findLeftSentinel()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>manually<sp/>specified<sp/>offsets<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startAddress_.isValid())</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*startSuffix<sp/>=<sp/>startAddress_.getSuffix();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum<sp/>=<sp/>pUserLog_-&gt;getSegmentIndexFromSuffix(<sp/>startSuffix<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>segmentNum,<sp/>startAddress_.getIndex()<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userSegmentNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSegments<sp/>=<sp/>pUserLog_-&gt;getNumSegments();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>linear<sp/>search<sp/>through<sp/>the<sp/>list<sp/>of<sp/>segments<sp/>and<sp/>return<sp/>an<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointing<sp/>into<sp/>the<sp/>right<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(userSegmentNum<sp/>&lt;<sp/>numSegments)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/>pUserLog_-&gt;getUserSegment(<sp/>userSegmentNum<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum<sp/>=<sp/>this-&gt;findEntryInSegment(<sp/>pSegment,<sp/>QUERY_FORWARDS<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entryNum<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>userSegmentNum,<sp/>entryNum<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++userSegmentNum;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator::error(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRange::iterator</ref><sp/>QueryRange::findRightSentinel()</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>manually<sp/>specified<sp/>offsets<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endAddress_.isValid())</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*endSuffix<sp/>=<sp/>endAddress_.getSuffix();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum<sp/>=<sp/>pUserLog_-&gt;getSegmentIndexFromSuffix(<sp/>endSuffix<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>segmentNum,<sp/>endAddress_.getIndex()<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userSegmentNum<sp/>=<sp/>pUserLog_-&gt;getNumSegments()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>linear<sp/>search<sp/>through<sp/>the<sp/>list<sp/>of<sp/>segments<sp/>and<sp/>return<sp/>an<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointing<sp/>into<sp/>the<sp/>right<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(userSegmentNum<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pUserLog_-&gt;getUserSegment(<sp/>userSegmentNum<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum<sp/>=<sp/>this-&gt;findEntryInSegment(<sp/>pSegment,<sp/>QUERY_BACKWARDS<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entryNum<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>userSegmentNum,<sp/>entryNum<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--userSegmentNum;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator::error(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRange::iterator</ref><sp/>QueryRange::findSentinel(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>QUERY_FORWARDS)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;findLeftSentinel();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>QUERY_BACKWARDS)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;findRightSentinel();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;QueryRange::findSentinel:<sp/>Invalid<sp/>direction<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator::error(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/>QueryRange::getUserSegmentFromIndex(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="204"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pUserLog_-&gt;getUserSegment(<sp/>index<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRange::getUserLogNumSegments()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="210"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pUserLog_-&gt;getNumSegments();</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QueryRange::getNextEntry(<sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;entry<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!begin_.isGood()<sp/>||<sp/>!end_.isGood()<sp/>||</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!curr_.isGood()<sp/><sp/>||<sp/>!(curr_<sp/>&lt;=<sp/>end_))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>off<sp/>entry<sp/>and<sp/>set<sp/>args<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/>curr_.getSegment();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pSegment<sp/>)-&gt;readEntry(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_.getEntryNumber(),<sp/>entry<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args_<sp/>=<sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>curr_.getSegmentNumber(),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.argsOffset()<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;step_forward();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">BinaryIStream*<sp/><ref refid="class_query_range_1a6ff884d3ebdb443961ceea6412c8fe51" kindref="member">QueryRange::getArgStream</ref>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/>args_.getSegment();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>FileStream<sp/>*pFileStream<sp/>=</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pSegment<sp/>)-&gt;getArgStream();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pFileStream)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFileStream-&gt;seek(<sp/>args_.getArgsOffset()<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pFileStream-&gt;good())</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFileStream<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pFileStream;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QueryRange::getMetaDataFromEntry(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;<sp/>entry,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/>args_.getSegment();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pSegment<sp/>)-&gt;metadata(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QueryRange::updateArgs(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argsOffset<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>args_<sp/>=<sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>segmentNum,<sp/>argsOffset<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>QueryRange::iter_curr()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="283"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curr_;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>QueryRange::iter_end()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="289"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QueryRange::areBoundsGood()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="295"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(begin_.isGood()<sp/>&amp;&amp;<sp/>end_.isGood());</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRange::getNumEntriesVisited()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="301"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(curr_<sp/>-<sp/>begin_);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRange::getTotalEntries()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="307"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(end_<sp/>-<sp/>begin_)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QueryRange::step_forward()</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>++curr_;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QueryRange::step_back()</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>--curr_;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QueryRange::resume()</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>end_<sp/>=<sp/>this-&gt;findSentinel(<sp/>-direction_<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!begin_.isGood())</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_<sp/>=<sp/>curr_<sp/>=<sp/>this-&gt;findSentinel(<sp/>direction_<sp/>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>had<sp/>exhausted<sp/>the<sp/>previous<sp/>range,<sp/>then<sp/>we<sp/>need<sp/>to<sp/>step<sp/>off<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_.getMetaOffset()<sp/>==<sp/>direction_)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;step_forward();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QueryRange::seek(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metaOffset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>postIncrement<sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>query(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>segmentNum,<sp/>entryNum<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((begin_<sp/>&lt;=<sp/>query)<sp/>&amp;&amp;<sp/>(query<sp/>&lt;=<sp/>end_))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_<sp/>=<sp/>iterator(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>segmentNum,<sp/>entryNum,<sp/>metaOffset<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>postIncrement;<sp/>i++)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;step_forward();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">BW::string<sp/>QueryRange::asString()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="365"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<sp/>256<sp/>];</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_snprintf(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>buf<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;(%s)<sp/>-&gt;<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_.asString().c_str(),<sp/>end_.asString().c_str()<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BW::string(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>query_range.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/query_range.cpp"/>
  </compounddef>
</doxygen>
