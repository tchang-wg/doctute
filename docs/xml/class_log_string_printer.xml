<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_log_string_printer" kind="class" language="C++" prot="public">
    <compoundname>LogStringPrinter</compoundname>
    <includes refid="log__string__printer_8hpp" local="no">log_string_printer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_log_string_printer_1a5aad3dceec69da0964b9c04f7d8fdc2e" prot="private" static="no" mutable="no">
        <type>BW::string *</type>
        <definition>BW::string* LogStringPrinter::pStr_</definition>
        <argsstring></argsstring>
        <name>pStr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="50" column="1" bodyfile="tools/message_logger/log_string_printer.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_log_string_printer_1a51e960c3ae7e752216419ac47cf0cb8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>BW_BEGIN_NAMESPACE void LogStringPrinter::setResultString</definition>
        <argsstring>(BW::string &amp;result)</argsstring>
        <name>setResultString</name>
        <param>
          <type>BW::string &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="20" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="6" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1abcecbe8bca10bfdce6f3d5df420bd673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onFmtStringSection</definition>
        <argsstring>(const BW::string &amp;fmt, int start, int end)</argsstring>
        <name>onFmtStringSection</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="23" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1a3055a7e9f451b9e489f1d1453768181e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onParseComplete</definition>
        <argsstring>()</argsstring>
        <name>onParseComplete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="25" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1adcf184fe02e6fc654e2bd6f23065dc83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onError</definition>
        <argsstring>()</argsstring>
        <name>onError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="26" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1a94a17a6a0684a97b273f8f2d5c58f84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onMinWidth</definition>
        <argsstring>(WidthType w, FormatData &amp;fd)</argsstring>
        <name>onMinWidth</name>
        <param>
          <type>WidthType</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="class_format_data" kindref="compound">FormatData</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="28" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1a49f158b052c54c67b6f947e99a3df30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onMaxWidth</definition>
        <argsstring>(WidthType w, FormatData &amp;fd)</argsstring>
        <name>onMaxWidth</name>
        <param>
          <type>WidthType</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="class_format_data" kindref="compound">FormatData</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="29" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1aaaa9957b2ffb2d6e845e21a538522ed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onChar</definition>
        <argsstring>(char c, const FormatData &amp;fd)</argsstring>
        <name>onChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="class_format_data" kindref="compound">FormatData</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="31" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1a5ccd58b1a111a62fa467ead7960a9532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onString</definition>
        <argsstring>(const char *s, const FormatData &amp;fd)</argsstring>
        <name>onString</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="class_format_data" kindref="compound">FormatData</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="32" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1ab2feee6937f3de045c9480b8da40adc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringPrinter::onPointer</definition>
        <argsstring>(int64 ptr, const FormatData &amp;fd)</argsstring>
        <name>onPointer</name>
        <param>
          <type>int64</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="class_format_data" kindref="compound">FormatData</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="33" column="1" bodyfile="tools/message_logger/log_string_printer.cpp" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1a982a4f2a35b357bd8d81a70ea8d9f94a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IntType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void LogStringPrinter::onInt</definition>
        <argsstring>(IntType i, const FormatData &amp;fd)</argsstring>
        <name>onInt</name>
        <param>
          <type>IntType</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="class_format_data" kindref="compound">FormatData</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="36" column="1" bodyfile="tools/message_logger/log_string_printer.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_printer_1ab27e8e2a35223a588dd4091945833231" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FloatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void LogStringPrinter::onFloat</definition>
        <argsstring>(FloatType f, const FormatData &amp;fd)</argsstring>
        <name>onFloat</name>
        <param>
          <type>FloatType</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="class_format_data" kindref="compound">FormatData</ref> &amp;</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_printer.hpp" line="42" column="1" bodyfile="tools/message_logger/log_string_printer.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>StreamParsers - for reading either network or file streams of log data </para>    </detaileddescription>
    <location file="tools/message_logger/log_string_printer.hpp" line="18" column="1" bodyfile="tools/message_logger/log_string_printer.hpp" bodystart="17" bodyend="51"/>
    <listofallmembers>
      <member refid="class_log_string_printer_1aaaa9957b2ffb2d6e845e21a538522ed1" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onChar</name></member>
      <member refid="class_log_string_printer_1adcf184fe02e6fc654e2bd6f23065dc83" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onError</name></member>
      <member refid="class_log_string_printer_1ab27e8e2a35223a588dd4091945833231" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onFloat</name></member>
      <member refid="class_log_string_printer_1abcecbe8bca10bfdce6f3d5df420bd673" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onFmtStringSection</name></member>
      <member refid="class_log_string_printer_1a982a4f2a35b357bd8d81a70ea8d9f94a" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onInt</name></member>
      <member refid="class_log_string_printer_1a49f158b052c54c67b6f947e99a3df30d" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onMaxWidth</name></member>
      <member refid="class_log_string_printer_1a94a17a6a0684a97b273f8f2d5c58f84d" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onMinWidth</name></member>
      <member refid="class_log_string_printer_1a3055a7e9f451b9e489f1d1453768181e" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onParseComplete</name></member>
      <member refid="class_log_string_printer_1ab2feee6937f3de045c9480b8da40adc4" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onPointer</name></member>
      <member refid="class_log_string_printer_1a5ccd58b1a111a62fa467ead7960a9532" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>onString</name></member>
      <member refid="class_log_string_printer_1a5aad3dceec69da0964b9c04f7d8fdc2e" prot="private" virt="non-virtual"><scope>LogStringPrinter</scope><name>pStr_</name></member>
      <member refid="class_log_string_printer_1a51e960c3ae7e752216419ac47cf0cb8c" prot="public" virt="non-virtual"><scope>LogStringPrinter</scope><name>setResultString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
