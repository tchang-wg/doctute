<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_user_log_writer" kind="class" language="C++" prot="public">
    <compoundname>UserLogWriter</compoundname>
    <basecompoundref refid="class_user_log" prot="public" virt="non-virtual">UserLog</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_user_log_writer_1aed3dcf482cd8fba3f74782b971be31c7" prot="private" static="no" mutable="no">
        <type><ref refid="class_m_l_d_b_user_quota_details" kindref="compound">MLDBUserQuotaDetails</ref></type>
        <definition>MLDBUserQuotaDetails UserLogWriter::quotaDetails_</definition>
        <argsstring></argsstring>
        <name>quotaDetails_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="94" column="1" bodyfile="tools/message_logger/user_log_writer.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_user_log_writer_1ad60f0abc586c295dca09d92c9b3b388f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UserLogWriter::UserLogWriter</definition>
        <argsstring>(uint16 uid, const BW::string &amp;username)</argsstring>
        <name>UserLogWriter</name>
        <param>
          <type>uint16</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="63" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1a9da2349e5832b2931d69e84e2e17bbb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogWriter::init</definition>
        <argsstring>(const BW::string rootPath, const QuotaConfig &amp;config)</argsstring>
        <name>init</name>
        <param>
          <type>const BW::string</type>
          <declname>rootPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_quota_config" kindref="compound">QuotaConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="65" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="67" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1a04fa5d066dbe0d63877cdfcce087e5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_logging_component" kindref="compound">LoggingComponent</ref> *</type>
        <definition>LoggingComponent * UserLogWriter::findLoggingComponent</definition>
        <argsstring>(const Mercury::Address &amp;addr)</argsstring>
        <name>findLoggingComponent</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="67" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1a35cc9d0548037d09c924b949cd25eccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_logging_component" kindref="compound">LoggingComponent</ref> *</type>
        <definition>LoggingComponent * UserLogWriter::findLoggingComponent</definition>
        <argsstring>(const LoggerComponentMessage &amp;msg, const Mercury::Address &amp;addr, LogComponentNamesMLDB &amp;logComponents)</argsstring>
        <name>findLoggingComponent</name>
        <param>
          <type>const LoggerComponentMessage &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="class_log_component_names_m_l_d_b" kindref="compound">LogComponentNamesMLDB</ref> &amp;</type>
          <declname>logComponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="68" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1ad9243608aa30ab5ce8866508dab69167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AddLogMessageResult</type>
        <definition>AddLogMessageResult UserLogWriter::addEntry</definition>
        <argsstring>(LoggingComponent *component, LogEntry &amp;entry, LogStringInterpolator &amp;handler, MemoryIStream &amp;inputStream, LogStorageMLDB *pLogStorage, MessageLogger::NetworkVersion version)</argsstring>
        <name>addEntry</name>
        <param>
          <type><ref refid="class_logging_component" kindref="compound">LoggingComponent</ref> *</type>
          <declname>component</declname>
        </param>
        <param>
          <type><ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="class_log_string_interpolator" kindref="compound">LogStringInterpolator</ref> &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>MemoryIStream &amp;</type>
          <declname>inputStream</declname>
        </param>
        <param>
          <type><ref refid="class_log_storage_m_l_d_b" kindref="compound">LogStorageMLDB</ref> *</type>
          <declname>pLogStorage</declname>
        </param>
        <param>
          <type>MessageLogger::NetworkVersion</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a <ref refid="class_log_entry" kindref="compound">LogEntry</ref> to the end of the <ref refid="class_user_segment" kindref="compound">UserSegment</ref> file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="72" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="258" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1aa1779fd73e53be3eb005add96ed9519f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogWriter::updateComponent</definition>
        <argsstring>(LoggingComponent *component)</argsstring>
        <name>updateComponent</name>
        <param>
          <type><ref refid="class_logging_component" kindref="compound">LoggingComponent</ref> *</type>
          <declname>component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="77" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="360" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1a54bd19ce84abf9655d04e9c93247f836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogWriter::removeUserComponent</definition>
        <argsstring>(const Mercury::Address &amp;addr)</argsstring>
        <name>removeUserComponent</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="78" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1aa4e1bfbb2a5bf9aecbbe28b5fc1010c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UserLogWriter::rollActiveSegment</definition>
        <argsstring>()</argsstring>
        <name>rollActiveSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the current active segment which will ensure a new segment file is created when the next log message comes in. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="80" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1ae5a24cb58bb1642f9e071c9370f9c235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogWriter::deleteOldestSegment</definition>
        <argsstring>()</argsstring>
        <name>deleteOldestSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes the oldest segment available for this user.</para><para><simplesect kind="return"><para>Whether it was successful (which is also true if there are zero segments). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="82" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="167" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_writer_1a92d58612c8120670f082b3befa6acc27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * UserLogWriter::logEntryToString</definition>
        <argsstring>(const LogEntry &amp;entry, LogCommonMLDB *pBWLog, const LoggingComponent *component, LogStringInterpolator &amp;handler, MemoryIStream &amp;inputStream, MessageLogger::NetworkVersion version) const </argsstring>
        <name>logEntryToString</name>
        <param>
          <type>const <ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>entry</declname>
        </param>
        <param>
          <type><ref refid="class_log_common_m_l_d_b" kindref="compound">LogCommonMLDB</ref> *</type>
          <declname>pBWLog</declname>
        </param>
        <param>
          <type>const <ref refid="class_logging_component" kindref="compound">LoggingComponent</ref> *</type>
          <declname>component</declname>
        </param>
        <param>
          <type><ref refid="class_log_string_interpolator" kindref="compound">LogStringInterpolator</ref> &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>MemoryIStream &amp;</type>
          <declname>inputStream</declname>
        </param>
        <param>
          <type>MessageLogger::NetworkVersion</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="84" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="373" bodyend="387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_user_log_writer_1ad579c8a3627edfcfc60c0f4ea7927231" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogWriter::validateUserComponents</definition>
        <argsstring>(const BW::string &amp;rootPath)</argsstring>
        <name>validateUserComponents</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>rootPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method validates all user components files to ensure they are not corrupt.</para><para>First it looks for components files in all subdirectories of the root log path, then attempts to open and read them using the <ref refid="class_user_components" kindref="compound">UserComponents</ref> class.</para><para><simplesect kind="return"><para>true on successful validation of all files, false on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="89" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="399" bodyend="473"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_user_log_writer_1aa8d4c56edf8867382e1013272520f486" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_user_segment_writer" kindref="compound">UserSegmentWriter</ref> *</type>
        <definition>UserSegmentWriter * UserLogWriter::getLastSegment</definition>
        <argsstring>()</argsstring>
        <name>getLastSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_writer.hpp" line="92" column="1" bodyfile="tools/message_logger/user_log_writer.cpp" bodystart="354" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3081">
        <label>UserLogWriter</label>
        <link refid="class_user_log_writer"/>
        <childnode refid="3082" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3083">
        <label>SafeReferenceCount</label>
      </node>
      <node id="3082">
        <label>UserLog</label>
        <link refid="class_user_log"/>
        <childnode refid="3083" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3091">
        <label>BinaryFileHandler</label>
        <link refid="class_binary_file_handler"/>
        <childnode refid="3089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3089">
        <label>FileHandler</label>
        <link refid="class_file_handler"/>
      </node>
      <node id="3084">
        <label>UserLogWriter</label>
        <link refid="class_user_log_writer"/>
        <childnode refid="3085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3090">
        <label>UserComponents</label>
        <link refid="class_user_components"/>
        <childnode refid="3091" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3086">
        <label>SafeReferenceCount</label>
      </node>
      <node id="3085">
        <label>UserLog</label>
        <link refid="class_user_log"/>
        <childnode refid="3086" relation="public-inheritance">
        </childnode>
        <childnode refid="3087" relation="usage">
          <edgelabel>uidFile_</edgelabel>
        </childnode>
        <childnode refid="3090" relation="usage">
          <edgelabel>userComponents_</edgelabel>
        </childnode>
      </node>
      <node id="3088">
        <label>TextFileHandler</label>
        <link refid="class_text_file_handler"/>
        <childnode refid="3089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3087">
        <label>UnaryIntegerFile</label>
        <link refid="class_unary_integer_file"/>
        <childnode refid="3088" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tools/message_logger/user_log_writer.hpp" line="61" column="1" bodyfile="tools/message_logger/user_log_writer.hpp" bodystart="60" bodyend="95"/>
    <listofallmembers>
      <member refid="class_user_log_1a07ad5af3e3c126f107f851f8cbf325c4" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>activeSegmentSuffix</name></member>
      <member refid="class_user_log_writer_1ad9243608aa30ab5ce8866508dab69167" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>addEntry</name></member>
      <member refid="class_user_log_writer_1ae5a24cb58bb1642f9e071c9370f9c235" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>deleteOldestSegment</name></member>
      <member refid="class_user_log_1a61cb2a3b6923476bebba54248e6b067f" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>filterSegmentFiles</name></member>
      <member refid="class_user_log_writer_1a04fa5d066dbe0d63877cdfcce087e5e8" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>findLoggingComponent</name></member>
      <member refid="class_user_log_writer_1a35cc9d0548037d09c924b949cd25eccf" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>findLoggingComponent</name></member>
      <member refid="class_user_log_1a24176161d7ae7452822c31190a64a1e7" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>freeDirents</name></member>
      <member refid="class_user_log_writer_1aa8d4c56edf8867382e1013272520f486" prot="private" virt="non-virtual"><scope>UserLogWriter</scope><name>getLastSegment</name></member>
      <member refid="class_user_log_1a7be8b13c428ae161ff8cd0361c7147e9" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>getUID</name></member>
      <member refid="class_user_log_1a4deca1b488f26a86684c21434ddad9f0" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>getUsername</name></member>
      <member refid="class_user_log_1a18ef9654a5284634113a9ecbb65b6af4" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>hasActiveSegments</name></member>
      <member refid="class_user_log_writer_1a9da2349e5832b2931d69e84e2e17bbb8" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>init</name></member>
      <member refid="class_user_log_1a4a72327001d0eac1d6268eb7e950e2de" prot="public" virt="virtual" ambiguityscope="UserLog::"><scope>UserLogWriter</scope><name>init</name></member>
      <member refid="class_user_log_1a260d36eec4b98b77cc698165e2eb3e54" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>isGood</name></member>
      <member refid="class_user_log_1a31a1c989cda19589acf502519bdf1634" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>isGood_</name></member>
      <member refid="class_user_log_1a018d5f2bc0cd7a062a4a317a7e529d8e" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>loadSegmentFilesUsage</name></member>
      <member refid="class_user_log_writer_1a92d58612c8120670f082b3befa6acc27" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>logEntryToString</name></member>
      <member refid="class_user_log_1a4fd05dfb95b963f056b7cea7ab22133a" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>maxHostnameLen</name></member>
      <member refid="class_user_log_1a0cbf11a1381ef45e100e863e50180656" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>maxHostnameLen</name></member>
      <member refid="class_user_log_1ac0fd1edcae86ea8f824b00abe6e1cc19" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>maxHostnameLen_</name></member>
      <member refid="class_user_log_1a3d62b43feb6fb7dd250c7d25b489bcf6" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>path_</name></member>
      <member refid="class_user_log_writer_1aed3dcf482cd8fba3f74782b971be31c7" prot="private" virt="non-virtual"><scope>UserLogWriter</scope><name>quotaDetails_</name></member>
      <member refid="class_user_log_writer_1a54bd19ce84abf9655d04e9c93247f836" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>removeUserComponent</name></member>
      <member refid="class_user_log_writer_1aa4e1bfbb2a5bf9aecbbe28b5fc1010c9" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>rollActiveSegment</name></member>
      <member refid="class_user_log_1ab1e16c1a6bef093e344e544a4111f2ba" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>uid_</name></member>
      <member refid="class_user_log_1a3b80fd48672d5d8b24319f05366bb049" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>uidFile_</name></member>
      <member refid="class_user_log_writer_1aa1779fd73e53be3eb005add96ed9519f" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>updateComponent</name></member>
      <member refid="class_user_log_1a987d1bc61c15d6f81e1ec32416051936" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>userComponents_</name></member>
      <member refid="class_user_log_1a8999bf4ca66fb49eee93b23cf6409b6a" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>UserLog</name></member>
      <member refid="class_user_log_writer_1ad60f0abc586c295dca09d92c9b3b388f" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>UserLogWriter</name></member>
      <member refid="class_user_log_1ad145fe519c8d826817d4786dd82b9935" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>username_</name></member>
      <member refid="class_user_log_1aa5ad7a076931055067acb17a2222bbaa" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>userSegments_</name></member>
      <member refid="class_user_log_writer_1ad579c8a3627edfcfc60c0f4ea7927231" prot="public" virt="non-virtual"><scope>UserLogWriter</scope><name>validateUserComponents</name></member>
      <member refid="class_user_log_1a18c00aade45b8f58d4bfd4a2162fa2c9" prot="protected" virt="non-virtual"><scope>UserLogWriter</scope><name>visitAllSegmentFiles</name></member>
      <member refid="class_user_log_1afad43034245613e1006240965166168b" prot="public" virt="virtual"><scope>UserLogWriter</scope><name>~UserLog</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
