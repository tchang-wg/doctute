<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_user_log_reader" kind="class" language="C++" prot="public">
    <compoundname>UserLogReader</compoundname>
    <basecompoundref refid="class_user_log" prot="public" virt="non-virtual">UserLog</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_user_log_reader_1a69eb872656e84a3c1176bb9dcc656969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UserLogReader::UserLogReader</definition>
        <argsstring>(uint16 uid, const BW::string &amp;username)</argsstring>
        <name>UserLogReader</name>
        <param>
          <type>uint16</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="55" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1a7d65f767ec0502d909b61ed748bcdb88" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool UserLogReader::init</definition>
        <argsstring>(const BW::string rootPath)</argsstring>
        <name>init</name>
        <reimplements refid="class_user_log_1a4a72327001d0eac1d6268eb7e950e2de">init</reimplements>
        <param>
          <type>const BW::string</type>
          <declname>rootPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialises the base <ref refid="class_user_log" kindref="compound">UserLog</ref> instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="57" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="61" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1acfdbad26a253bd6e9c8d4568ef929644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::getEntryAndSegment</definition>
        <argsstring>(const LogEntryAddress &amp;logEntryAddress, LogEntry &amp;result, UserSegmentReader *&amp;pSegment, bool shouldEmitWarnings=true)</argsstring>
        <name>getEntryAndSegment</name>
        <param>
          <type>const <ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref> &amp;</type>
          <declname>logEntryAddress</declname>
        </param>
        <param>
          <type><ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref> *&amp;</type>
          <declname>pSegment</declname>
          <defname>pSegmentResult</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldEmitWarnings</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the <ref refid="class_log_entry" kindref="compound">LogEntry</ref> corresponding to the provided <ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref>.</para><para>The <ref refid="class_user_segment" kindref="compound">UserSegment</ref> the <ref refid="class_log_entry" kindref="compound">LogEntry</ref> exists in is stored in pSegmentResult.</para><para><simplesect kind="return"><para>true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="60" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="228" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1a807d530da7f70022c6d33824a8ebf588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::getEntryAndQueryRange</definition>
        <argsstring>(const LogEntryAddress &amp;logEntryAddress, LogEntry &amp;result, QueryRangePtr pRange)</argsstring>
        <name>getEntryAndQueryRange</name>
        <param>
          <type>const <ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref> &amp;</type>
          <declname>logEntryAddress</declname>
        </param>
        <param>
          <type><ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">QueryRangePtr</ref></type>
          <declname>pRange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the <ref refid="class_log_entry" kindref="compound">LogEntry</ref> corresponding to the provided <ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref>.</para><para>The provided <ref refid="class_query_range" kindref="compound">QueryRange</ref> is also updated to point to the location that the <ref refid="class_log_entry" kindref="compound">LogEntry</ref> came from.</para><para><simplesect kind="return"><para>true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="63" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="168" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1a493c974066ff50a7e5def8a581339aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::getFirstLogEntryFromStartOfLogs</definition>
        <argsstring>(LogEntry &amp;result)</argsstring>
        <name>getFirstLogEntryFromStartOfLogs</name>
        <param>
          <type><ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method locates the first <ref refid="class_log_entry" kindref="compound">LogEntry</ref> in the first log segment.</para><para>NB: This method is only used when providing a &apos;period&apos; to search time relative to. Called from query_params.cpp</para><para><simplesect kind="return"><para>true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="66" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="273" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1a7d549e8f119c73618aeda2d51095742f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::getLastLogEntryFromEndOfLogs</definition>
        <argsstring>(LogEntry &amp;result)</argsstring>
        <name>getLastLogEntryFromEndOfLogs</name>
        <param>
          <type><ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method locates the last <ref refid="class_log_entry" kindref="compound">LogEntry</ref> from the last log segment.</para><para>NB: This method is only used when viewing live results either in LogViewer or mlcat.py</para><para><simplesect kind="return"><para>true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="67" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="299" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1a5d9b9cfe16303568f8ac1e952b937647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::getEntry</definition>
        <argsstring>(const LogEntryAddress &amp;logEntryAddress, LogEntry &amp;result)</argsstring>
        <name>getEntry</name>
        <param>
          <type>const <ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref> &amp;</type>
          <declname>logEntryAddress</declname>
        </param>
        <param>
          <type><ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the <ref refid="class_log_entry" kindref="compound">LogEntry</ref> corresponding to the provided <ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref>.</para><para><simplesect kind="return"><para>true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="68" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="212" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1a843081f181ea37fd5628c26b21b3d93d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UserLogReader::getSegmentIndexFromSuffix</definition>
        <argsstring>(const char *suffix) const </argsstring>
        <name>getSegmentIndexFromSuffix</name>
        <param>
          <type>const char *</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index of an already loaded segment with the given suffix.</para><para><simplesect kind="return"><para>Index of loaded segment, -1 if no segment with provided suffix is loaded. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="74" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="131" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1aa2911c9a8d6c50b2fc4b848c47fe4cb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int UserLogReader::getNumSegments</definition>
        <argsstring>() const </argsstring>
        <name>getNumSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="75" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1ac9c34fccb16feefc24a81f8bb1db563f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref> *</type>
        <definition>const UserSegmentReader * UserLogReader::getUserSegment</definition>
        <argsstring>(int segmentIndex) const </argsstring>
        <name>getUserSegment</name>
        <param>
          <type>int</type>
          <declname>segmentIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="76" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1af74a83359d149c6e4c06ac5a353e64a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_logging_component" kindref="compound">LoggingComponent</ref> *</type>
        <definition>const LoggingComponent * UserLogReader::getComponentByID</definition>
        <argsstring>(MessageLogger::UserComponentID userComponentID) const </argsstring>
        <name>getComponentByID</name>
        <param>
          <type>MessageLogger::UserComponentID</type>
          <declname>userComponentID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="78" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="318" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1ad90ab326305169e077f491acbda68cb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::reloadFiles</definition>
        <argsstring>()</argsstring>
        <name>reloadFiles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="81" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="325" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1aa384629b6748262d4b4d424e34f92c67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::getUserComponents</definition>
        <argsstring>(UserComponentVisitor &amp;visitor) const </argsstring>
        <name>getUserComponents</name>
        <param>
          <type><ref refid="class_user_component_visitor" kindref="compound">UserComponentVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="83" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_user_log_reader_1a514ad42cdb26a293b8f71084833b9250" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::visitAllSegmentsWith</definition>
        <argsstring>(UserSegmentVisitor &amp;visitor) const </argsstring>
        <name>visitAllSegmentsWith</name>
        <param>
          <type><ref refid="class_user_segment_visitor" kindref="compound">UserSegmentVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="85" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="349" bodyend="363"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_user_log_reader_1a0649b49db94be8ec45beb5d02460ff8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UserLogReader::loadSegments</definition>
        <argsstring>()</argsstring>
        <name>loadSegments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/user_log_reader.hpp" line="91" column="1" bodyfile="tools/message_logger/user_log_reader.cpp" bodystart="104" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3068">
        <label>SafeReferenceCount</label>
      </node>
      <node id="3066">
        <label>UserLogReader</label>
        <link refid="class_user_log_reader"/>
        <childnode refid="3067" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3067">
        <label>UserLog</label>
        <link refid="class_user_log"/>
        <childnode refid="3068" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3076">
        <label>BinaryFileHandler</label>
        <link refid="class_binary_file_handler"/>
        <childnode refid="3074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3074">
        <label>FileHandler</label>
        <link refid="class_file_handler"/>
      </node>
      <node id="3075">
        <label>UserComponents</label>
        <link refid="class_user_components"/>
        <childnode refid="3076" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3071">
        <label>SafeReferenceCount</label>
      </node>
      <node id="3069">
        <label>UserLogReader</label>
        <link refid="class_user_log_reader"/>
        <childnode refid="3070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3070">
        <label>UserLog</label>
        <link refid="class_user_log"/>
        <childnode refid="3071" relation="public-inheritance">
        </childnode>
        <childnode refid="3072" relation="usage">
          <edgelabel>uidFile_</edgelabel>
        </childnode>
        <childnode refid="3075" relation="usage">
          <edgelabel>userComponents_</edgelabel>
        </childnode>
      </node>
      <node id="3073">
        <label>TextFileHandler</label>
        <link refid="class_text_file_handler"/>
        <childnode refid="3074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3072">
        <label>UnaryIntegerFile</label>
        <link refid="class_unary_integer_file"/>
        <childnode refid="3073" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tools/message_logger/user_log_reader.hpp" line="53" column="1" bodyfile="tools/message_logger/user_log_reader.hpp" bodystart="52" bodyend="92"/>
    <listofallmembers>
      <member refid="class_user_log_1a07ad5af3e3c126f107f851f8cbf325c4" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>activeSegmentSuffix</name></member>
      <member refid="class_user_log_1a61cb2a3b6923476bebba54248e6b067f" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>filterSegmentFiles</name></member>
      <member refid="class_user_log_1a24176161d7ae7452822c31190a64a1e7" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>freeDirents</name></member>
      <member refid="class_user_log_reader_1af74a83359d149c6e4c06ac5a353e64a9" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getComponentByID</name></member>
      <member refid="class_user_log_reader_1a5d9b9cfe16303568f8ac1e952b937647" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getEntry</name></member>
      <member refid="class_user_log_reader_1a807d530da7f70022c6d33824a8ebf588" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getEntryAndQueryRange</name></member>
      <member refid="class_user_log_reader_1acfdbad26a253bd6e9c8d4568ef929644" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getEntryAndSegment</name></member>
      <member refid="class_user_log_reader_1a493c974066ff50a7e5def8a581339aa2" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getFirstLogEntryFromStartOfLogs</name></member>
      <member refid="class_user_log_reader_1a7d549e8f119c73618aeda2d51095742f" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getLastLogEntryFromEndOfLogs</name></member>
      <member refid="class_user_log_reader_1aa2911c9a8d6c50b2fc4b848c47fe4cb1" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getNumSegments</name></member>
      <member refid="class_user_log_reader_1a843081f181ea37fd5628c26b21b3d93d" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getSegmentIndexFromSuffix</name></member>
      <member refid="class_user_log_1a7be8b13c428ae161ff8cd0361c7147e9" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getUID</name></member>
      <member refid="class_user_log_reader_1aa384629b6748262d4b4d424e34f92c67" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getUserComponents</name></member>
      <member refid="class_user_log_1a4deca1b488f26a86684c21434ddad9f0" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getUsername</name></member>
      <member refid="class_user_log_reader_1ac9c34fccb16feefc24a81f8bb1db563f" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>getUserSegment</name></member>
      <member refid="class_user_log_1a18ef9654a5284634113a9ecbb65b6af4" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>hasActiveSegments</name></member>
      <member refid="class_user_log_reader_1a7d65f767ec0502d909b61ed748bcdb88" prot="public" virt="virtual"><scope>UserLogReader</scope><name>init</name></member>
      <member refid="class_user_log_1a260d36eec4b98b77cc698165e2eb3e54" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>isGood</name></member>
      <member refid="class_user_log_1a31a1c989cda19589acf502519bdf1634" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>isGood_</name></member>
      <member refid="class_user_log_1a018d5f2bc0cd7a062a4a317a7e529d8e" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>loadSegmentFilesUsage</name></member>
      <member refid="class_user_log_reader_1a0649b49db94be8ec45beb5d02460ff8f" prot="private" virt="non-virtual"><scope>UserLogReader</scope><name>loadSegments</name></member>
      <member refid="class_user_log_1a4fd05dfb95b963f056b7cea7ab22133a" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>maxHostnameLen</name></member>
      <member refid="class_user_log_1a0cbf11a1381ef45e100e863e50180656" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>maxHostnameLen</name></member>
      <member refid="class_user_log_1ac0fd1edcae86ea8f824b00abe6e1cc19" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>maxHostnameLen_</name></member>
      <member refid="class_user_log_1a3d62b43feb6fb7dd250c7d25b489bcf6" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>path_</name></member>
      <member refid="class_user_log_reader_1ad90ab326305169e077f491acbda68cb9" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>reloadFiles</name></member>
      <member refid="class_user_log_1ab1e16c1a6bef093e344e544a4111f2ba" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>uid_</name></member>
      <member refid="class_user_log_1a3b80fd48672d5d8b24319f05366bb049" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>uidFile_</name></member>
      <member refid="class_user_log_1a987d1bc61c15d6f81e1ec32416051936" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>userComponents_</name></member>
      <member refid="class_user_log_1a8999bf4ca66fb49eee93b23cf6409b6a" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>UserLog</name></member>
      <member refid="class_user_log_reader_1a69eb872656e84a3c1176bb9dcc656969" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>UserLogReader</name></member>
      <member refid="class_user_log_1ad145fe519c8d826817d4786dd82b9935" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>username_</name></member>
      <member refid="class_user_log_1aa5ad7a076931055067acb17a2222bbaa" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>userSegments_</name></member>
      <member refid="class_user_log_1a18c00aade45b8f58d4bfd4a2162fa2c9" prot="protected" virt="non-virtual"><scope>UserLogReader</scope><name>visitAllSegmentFiles</name></member>
      <member refid="class_user_log_reader_1a514ad42cdb26a293b8f71084833b9250" prot="public" virt="non-virtual"><scope>UserLogReader</scope><name>visitAllSegmentsWith</name></member>
      <member refid="class_user_log_1afad43034245613e1006240965166168b" prot="public" virt="virtual"><scope>UserLogReader</scope><name>~UserLog</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
