<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_write_to_d_b_request" kind="class" language="C++" prot="public">
    <compoundname>WriteToDBRequest</compoundname>
    <basecompoundref prot="private" virt="non-virtual">ReplyMessageHandler</basecompoundref>
    <basecompoundref prot="private" virt="non-virtual">IDatabaseReplyWaiter&lt; StreamHelpers::DBAppInterface::writeEntity &gt;</basecompoundref>
    <includes refid="write__to__db__request_8hpp" local="no">write_to_db_request.hpp</includes>
    <innerclass refid="class_write_to_d_b_request_1_1_i_handler" prot="public">WriteToDBRequest::IHandler</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_write_to_d_b_request_1ad86c1204cfc752cc2839bf96261ec403" prot="private" static="no">
        <type>StreamHelpers::DBAppInterface::writeEntity</type>
        <definition>typedef StreamHelpers::DBAppInterface::writeEntity WriteToDBRequest::StreamHelper</definition>
        <argsstring></argsstring>
        <name>StreamHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="107" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_write_to_d_b_request_1a845143a02c78996ada2c0f46c56c9493" prot="private" static="no" mutable="no">
        <type><ref refid="class_base_app" kindref="compound">BaseApp</ref> &amp;</type>
        <definition>BaseApp&amp; WriteToDBRequest::baseApp_</definition>
        <argsstring></argsstring>
        <name>baseApp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="118" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1ac5e6cec9fbd91c146655d77757fed077" prot="private" static="no" mutable="no">
        <type><ref refid="class_smart_pointer" kindref="compound">BasePtr</ref></type>
        <definition>BasePtr WriteToDBRequest::pBase_</definition>
        <argsstring></argsstring>
        <name>pBase_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="119" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1a1cf57600c7951f82e29d70eaa1050124" prot="private" static="no" mutable="no">
        <type>WriteDBFlags</type>
        <definition>WriteDBFlags WriteToDBRequest::flags_</definition>
        <argsstring></argsstring>
        <name>flags_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="120" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1a4fda361021ddf0713c5eb0e3eef6e68c" prot="private" static="no" mutable="no">
        <type><ref refid="class_write_to_d_b_request_1_1_i_handler" kindref="compound">IHandler</ref> *</type>
        <definition>IHandler* WriteToDBRequest::pHandler_</definition>
        <argsstring></argsstring>
        <name>pHandler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="121" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1afdbf289d8b400e62d16060a4027dc0ac" prot="private" static="no" mutable="no">
        <type>MemoryOStream</type>
        <definition>MemoryOStream WriteToDBRequest::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="123" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1ae38f7592042ebf32992f2126778816f5" prot="private" static="no" mutable="no">
        <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
        <definition>PyObjectPtr WriteToDBRequest::pCellData_</definition>
        <argsstring></argsstring>
        <name>pCellData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="124" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1ac2bf77cd61f7284478a5dc999929cd14" prot="private" static="no" mutable="no">
        <type>DatabaseID</type>
        <definition>DatabaseID WriteToDBRequest::dbID_</definition>
        <argsstring></argsstring>
        <name>dbID_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="125" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1a5f23cb4d81628aef0424df8b81a4124c" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint WriteToDBRequest::numOutstandingRequests_</definition>
        <argsstring></argsstring>
        <name>numOutstandingRequests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="127" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1aa0d095ed5bcb48421dd962f60dc648f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WriteToDBRequest::hasFailed_</definition>
        <argsstring></argsstring>
        <name>hasFailed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="129" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1a0ac1219f30b55f60e742c2e6ef7d1a5f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WriteToDBRequest::shouldBackUp_</definition>
        <argsstring></argsstring>
        <name>shouldBackUp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="130" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1ad5c305f63e8e8675eb2e9353e9f816fc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WriteToDBRequest::hasBackedUp_</definition>
        <argsstring></argsstring>
        <name>hasBackedUp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="131" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_write_to_d_b_request_1ac0cc2c0b5534c1112c9bc392f6c9b5e3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WriteToDBRequest::hasWrittenToDB_</definition>
        <argsstring></argsstring>
        <name>hasWrittenToDB_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="132" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_write_to_d_b_request_1a70090f1a74dbbe3823eb87182ffc0184" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WriteToDBRequest::newRequest</definition>
        <argsstring>(BaseApp &amp;baseApp, Base &amp;base, WriteDBFlags flags, IHandler *pHandler, PyObjectPtr pCellData, DatabaseID explicitDBID, BW::string *pErrorString)</argsstring>
        <name>newRequest</name>
        <param>
          <type><ref refid="class_base_app" kindref="compound">BaseApp</ref> &amp;</type>
          <declname>baseApp</declname>
        </param>
        <param>
          <type><ref refid="class_base" kindref="compound">Base</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>WriteDBFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="class_write_to_d_b_request_1_1_i_handler" kindref="compound">IHandler</ref> *</type>
          <declname>pHandler</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pCellData</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>explicitDBID</declname>
        </param>
        <param>
          <type>BW::string *</type>
          <declname>pErrorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates a new instance of a request to write an entity to the persistence layer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseApp</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_base_app" kindref="compound">BaseApp</ref> instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base part of the entity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The write options. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback handler, or NULL if no callback is required. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pCellData</parametername>
</parameternamelist>
<parameterdescription>
<para>The cell data. If NULL, then it is requested from the cell entity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>explicitDBID</parametername>
</parameternamelist>
<parameterdescription>
<para>The explicit database ID to use, if WRITE_EXPLICIT_DBID is set in flags. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="66" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="42" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_write_to_d_b_request_1a0b83b8928f9cbdd6cb5f45ea804d23f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onWriteToSecondaryDBComplete</definition>
        <argsstring>()</argsstring>
        <name>onWriteToSecondaryDBComplete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when writing to the secondary database has completed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="70" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="674" bodyend="681"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_write_to_d_b_request_1a10218c775eb88a3fa56657fd2bd00017" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WriteToDBRequest::WriteToDBRequest</definition>
        <argsstring>(BaseApp &amp;baseApp, Base &amp;base, WriteDBFlags flags, IHandler *pHandler, PyObjectPtr pCellData, DatabaseID dbID)</argsstring>
        <name>WriteToDBRequest</name>
        <param>
          <type><ref refid="class_base_app" kindref="compound">BaseApp</ref> &amp;</type>
          <declname>baseApp</declname>
        </param>
        <param>
          <type><ref refid="class_base" kindref="compound">Base</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>WriteDBFlags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="class_write_to_d_b_request_1_1_i_handler" kindref="compound">IHandler</ref> *</type>
          <declname>pHandler</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pCellData</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseApp</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_base_app" kindref="compound">BaseApp</ref> instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base part of the entity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>The write options. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback handler, or NULL if no callback is required. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pCellData</parametername>
</parameternamelist>
<parameterdescription>
<para>The cell data. If NULL, then it is requested from the cell entity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>explicitDBID</parametername>
</parameternamelist>
<parameterdescription>
<para>The explicit database ID to use, if WRITE_EXPLICIT_DBID is set in flags. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="74" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="186" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a3ecacdeb1c109e7e40a8973bf0e24e03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WriteToDBRequest::~WriteToDBRequest</definition>
        <argsstring>()</argsstring>
        <name>~WriteToDBRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="76" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="209" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1afe102c51af70de0ff10542838c628e14" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string WriteToDBRequest::baseDescription</definition>
        <argsstring>() const </argsstring>
        <name>baseDescription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a human-readable string describing the base entity being written to the persistence layer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="78" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="231" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a64fcff5c10a6d8264aa8498e1e3f8db1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WriteToDBRequest::shouldWriteToSecondaryDB</definition>
        <argsstring>() const </argsstring>
        <name>shouldWriteToSecondaryDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether the secondary database should be written to, instead of the primary database.</para><para><simplesect kind="return"><para>True if the secondary database should be written to, otherwise the primary database will be written to. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="79" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="265" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a39e31e465875e8df7e7aac529b8f4b4a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WriteToDBRequest::entityCanBeOnCell</definition>
        <argsstring>() const </argsstring>
        <name>entityCanBeOnCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether the entity being written can be on a cell.</para><para><simplesect kind="return"><para>True if the entity type can have a cell entity part, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="80" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a7c616312ce7abffeaa74966281d3a005" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WriteToDBRequest::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is starts the write operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="82" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="292" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a2664d792898a1c1d2a0f9dba7561ee2b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool WriteToDBRequest::startWithCellData</definition>
        <argsstring>()</argsstring>
        <name>startWithCellData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts the write operation after cell data has been retrieved, if required.</para><para><simplesect kind="return"><para>True if the operation was successfully started; false otherwise, and this write request has failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="83" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="346" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a60ab8afcd6d2b3ef059bc0c27d25f5c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::startBaseBackup</definition>
        <argsstring>()</argsstring>
        <name>startBaseBackup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1ab385e48e6eb5207ca232629f90a7c819" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::startPrimaryDatabaseWrite</definition>
        <argsstring>()</argsstring>
        <name>startPrimaryDatabaseWrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts a write operation to the primary database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="87" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="427" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1afd65fb2118bb229e43348ffe5b79394f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::startSecondaryDatabaseWrite</definition>
        <argsstring>()</argsstring>
        <name>startSecondaryDatabaseWrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts a write operation to the secondary database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="88" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="538" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a1931e15de0604bc68aba08b8a8e5fd81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onGetCellData</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>onGetCellData</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
          <defname>replyData</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a reply from the cell entity in response to a Mercury request for cell entity persistence data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>replyData</parametername>
</parameternamelist>
<parameterdescription>
<para>The reply data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="90" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="645" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a7b0809b1645b883bb6e9cebd6313cf2a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onBaseBackupReply</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>onBaseBackupReply</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
          <defname>replyData</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a reply from a base back-up Mercury request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>replyData</parametername>
</parameternamelist>
<parameterdescription>
<para>The reply data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="91" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="660" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a3df436529b524554192aa503a38d49da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onRequestFinished</definition>
        <argsstring>()</argsstring>
        <name>onRequestFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when an outstanding asynchronous request has completed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="93" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="763" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a02d916c736c53195211818ae402623f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::checkFinished</definition>
        <argsstring>()</argsstring>
        <name>checkFinished</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called to check if we have satisfied the requirements of the operation (and so can delete ourselves). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="94" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="776" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1ad660310c6e4f57b114033fb8cb6c783c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::fail</definition>
        <argsstring>(IHandler::CompletionStatus status=IHandler::COMPLETED_FAILED)</argsstring>
        <name>fail</name>
        <param>
          <type>IHandler::CompletionStatus</type>
          <declname>status</declname>
          <defval>IHandler::COMPLETED_FAILED</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the operation has failed, notifying the callback.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The failure completion reason. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="96" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="804" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1accecf8a33f83987d59afe4f2e0a8b058" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::handleMessage</definition>
        <argsstring>(const Mercury::Address &amp;source, Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data, void *arg)</argsstring>
        <name>handleMessage</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="99" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="559" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a2e9f6b1269f5f6ff996b895c7f9f7652" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::handleException</definition>
        <argsstring>(const Mercury::NubException &amp;exception, void *arg)</argsstring>
        <name>handleException</name>
        <param>
          <type>const Mercury::NubException &amp;</type>
          <declname>exception</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="102" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="588" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a33b92ef2cc2c8a53f612648d7fdfad55" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::handleShuttingDown</definition>
        <argsstring>(const Mercury::NubException &amp;exception, void *arg)</argsstring>
        <name>handleShuttingDown</name>
        <param>
          <type>const Mercury::NubException &amp;</type>
          <declname>exception</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="104" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="630" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a14edb4849f1fef89cfaafae907657492" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onSendRequestToDBApp</definition>
        <argsstring>(const Request &amp;request, const DBAppDescriptor &amp;dbApp)</argsstring>
        <name>onSendRequestToDBApp</name>
        <param>
          <type>const Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const DBAppDescriptor &amp;</type>
          <declname>dbApp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="109" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="687" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a0a3e2fb4bb5510eabb9973d5e0934295" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onReply</definition>
        <argsstring>(const StreamHelper::Request &amp;request, const StreamHelper::Reply &amp;reply)</argsstring>
        <name>onReply</name>
        <param>
          <type>const StreamHelper::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>const StreamHelper::Reply &amp;</type>
          <declname>reply</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="111" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="699" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a426bd75d2a3be235ea3803aa1ea6f5e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onNetworkFailure</definition>
        <argsstring>(const StreamHelper::Request &amp;request)</argsstring>
        <name>onNetworkFailure</name>
        <param>
          <type>const StreamHelper::Request &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="113" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="730" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="class_write_to_d_b_request_1a9b835e4c8425e719edfbefa554441653" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteToDBRequest::onShutDown</definition>
        <argsstring>(const StreamHelper::Request &amp;request)</argsstring>
        <name>onShutDown</name>
        <param>
          <type>const StreamHelper::Request &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/write_to_db_request.hpp" line="115" column="1" bodyfile="baseapp/write_to_db_request.cpp" bodystart="746" bodyend="756"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class represents a request to write an entity to the persistence layer. It is responsible for coordinating: <verbatim>- retrieval of entity cell data if not supplied by the calling code;
- (optionally) backing up to its backup copy on an alternate BaseApp;
- writing to the primary (or secondary, if applicable) database.
</verbatim></para><para>When the requested operation has been completed, a method on an optional callback handler will be called back. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3200">
        <label>WriteToDBRequest</label>
        <link refid="class_write_to_d_b_request"/>
        <childnode refid="3201" relation="private-inheritance">
        </childnode>
        <childnode refid="3202" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3202">
        <label>IDatabaseReplyWaiter&lt; StreamHelpers::DBAppInterface::writeEntity &gt;</label>
      </node>
      <node id="3201">
        <label>ReplyMessageHandler</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3203">
        <label>WriteToDBRequest</label>
        <link refid="class_write_to_d_b_request"/>
        <childnode refid="3204" relation="private-inheritance">
        </childnode>
        <childnode refid="3205" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3205">
        <label>IDatabaseReplyWaiter&lt; StreamHelpers::DBAppInterface::writeEntity &gt;</label>
      </node>
      <node id="3204">
        <label>ReplyMessageHandler</label>
      </node>
    </collaborationgraph>
    <location file="baseapp/write_to_db_request.hpp" line="35" column="1" bodyfile="baseapp/write_to_db_request.hpp" bodystart="31" bodyend="133"/>
    <listofallmembers>
      <member refid="class_write_to_d_b_request_1a845143a02c78996ada2c0f46c56c9493" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>baseApp_</name></member>
      <member refid="class_write_to_d_b_request_1afe102c51af70de0ff10542838c628e14" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>baseDescription</name></member>
      <member refid="class_write_to_d_b_request_1a02d916c736c53195211818ae402623f8" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>checkFinished</name></member>
      <member refid="class_write_to_d_b_request_1afdbf289d8b400e62d16060a4027dc0ac" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>data_</name></member>
      <member refid="class_write_to_d_b_request_1ac2bf77cd61f7284478a5dc999929cd14" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>dbID_</name></member>
      <member refid="class_write_to_d_b_request_1a39e31e465875e8df7e7aac529b8f4b4a" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>entityCanBeOnCell</name></member>
      <member refid="class_write_to_d_b_request_1ad660310c6e4f57b114033fb8cb6c783c" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>fail</name></member>
      <member refid="class_write_to_d_b_request_1a1cf57600c7951f82e29d70eaa1050124" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>flags_</name></member>
      <member refid="class_write_to_d_b_request_1a2e9f6b1269f5f6ff996b895c7f9f7652" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>handleException</name></member>
      <member refid="class_write_to_d_b_request_1accecf8a33f83987d59afe4f2e0a8b058" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>handleMessage</name></member>
      <member refid="class_write_to_d_b_request_1a33b92ef2cc2c8a53f612648d7fdfad55" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>handleShuttingDown</name></member>
      <member refid="class_write_to_d_b_request_1ad5c305f63e8e8675eb2e9353e9f816fc" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>hasBackedUp_</name></member>
      <member refid="class_write_to_d_b_request_1aa0d095ed5bcb48421dd962f60dc648f3" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>hasFailed_</name></member>
      <member refid="class_write_to_d_b_request_1ac0cc2c0b5534c1112c9bc392f6c9b5e3" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>hasWrittenToDB_</name></member>
      <member refid="class_write_to_d_b_request_1a70090f1a74dbbe3823eb87182ffc0184" prot="public" virt="non-virtual"><scope>WriteToDBRequest</scope><name>newRequest</name></member>
      <member refid="class_write_to_d_b_request_1a5f23cb4d81628aef0424df8b81a4124c" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>numOutstandingRequests_</name></member>
      <member refid="class_write_to_d_b_request_1a7b0809b1645b883bb6e9cebd6313cf2a" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onBaseBackupReply</name></member>
      <member refid="class_write_to_d_b_request_1a1931e15de0604bc68aba08b8a8e5fd81" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onGetCellData</name></member>
      <member refid="class_write_to_d_b_request_1a426bd75d2a3be235ea3803aa1ea6f5e9" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onNetworkFailure</name></member>
      <member refid="class_write_to_d_b_request_1a0a3e2fb4bb5510eabb9973d5e0934295" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onReply</name></member>
      <member refid="class_write_to_d_b_request_1a3df436529b524554192aa503a38d49da" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onRequestFinished</name></member>
      <member refid="class_write_to_d_b_request_1a14edb4849f1fef89cfaafae907657492" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onSendRequestToDBApp</name></member>
      <member refid="class_write_to_d_b_request_1a9b835e4c8425e719edfbefa554441653" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onShutDown</name></member>
      <member refid="class_write_to_d_b_request_1a0b83b8928f9cbdd6cb5f45ea804d23f1" prot="public" virt="non-virtual"><scope>WriteToDBRequest</scope><name>onWriteToSecondaryDBComplete</name></member>
      <member refid="class_write_to_d_b_request_1ac5e6cec9fbd91c146655d77757fed077" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>pBase_</name></member>
      <member refid="class_write_to_d_b_request_1ae38f7592042ebf32992f2126778816f5" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>pCellData_</name></member>
      <member refid="class_write_to_d_b_request_1a4fda361021ddf0713c5eb0e3eef6e68c" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>pHandler_</name></member>
      <member refid="class_write_to_d_b_request_1a0ac1219f30b55f60e742c2e6ef7d1a5f" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>shouldBackUp_</name></member>
      <member refid="class_write_to_d_b_request_1a64fcff5c10a6d8264aa8498e1e3f8db1" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>shouldWriteToSecondaryDB</name></member>
      <member refid="class_write_to_d_b_request_1a7c616312ce7abffeaa74966281d3a005" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>start</name></member>
      <member refid="class_write_to_d_b_request_1a60ab8afcd6d2b3ef059bc0c27d25f5c5" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>startBaseBackup</name></member>
      <member refid="class_write_to_d_b_request_1ab385e48e6eb5207ca232629f90a7c819" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>startPrimaryDatabaseWrite</name></member>
      <member refid="class_write_to_d_b_request_1afd65fb2118bb229e43348ffe5b79394f" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>startSecondaryDatabaseWrite</name></member>
      <member refid="class_write_to_d_b_request_1a2664d792898a1c1d2a0f9dba7561ee2b" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>startWithCellData</name></member>
      <member refid="class_write_to_d_b_request_1ad86c1204cfc752cc2839bf96261ec403" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>StreamHelper</name></member>
      <member refid="class_write_to_d_b_request_1a10218c775eb88a3fa56657fd2bd00017" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>WriteToDBRequest</name></member>
      <member refid="class_write_to_d_b_request_1a3ecacdeb1c109e7e40a8973bf0e24e03" prot="private" virt="non-virtual"><scope>WriteToDBRequest</scope><name>~WriteToDBRequest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
