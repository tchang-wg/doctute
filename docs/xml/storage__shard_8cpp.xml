<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="storage__shard_8cpp" kind="file" language="C++">
    <compoundname>storage_shard.cpp</compoundname>
    <includes refid="storage__shard_8hpp" local="yes">storage_shard.hpp</includes>
    <includes refid="dbappmgr_2dbapp_8hpp" local="yes">dbapp.hpp</includes>
    <includes local="yes">db_storage_mysql/connection_info.hpp</includes>
    <incdepgraph>
      <node id="15981">
        <label>network/bundle.hpp</label>
      </node>
      <node id="15978">
        <label>db/dbapp_interface.hpp</label>
      </node>
      <node id="15984">
        <label>db_storage_mysql/connection_info.hpp</label>
      </node>
      <node id="15976">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="15983">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="15977">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="15974">
        <label>storage_shard.hpp</label>
        <link refid="storage__shard_8hpp_source"/>
        <childnode refid="15975" relation="include">
        </childnode>
        <childnode refid="15983" relation="include">
        </childnode>
        <childnode refid="15976" relation="include">
        </childnode>
        <childnode refid="15979" relation="include">
        </childnode>
        <childnode refid="15980" relation="include">
        </childnode>
      </node>
      <node id="15975">
        <label>dbapp.hpp</label>
        <link refid="dbappmgr_2dbapp_8hpp_source"/>
        <childnode refid="15976" relation="include">
        </childnode>
        <childnode refid="15977" relation="include">
        </childnode>
        <childnode refid="15978" relation="include">
        </childnode>
        <childnode refid="15979" relation="include">
        </childnode>
        <childnode refid="15980" relation="include">
        </childnode>
        <childnode refid="15981" relation="include">
        </childnode>
        <childnode refid="15982" relation="include">
        </childnode>
      </node>
      <node id="15979">
        <label>db/db_hash_schemes.hpp</label>
      </node>
      <node id="15973">
        <label>dbappmgr/storage_shard.cpp</label>
        <link refid="storage_shard.cpp"/>
        <childnode refid="15974" relation="include">
        </childnode>
        <childnode refid="15975" relation="include">
        </childnode>
        <childnode refid="15984" relation="include">
        </childnode>
      </node>
      <node id="15980">
        <label>db/storage_shard_descriptor.hpp</label>
      </node>
      <node id="15982">
        <label>network/channel_owner.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_storage_shard_1_1_d_b_apps_1_1_map_streaming" prot="public">StorageShard::DBApps::MapStreaming</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="storage__shard_8cpp_1a1b2a215f764a359dfe6e536ca882c806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BinaryOStream &amp;</type>
        <definition>BinaryOStream&amp; operator&lt;&lt;</definition>
        <argsstring>(BinaryOStream &amp;os, const StorageShard &amp;shard)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_storage_shard" kindref="compound">StorageShard</ref> &amp;</type>
          <declname>shard</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Out-streaming operator for <ref refid="class_storage_shard" kindref="compound">StorageShard</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/storage_shard.cpp" line="49" column="1" bodyfile="dbappmgr/storage_shard.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;storage_shard.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db_storage_mysql/connection_info.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>member<sp/>initialisation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShardGUID<sp/>StorageShard::GUID_SHARD_ALPHA<sp/>=</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>StorageShardDescriptor::GUID_SHARD_ALPHA;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="21" refid="struct_storage_shard_1_1_d_b_apps_1_1_map_streaming" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_storage_shard_1_1_d_b_apps_1_1_map_streaming" kindref="compound">StorageShard::DBApps::MapStreaming</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_storage_shard_1_1_d_b_apps_1_1_map_streaming_1a6355e571b02d37201fdaafaf9ab169ec" kindref="member">addToStream</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>os,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StorageShard::DBApps::BucketMap<sp/>&amp;<sp/>map<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.writePackedInt(<sp/>static_cast&lt;<sp/>int<sp/>&gt;(<sp/>map.size()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BucketMap::const_iterator<sp/>iter<sp/>=<sp/>map.begin();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>map.end();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>out<sp/>the<sp/>address<sp/>of<sp/>the<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>iter-&gt;first<sp/>&lt;&lt;<sp/>iter-&gt;second-&gt;channelOwner().addr();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>support<sp/>streaming<sp/>in<sp/>for<sp/>DBAppMgr.<sp/>By<sp/>not<sp/>defining<sp/>it,<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>fail<sp/>at<sp/>compile-time<sp/>if<sp/>it<sp/>is<sp/>ever<sp/>attempted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//static<sp/>bool<sp/>readFromStream(<sp/>BinaryIStream<sp/>&amp;<sp/>is,<sp/>BucketMap<sp/>&amp;<sp/>map<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">BinaryOStream<sp/>&amp;<sp/><ref refid="class_storage_shard_1a1b2a215f764a359dfe6e536ca882c806" kindref="member">operator&lt;&lt;</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard" kindref="compound">StorageShard</ref><sp/>&amp;<sp/>shard<sp/>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>shard.<ref refid="class_storage_shard_1af87de194a189d590f49fc7b3d504c3d8" kindref="member">writeToStream</ref>(<sp/>os<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="class_storage_shard_1a3bb278781d18e399b22804cff3491857" kindref="member">StorageShard::StorageShard</ref>()<sp/>:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReferenceCount(),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptor_(<sp/>GUID_SHARD_ALPHA,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shard-Alpha&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StorageShardDescriptor::STATUS_OPERATIONAL<sp/>),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbApps_(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOutstandingAllocations_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autoLoadStatus_(<sp/>AUTO_LOAD_UNKNOWN<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="class_storage_shard_1a3bb278781d18e399b22804cff3491857" kindref="member">StorageShard::StorageShard</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StorageShardDescriptor<sp/>&amp;<sp/><ref refid="class_storage_shard_1a8f5378040286070af570d0183c47e8b2" kindref="member">descriptor</ref><sp/>)<sp/>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReferenceCount(),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptor_(<sp/><ref refid="class_storage_shard_1a8f5378040286070af570d0183c47e8b2" kindref="member">descriptor</ref><sp/>),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbApps_(),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOutstandingAllocations_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autoLoadStatus_(<sp/>AUTO_LOAD_UNKNOWN<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StorageShard::destroy()</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>related<sp/>DBApps<sp/>and<sp/>break<sp/>the<sp/>circular<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>dbApps_.clear();</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard_1ae40e0fcf4a72ce3be98f95fe50200a63" kindref="member">StorageShard::confirmDBAppConnection</ref>(<sp/><ref refid="class_d_b_app" kindref="compound">DBApp</ref><sp/>&amp;<sp/>dbApp<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>numOutstandingAllocations_<sp/>&gt;<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>--numOutstandingAllocations_;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInserted<sp/>=</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbApps_.insert(<sp/>DBApps::value_type(<sp/>dbApp.id(),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBAppPtr(<sp/>&amp;dbApp<sp/>)<sp/>)<sp/>).second;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>shouldn&apos;t<sp/>have<sp/>been<sp/>there<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>wasInserted<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard_1a3ae7831d8268315cb2ae46bbc7f17c1e" kindref="member">StorageShard::recoverDBAppConnection</ref>(<sp/><ref refid="class_d_b_app" kindref="compound">DBApp</ref><sp/>&amp;<sp/>dbApp<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>--numOutstandingAllocations_;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>dbApps_.insert(<sp/>DBApps::value_type(<sp/>dbApp.id(),</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBAppPtr(<sp/>&amp;dbApp<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard_1a979dbeef9f8a44e17af5430e6f4e9645" kindref="member">StorageShard::reset</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptor_<sp/>=<sp/>StorageShardDescriptor(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StorageShardDescriptor::GUID_INVALID,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_storage_shard_1acf1d5a63622dc0a1cfdb212a8ac76820" kindref="member">name</ref>(),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StorageShardDescriptor::STATUS_UNKNOWN<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard_1afb545fa0caebe6971785de9348f7d5bd" kindref="member">StorageShard::guid</ref>(<sp/>ShardGUID<sp/><ref refid="class_storage_shard_1afb545fa0caebe6971785de9348f7d5bd" kindref="member">guid</ref><sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptor_<sp/>=<sp/>StorageShardDescriptor(<sp/>guid,<sp/>this-&gt;<ref refid="class_storage_shard_1acf1d5a63622dc0a1cfdb212a8ac76820" kindref="member">name</ref>(),<sp/>this-&gt;<ref refid="class_storage_shard_1ac6d7f90ae0472cf4b82837e101fcf2eb" kindref="member">status</ref>()<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard_1ac6d7f90ae0472cf4b82837e101fcf2eb" kindref="member">StorageShard::status</ref>(<sp/>Status<sp/><ref refid="class_storage_shard_1ac6d7f90ae0472cf4b82837e101fcf2eb" kindref="member">status</ref><sp/>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptor_<sp/>=<sp/>StorageShardDescriptor(<sp/>this-&gt;<ref refid="class_storage_shard_1afb545fa0caebe6971785de9348f7d5bd" kindref="member">guid</ref>(),<sp/>this-&gt;<ref refid="class_storage_shard_1acf1d5a63622dc0a1cfdb212a8ac76820" kindref="member">name</ref>(),<sp/>status<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="class_d_b_app" kindref="compound">DBApp</ref><sp/>*<sp/><ref refid="class_storage_shard_1a62c987ccedaa5c85fd081c3e7a29f728" kindref="member">StorageShard::pDBAppAlpha</ref>()</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbApps_.empty())</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dbApps_.smallest().second.get();</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="class_d_b_app" kindref="compound">DBApp</ref><sp/>*<sp/><ref refid="class_storage_shard_1a849ef3e261b0e8bce947f37950d5a361" kindref="member">StorageShard::pLeastLoadedDBApp</ref>()</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbApps_.empty())</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Scalable<sp/>DB:<sp/>Make<sp/>this<sp/>based<sp/>on<sp/>actual<sp/>load<sp/>statistics.<sp/>This<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>at<sp/>least<sp/>DBApp-Alpha<sp/>is<sp/>not<sp/>likely<sp/>to<sp/>be<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dbApps_.largest().second.get();</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard_1a30371921013136fc17dbaa4893c6a1b4" kindref="member">StorageShard::onDBAppDeath</ref>(<sp/><ref refid="class_d_b_app" kindref="compound">DBApp</ref><sp/>&amp;<sp/>dbApp<sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbApps_.find(<sp/>dbApp.id()<sp/>)<sp/>!=<sp/>dbApps_.end())</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbApps_.erase(<sp/>dbApp.id()<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--numOutstandingAllocations_;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard_1af87de194a189d590f49fc7b3d504c3d8" kindref="member">StorageShard::writeToStream</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="215"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Scalable<sp/>DB:<sp/>Only<sp/>inform<sp/>about<sp/>Shard-Alpha&apos;s<sp/>hash<sp/>for<sp/>now<sp/>(without</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>descriptor.<sp/><sp/>Will<sp/>revisit<sp/>this<sp/>when<sp/>StorageShardHash<sp/>has<sp/>support<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>shards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stream<sp/>&lt;&lt;<sp/>descriptor_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>dbApps_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/><ref refid="class_storage_shard_1a6cc8f90c38262494ceaf6a48d27c6fb8" kindref="member">StorageShard::pWatcher</ref>()</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>Watcher<sp/>*<sp/>pOut<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DirectoryWatcher();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>pOut-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;guid&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeWatcher(<sp/>&amp;StorageShard::descriptor_,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;StorageShardDescriptor::guidAsString<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>pOut-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeWatcher(<sp/>&amp;StorageShard::descriptor_,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;StorageShardDescriptor::name<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>pOut-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeWatcher(<sp/>&amp;StorageShard::descriptor_,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;StorageShardDescriptor::statusAsString<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/>pMapWatcher<sp/>=<sp/>makeWatcher&lt;<sp/>MapWatcher<sp/>&gt;(<sp/>&amp;StorageShard::dbApps_<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>pMapWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SmartPointerDereferenceWatcher&lt;<sp/>DBAppPtr<sp/>&gt;(<sp/><ref refid="class_d_b_app_1a8c4c98f1ede8e111caff84be7620858a" kindref="member">DBApp::pWatcher</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>pOut-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;dbApps&quot;</highlight><highlight class="normal">,<sp/>pMapWatcher<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pOut;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>storage_shard.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dbappmgr/storage_shard.cpp"/>
  </compounddef>
</doxygen>
