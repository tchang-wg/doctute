<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_categories" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Categories</compoundname>
    <derivedcompoundref refid="class_categories_m_l_d_b" prot="public" virt="non-virtual">CategoriesMLDB</derivedcompoundref>
    <derivedcompoundref refid="class_categories_mongo_d_b" prot="public" virt="non-virtual">CategoriesMongoDB</derivedcompoundref>
    <includes refid="categories_8hpp" local="no">categories.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_categories_1a360afbee2fbb843729c2f2115961e98f" prot="private" static="no">
        <type>BW::map&lt; MessageLogger::CategoryID, BW::string &gt;</type>
        <definition>typedef BW::map&lt; MessageLogger::CategoryID, BW::string &gt; Categories::IDToNameMap</definition>
        <argsstring></argsstring>
        <name>IDToNameMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="54" column="1" bodyfile="tools/message_logger/categories.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_categories_1a44a286a6f0fd2a323a3f5374f2622bf6" prot="private" static="no">
        <type>BW::map&lt; BW::string, MessageLogger::CategoryID &gt;</type>
        <definition>typedef BW::map&lt; BW::string, MessageLogger::CategoryID &gt; Categories::NameToIdMap</definition>
        <argsstring></argsstring>
        <name>NameToIdMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="57" column="1" bodyfile="tools/message_logger/categories.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_categories_1a44f8b3b6b64b972c26f7073d254bd0a8" prot="private" static="no" mutable="no">
        <type>IDToNameMap</type>
        <definition>IDToNameMap Categories::idMap_</definition>
        <argsstring></argsstring>
        <name>idMap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="55" column="1" bodyfile="tools/message_logger/categories.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_categories_1a27e8fe8db1eff299342fdd48b13f93a4" prot="private" static="no" mutable="no">
        <type>NameToIdMap</type>
        <definition>NameToIdMap Categories::nameMap_</definition>
        <argsstring></argsstring>
        <name>nameMap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="58" column="1" bodyfile="tools/message_logger/categories.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_categories_1a11245029c261f64d234f4b9fad5be354" prot="private" static="no" mutable="no">
        <type>MessageLogger::CategoryID</type>
        <definition>MessageLogger::CategoryID Categories::maxCategoryID_</definition>
        <argsstring></argsstring>
        <name>maxCategoryID_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="60" column="1" bodyfile="tools/message_logger/categories.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_categories_1aa5450587261bdf99fe707a805ffb8b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE Categories::Categories</definition>
        <argsstring>()</argsstring>
        <name>Categories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="29" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_categories_1a0d84b3100c9304e2c22e23774a73f255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MessageLogger::CategoryID</type>
        <definition>MessageLogger::CategoryID Categories::resolveOrCreateNameToID</definition>
        <argsstring>(const BW::string &amp;categoryName)</argsstring>
        <name>resolveOrCreateNameToID</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>categoryName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method resolves the provided category name into a category ID, or creates a new category ID for it if one does not already exist.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>categoryName</parametername>
</parameternamelist>
<parameterdescription>
<para>The category name to resolve an ID for.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A category ID that uniquely maps to the category name. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="31" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="56" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_categories_1a4898a86f29576a3d9b3205cd2d522093" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Categories::resolveNameToID</definition>
        <argsstring>(const BW::string &amp;categoryName, MessageLogger::CategoryID &amp;categoryID) const </argsstring>
        <name>resolveNameToID</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>categoryName</declname>
        </param>
        <param>
          <type>MessageLogger::CategoryID &amp;</type>
          <declname>categoryID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method obtains the ID associated with a categoryName (if one exists).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>categoryName</parametername>
</parameternamelist>
<parameterdescription>
<para>The category name to find an ID mapping for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>categoryID</parametername>
</parameternamelist>
<parameterdescription>
<para>The category ID that maps to the provided name. Only modified if this method returns true.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if a category name to ID mapping exists, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="34" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="94" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_categories_1ac75347bddd1f2f312f68ffbf17915d76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Categories::resolveIDToName</definition>
        <argsstring>(MessageLogger::CategoryID categoryID) const </argsstring>
        <name>resolveIDToName</name>
        <param>
          <type>MessageLogger::CategoryID</type>
          <declname>categoryID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method resolves the provided category ID into a category name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>categoryID</parametername>
</parameternamelist>
<parameterdescription>
<para>The category ID to resolve into a category name.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A category name that uniquely mapped to the category ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="37" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="116" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_categories_1a5896ab79458d96f2d17414ee4806e0eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Categories::visitAllWith</definition>
        <argsstring>(CategoriesVisitor &amp;visitor) const </argsstring>
        <name>visitAllWith</name>
        <param>
          <type><ref refid="class_categories_visitor" kindref="compound">CategoriesVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method invokes onCategory on the visitor for all the known category names stored in the logs.</para><para><simplesect kind="return"><para>true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="39" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="139" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_categories_1a44fe8d9d6e58e9ee1890e03613faa0a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Categories::writeCategoryToDB</definition>
        <argsstring>(MessageLogger::CategoryID newCategoryID, const BW::string &amp;categoryName)=0</argsstring>
        <name>writeCategoryToDB</name>
        <reimplementedby refid="class_categories_mongo_d_b_1a71c797eb6ff50efb9b7a103bd35c1d51">writeCategoryToDB</reimplementedby>
        <reimplementedby refid="class_categories_m_l_d_b_1aee478f7972d87645fdcb15df99ea1c55">writeCategoryToDB</reimplementedby>
        <param>
          <type>MessageLogger::CategoryID</type>
          <declname>newCategoryID</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>categoryName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="41" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_categories_1a15c6c65fcc37b07033f3f2a934f9a09b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Categories::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="46" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_categories_1a0ec891e81525a482397496029adcf15d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Categories::addCategoryToMap</definition>
        <argsstring>(MessageLogger::CategoryID categoryID, BW::string &amp;categoryString)</argsstring>
        <name>addCategoryToMap</name>
        <param>
          <type>MessageLogger::CategoryID</type>
          <declname>categoryID</declname>
        </param>
        <param>
          <type>BW::string &amp;</type>
          <declname>categoryString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method add the new category to the map. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="48" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="157" bodyend="164"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_categories_1afe58575453dc55cf16f64a9b29e3ac9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MessageLogger::CategoryID</type>
        <definition>MessageLogger::CategoryID Categories::getNextAvailableCategoryID</definition>
        <argsstring>()</argsstring>
        <name>getNextAvailableCategoryID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/categories.hpp" line="52" column="1" bodyfile="tools/message_logger/categories.cpp" bodystart="34" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class handles the mapping of Category ID&apos;s and Category Names. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="442">
        <label>Categories</label>
        <link refid="class_categories"/>
      </node>
      <node id="443">
        <label>CategoriesMLDB</label>
        <link refid="class_categories_m_l_d_b"/>
        <childnode refid="442" relation="public-inheritance">
        </childnode>
      </node>
      <node id="444">
        <label>CategoriesMongoDB</label>
        <link refid="class_categories_mongo_d_b"/>
        <childnode refid="442" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="tools/message_logger/categories.hpp" line="27" column="1" bodyfile="tools/message_logger/categories.hpp" bodystart="26" bodyend="61"/>
    <listofallmembers>
      <member refid="class_categories_1a0ec891e81525a482397496029adcf15d" prot="protected" virt="non-virtual"><scope>Categories</scope><name>addCategoryToMap</name></member>
      <member refid="class_categories_1aa5450587261bdf99fe707a805ffb8b52" prot="public" virt="non-virtual"><scope>Categories</scope><name>Categories</name></member>
      <member refid="class_categories_1a15c6c65fcc37b07033f3f2a934f9a09b" prot="protected" virt="non-virtual"><scope>Categories</scope><name>clear</name></member>
      <member refid="class_categories_1afe58575453dc55cf16f64a9b29e3ac9f" prot="private" virt="non-virtual"><scope>Categories</scope><name>getNextAvailableCategoryID</name></member>
      <member refid="class_categories_1a44f8b3b6b64b972c26f7073d254bd0a8" prot="private" virt="non-virtual"><scope>Categories</scope><name>idMap_</name></member>
      <member refid="class_categories_1a360afbee2fbb843729c2f2115961e98f" prot="private" virt="non-virtual"><scope>Categories</scope><name>IDToNameMap</name></member>
      <member refid="class_categories_1a11245029c261f64d234f4b9fad5be354" prot="private" virt="non-virtual"><scope>Categories</scope><name>maxCategoryID_</name></member>
      <member refid="class_categories_1a27e8fe8db1eff299342fdd48b13f93a4" prot="private" virt="non-virtual"><scope>Categories</scope><name>nameMap_</name></member>
      <member refid="class_categories_1a44a286a6f0fd2a323a3f5374f2622bf6" prot="private" virt="non-virtual"><scope>Categories</scope><name>NameToIdMap</name></member>
      <member refid="class_categories_1ac75347bddd1f2f312f68ffbf17915d76" prot="public" virt="non-virtual"><scope>Categories</scope><name>resolveIDToName</name></member>
      <member refid="class_categories_1a4898a86f29576a3d9b3205cd2d522093" prot="public" virt="non-virtual"><scope>Categories</scope><name>resolveNameToID</name></member>
      <member refid="class_categories_1a0d84b3100c9304e2c22e23774a73f255" prot="public" virt="non-virtual"><scope>Categories</scope><name>resolveOrCreateNameToID</name></member>
      <member refid="class_categories_1a5896ab79458d96f2d17414ee4806e0eb" prot="public" virt="non-virtual"><scope>Categories</scope><name>visitAllWith</name></member>
      <member refid="class_categories_1a44fe8d9d6e58e9ee1890e03613faa0a8" prot="public" virt="pure-virtual"><scope>Categories</scope><name>writeCategoryToDB</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
