<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="tools_2test__log__app_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="test__log__app_8hpp" local="yes">test_log_app.hpp</includes>
    <includes local="yes">cstdmf/config.hpp</includes>
    <includes local="yes">cstdmf/debug_filter.hpp</includes>
    <includes local="yes">cstdmf/bw_string.hpp</includes>
    <includes local="yes">cstdmf/bw_string_ref.hpp</includes>
    <includes local="yes">network/logger_message_forwarder.hpp</includes>
    <includes local="yes">server/bwservice.hpp</includes>
    <incdepgraph>
      <node id="3846">
        <label>server/server_app.hpp</label>
      </node>
      <node id="3850">
        <label>cstdmf/bw_string_ref.hpp</label>
      </node>
      <node id="3839">
        <label>script/first_include.hpp</label>
      </node>
      <node id="3847">
        <label>cstdmf/config.hpp</label>
      </node>
      <node id="3845">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="3849">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="3838">
        <label>tools/test_log_app/main.cpp</label>
        <link refid="tools/test_log_app/main.cpp"/>
        <childnode refid="3839" relation="include">
        </childnode>
        <childnode refid="3840" relation="include">
        </childnode>
        <childnode refid="3847" relation="include">
        </childnode>
        <childnode refid="3848" relation="include">
        </childnode>
        <childnode refid="3849" relation="include">
        </childnode>
        <childnode refid="3850" relation="include">
        </childnode>
        <childnode refid="3851" relation="include">
        </childnode>
        <childnode refid="3852" relation="include">
        </childnode>
      </node>
      <node id="3840">
        <label>test_log_app.hpp</label>
        <link refid="test__log__app_8hpp_source"/>
        <childnode refid="3841" relation="include">
        </childnode>
        <childnode refid="3844" relation="include">
        </childnode>
        <childnode refid="3845" relation="include">
        </childnode>
        <childnode refid="3846" relation="include">
        </childnode>
      </node>
      <node id="3852">
        <label>server/bwservice.hpp</label>
      </node>
      <node id="3843">
        <label>server/server_app_config.hpp</label>
      </node>
      <node id="3841">
        <label>test_log_app_config.hpp</label>
        <link refid="test__log__app__config_8hpp_source"/>
        <childnode refid="3842" relation="include">
        </childnode>
        <childnode refid="3843" relation="include">
        </childnode>
      </node>
      <node id="3848">
        <label>cstdmf/debug_filter.hpp</label>
      </node>
      <node id="3851">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="3842">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="3844">
        <label>network/event_dispatcher.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="tools_2test__log__app_2main_8cpp_1a1abb5b72b5fa57ac460b158db45af954" prot="public" static="no" mutable="no">
        <type>BW_BEGIN_NAMESPACE char</type>
        <definition>BW_BEGIN_NAMESPACE char procTypeStr[256]</definition>
        <argsstring>[256]</argsstring>
        <name>procTypeStr</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/test_log_app/main.cpp" line="17" column="1" bodyfile="tools/test_log_app/main.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="tools_2test__log__app_2main_8cpp_1a644620f654c516d7d7626c37523ded5f" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char knownTypes[][256]</definition>
        <argsstring>[][256]</argsstring>
        <name>knownTypes</name>
        <initializer>= { &quot;BaseAppMgr&quot;, &quot;<ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>&quot;, &quot;<ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref>&quot;,
                                 &quot;<ref refid="class_base_app" kindref="compound">BaseApp</ref>&quot;, &quot;<ref refid="class_service_app" kindref="compound">ServiceApp</ref>&quot;, &quot;<ref refid="class_cell_app" kindref="compound">CellApp</ref>&quot;,
                                 &quot;<ref refid="class_login_app" kindref="compound">LoginApp</ref>&quot;, &quot;<ref refid="class_d_b_app" kindref="compound">DBApp</ref>&quot;, &quot;Bots&quot;, &quot;<ref refid="class_reviver" kindref="compound">Reviver</ref>&quot;,
                                 &quot;Client&quot;, &quot;Tools&quot;, &quot;SyncDB&quot;, &quot;<ref refid="class_test_log_app" kindref="compound">TestLogApp</ref>&quot;,
                                 &quot;ConsolidateDBs&quot;, &quot;<ref refid="class_clear_auto_load" kindref="compound">ClearAutoLoad</ref>&quot; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/test_log_app/main.cpp" line="18" column="1" bodyfile="tools/test_log_app/main.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tools_2test__log__app_2main_8cpp_1a308bb2c3abdd933e96f69cd34b146471" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BW_END_NAMESPACE BW_USE_NAMESPACE int</type>
        <definition>BW_END_NAMESPACE BW_USE_NAMESPACE int BIGWORLD_MAIN</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>BIGWORLD_MAIN</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/test_log_app/main.cpp" line="29" column="1" bodyfile="tools/test_log_app/main.cpp" bodystart="29" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;test_log_app.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/debug_filter.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/bw_string.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/bw_string_ref.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/logger_message_forwarder.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/bwservice.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DECLARE_DEBUG_COMPONENT2(<sp/>&quot;TestLogApp&quot;,<sp/>0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>procTypeStr[256]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>knownTypes[][256]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;BaseAppMgr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DBAppMgr&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseApp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ServiceApp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CellApp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LoginApp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DBApp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Bots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Reviver&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Client&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Tools&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SyncDB&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TestLogApp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ConsolidateDBs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ClearAutoLoad&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">BW_USE_NAMESPACE</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BIGWORLD_MAIN(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[]<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>procTypeArg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>process<sp/>the<sp/>&quot;-p&quot;<sp/>arg<sp/>here<sp/>because<sp/>the<sp/>app<sp/>name<sp/>string<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>before<sp/>the<sp/>creation<sp/>of<sp/>the<sp/>bwMainT<sp/>template<sp/>object,<sp/>to<sp/>be<sp/>able<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>picked<sp/>up<sp/>by<sp/>its<sp/>use<sp/>of<sp/>the<sp/>BW_MESSAGE_FORWARDER3<sp/>macro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;argc;<sp/>++i)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>arg(<sp/>argv[i]<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;-p&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>argc)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>command<sp/>line<sp/>-<sp/>no<sp/>argument<sp/>for<sp/>-p\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procTypeArg<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>further<sp/>argv<sp/>processing<sp/>will<sp/>occur<sp/>in<sp/>TestLogApp::init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<sp/>procTypeStr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>procTypeStr<sp/>),<sp/>procTypeArg<sp/>?<sp/>procTypeArg<sp/>:<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BWConfig::get(<sp/></highlight><highlight class="stringliteral">&quot;testLogApp/processType&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TestLogApp&quot;</highlight><highlight class="normal"><sp/>).c_str()<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Ensure<sp/>that<sp/>any<sp/>process<sp/>types<sp/>that<sp/>we<sp/>know<sp/>of<sp/>have<sp/>the<sp/>correct<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>knownTypes<sp/>);<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BW::StringRef(<sp/>knownTypes[i]<sp/>).equals_lower(<sp/>procTypeStr<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!BW::StringRef(<sp/>knownTypes[i]<sp/>).equals(<sp/>procTypeStr<sp/>))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>type<sp/>matched<sp/>a<sp/>known<sp/>type&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>but<sp/>with<sp/>wrong<sp/>case\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_FAILURE;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Generating<sp/>logs<sp/>as<sp/>process<sp/>type<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>procTypeStr<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>write<sp/>TestLogApp<sp/>logs<sp/>to<sp/>console</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>DebugFilter::shouldWriteToConsole(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bwMainT&lt;<sp/>TestLogApp<sp/>&gt;(<sp/>argc,<sp/>argv,<sp/></highlight><highlight class="comment">/*shouldLog=*/</highlight><highlight class="normal">false<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>main.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/test_log_app/main.cpp"/>
  </compounddef>
</doxygen>
