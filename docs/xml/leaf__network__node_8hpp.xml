<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="leaf__network__node_8hpp" kind="file" language="C++">
    <compoundname>leaf_network_node.hpp</compoundname>
    <includes refid="network__node_8hpp" local="yes">network_node.hpp</includes>
    <includes refid="broadcast__manager_8hpp" local="yes">broadcast_manager.hpp</includes>
    <includes refid="connection__wrapper_8hpp" local="yes">connection_wrapper.hpp</includes>
    <includes local="yes">network/endpoint.hpp</includes>
    <includes local="yes">network/machine_guard.hpp</includes>
    <includedby refid="bwmachined_8cpp" local="yes">tools/bwmachined/bwmachined.cpp</includedby>
    <includedby refid="leaf__network__node_8cpp" local="yes">tools/bwmachined/leaf_network_node.cpp</includedby>
    <includedby refid="leaf__node__broadcast__manager_8hpp" local="yes">tools/bwmachined/leaf_node_broadcast_manager.hpp</includedby>
    <incdepgraph>
      <node id="17558">
        <label>network_node.hpp</label>
        <link refid="network__node_8hpp_source"/>
        <childnode refid="17559" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17568" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17565" relation="include">
        </childnode>
        <childnode refid="17573" relation="include">
        </childnode>
        <childnode refid="17563" relation="include">
        </childnode>
      </node>
      <node id="17563">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="17570">
        <label>tcp_connection_wrapper.hpp</label>
        <link refid="tcp__connection__wrapper_8hpp_source"/>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17571" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
        <childnode refid="17562" relation="include">
        </childnode>
        <childnode refid="17563" relation="include">
        </childnode>
      </node>
      <node id="17561">
        <label>network/endpoint.hpp</label>
      </node>
      <node id="17557">
        <label>tools/bwmachined/leaf_network_node.hpp</label>
        <link refid="leaf_network_node.hpp"/>
        <childnode refid="17558" relation="include">
        </childnode>
        <childnode refid="17559" relation="include">
        </childnode>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17565" relation="include">
        </childnode>
      </node>
      <node id="17565">
        <label>network/machine_guard.hpp</label>
      </node>
      <node id="17562">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="17569">
        <label>udp_connection_wrapper.hpp</label>
        <link refid="udp__connection__wrapper_8hpp_source"/>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17562" relation="include">
        </childnode>
        <childnode refid="17563" relation="include">
        </childnode>
      </node>
      <node id="17564">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="17568">
        <label>connection_wrapper_mgr.hpp</label>
        <link refid="connection__wrapper__mgr_8hpp_source"/>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17569" relation="include">
        </childnode>
        <childnode refid="17570" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17571" relation="include">
        </childnode>
        <childnode refid="17572" relation="include">
        </childnode>
      </node>
      <node id="17567">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="17560">
        <label>connection_wrapper.hpp</label>
        <link refid="connection__wrapper_8hpp_source"/>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17562" relation="include">
        </childnode>
        <childnode refid="17563" relation="include">
        </childnode>
        <childnode refid="17564" relation="include">
        </childnode>
      </node>
      <node id="17566">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="17573">
        <label>network/portmap.hpp</label>
      </node>
      <node id="17572">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="17571">
        <label>network/event_dispatcher.hpp</label>
      </node>
      <node id="17559">
        <label>broadcast_manager.hpp</label>
        <link refid="broadcast__manager_8hpp_source"/>
        <childnode refid="17560" relation="include">
        </childnode>
        <childnode refid="17561" relation="include">
        </childnode>
        <childnode refid="17565" relation="include">
        </childnode>
        <childnode refid="17566" relation="include">
        </childnode>
        <childnode refid="17567" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17574">
        <label>tools/bwmachined/leaf_network_node.hpp</label>
        <link refid="leaf_network_node.hpp"/>
        <childnode refid="17575" relation="include">
        </childnode>
      </node>
      <node id="17575">
        <label>tools/bwmachined/leaf_node_broadcast_manager.hpp</label>
        <link refid="leaf__node__broadcast__manager_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_leaf_network_node" prot="public">LeafNetworkNode</innerclass>
    <innerclass refid="class_leaf_network_node_1_1_connection_checker_handler" prot="private">LeafNetworkNode::ConnectionCheckerHandler</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>LEAF_NETWORK_NODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEAF_NETWORK_NODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network_node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;broadcast_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection_wrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/endpoint.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/machine_guard.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_w_machined" kindref="compound">BWMachined</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_leaf_network_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_leaf_network_node" kindref="compound">LeafNetworkNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_network_node" kindref="compound">NetworkNode</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_leaf_network_node_1a7715b7d45128bb237e2175f2fbe3202a" kindref="member">LeafNetworkNode</ref>(<sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>dispatcher,<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ConnectionWrapper::ReadHandler</ref><sp/>*<sp/>pConnectionReadHandler,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>port,<sp/>u_int32_t<sp/>topLevelNodeAddr<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_leaf_network_node" kindref="compound">LeafNetworkNode</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leaf_network_node_1a57f613b8b586fe8fdeca7250b4e4f7f3" kindref="member">sendBroadcast</ref>(<sp/>MachineGuardMessage<sp/>*<sp/>pMGM<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leaf_network_node_1a57f613b8b586fe8fdeca7250b4e4f7f3" kindref="member">sendBroadcast</ref>(<sp/>MGMPacket<sp/>*<sp/>pPacket<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leaf_network_node_1a75b3a73cdda80a6ef103715104c96b30" kindref="member">sendWrappedBroadcastPacket</ref>(<sp/>MGMPacket<sp/>*<sp/>pPacket<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_leaf_network_node_1a0c43923534ad603dca87156009f8115a" kindref="member">isBroadcastResponse</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_smart_pointer" kindref="compound">ConnectionWrapperPtr</ref><sp/>pConnection,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MGMPacket<sp/>&amp;<sp/>packet<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_leaf_network_node_1a68b71379405716f49d19ecee197f6f11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Endpoint<sp/>&amp;<sp/><ref refid="class_leaf_network_node_1a68b71379405716f49d19ecee197f6f11" kindref="member">outgoingUDPEndpoint</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epNetworkUDP_;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_broadcast_manager" kindref="compound">BroadcastManager</ref><sp/>*<sp/><ref refid="class_leaf_network_node_1a8295b3a5a36b3095dec03fe4fcc06700" kindref="member">createBroadcastManager</ref>(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BroadcastWrapperMessage<sp/>&amp;<sp/>bwm,<sp/><ref refid="class_smart_pointer" kindref="compound">ConnectionWrapperPtr</ref><sp/>pReplyConnection,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ManagerLookup<sp/>&amp;<sp/>lookup<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>between<sp/>TopLevelNode<sp/>connection<sp/>checks<sp/>(in<sp/>ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeQueue64::TimeStamp<sp/>CONNECTION_CHECKER_INTERVAL_MS<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>times<sp/>to<sp/>attempt<sp/>initial<sp/>conenction<sp/>to<sp/>Top<sp/>Level<sp/>Node<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>giving<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MAX_CONNECT_ATTEMPTS<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>dispatcher_;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>endpoint<sp/>for<sp/>receiving<sp/>UDP<sp/>communications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Endpoint<sp/>epNetworkUDP_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>endpoint<sp/>for<sp/>listening<sp/>for<sp/>non-leaf-node<sp/>TCP<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Endpoint<sp/>epNetworkTCP_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>endpoint<sp/>for<sp/>listening<sp/>for<sp/>persistent<sp/>leaf<sp/>node<sp/>TCP<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Endpoint<sp/>epTopLevelTCP_;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>address<sp/>at<sp/>which<sp/>the<sp/>top<sp/>level<sp/>node<sp/>is<sp/>located</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int32_t<sp/>topLevelNodeAddr_;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>connection<sp/>wrapper<sp/>pointer<sp/>over<sp/>which<sp/>to<sp/>communicate<sp/>with<sp/>the<sp/>Top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Level<sp/>Node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">TCPConnectionWrapperPtr</ref><sp/>pTLNodeConnection_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>read<sp/>handler<sp/>as<sp/>required<sp/>by<sp/>connection<sp/>wrappers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ConnectionWrapper::ReadHandler</ref><sp/>*<sp/>pConnectionReadHandler_;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timed<sp/>handler<sp/>to<sp/>check<sp/>the<sp/>connection<sp/>to<sp/>the<sp/>top<sp/>level<sp/>node<sp/>and<sp/>reconnect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConnectionCheckerHandler<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TimerHandler</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConnectionCheckerHandler(<sp/><ref refid="class_leaf_network_node" kindref="compound">LeafNetworkNode</ref><sp/>&amp;<sp/>networkNode<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>networkNode_(<sp/>networkNode<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleTimeout(<sp/>TimerHandle<sp/>handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pUnused<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onRelease(<sp/>TimerHandle<sp/>handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pUnused<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_leaf_network_node" kindref="compound">LeafNetworkNode</ref><sp/>&amp;<sp/>networkNode_;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ConnectionCheckerHandler<sp/>connectionCheckerHandler_;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>TimerHandle<sp/>connectionCheckerTimerHandle_;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connectToTopLevelNode();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleTimeout();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkConnection();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendToTopLevelNode(<sp/>MGMPacket<sp/>*<sp/>pPacket<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initExternalNetworkInterfaces();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startHeartbeat();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>listenOnExternalEndpoints();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>closeExternalEndpoints();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>handleWholeMachineMessageReply(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WholeMachineMessage<sp/>&amp;<sp/>wmm,<sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>handleHighPrecisionMachineMessageReply(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HighPrecisionMachineMessage<sp/>&amp;<sp/>hpmm,<sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMachinedAnnounceBirth(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MachinedAnnounceMessage<sp/>&amp;<sp/>mam,<sp/>sockaddr_in<sp/>&amp;<sp/>sin,<sp/>MGMPacket<sp/>&amp;<sp/>replies<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMachinedAnnounceDeath(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MachinedAnnounceMessage<sp/>&amp;<sp/>mam,<sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMachinedAnnounceExists(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MachinedAnnounceMessage<sp/>&amp;<sp/>mam,<sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>LEAF_NETWORK_NODE_HPP</highlight></codeline>
    </programlisting>
    <location file="tools/bwmachined/leaf_network_node.hpp"/>
  </compounddef>
</doxygen>
