<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="main__app_8cpp" kind="file" language="C++">
    <compoundname>main_app.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="main__app_8hpp" local="yes">main_app.hpp</includes>
    <includes refid="client__app_8hpp" local="yes">client_app.hpp</includes>
    <includes refid="tools_2bots_2entity_8hpp" local="yes">entity.hpp</includes>
    <includes refid="patrol__graph_8hpp" local="yes">patrol_graph.hpp</includes>
    <includes refid="py__bots_8hpp" local="yes">py_bots.hpp</includes>
    <includes refid="tools_2bots_2py__space_8hpp" local="yes">py_space.hpp</includes>
    <includes refid="add__bots__callable__watcher_8hpp" local="yes">add_bots_callable_watcher.hpp</includes>
    <includes refid="del__bots__callable__watcher_8hpp" local="yes">del_bots_callable_watcher.hpp</includes>
    <includes refid="del__tagged__bots__callable__watcher_8hpp" local="yes">del_tagged_bots_callable_watcher.hpp</includes>
    <includes refid="update__movement__callable__watcher_8hpp" local="yes">update_movement_callable_watcher.hpp</includes>
    <includes local="yes">connection/login_challenge_factory.hpp</includes>
    <includes local="yes">connection/rsa_stream_encoder.hpp</includes>
    <includes local="yes">entitydef/constants.hpp</includes>
    <includes local="yes">network/machined_utils.hpp</includes>
    <includes local="yes">network/misc.hpp</includes>
    <includes local="yes">network/watcher_nub.hpp</includes>
    <includes local="yes">pyscript/personality.hpp</includes>
    <includes local="yes">pyscript/py_import_paths.hpp</includes>
    <includes local="yes">pyscript/py_traceback.hpp</includes>
    <includes local="yes">resmgr/bwresource.hpp</includes>
    <includes local="yes">server/bwconfig.hpp</includes>
    <includes local="yes">server/python_server.hpp</includes>
    <includes local="yes">server/server_info.hpp</includes>
    <includes local="yes">cstdmf/watcher.hpp</includes>
    <includes local="yes">cstdmf/string_builder.hpp</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="16859">
        <label>pyscript/py_traceback.hpp</label>
      </node>
      <node id="16820">
        <label>server/server_app.hpp</label>
      </node>
      <node id="16824">
        <label>client_app.hpp</label>
        <link refid="client__app_8hpp_source"/>
        <childnode refid="16803" relation="include">
        </childnode>
        <childnode refid="16802" relation="include">
        </childnode>
        <childnode refid="16825" relation="include">
        </childnode>
        <childnode refid="16826" relation="include">
        </childnode>
        <childnode refid="16827" relation="include">
        </childnode>
        <childnode refid="16828" relation="include">
        </childnode>
        <childnode refid="16829" relation="include">
        </childnode>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16817" relation="include">
        </childnode>
        <childnode refid="16831" relation="include">
        </childnode>
      </node>
      <node id="16847">
        <label>add_bots_callable_watcher.hpp</label>
        <link refid="add__bots__callable__watcher_8hpp_source"/>
        <childnode refid="16848" relation="include">
        </childnode>
      </node>
      <node id="16861">
        <label>server/bwconfig.hpp</label>
      </node>
      <node id="16831">
        <label>queue</label>
      </node>
      <node id="16814">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="16857">
        <label>pyscript/personality.hpp</label>
      </node>
      <node id="16855">
        <label>network/misc.hpp</label>
      </node>
      <node id="16807">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="16836">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="16801">
        <label>script/first_include.hpp</label>
      </node>
      <node id="16862">
        <label>server/python_server.hpp</label>
      </node>
      <node id="16819">
        <label>script/script_object.hpp</label>
      </node>
      <node id="16841">
        <label>patrol_graph.hpp</label>
        <link refid="patrol__graph_8hpp_source"/>
        <childnode refid="16842" relation="include">
        </childnode>
        <childnode refid="16843" relation="include">
        </childnode>
        <childnode refid="16812" relation="include">
        </childnode>
        <childnode refid="16834" relation="include">
        </childnode>
      </node>
      <node id="16816">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="16821">
        <label>server/script_timers.hpp</label>
      </node>
      <node id="16800">
        <label>tools/bots/main_app.cpp</label>
        <link refid="main_app.cpp"/>
        <childnode refid="16801" relation="include">
        </childnode>
        <childnode refid="16802" relation="include">
        </childnode>
        <childnode refid="16824" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16841" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16846" relation="include">
        </childnode>
        <childnode refid="16847" relation="include">
        </childnode>
        <childnode refid="16849" relation="include">
        </childnode>
        <childnode refid="16850" relation="include">
        </childnode>
        <childnode refid="16851" relation="include">
        </childnode>
        <childnode refid="16810" relation="include">
        </childnode>
        <childnode refid="16852" relation="include">
        </childnode>
        <childnode refid="16853" relation="include">
        </childnode>
        <childnode refid="16854" relation="include">
        </childnode>
        <childnode refid="16855" relation="include">
        </childnode>
        <childnode refid="16856" relation="include">
        </childnode>
        <childnode refid="16857" relation="include">
        </childnode>
        <childnode refid="16858" relation="include">
        </childnode>
        <childnode refid="16859" relation="include">
        </childnode>
        <childnode refid="16860" relation="include">
        </childnode>
        <childnode refid="16861" relation="include">
        </childnode>
        <childnode refid="16862" relation="include">
        </childnode>
        <childnode refid="16863" relation="include">
        </childnode>
        <childnode refid="16848" relation="include">
        </childnode>
        <childnode refid="16864" relation="include">
        </childnode>
        <childnode refid="16823" relation="include">
        </childnode>
      </node>
      <node id="16839">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="16804">
        <label>bots_config.hpp</label>
        <link refid="bots__config_8hpp_source"/>
        <childnode refid="16805" relation="include">
        </childnode>
        <childnode refid="16806" relation="include">
        </childnode>
      </node>
      <node id="16825">
        <label>connection/server_connection_handler.hpp</label>
      </node>
      <node id="16846">
        <label>py_space.hpp</label>
        <link refid="tools_2bots_2py__space_8hpp_source"/>
        <childnode refid="16844" relation="include">
        </childnode>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
      </node>
      <node id="16852">
        <label>connection/rsa_stream_encoder.hpp</label>
      </node>
      <node id="16813">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="16838">
        <label>connection_model/bw_entity.hpp</label>
      </node>
      <node id="16818">
        <label>pyscript/script_math.hpp</label>
      </node>
      <node id="16809">
        <label>connection/condemned_interfaces.hpp</label>
      </node>
      <node id="16854">
        <label>network/machined_utils.hpp</label>
      </node>
      <node id="16840">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="16817">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="16832">
        <label>entity.hpp</label>
        <link refid="tools_2bots_2entity_8hpp_source"/>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16838" relation="include">
        </childnode>
        <childnode refid="16839" relation="include">
        </childnode>
        <childnode refid="16840" relation="include">
        </childnode>
        <childnode refid="16819" relation="include">
        </childnode>
      </node>
      <node id="16811">
        <label>cstdmf/bgtask_manager.hpp</label>
      </node>
      <node id="16822">
        <label>terrain/manager.hpp</label>
      </node>
      <node id="16842">
        <label>movement_controller.hpp</label>
        <link refid="movement__controller_8hpp_source"/>
        <childnode refid="16843" relation="include">
        </childnode>
        <childnode refid="16844" relation="include">
        </childnode>
      </node>
      <node id="16829">
        <label>connection_model/bw_stream_data_handler.hpp</label>
      </node>
      <node id="16856">
        <label>network/watcher_nub.hpp</label>
      </node>
      <node id="16843">
        <label>math/vector3.hpp</label>
      </node>
      <node id="16835">
        <label>connection/entity_def_constants.hpp</label>
      </node>
      <node id="16812">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="16830">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="16848">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="16806">
        <label>server/server_app_config.hpp</label>
      </node>
      <node id="16803">
        <label>Python.h</label>
      </node>
      <node id="16864">
        <label>cstdmf/string_builder.hpp</label>
      </node>
      <node id="16828">
        <label>connection_model/bw_server_connection.hpp</label>
      </node>
      <node id="16837">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="16826">
        <label>connection_model/bw_connection.hpp</label>
      </node>
      <node id="16845">
        <label>py_bots.hpp</label>
        <link refid="py__bots_8hpp_source"/>
        <childnode refid="16830" relation="include">
        </childnode>
      </node>
      <node id="16827">
        <label>connection_model/bw_entity_factory.hpp</label>
      </node>
      <node id="16853">
        <label>entitydef/constants.hpp</label>
      </node>
      <node id="16844">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="16808">
        <label>chunk_loading/preloaded_chunk_space.hpp</label>
      </node>
      <node id="16863">
        <label>server/server_info.hpp</label>
      </node>
      <node id="16850">
        <label>del_tagged_bots_callable_watcher.hpp</label>
        <link refid="del__tagged__bots__callable__watcher_8hpp_source"/>
        <childnode refid="16848" relation="include">
        </childnode>
      </node>
      <node id="16860">
        <label>resmgr/bwresource.hpp</label>
      </node>
      <node id="16805">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="16833">
        <label>entity_type.hpp</label>
        <link refid="tools_2bots_2entity__type_8hpp_source"/>
        <childnode refid="16803" relation="include">
        </childnode>
        <childnode refid="16834" relation="include">
        </childnode>
        <childnode refid="16835" relation="include">
        </childnode>
        <childnode refid="16836" relation="include">
        </childnode>
        <childnode refid="16837" relation="include">
        </childnode>
      </node>
      <node id="16834">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="16849">
        <label>del_bots_callable_watcher.hpp</label>
        <link refid="del__bots__callable__watcher_8hpp_source"/>
        <childnode refid="16848" relation="include">
        </childnode>
      </node>
      <node id="16815">
        <label>network/event_dispatcher.hpp</label>
      </node>
      <node id="16802">
        <label>main_app.hpp</label>
        <link refid="main__app_8hpp_source"/>
        <childnode refid="16803" relation="include">
        </childnode>
        <childnode refid="16804" relation="include">
        </childnode>
        <childnode refid="16807" relation="include">
        </childnode>
        <childnode refid="16808" relation="include">
        </childnode>
        <childnode refid="16809" relation="include">
        </childnode>
        <childnode refid="16810" relation="include">
        </childnode>
        <childnode refid="16811" relation="include">
        </childnode>
        <childnode refid="16812" relation="include">
        </childnode>
        <childnode refid="16813" relation="include">
        </childnode>
        <childnode refid="16814" relation="include">
        </childnode>
        <childnode refid="16815" relation="include">
        </childnode>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16817" relation="include">
        </childnode>
        <childnode refid="16818" relation="include">
        </childnode>
        <childnode refid="16819" relation="include">
        </childnode>
        <childnode refid="16820" relation="include">
        </childnode>
        <childnode refid="16821" relation="include">
        </childnode>
        <childnode refid="16822" relation="include">
        </childnode>
        <childnode refid="16823" relation="include">
        </childnode>
      </node>
      <node id="16823">
        <label>memory</label>
      </node>
      <node id="16810">
        <label>connection/login_challenge_factory.hpp</label>
      </node>
      <node id="16851">
        <label>update_movement_callable_watcher.hpp</label>
        <link refid="update__movement__callable__watcher_8hpp_source"/>
        <childnode refid="16848" relation="include">
        </childnode>
      </node>
      <node id="16858">
        <label>pyscript/py_import_paths.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main__app_8cpp_1a3b1d8235efebdb060e32c118ae149c00" prot="public" static="no">
        <name>DEFAULT_ACCESSOR</name>
        <param><defname>N1</defname></param>
        <param><defname>N2</defname></param>
        <initializer>BW::string getDefault##N2()												\
{																			\
	return BotsConfig::N1();												\
}																			\
PY_AUTO_MODULE_FUNCTION( RETDATA, getDefault##N2, END, BigWorld )			\
																			\
void setDefault##N2( const BW::string &amp; v )								\
{																			\
	BotsConfig::N1.set( v );												\
}																			\
																			\
PY_AUTO_MODULE_FUNCTION( RETVOID,											\
		setDefault##N2, ARG( BW::string, END ), BigWorld )					\</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="1254" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main__app_8cpp_1adc4931dccca1439538b1df473a86edd8" prot="public" static="no" mutable="no">
        <type>BW_BEGIN_NAMESPACE int</type>
        <definition>BW_BEGIN_NAMESPACE int Math_token</definition>
        <argsstring></argsstring>
        <name>Math_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main__app_8cpp_1a291411712ad7fe5fdf11fe4f8576732e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ResMgr_token</definition>
        <argsstring></argsstring>
        <name>ResMgr_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main__app_8cpp_1a686450e3b38f5659aacf461bcaf61bca" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyScript_token</definition>
        <argsstring></argsstring>
        <name>PyScript_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main__app_8cpp_1aec6bec64b5bea9253a3d4989ae45448f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyUserDataObject_token</definition>
        <argsstring></argsstring>
        <name>PyUserDataObject_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main__app_8cpp_1a250b7b8a9b78d9e67598ca678370dc8a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int UserDataObjectDescriptionMap_Token</definition>
        <argsstring></argsstring>
        <name>UserDataObjectDescriptionMap_Token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main__app_8cpp_1a61825fb9a7049f6966982c9698099fad" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AppScriptTimers_token</definition>
        <argsstring></argsstring>
        <name>AppScriptTimers_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="main__app_8cpp_1a510d5cdd849dc702ebbc3064d2390a13" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ChunkTerrain_token</definition>
        <argsstring></argsstring>
        <name>ChunkTerrain_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="59" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main__app_8cpp_1af200eb45f3ad5cc8c486c9a5b19f4c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void addToModule</definition>
        <argsstring>(PyObject *pModule, T value, const char *pName)</argsstring>
        <name>addToModule</name>
        <param>
          <type>PyObject *</type>
          <declname>pModule</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/main_app.cpp" line="1031" column="1" bodyfile="tools/bots/main_app.cpp" bodystart="1031" bodyend="1043"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;main_app.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;client_app.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;patrol_graph.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_bots.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callable<sp/>Watchers<sp/>exposing<sp/>MainApp::instance()<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;add_bots_callable_watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;del_bots_callable_watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;del_tagged_bots_callable_watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;update_movement_callable_watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection/login_challenge_factory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection/rsa_stream_encoder.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/machined_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/misc.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/watcher_nub.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/personality.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/py_import_paths.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/py_traceback.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resmgr/bwresource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/bwconfig.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/python_server.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/server_info.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/string_builder.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__unix__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">DECLARE_DEBUG_COMPONENT2(<sp/></highlight><highlight class="stringliteral">&quot;Bots&quot;</highlight><highlight class="normal">,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Math_token;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResMgr_token;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyScript_token;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyUserDataObject_token;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UserDataObjectDescriptionMap_Token;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AppScriptTimers_token;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ChunkTerrain_token;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">namespace</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>options<sp/>are<sp/>related<sp/>to<sp/>splitting<sp/>the<sp/>sends<sp/>up<sp/>over<sp/>each<sp/>tick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TICK_FRAGMENTS<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>not<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TICK_FREQUENCY<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TICK_TIMEOUT<sp/>=<sp/>1000000/TICK_FREQUENCY/TICK_FRAGMENTS;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>TICK_PERIOD<sp/>=<sp/>1.f/TICK_FREQUENCY;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MINI_TICK_PERIOD<sp/>=<sp/>0.1f<sp/>/<sp/>TICK_FRAGMENTS;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FILE_IO_THREADS<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BG_THREADS<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>estimated<sp/>value<sp/>needs<sp/>to<sp/>be<sp/>safely<sp/>over<sp/>the<sp/>actual<sp/>value<sp/>to<sp/>prevent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>epoll_create<sp/>in<sp/>EpollPoller::EpollPoller()&apos;s<sp/>initializer<sp/>list<sp/>exceeding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>file<sp/>descriptor<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FD_PER_BOT<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_moduleTokens<sp/>=</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>Math_token<sp/>|<sp/>ResMgr_token<sp/>|<sp/>PyScript_token<sp/>|<sp/>AppScriptTimers_token;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_udoTokens<sp/>=<sp/>PyUserDataObject_token<sp/>|<sp/>UserDataObjectDescriptionMap_Token;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_chunkTokens<sp/>=<sp/>ChunkTerrain_token;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Static<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">BW_SINGLETON_STORAGE(<sp/><ref refid="class_main_app" kindref="compound">MainApp</ref><sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>class<sp/>MainAppTimeQueue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="class_main_app_time_queue" kindref="compound">MainAppTimeQueue</ref>::<ref refid="class_main_app_time_queue" kindref="compound">MainAppTimeQueue</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updateHertz,<sp/><ref refid="class_main_app" kindref="compound">MainApp</ref><sp/>&amp;<sp/>mainApp<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptTimeQueue(<sp/>updateHertz<sp/>),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainApp_(<sp/>mainApp<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">GameTime<sp/><ref refid="class_main_app_time_queue_1ab93d84d1f51fa4b490f8c19c5b75b204" kindref="member">MainAppTimeQueue::time</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mainApp_.time();</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>class<sp/>MainApp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="class_main_app_1afb3e3c803c65fac3c0718ca47e77da79" kindref="member">MainApp::MainApp</ref>(<sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>mainDispatcher,<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::NetworkInterface<sp/>&amp;<sp/>networkInterface<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerApp(<sp/>mainDispatcher,<sp/>networkInterface<sp/>),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pLogOnParamsEncoder_(<sp/>NULL<sp/>),<sp/></highlight><highlight class="comment">//<sp/>initialised<sp/>below<sp/>in<sp/>the<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localTime_(<sp/>0.0<sp/>),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameTimer_(),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkTimer_(),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendTimeReportThreshold_(<sp/>10.0<sp/>),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeQueue_(<sp/>TICK_FREQUENCY,<sp/>*this<sp/>),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPythonServer_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientTickIndex_(<sp/>bots_.end()<sp/>),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appID_(),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextBotID_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextSpaceEntryIDSalt_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileIOTaskManager_(),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terrainManager_(),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaces_(),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loginChallengeFactories_(),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>condemnedInterfaces_()</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptTimers::init(<sp/>timeQueue_<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)timestamp()<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="class_main_app_1a1da72f01017840ab6165e33b76cc8482" kindref="member">MainApp::~MainApp</ref>()</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>loading<sp/>thread<sp/>so<sp/>that<sp/>we<sp/>can<sp/>clean<sp/>up<sp/>without<sp/>fear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>bgTaskManager_.stopAll();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>fileIOTaskManager_.stopAll();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::~MainApp:<sp/>Stopped<sp/>background<sp/>threads.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>it<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreloadedChunkSpace<sp/>*<sp/>pSpace<sp/>=<sp/>it-&gt;second.pSpace;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;prepareNewlyLoadedChunksForDelete();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>spaces_.clear();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>gameTimer_.cancel();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>chunkTimer_.cancel();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>timeQueue_.clear();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptTimers::fini(<sp/>timeQueue_<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>bots_.clear();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pPythonServer_<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>Script::fini();</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1afa532ac043eb3b5439d0d8bde3cea4d8" kindref="member">MainApp::init</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[]<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;ServerApp::init(<sp/>argc,<sp/>argv<sp/>))</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initLogOnParamsEncoder(<sp/>BotsConfig::publicKey()<sp/>))</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LoginApp<sp/>public<sp/>key<sp/>initialisation<sp/>failed,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;using<sp/>unencrypted<sp/>logins<sp/>instead.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;parseCommandLine(<sp/>argc,<sp/>argv<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BotsConfig::serverName().empty())</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Address<sp/>addr;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Reason<sp/>lookupStatus<sp/>=<sp/>this-&gt;pBWMachineD()-&gt;findInterface(</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LoginInterface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*id*/</highlight><highlight class="normal"><sp/>0,<sp/>addr,<sp/>BotsConfig::numStartupRetries(),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::startupRetryPeriod()<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lookupStatus<sp/>==<sp/>Mercury::REASON_SUCCESS)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::serverName.set(<sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>port_<sp/>config<sp/>as<sp/>we&apos;ve<sp/>got<sp/>that<sp/>from<sp/>LoginInterface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::port.set(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>LoginInterface<sp/>via<sp/>bwmachined<sp/>at<sp/>%s.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::serverName().c_str()<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::init:<sp/>Failed<sp/>to<sp/>find<sp/>LoginApp<sp/>Interface<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%s)\n&quot;</highlight><highlight class="normal">,<sp/>Mercury::reasonToString(<sp/>lookupStatus<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BotsConfig::port()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>portNum[10];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(<sp/>portNum,<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;:%d&quot;</highlight><highlight class="normal">,<sp/>BotsConfig::port()<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>newServerName<sp/>=<sp/>BotsConfig::serverName()<sp/>+<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string(<sp/>portNum<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::serverName.set(<sp/>newServerName<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!terrainManager_.isValid())</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::init:<sp/>TerrainManager<sp/>is<sp/>not<sp/>valid\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>gameTimer_<sp/>=<sp/>this-&gt;mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TICK_TIMEOUT,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;<sp/>void<sp/>*<sp/>&gt;(<sp/>TIMEOUT_GAME_TICK<sp/>),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BotsTick&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loadingTickMicroseconds<sp/>=</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>1000000<sp/>*<sp/>Config::chunkLoadingPeriod()<sp/>),<sp/>5000<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>chunkTimer_<sp/>=<sp/>this-&gt;mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadingTickMicroseconds,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;<sp/>void<sp/>*<sp/>&gt;(<sp/>TIMEOUT_CHUNK_TICK<sp/>),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ChunkTick&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>bgTaskManager_.initWatchers(<sp/></highlight><highlight class="stringliteral">&quot;Bots&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>bgTaskManager_.startThreads(<sp/></highlight><highlight class="stringliteral">&quot;BGTask<sp/>Manager&quot;</highlight><highlight class="normal">,<sp/>BG_THREADS<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>fileIOTaskManager_.initWatchers(<sp/></highlight><highlight class="stringliteral">&quot;FileIO&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>fileIOTaskManager_.startThreads(<sp/></highlight><highlight class="stringliteral">&quot;FileIO&quot;</highlight><highlight class="normal">,<sp/>FILE_IO_THREADS<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>StringBuilder<sp/>builder(<sp/>buffer,<sp/>ARRAY_SIZE(<sp/>buffer<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.append(<sp/>ServerInfo().serverName()<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.append(<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.append(<sp/>ntohs(<sp/>interface_.address().port<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>appID_<sp/>=<sp/>builder.string();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initScript())</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;initWatchers();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>Script::initExceptionHook(<sp/>&amp;(this-&gt;mainDispatcher())<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pBWMachineD()-&gt;registerWithMachined(<sp/>interface_.address(),<sp/></highlight><highlight class="stringliteral">&quot;bots&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">/*ignoredID*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::init:<sp/>AppID<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>appID_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">PreloadedChunkSpace<sp/>*<sp/><ref refid="class_main_app_1a838ecf0ab8f0420270276a1e1d103502" kindref="member">MainApp::addSpaceGeometryMapping</ref>(<sp/>ChunkSpaceID<sp/>spaceID,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Matrix<sp/>&amp;<sp/>matrix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;<sp/>Spaces::iterator,<sp/>bool<sp/>&gt;<sp/>result<sp/>=<sp/>spaces_.insert(</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::value_type(<sp/>spaceID,<sp/>SpacesItem()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>SpacesItem<sp/>&amp;<sp/>item<sp/>=<sp/>result.first-&gt;second;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.second)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.refCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item.pSpace<sp/>=</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PreloadedChunkSpace(<sp/>matrix,<sp/>name,<sp/>entryID,<sp/>spaceID,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::addSpaceGeometryMapping:<sp/>Mapped<sp/>%s<sp/>to<sp/>space<sp/>%u&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.c_str(),<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item.pSpace-&gt;entryID()<sp/>!=<sp/>entryID)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(item.refCount);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item.pSpace;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">SpaceEntryID<sp/>MainApp::nextSpaceEntryID()</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>entryID.salt<sp/>=<sp/>++nextSpaceEntryIDSalt_;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entryID;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">PyObject<sp/>*<sp/><ref refid="class_main_app_1a838ecf0ab8f0420270276a1e1d103502" kindref="member">MainApp::addSpaceGeometryMapping</ref>(<sp/>ChunkSpaceID<sp/>spaceID,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixProviderPtr<sp/>pMapper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>path<sp/>)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix<sp/>m<sp/>=<sp/>Matrix::identity;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMapper)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMapper-&gt;matrix(<sp/>m<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw<sp/>=<sp/>m.yaw();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitch<sp/>=<sp/>m.pitch();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>roll<sp/>=<sp/>m.roll();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!almostZero(<sp/>fmod(<sp/>yaw,<sp/>MATH_PI/2.f<sp/>)<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!almostZero(<sp/>pitch<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!almostZero(<sp/>roll<sp/>))</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::addSpaceGeometryMapping:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%s&apos;.<sp/>Rotation<sp/>needs<sp/>to<sp/>be<sp/>axis<sp/>aligned.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;yaw<sp/>=<sp/>%.2f.<sp/>pitch<sp/>=<sp/>%.2f.<sp/>roll<sp/>=<sp/>%.2f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.c_str(),</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAD_TO_DEG(<sp/>yaw<sp/>),<sp/>RAD_TO_DEG(<sp/>pitch<sp/>),<sp/>RAD_TO_DEG(<sp/>roll<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>PreloadedChunkSpace<sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;addSpaceGeometryMapping(</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceID,<sp/>this-&gt;nextSpaceEntryID(),<sp/>m,<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSpace)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_AttributeError,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Space<sp/>%u<sp/>is<sp/>already<sp/>mapped&quot;</highlight><highlight class="normal">,<sp/>spaceID<sp/>);<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>pSpace-&gt;entryID()<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MainApp::removeSpaceGeometryMapping(<sp/>ChunkSpaceID<sp/>spaceID,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID<sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>it<sp/>=<sp/>spaces_.find(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>spaces_.end()<sp/>||<sp/>it-&gt;second.pSpace-&gt;entryID()<sp/>!=<sp/>entryID<sp/>||</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second.refCount<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--(it-&gt;second.refCount)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PreloadedChunkSpace<sp/>doesn&apos;t<sp/>support<sp/>unloading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>implement<sp/>unloading<sp/>BWT-31528</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>ServerGeometryMappingsHandler.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainApp::onSpaceGeometryLoaded(<sp/>SpaceID<sp/>spaceID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>personality<sp/>=<sp/>this-&gt;getPersonalityModule();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(personality)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>personality.callMethod(<sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryLoaded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptArgs::create(<sp/>spaceID,<sp/>name<sp/>),</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint(<sp/></highlight><highlight class="stringliteral">&quot;BWPersonality.onSpaceGeometryLoaded&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allowNullMethod<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainApp::addBotWithName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>botName,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>botPassword,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>clientContext<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fdOpen<sp/>=<sp/>this-&gt;numFileDescriptorsOpen();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fdLimit<sp/>=<sp/>this-&gt;fileDescriptorLimit();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fdOpen<sp/>+<sp/>FD_PER_BOT)<sp/>&gt;<sp/>fdLimit)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::addBotWithName:<sp/>Failed<sp/>to<sp/>add<sp/>%s.<sp/>File<sp/>descriptors&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>limit<sp/>will<sp/>be<sp/>exceeded:<sp/>per<sp/>bot=%d,<sp/>opened=%d,<sp/>limit=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>botName.c_str(),<sp/>FD_PER_BOT,<sp/>fdOpen,<sp/>fdLimit<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_client_app" kindref="compound">ClientApp</ref><sp/>*<sp/>pClientApp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_client_app" kindref="compound">ClientApp</ref>(<sp/>botName,<sp/>botPassword,<sp/>clientContext,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConnectionTransport(<sp/>BotsConfig::transport()<sp/>),<sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::tag()<sp/>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>pClientApp-&gt;connectionSendTimeReportThreshold(<sp/>sendTimeReportThreshold_<sp/>);<sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>bots_.push_back(<sp/>ClientAppPtr(<sp/>pClientApp,<sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>)<sp/>);<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1a134732e7394963f69f54aba75d8ad04d" kindref="member">MainApp::addBot</ref>()</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>bname<sp/>=<sp/>BotsConfig::username();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>bpass<sp/>=<sp/>BotsConfig::password();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>clientContext<sp/>=<sp/>BotsConfig::clientContext();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BotsConfig::shouldUseRandomName())</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StringBuilder<sp/>builder(<sp/>buffer,<sp/>ARRAY_SIZE(<sp/>buffer<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.append(<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.append(<sp/>++nextBotID_<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.append(<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.append(<sp/>appID_<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bname.append(<sp/>builder.string()<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addBotWithName(<sp/>bname,<sp/>bpass,<sp/>clientContext<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1a7fb77a104ad0602dbb4ae834f5cba99f" kindref="member">MainApp::addBots</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num;<sp/>++i)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addBot();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1adf420ade4c71b7994914c0c16c3e2e98" kindref="member">MainApp::addBotsWithName</ref>(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pCredentialSequence<sp/>)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCredentialSequence<sp/>||<sp/>pCredentialSequence<sp/>==<sp/>Py_None)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Bots::addBotsWithName:<sp/>Empty<sp/>login<sp/>info.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expecting<sp/>a<sp/>list<sp/>of<sp/>tuples<sp/>containing<sp/>username,<sp/>password<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>optional<sp/>client<sp/>context.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PySequence_Check(<sp/>pCredentialSequence.get()<sp/>))</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Bots::addBotsWithName:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expecting<sp/>a<sp/>list<sp/>of<sp/>tuples<sp/>containing<sp/>username,<sp/>password<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>optional<sp/>client<sp/>context.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>numCredentials<sp/>=<sp/>PySequence_Size(</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCredentialSequence.get()<sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Py_ssize_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numCredentials;<sp/>++i)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pCredentials<sp/>=<sp/>PySequence_GetItem(</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCredentialSequence.get(),<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>tupleSize<sp/>=<sp/>PyTuple_Size(<sp/>pCredentials<sp/>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyTuple_Check(<sp/>pCredentials<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(tupleSize<sp/>!=<sp/>2<sp/>&amp;&amp;<sp/>tupleSize<sp/>!=<sp/>3))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Bots::addBotsWithName:<sp/>Argument<sp/>list<sp/>item<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIzd<sp/></highlight><highlight class="stringliteral">&quot;<sp/>must<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;be<sp/>tuple<sp/>of<sp/>two<sp/>or<sp/>three<sp/>strings.&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pCredentials<sp/>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pClientName<sp/>=<sp/>PySequence_GetItem(<sp/>pCredentials,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pClientPassword<sp/>=<sp/>PySequence_GetItem(<sp/>pCredentials,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pClientContext<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tupleSize<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pClientContext<sp/>=<sp/>PySequence_GetItem(<sp/>pCredentials,<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pCredentials<sp/>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyString_Check(<sp/>pClientName<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!PyString_Check(<sp/>pClientPassword<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pClientContext<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!PyString_Check(<sp/>pClientContext<sp/>)))</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Bots::addBotsWithName:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>credentials<sp/>for<sp/>element<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIzd<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expecting<sp/>a<sp/>tuple<sp/>containing<sp/>a<sp/>username,<sp/>password<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>optional<sp/>client<sp/>context.&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pClientName<sp/>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pClientPassword<sp/>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pClientContext<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>clientContext<sp/>=<sp/>pClientContext<sp/>!=<sp/>NULL<sp/>?</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString(<sp/>pClientContext<sp/>)<sp/>:<sp/><ref refid="class_bots_config" kindref="compound">BotsConfig</ref>::clientContext();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addBotWithName(<sp/>PyString_AsString(<sp/>pClientName<sp/>),</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString(<sp/>pClientPassword<sp/>),<sp/>clientContext<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pClientName<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pClientPassword<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pClientContext<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1ae50cf673a474c6b4480c6f55aa66d024" kindref="member">MainApp::delBots</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num--<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!bots_.empty())</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bots::iterator<sp/>iter<sp/>=<sp/>bots_.begin();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>clientTickIndex_)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++clientTickIndex_;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bots_.front()-&gt;destroy();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bots_.pop_front();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1a25b74b69d2ce94c653bcb22ebc6f1f6b" kindref="member">MainApp::updateMovement</ref>(<sp/>BW::string<sp/>tag<sp/>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::iterator<sp/>iter<sp/>=<sp/>bots_.begin();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bots_.end())</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tag.empty()<sp/>||<sp/>((*iter)-&gt;tag()<sp/>==<sp/>tag))</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>(*iter)-&gt;setMovementController(<sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::controllerType(),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::controllerData()<sp/>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ok)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Print();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1af476cdfe8850adad4dead940a0672e98" kindref="member">MainApp::delTaggedEntities</ref>(<sp/>BW::string<sp/>tag<sp/>)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::iterator<sp/>iter<sp/>=<sp/>bots_.begin();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots<sp/>condemnedBots;<sp/></highlight><highlight class="comment">//Call<sp/>destructors<sp/>when<sp/>going<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bots_.end())</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bots::iterator<sp/>oldIter<sp/>=<sp/>iter++;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*oldIter)-&gt;tag()<sp/>==<sp/>tag)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldIter<sp/>==<sp/>clientTickIndex_)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++clientTickIndex_;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>condemnedBots.push_back(*oldIter);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bots_.erase(<sp/>oldIter<sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>TimerExpiryHandler.</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainApp::handleTimeout(<sp/>TimerHandle<sp/></highlight><highlight class="comment">/*handle*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(reinterpret_cast&lt;<sp/>uintptr<sp/>&gt;(<sp/>arg<sp/>))</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_GAME_TICK:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;handleGameTickTimeSlice();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_CHUNK_TICK:</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;handleChunkTickTimeSlice();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1ac111f608570f96450938faf04a414c61" kindref="member">MainApp::handleGameTickTimeSlice</ref>()</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inTick<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inTick)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>occur<sp/>because<sp/>the<sp/>tick<sp/>method<sp/>of<sp/>ClientApp<sp/>can<sp/>processInput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>ServerConnection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::handleTimeout:<sp/>Called<sp/>recursively\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>inTick<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>personality<sp/>=<sp/>this-&gt;getPersonalityModule();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(personality)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>Bots<sp/>personality<sp/>script<sp/>a<sp/>chance<sp/>to<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>personality.callMethod(<sp/></highlight><highlight class="stringliteral">&quot;onTick&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint(<sp/></highlight><highlight class="stringliteral">&quot;BWPersonality.onTick&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allowNullMethod<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainder<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberToUpdate<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((bots_.size()<sp/>+<sp/>remainder)<sp/>/</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TICK_FRAGMENTS);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>remainder<sp/>=<sp/>(bots_.size()<sp/>+<sp/>remainder)<sp/>%<sp/>TICK_FRAGMENTS;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>localTime_<sp/>+=<sp/>MINI_TICK_PERIOD;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(numberToUpdate--<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>!bots_.empty())</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clientTickIndex_<sp/>==<sp/>bots_.end())</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientTickIndex_<sp/>=<sp/>bots_.begin();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bots::iterator<sp/>iter<sp/>=<sp/>clientTickIndex_++;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tick<sp/>may<sp/>have<sp/>called<sp/>destroyBots(),<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>invalidate<sp/>the<sp/>current<sp/>iterator<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>the<sp/>ClientApp.<sp/>Make<sp/>a<sp/>ptr<sp/>so<sp/>the<sp/>bot<sp/>holds<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientAppPtr<sp/>pClientApp<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pClientApp-&gt;tick(<sp/>TICK_PERIOD<sp/>))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pClientApp-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pClientApp-&gt;logOnRetryTime()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>botsForLogOnRetry_.push_back(<sp/>pClientApp<sp/>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bots_.erase(<sp/>iter<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>now<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::iterator<sp/>retryIter<sp/>=<sp/>botsForLogOnRetry_.begin();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(retryIter<sp/>!=<sp/>botsForLogOnRetry_.end())</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*retryIter)-&gt;logOnRetryTime()<sp/>&lt;<sp/>now)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*retryIter)-&gt;logOn();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bots_.push_back(<sp/>(*retryIter)<sp/>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retryIter<sp/>=<sp/>botsForLogOnRetry_.erase(<sp/>retryIter<sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++retryIter;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;advanceTime();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>condemnedInterfaces_.processOnce();</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>inTick<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1af4ed89907d7d5bcdb5682bd7d82c54ae" kindref="member">MainApp::handleChunkTickTimeSlice</ref>()</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>bgTaskManager_.tick();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>fileIOTaskManager_.tick();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>it<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second.pSpace-&gt;chunkTick();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1a846b020939f53b95699ab11018a9bb70" kindref="member">MainApp::onTickProcessingComplete</ref>()</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ServerApp::onTickProcessingComplete();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>timeQueue_.process(<sp/>time_<sp/>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal">ScriptObject<sp/><ref refid="class_main_app_1afca91055ffbcc1d0a45e60575cc43a3d" kindref="member">MainApp::getPersonalityModule</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="766"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Personality::instance();</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainApp::sendTimeReportThreshold(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold<sp/>)<sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>it<sp/>here<sp/>for<sp/>new<sp/>connections<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>sendTimeReportThreshold_<sp/>=<sp/>threshold;<sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>set<sp/>it<sp/>for<sp/>any<sp/>client<sp/>apps<sp/>we<sp/>already<sp/>have<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::iterator<sp/>iBot<sp/>=<sp/>bots_.begin();<sp/></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iBot<sp/>!=<sp/>bots_.end())<sp/></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iBot)-&gt;connectionSendTimeReportThreshold(<sp/>threshold<sp/>);<sp/></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iBot;<sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BW::map&lt;<sp/>BW::string,<sp/>MovementFactory<sp/>*<sp/>&gt;<sp/>MovementFactories;</highlight></codeline>
<codeline lineno="795"><highlight class="normal">MovementFactories<sp/>*<sp/>s_pMovementFactories;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><ref refid="class_movement_controller" kindref="compound">MovementController</ref><sp/>*<sp/><ref refid="class_main_app_1ae1bf4d189f7f24c7252338781aa37407" kindref="member">MainApp::createDefaultMovementController</ref>(</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;<sp/>speed,<sp/>Vector3<sp/>&amp;<sp/>position<sp/>)</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;createMovementController(<sp/>speed,<sp/>position,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::controllerType(),<sp/>BotsConfig::controllerData()<sp/>);</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><ref refid="class_movement_controller" kindref="compound">MovementController</ref><sp/>*</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_main_app_1a8181de7bd0d16035b71e5b74bdb8e0d6" kindref="member">MainApp::createMovementController</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;<sp/>speed,<sp/>Vector3<sp/>&amp;<sp/>position,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>controllerTypeIn,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>controllerData<sp/>)</highlight></codeline>
<codeline lineno="817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>controllerType<sp/>=<sp/>controllerTypeIn;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(controllerType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__unix__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>soPos<sp/>=<sp/>controllerType.find(<sp/></highlight><highlight class="stringliteral">&quot;.so:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(soPos<sp/>&lt;<sp/>controllerType.length())</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>soName<sp/>=<sp/>controllerType.substr(<sp/>0,<sp/>soPos+3<sp/>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BW::set&lt;BW::string&gt;<sp/>loadedLibs;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loadedLibs.find(<sp/>soName<sp/>)<sp/>==<sp/>loadedLibs.end())</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadedLibs.insert(<sp/>soName<sp/>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>soPath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bots-extensions/&quot;</highlight><highlight class="normal">+soName;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>handle<sp/>=<sp/>dlopen(<sp/>soPath.c_str(),<sp/>RTLD_LAZY<sp/>|<sp/>RTLD_GLOBAL<sp/>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::createMovementController:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>dyn<sp/>lib<sp/>&apos;%s&apos;<sp/>since<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>soName.c_str(),<sp/>dlerror()<sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::createMovementController:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Loaded<sp/>dyn<sp/>lib<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>soName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controllerType<sp/>=<sp/>controllerType.substr(<sp/>soPos+4<sp/>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_pMovementFactories<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MovementFactories::iterator<sp/>iter<sp/>=</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_pMovementFactories-&gt;find(<sp/>controllerType<sp/>);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>s_pMovementFactories-&gt;end())</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;second-&gt;create(<sp/>controllerData,<sp/>speed,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>controller<sp/>type<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controllerType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1a6e188518301a08a8c5fc4f95a66aabe2" kindref="member">MainApp::addFactory</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name,<sp/><ref refid="class_movement_factory" kindref="compound">MovementFactory</ref><sp/>&amp;<sp/>factory<sp/>)</highlight></codeline>
<codeline lineno="872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_pMovementFactories<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_pMovementFactories<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MovementFactories;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>(*s_pMovementFactories)[<sp/>name<sp/>]<sp/>=<sp/>&amp;factory;</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Script<sp/>related</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal">ClientAppPtr<sp/><ref refid="class_main_app_1ac35af3461f235ce7bc55ae0ff51d66ed" kindref="member">MainApp::findApp</ref>(<sp/>EntityID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="890"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>NULL_ENTITY_ID)</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cannot<sp/>find<sp/>domant<sp/>bots<sp/>by<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClientAppPtr();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>inefficient.<sp/>Could<sp/>look<sp/>at<sp/>making<sp/>a<sp/>map<sp/>of<sp/>these<sp/>but<sp/>it<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>be<sp/>used<sp/>this<sp/>way<sp/>very<sp/>often.(??)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::const_iterator<sp/>iter<sp/>=<sp/>bots_.begin();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bots_.end())</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientAppPtr<sp/>pApp<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>deleting<sp/>multiple<sp/>bots,<sp/>there<sp/>may<sp/>be<sp/>holes<sp/>in<sp/>the<sp/>bots_<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporarily,<sp/>so<sp/>jump<sp/>over<sp/>any<sp/>NULL<sp/>pointers<sp/>we<sp/>encounter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pApp<sp/>&amp;&amp;<sp/>pApp-&gt;id()<sp/>==<sp/>id)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pApp;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClientAppPtr();</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1a1b291f12c60ccd074b6184cfdf103472" kindref="member">MainApp::appsKeys</ref>(<sp/>PyObject<sp/>*<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="923"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::const_iterator<sp/>iter<sp/>=<sp/>bots_.begin();</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bots_.end())</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*iter)-&gt;id()<sp/>!=<sp/>NULL_ENTITY_ID)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pInt<sp/>=<sp/>PyInt_FromLong(<sp/>(*iter)-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList,<sp/>pInt<sp/>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pInt<sp/>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1aeb59e3a28fde0a16faf7645c62e11345" kindref="member">MainApp::appsValues</ref>(<sp/>PyObject<sp/>*<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="944"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::const_iterator<sp/>iter<sp/>=<sp/>bots_.begin();</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bots_.end())</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*iter)-&gt;id()<sp/>!=<sp/>NULL_ENTITY_ID)</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList,<sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;<sp/>ClientApp*<sp/>&gt;(<sp/>iter-&gt;get()<sp/>));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_main_app_1a57cfdbd535ba816e44f7364fca6e7db0" kindref="member">MainApp::appsItems</ref>(<sp/>PyObject<sp/>*<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="964"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>Bots::const_iterator<sp/>iter<sp/>=<sp/>bots_.begin();</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bots_.end())</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*iter)-&gt;id()<sp/>!=<sp/>NULL_ENTITY_ID)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pTuple<sp/>=<sp/>PyTuple_New(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SetItem(<sp/>pTuple,<sp/>0,<sp/>PyInt_FromLong(<sp/>(*iter)-&gt;id()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>(*iter).get()<sp/>);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SetItem(<sp/>pTuple,<sp/>1,<sp/></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;<sp/>ClientApp*<sp/>&gt;(<sp/>iter-&gt;get()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList,<sp/>pTuple<sp/>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pTuple<sp/>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainApp::parseCommandLine(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[]<sp/>)</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>any<sp/>command<sp/>line<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/></highlight><highlight class="stringliteral">&quot;-serverName&quot;</highlight><highlight class="normal">,<sp/>argv[i]<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::serverName.set(<sp/>(<sp/>i<sp/>&lt;<sp/>argc<sp/>)<sp/>?<sp/>argv[<sp/>i<sp/>]<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Server<sp/>name<sp/>is<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>BotsConfig::serverName().c_str()<sp/>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/></highlight><highlight class="stringliteral">&quot;-username&quot;</highlight><highlight class="normal">,<sp/>argv[i]<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::username.set(<sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>i<sp/>&lt;<sp/>argc<sp/>)<sp/>?<sp/>argv[<sp/>i<sp/>]<sp/>:<sp/>BotsConfig::username()<sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Username<sp/>is<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>BotsConfig::username().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/></highlight><highlight class="stringliteral">&quot;-password&quot;</highlight><highlight class="normal">,<sp/>argv[i]<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::password.set(<sp/></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>i<sp/>&lt;<sp/>argc<sp/>)<sp/>?<sp/>argv[<sp/>i<sp/>]<sp/>:<sp/>BotsConfig::password()<sp/>);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/></highlight><highlight class="stringliteral">&quot;-port&quot;</highlight><highlight class="normal">,<sp/>argv[i]<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::port.set(<sp/></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>i<sp/>&lt;<sp/>argc<sp/>)<sp/>?<sp/>atoi(argv[<sp/>i<sp/>])<sp/>:<sp/>BotsConfig::port()<sp/>);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/></highlight><highlight class="stringliteral">&quot;-randomName&quot;</highlight><highlight class="normal">,<sp/>argv[i]<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::shouldUseRandomName.set(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/></highlight><highlight class="stringliteral">&quot;-scripts&quot;</highlight><highlight class="normal">,<sp/>argv[i]<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BotsConfig::shouldUseScripts.set(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addToModule(<sp/>PyObject<sp/>*<sp/>pModule,<sp/>T<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pName<sp/>)</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pObj<sp/>=<sp/>Script::getData(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_SetAttrString(<sp/>pModule,<sp/>pName,<sp/>pObj<sp/>);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pObj<sp/>);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MainApp::initScript()</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>PyImportPaths<sp/>paths;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>paths.addResMgrPath(<sp/>EntityDef::Constants::botScriptsPath()<sp/>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>paths.addResMgrPath(<sp/>EntityDef::Constants::serverCommonPath()<sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>Script::init(<sp/>paths,<sp/></highlight><highlight class="stringliteral">&quot;bot&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pModule<sp/>=<sp/>PyImport_AddModule(<sp/></highlight><highlight class="stringliteral">&quot;BigWorld&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pModule)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pBots<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_bots" kindref="compound">PyBots</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>pBots,<sp/></highlight><highlight class="stringliteral">&quot;bots&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pBots<sp/>);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>CallableWatcher::LOCAL_ONLY,<sp/></highlight><highlight class="stringliteral">&quot;EXPOSE_LOCAL_ONLY&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>(uint16)<sp/>TRIANGLE_TERRAIN,<sp/></highlight><highlight class="stringliteral">&quot;TRIANGLE_TERRAIN&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&apos;Space&apos;<sp/>class<sp/>into<sp/>it<sp/>as<sp/>an<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;Space&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;<sp/>PyObject<sp/>*<sp/>&gt;(<sp/>&amp;PySpace::s_type_<sp/>)<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>entity<sp/>descriptions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>entities<sp/>scripts<sp/>anyway<sp/>as<sp/>we<sp/>need<sp/>to<sp/>create<sp/>player<sp/>entities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>logoff<sp/>purpose</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_entity_type_1a8dcd6414a2390bb5758202552c41910f" kindref="member">EntityType::init</ref>(<sp/>BotsConfig::standinEntity()<sp/>))</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;MainApp::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>initialise<sp/>entity<sp/>data.<sp/>Abort!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>Personality::import(</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BWConfig::get(<sp/></highlight><highlight class="stringliteral">&quot;personality&quot;</highlight><highlight class="normal">,<sp/>Personality::DEFAULT_NAME<sp/>).c_str()<sp/>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>personality<sp/>=<sp/>this-&gt;getPersonalityModule();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(personality)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>personality.callMethod(<sp/></highlight><highlight class="stringliteral">&quot;onBotsReady&quot;</highlight><highlight class="normal">,<sp/>ScriptErrorPrint(<sp/></highlight><highlight class="stringliteral">&quot;onBotsReady&quot;</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allowNullMethod<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256];</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>StringBuilder<sp/>builder(<sp/>buffer,<sp/>ARRAY_SIZE(<sp/>buffer<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.append(<sp/></highlight><highlight class="stringliteral">&quot;Welcome<sp/>to<sp/>Bots<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>builder.append(<sp/>appID_<sp/>);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>pPythonServer_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PythonServer(<sp/>builder.string()<sp/>);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>pPythonServer_-&gt;startup(<sp/>mainDispatcher_,<sp/>0,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface_.address().port,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>PyRun_SimpleString(<sp/></highlight><highlight class="stringliteral">&quot;import<sp/>BigWorld&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MainApp::initWatchers()</highlight></codeline>
<codeline lineno="1112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>watcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>BW_REGISTER_WATCHER(<sp/></highlight><highlight class="comment">/*id*/</highlight><highlight class="normal"><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;bots&quot;</highlight><highlight class="normal">,<sp/>this-&gt;pBWMachineD(),<sp/></highlight><highlight class="stringliteral">&quot;bots&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mainDispatcher(),<sp/>interface_.address()<sp/>);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>Watcher<sp/>&amp;<sp/>root<sp/>=<sp/>Watcher::rootWatcher();</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ServerApp::addWatchers(<sp/>root<sp/>);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>root.addChild(<sp/></highlight><highlight class="stringliteral">&quot;command/addBots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_add_bots_callable_watcher" kindref="compound">AddBotsCallableWatcher</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>root.addChild(<sp/></highlight><highlight class="stringliteral">&quot;command/delBots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_del_bots_callable_watcher" kindref="compound">DelBotsCallableWatcher</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;tag&quot;</highlight><highlight class="normal">,<sp/>BotsConfig::tag.getRef()<sp/>);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>root.addChild(<sp/></highlight><highlight class="stringliteral">&quot;command/delTaggedEntities&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_del_tagged_bots_callable_watcher_1acc393f03fe971640a93dc97ae882801c" kindref="member">DelTaggedBotsCallableWatcher</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numBots&quot;</highlight><highlight class="normal">,<sp/>bots_,<sp/>&amp;Bots::size<sp/>);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SequenceWatcher&lt;<sp/>Bots<sp/>&gt;<sp/>BotsWatcher;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>BotsWatcher<sp/>*<sp/>pBotsWatcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BotsWatcher(<sp/>bots_<sp/>);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>pBotsWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SmartPointerDereferenceWatcher&lt;<sp/>ClientAppPtr<sp/>&gt;(</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientApp::pWatcher()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>root.addChild(<sp/></highlight><highlight class="stringliteral">&quot;bots&quot;</highlight><highlight class="normal">,<sp/>pBotsWatcher<sp/>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;pythonServerPort&quot;</highlight><highlight class="normal">,<sp/>*pPythonServer_,<sp/>&amp;PythonServer::port<sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;defaultControllerType&quot;</highlight><highlight class="normal">,<sp/>BotsConfig::controllerType.getRef()<sp/>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MF_ACCESSORS(<sp/>BW::string,<sp/>MainApp,<sp/>controllerType<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;defaultControllerData&quot;</highlight><highlight class="normal">,<sp/>BotsConfig::controllerData.getRef()<sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MF_ACCESSORS(<sp/>BW::string,<sp/>MainApp,<sp/>controllerData<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;defaultStandinEntity&quot;</highlight><highlight class="normal">,<sp/>BotsConfig::standinEntity.getRef()<sp/>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>root.addChild(<sp/></highlight><highlight class="stringliteral">&quot;command/updateMovement&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_update_movement_callable_watcher" kindref="compound">UpdateMovementCallableWatcher</ref>()<sp/>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;sendTimeReportThreshold&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ACCESSORS(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><ref refid="class_main_app" kindref="compound">MainApp</ref>,<sp/>sendTimeReportThreshold<sp/>)<sp/>);<sp/></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;Debug/shouldLogOutOfOrderFilterInputs&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::MovementFilter::s_shouldLogOutOfOrderFilterInputs_<sp/>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MainApp::initLogOnParamsEncoder(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>path<sp/>)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;<sp/>RSAStreamEncoder<sp/>&gt;<sp/>pEncoder(<sp/></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>RSAStreamEncoder(<sp/></highlight><highlight class="comment">/*<sp/>keyIsPrivate<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>DataSectionPtr<sp/>pPublicKey<sp/>=<sp/>BWResource::openSection(<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPublicKey)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>BinaryPtr<sp/>pBinData<sp/>=<sp/>pPublicKey-&gt;asBinary();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>keyString(<sp/>pBinData-&gt;cdata(),<sp/>pBinData-&gt;len()<sp/>);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEncoder-&gt;initFromKeyString(<sp/>keyString<sp/>))</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>pLogOnParamsEncoder_.reset(<sp/>pEncoder.release()<sp/>);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>BigWorld<sp/>script<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="comment">//<sp/>anonymous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*<sp/>addSpaceGeometryMapping(<sp/>ChunkSpaceID<sp/>spaceID,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>MatrixProviderPtr<sp/>pMapper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>path<sp/>)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_main_app" kindref="compound">MainApp</ref><sp/>&amp;<sp/>app<sp/>=<sp/>MainApp::instance();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>app.<ref refid="class_main_app_1a838ecf0ab8f0420270276a1e1d103502" kindref="member">addSpaceGeometryMapping</ref>(<sp/>spaceID,<sp/>pMapper,<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>addSpaceGeometryMapping,<sp/>ARG(<sp/>SpaceID,</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>MatrixProviderPtr,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>END<sp/>))<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>removeSpaceGeometryMapping(<sp/>ChunkSpaceID<sp/>spaceID,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID<sp/>)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_main_app" kindref="compound">MainApp</ref><sp/>&amp;<sp/>app<sp/>=<sp/>MainApp::instance();</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>app.removeSpaceGeometryMapping(<sp/>spaceID,<sp/>entryID<sp/>);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>removeSpaceGeometryMapping,<sp/>ARG(<sp/>SpaceID,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>SpaceEntryID,<sp/>END<sp/>)<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1217"><highlight class="normal">void<sp/>addBots(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>MainApp::instance().addBots(<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>addBots,<sp/>ARG(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>END<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal">void<sp/>addBotsWithName(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>logInfoData<sp/>)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>input<sp/>log<sp/>info.<sp/>it<sp/>should<sp/>be<sp/>a<sp/>list<sp/>of<sp/>tuples<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>name,<sp/>password<sp/>and<sp/>optional<sp/>client<sp/>context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg:<sp/>[<sp/>(&quot;user1&quot;,<sp/>&quot;pass1&quot;),<sp/>(&quot;user2&quot;,<sp/>&quot;pass2&quot;),<sp/>...<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>MainApp::instance().addBotsWithName(<sp/>logInfoData<sp/>);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Print();</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>addBotsWithName,<sp/>ARG(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>,<sp/>END<sp/>),<sp/></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal">void<sp/>delBots(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>MainApp::instance().delBots(<sp/>count<sp/>);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>delBots,<sp/>ARG(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>END<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal">void<sp/>delTaggedEntities(<sp/><ref refid="namespace_b_w" kindref="compound">BW</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tag<sp/>)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>MainApp::instance().delTaggedEntities(<sp/>tag<sp/>);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>delTaggedEntities,<sp/>ARG(<sp/>BW::string,<sp/>END<sp/>),</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_ACCESSOR(<sp/>N1,<sp/>N2<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1255"><highlight class="preprocessor">BW::string<sp/>getDefault##N2()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1256"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>BotsConfig::N1();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1258"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1259"><highlight class="preprocessor">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>getDefault##N2,<sp/>END,<sp/>BigWorld<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1261"><highlight class="preprocessor">void<sp/>setDefault##N2(<sp/>const<sp/>BW::string<sp/>&amp;<sp/>v<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1262"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BotsConfig::N1.set(<sp/>v<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1264"><highlight class="preprocessor">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1266"><highlight class="preprocessor">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setDefault##N2,<sp/>ARG(<sp/>BW::string,<sp/>END<sp/>),<sp/>BigWorld<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1268"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal">DEFAULT_ACCESSOR(<sp/>serverName,<sp/>Server<sp/>)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">DEFAULT_ACCESSOR(<sp/>username,<sp/>Username<sp/>)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">DEFAULT_ACCESSOR(<sp/>password,<sp/>Password<sp/>)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">DEFAULT_ACCESSOR(<sp/>tag,<sp/>Tag<sp/>)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal">DEFAULT_ACCESSOR(<sp/>controllerType,<sp/>ControllerType<sp/>)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">DEFAULT_ACCESSOR(<sp/>controllerData,<sp/>ControllerData<sp/>)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal">class<sp/>BotAdder<sp/>:<sp/>public<sp/>TimerHandler</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>BotAdder(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>period,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perTick<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_(<sp/>total<sp/>),</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perTick_(<sp/>perTick<sp/>)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_<sp/>=<sp/>MainApp::instance().mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(period<sp/>*<sp/>1000000),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;BotAdder&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~BotAdder()</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_.cancel();</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleTimeout(<sp/>TimerHandle<sp/>handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MainApp::instance().addBots(<sp/>std::min(<sp/>remaining_,<sp/>perTick_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_<sp/>-=<sp/>perTick_;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_.cancel();</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perTick_;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>TimerHandle<sp/>timer_;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addBotsSlowly(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>period,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perTick<sp/>)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BotAdder(<sp/>count,<sp/>period,<sp/>perTick<sp/>);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>addBotsSlowly,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>OPTARG(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>1.f,<sp/>OPTARG(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>1,<sp/>END<sp/>)<sp/>)<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal">static<sp/>PyObject<sp/>*<sp/>py_time(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>BW_GUARD;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyFloat_FromDouble(<sp/>MainApp::instance().localTime()<sp/>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">PY_MODULE_FUNCTION(<sp/>time,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>(anonymous)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.addSpaceGeometryMapping</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>maps<sp/>geometry<sp/>into<sp/>the<sp/>given<sp/>space<sp/>ID.<sp/>There<sp/>can<sp/>be<sp/>only</highlight></codeline>
<codeline lineno="1349"><highlight class="comment"><sp/>*<sp/><sp/>one<sp/>geometry<sp/>mapped<sp/>to<sp/>a<sp/>space.<sp/>It<sp/>cannot<sp/>be<sp/>used<sp/>with<sp/>spaces<sp/>created<sp/>by</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>server<sp/>since<sp/>the<sp/>server<sp/>controls<sp/>the<sp/>geometry<sp/>mappings<sp/>in<sp/>those<sp/>spaces.</highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>given<sp/>transform<sp/>must<sp/>be<sp/>aligned<sp/>to<sp/>the<sp/>chunk<sp/>grid.<sp/>That<sp/>is,<sp/>it<sp/>should</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>a<sp/>translation<sp/>matrix<sp/>whose<sp/>position<sp/>is<sp/>in<sp/>multiples<sp/>of<sp/>the<sp/>space&apos;s<sp/>chunkSize</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/>*<sp/><sp/>on<sp/>the<sp/>X<sp/>and<sp/>Z<sp/>axis.<sp/>Any<sp/>other<sp/>transform<sp/>will<sp/>result<sp/>in<sp/>undefined<sp/>behaviour.<sp/></highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"><sp/>*<sp/><sp/>Any<sp/>extra<sp/>space<sp/>mapped<sp/>in<sp/>must<sp/>use<sp/>the<sp/>same<sp/>terrain<sp/>system<sp/>as<sp/>the<sp/>first,</highlight></codeline>
<codeline lineno="1357"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>same<sp/>settings,<sp/>the<sp/>behaviour<sp/>of<sp/>anything<sp/>else<sp/>is<sp/>undefined.</highlight></codeline>
<codeline lineno="1358"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1359"><highlight class="comment"><sp/>*<sp/><sp/>Raises<sp/>a<sp/>ValueError<sp/>if<sp/>the<sp/>space<sp/>already<sp/>has<sp/>a<sp/>geometry<sp/>mapped.</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>ID<sp/>of<sp/>the<sp/>space</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>matrix<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>transform<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>geometry.<sp/>None<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>passed<sp/>in<sp/>if<sp/>no<sp/>transform<sp/>is<sp/>required<sp/>(the<sp/>identity</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix).</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>filepath<sp/><sp/><sp/><sp/><sp/>The<sp/>path<sp/>to<sp/>the<sp/>directory<sp/>containing<sp/>the<sp/>space<sp/>data</highlight></codeline>
<codeline lineno="1366"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(integer)<sp/>handle<sp/>that<sp/>is<sp/>used<sp/>when<sp/>removing<sp/>mappings</highlight></codeline>
<codeline lineno="1367"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>BigWorld.removeSpaceGeometryMapping().</highlight></codeline>
<codeline lineno="1368"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.removeSpaceGeometryMapping</highlight></codeline>
<codeline lineno="1370"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1372"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>removes<sp/>mapped<sp/>geometry<sp/>for<sp/>the<sp/>given<sp/>space<sp/>ID.</highlight></codeline>
<codeline lineno="1373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1374"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1375"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>ID<sp/>of<sp/>the<sp/>space<sp/>to<sp/>remove<sp/>from</highlight></codeline>
<codeline lineno="1376"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entryID<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>(integer)<sp/>handle<sp/>obtained<sp/>from<sp/></highlight></codeline>
<codeline lineno="1377"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld.addSpaceGeometryMapping</highlight></codeline>
<codeline lineno="1378"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>mapping<sp/>successfully<sp/>removed,<sp/>False<sp/>overwise.</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.addBots</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>immediately<sp/>creates<sp/>a<sp/>specified<sp/>number<sp/>of<sp/>simulated<sp/>clients.<sp/></highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/>*<sp/><sp/>These<sp/>clients<sp/>will<sp/>log<sp/>into<sp/>an<sp/>existing<sp/>BigWorld<sp/>server<sp/>known<sp/>to<sp/>the<sp/></highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/>*<sp/><sp/>Bots<sp/>application.</highlight></codeline>
<codeline lineno="1386"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>num<sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>simulated<sp/>clients<sp/>to<sp/>be<sp/>added.</highlight></codeline>
<codeline lineno="1388"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.addBotsSlowly</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>specified<sp/>number<sp/>of<sp/>simulated<sp/>clients<sp/>(similar<sp/>to<sp/></highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.addBots)<sp/>in<sp/>a<sp/>slower<sp/>and<sp/>controlled<sp/>fashion<sp/>(in<sp/>groups)<sp/>to<sp/></highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/>*<sp/><sp/>prevent<sp/>sudden<sp/>surge<sp/>of<sp/>load<sp/>that<sp/>would<sp/>overwhelm<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>num<sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>simulated<sp/>clients<sp/>to<sp/>be<sp/>added<sp/>(will<sp/>be<sp/>broken<sp/>up<sp/></highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>into<sp/>groups<sp/>of<sp/>size<sp/>groupSize).</highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>delay<sp/><sp/><sp/>a<sp/>delay<sp/>(in<sp/>seconds)<sp/>between<sp/>groups</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>groupSize<sp/><sp/><sp/>group<sp/>size.<sp/>default<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/>*<sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.addBotsSlowly(<sp/>200,<sp/>5,<sp/>20<sp/>)</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>example<sp/>will<sp/>add<sp/>200<sp/>clients<sp/>in<sp/>total<sp/>in<sp/>groups<sp/>of<sp/>20<sp/>with<sp/>5</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/>*<sp/><sp/>seconds<sp/>intervals<sp/>between<sp/>adding<sp/>groups.</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.addBotsWithName</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>number<sp/>of<sp/>simulated<sp/>clients<sp/>with<sp/>specific</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/>*<sp/><sp/>login<sp/>names<sp/>and<sp/>passwords.</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>PyObject<sp/><sp/><sp/><sp/>list<sp/>of<sp/>tuples<sp/>of<sp/>login<sp/>name,<sp/>password<sp/>and<sp/>optional</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client<sp/>context.</highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/>*<sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.addBotsWithName(<sp/>[(&apos;tester01&apos;,<sp/>&apos;tp1&apos;),(&apos;tester02&apos;,<sp/>&apos;tp2&apos;,<sp/>&apos;context2&apos;),(&apos;tester03&apos;,<sp/>&apos;tp3&apos;)]<sp/>)</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.delBots</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>immediately<sp/>removes<sp/>a<sp/>specified<sp/>number<sp/>of<sp/>simulated</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/>*<sp/><sp/>clients<sp/>from<sp/>the<sp/>Bots<sp/>application.<sp/>These<sp/>clients<sp/>will<sp/>be<sp/>logged</highlight></codeline>
<codeline lineno="1428"><highlight class="comment"><sp/>*<sp/><sp/>off<sp/>the<sp/>server<sp/>gracefully.</highlight></codeline>
<codeline lineno="1429"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1430"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>num<sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>simulated<sp/>clients<sp/>to<sp/>be<sp/>removed.</highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.delTaggedEntities</highlight></codeline>
<codeline lineno="1433"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>immediately<sp/>removes<sp/>clients<sp/>that<sp/>match<sp/>a<sp/>specified<sp/>tag.</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/>*<sp/><sp/>These<sp/>clients<sp/>will<sp/>be<sp/>logged<sp/>off<sp/>the<sp/>server<sp/>gracefully.</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>tag<sp/><sp/><sp/><sp/><sp/>String<sp/>tag<sp/>to<sp/>match.</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.setDefaultServer</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>sets<sp/>the<sp/>default<sp/>login<sp/>server<sp/>for<sp/>the<sp/>simulated</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/>*<sp/><sp/>clients.</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>host<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>in<sp/>format<sp/>of<sp/>&apos;host:port&apos;.</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getDefaultServer</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>name<sp/>of<sp/>the<sp/>default<sp/>login<sp/>server<sp/>for<sp/></highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>simulated<sp/>clients.</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>host<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>in<sp/>format<sp/>of<sp/>&apos;host:port&apos;.</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.setDefaultUsername</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1459"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>sets<sp/>the<sp/>default<sp/>login<sp/>user<sp/>name<sp/>for<sp/></highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>simulated<sp/>clients<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>username<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getDefaultUsername</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1467"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>default<sp/>login<sp/>user<sp/>name<sp/>for<sp/></highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>simulated<sp/>clients<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>username<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.setDefaultPassword</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>sets<sp/>the<sp/>default<sp/>login<sp/>password<sp/>for<sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>simulated<sp/>clients<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1478"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>password<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1479"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getDefaultPassword</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>default<sp/>login<sp/>password<sp/>for<sp/></highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>simulated<sp/>clients<sp/>to<sp/>use.</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>password<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.setDefaultTag</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>sets<sp/>the<sp/>default<sp/>tag<sp/>name<sp/>for<sp/>simulated<sp/>clients.</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>tag<sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getDefaultTag</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>default<sp/>tag<sp/>name<sp/>for<sp/>the<sp/>simulated</highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/>*<sp/><sp/>clients.</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1501"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>tag<sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1502"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.setDefaultControllerType</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>sets<sp/>the<sp/>default<sp/>movement<sp/>controller<sp/>to<sp/>be<sp/>used<sp/>by</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>simulated<sp/>clients.<sp/>The<sp/>input<sp/>parameter<sp/>should<sp/>be<sp/>the<sp/>name<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/>*<sp/><sp/>compiled<sp/>shared<sp/>object<sp/>file<sp/>(with<sp/>.so<sp/>extension)<sp/>containing<sp/>a</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/>*<sp/><sp/>movement<sp/>controller,<sp/>residing<sp/>under<sp/>the<sp/>bot-extensions</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/>*<sp/><sp/>subdirectory<sp/>of<sp/>your<sp/>Bots<sp/>installation.<sp/><sp/>Note:<sp/>we<sp/>recommend<sp/>you<sp/>to</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/>*<sp/><sp/>use<sp/>the<sp/>builtin<sp/>default<sp/>movement<sp/>controller<sp/>and<sp/>create<sp/>custom<sp/>data</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>it<sp/>instead<sp/>of<sp/>creating<sp/>your<sp/>own<sp/>movement<sp/>controller.</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>controllerType<sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getDefaultControllerType</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1519"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>default<sp/>movement<sp/>controller<sp/>to</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>used<sp/>by<sp/>the<sp/>simulated<sp/>clients.</highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>controllerType<sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.setDefaultControllerData</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>sets<sp/>the<sp/>default<sp/>data<sp/>file<sp/>used<sp/>by<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/>*<sp/><sp/>default<sp/>movement<sp/>controller.<sp/>The<sp/>input<sp/>parameter<sp/>should<sp/>be<sp/>the</highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/>*<sp/><sp/>relative<sp/>path<sp/>(with<sp/>respect<sp/>to<sp/>the<sp/>BigWorld<sp/>res<sp/>path)<sp/>to<sp/>a<sp/>data</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/>*<sp/><sp/>file.<sp/>Make<sp/>sure<sp/>the<sp/>data<sp/>file<sp/>is<sp/>can<sp/>be<sp/>understood<sp/>by<sp/>your</highlight></codeline>
<codeline lineno="1531"><highlight class="comment"><sp/>*<sp/><sp/>movement<sp/>controller,<sp/>otherwise<sp/>the<sp/>movement<sp/>controller<sp/>may<sp/>cause</highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/>*<sp/><sp/>an<sp/>error<sp/>and<sp/>bring<sp/>down<sp/>the<sp/>Bots<sp/>application.</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>controllerData<sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1535"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getDefaultControllerData</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>default<sp/>movement<sp/>controller<sp/>to</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>used<sp/>by<sp/>the<sp/>simulated<sp/>clients.</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>controllerData<sp/><sp/><sp/><sp/><sp/><sp/>string.</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.time</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1547"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>bots<sp/>process<sp/>time.<sp/>This<sp/>is<sp/>the<sp/>elapsed<sp/>time<sp/>in</highlight></codeline>
<codeline lineno="1548"><highlight class="comment"><sp/>*<sp/><sp/>seconds<sp/>since<sp/>this<sp/>process<sp/>has<sp/>started.</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/>a<sp/>float.<sp/><sp/>The<sp/>time<sp/>since<sp/>start<sp/>up.</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>bots</highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/>*<sp/><sp/>bots<sp/>contains<sp/>a<sp/>list<sp/>of<sp/>all<sp/>simulated<sp/>clients<sp/>currently<sp/>instanced<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"><sp/>*<sp/><sp/>Bots<sp/>application.<sp/><sp/></highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>PyBots</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>TRIANGLE_TERRAIN</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>to<sp/>identify<sp/>terrain<sp/>triangles.</highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>main_app.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/bots/main_app.cpp"/>
  </compounddef>
</doxygen>
