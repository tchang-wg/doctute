<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="log__storage_8cpp" kind="file" language="C++">
    <compoundname>log_storage.cpp</compoundname>
    <includes refid="log__storage_8hpp" local="yes">log_storage.hpp</includes>
    <includes local="yes">network/bwmachined_network.hpp</includes>
    <incdepgraph>
      <node id="19979">
        <label>unary_integer_file.hpp</label>
        <link refid="unary__integer__file_8hpp_source"/>
        <childnode refid="19980" relation="include">
        </childnode>
        <childnode refid="19982" relation="include">
        </childnode>
      </node>
      <node id="19969">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="19961">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="19982">
        <label>stdlib.h</label>
      </node>
      <node id="19973">
        <label>log_time.hpp</label>
        <link refid="log__time_8hpp_source"/>
        <childnode refid="19962" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19967" relation="include">
        </childnode>
        <childnode refid="19974" relation="include">
        </childnode>
      </node>
      <node id="19968">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19967" relation="include">
        </childnode>
      </node>
      <node id="19985">
        <label>network/machine_guard.hpp</label>
      </node>
      <node id="19967">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="19987">
        <label>network/bwmachined_network.hpp</label>
      </node>
      <node id="19954">
        <label>server/config_reader.hpp</label>
      </node>
      <node id="19957">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="19976">
        <label>hostnames.hpp</label>
        <link refid="hostnames_8hpp_source"/>
        <childnode refid="19956" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
      </node>
      <node id="19971">
        <label>network/format_string_handler.hpp</label>
      </node>
      <node id="19986">
        <label>network/watcher_nub.hpp</label>
      </node>
      <node id="19956">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="19975">
        <label>cstdmf/debug_message_source.hpp</label>
      </node>
      <node id="19972">
        <label>log_entry.hpp</label>
        <link refid="log__entry_8hpp_source"/>
        <childnode refid="19973" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19975" relation="include">
        </childnode>
        <childnode refid="19967" relation="include">
        </childnode>
      </node>
      <node id="19952">
        <label>log_storage.hpp</label>
        <link refid="log__storage_8hpp_source"/>
        <childnode refid="19953" relation="include">
        </childnode>
        <childnode refid="19954" relation="include">
        </childnode>
        <childnode refid="19955" relation="include">
        </childnode>
        <childnode refid="19962" relation="include">
        </childnode>
        <childnode refid="19964" relation="include">
        </childnode>
        <childnode refid="19976" relation="include">
        </childnode>
        <childnode refid="19977" relation="include">
        </childnode>
        <childnode refid="19978" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
      </node>
      <node id="19978">
        <label>logger.hpp</label>
        <link refid="logger_8hpp_source"/>
        <childnode refid="19979" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
        <childnode refid="19983" relation="include">
        </childnode>
        <childnode refid="19984" relation="include">
        </childnode>
        <childnode refid="19953" relation="include">
        </childnode>
        <childnode refid="19985" relation="include">
        </childnode>
        <childnode refid="19986" relation="include">
        </childnode>
      </node>
      <node id="19965">
        <label>log_string_interpolator.hpp</label>
        <link refid="log__string__interpolator_8hpp_source"/>
        <childnode refid="19966" relation="include">
        </childnode>
        <childnode refid="19968" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
        <childnode refid="19969" relation="include">
        </childnode>
        <childnode refid="19970" relation="include">
        </childnode>
        <childnode refid="19971" relation="include">
        </childnode>
        <childnode refid="19953" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
      </node>
      <node id="19980">
        <label>text_file_handler.hpp</label>
        <link refid="text__file__handler_8hpp_source"/>
        <childnode refid="19981" relation="include">
        </childnode>
        <childnode refid="19982" relation="include">
        </childnode>
      </node>
      <node id="19977">
        <label>hostnames_validator.hpp</label>
        <link refid="hostnames__validator_8hpp_source"/>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19956" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
        <childnode refid="19976" relation="include">
        </childnode>
      </node>
      <node id="19962">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="19953" relation="include">
        </childnode>
        <childnode refid="19963" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
      </node>
      <node id="19974">
        <label>time.h</label>
      </node>
      <node id="19959">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="19955">
        <label>categories.hpp</label>
        <link refid="categories_8hpp_source"/>
        <childnode refid="19956" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
      </node>
      <node id="19958">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="19959" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
      </node>
      <node id="19963">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="19953">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="19964">
        <label>format_strings.hpp</label>
        <link refid="format__strings_8hpp_source"/>
        <childnode refid="19956" relation="include">
        </childnode>
        <childnode refid="19965" relation="include">
        </childnode>
        <childnode refid="19972" relation="include">
        </childnode>
      </node>
      <node id="19951">
        <label>tools/message_logger/log_storage.cpp</label>
        <link refid="log_storage.cpp"/>
        <childnode refid="19952" relation="include">
        </childnode>
        <childnode refid="19987" relation="include">
        </childnode>
      </node>
      <node id="19966">
        <label>string_offset.hpp</label>
        <link refid="string__offset_8hpp_source"/>
        <childnode refid="19963" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
        <childnode refid="19967" relation="include">
        </childnode>
      </node>
      <node id="19981">
        <label>file_handler.hpp</label>
        <link refid="file__handler_8hpp_source"/>
        <childnode refid="19963" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
      </node>
      <node id="19960">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="19984">
        <label>network/event_dispatcher.hpp</label>
      </node>
      <node id="19970">
        <label>network/file_stream.hpp</label>
      </node>
      <node id="19983">
        <label>cstdmf/timer_handler.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e">BW_BEGIN_NAMESPACE</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;log_storage.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bwmachined_network.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="comment">//<sp/>anonymous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageLogger::NetworkVersion<sp/>OLDEST_VERSION_WITHOUT_SOURCE_ENUM<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="class_log_storage_1a52d61df7f346353bdee03e762c8b68ee" kindref="member">LogStorage::LogStorage</ref>(<sp/><ref refid="class_logger" kindref="compound">Logger</ref><sp/>&amp;<sp/>logger<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>writeToStdout_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>logger_(<sp/>logger<sp/>)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">LogStorage::~LogStorage()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStorage::writeToStdout(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>writeToStdout_<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">class<sp/></highlight><highlight class="normal">UsernameHandler<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MachineGuardMessage::ReplyHandler</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~UsernameHandler()<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onUserMessage(<sp/>UserMessage<sp/>&amp;<sp/>userMessage,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageLogger::IPAddress<sp/></highlight><highlight class="comment">/*addr*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userMessage.uid_<sp/>!=<sp/>UserMessage::UID_NOT_FOUND)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>username_<sp/>=<sp/>userMessage.username_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>username_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">AddLogMessageResult<sp/><ref refid="class_log_storage_1af66ef56c2b42c6f3068ee6ac65768501" kindref="member">LogStorage::addLogMessage</ref>(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LoggerComponentMessage<sp/>&amp;<sp/>componentMessage,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>address,<sp/>MemoryIStream<sp/>&amp;<sp/>inputStream<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>off<sp/>the<sp/>header<sp/>and<sp/>the<sp/>format<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>LoggerMessageHeader<sp/>header;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>format;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>inputStream.remainingLength();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>message<sp/>has<sp/>been<sp/>passed<sp/>through<sp/>to<sp/>this<sp/>point,<sp/>it<sp/>has<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>been<sp/>through<sp/>the<sp/>OLDEST_SUPPORTED_MESSAGE_LOGGER_VERSION<sp/>check<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>logger.cpp,<sp/>so<sp/>for<sp/>the<sp/>time<sp/>being<sp/>read<sp/>off<sp/>the<sp/>old<sp/>2<sp/>element<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>fill<sp/>in<sp/>the<sp/>DebugMessageSource<sp/>and<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(componentMessage.version_<sp/>&lt;=<sp/>OLDEST_VERSION_WITHOUT_SOURCE_ENUM)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.messageSource_<sp/>=<sp/>MESSAGE_SOURCE_CPP;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputStream<sp/>&gt;&gt;<sp/>header.componentPriority_<sp/>&gt;&gt;<sp/>header.messagePriority_;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.messagePriority_<sp/>==<sp/>DEPRECATED_PRIORITY_SCRIPT)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.messagePriority_<sp/>=<sp/>MESSAGE_PRIORITY_INFO;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.messageSource_<sp/>=<sp/>MESSAGE_SOURCE_SCRIPT;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.read(<sp/>inputStream<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!logger_.shouldLogPriority(<sp/>header.messagePriority_<sp/>))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LOG_ADDITION_IGNORED;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>inputStream<sp/>&gt;&gt;<sp/>format;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputStream.error())</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogStorage::addLogMessage:<sp/>Log<sp/>message<sp/>from<sp/>%s<sp/>was<sp/>too<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;short<sp/>(only<sp/>%d<sp/>bytes)\n&quot;</highlight><highlight class="normal">,<sp/>address.c_str(),<sp/>len<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LOG_ADDITION_FAILED;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>format<sp/>string<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_string_interpolator" kindref="compound">LogStringInterpolator</ref><sp/>*pHandler<sp/>=<sp/>this-&gt;getFormatStrings()-&gt;resolve(<sp/>format<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pHandler<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogStorage::addLogMessage:<sp/>Couldn&apos;t<sp/>add<sp/>format<sp/>string<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mapping.<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>format.c_str()<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LOG_ADDITION_FAILED;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>the<sp/>IP<sp/>address<sp/>-&gt;<sp/>Hostname<sp/>mapping<sp/>if<sp/>neccessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>hostname;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>GetHostResult<sp/>result<sp/>=<sp/>this-&gt;getHostnames()-&gt;getHostByAddr(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address.ip,<sp/>hostname<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>BW_GET_HOST_ERROR)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogStorage::addLogMessage:<sp/>Error<sp/>resolving<sp/>host<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address.c_str()<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LOG_ADDITION_FAILED;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>==<sp/>BW_GET_HOST_ADDED)<sp/>&amp;&amp;<sp/>this-&gt;getHostnamesValidator())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>validator<sp/>exists,<sp/>ensure<sp/>any<sp/>newly<sp/>added<sp/>hosts<sp/>are<sp/>propagated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>through<sp/>to<sp/>it<sp/>as<sp/>VALIDATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getHostnamesValidator()-&gt;addValidateHostname(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address.ip,<sp/>hostname,<sp/>BW_HOSTNAME_STATUS_VALIDATED<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageLogger::CategoryID<sp/>categoryID<sp/>=</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCategories()-&gt;resolveOrCreateNameToID(<sp/>header.category_<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(categoryID<sp/>==<sp/>CATEGORY_ID_MAX_VALUE)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upper<sp/>limit<sp/>of<sp/>the<sp/>datatype<sp/>of<sp/>CategoryID<sp/>(65535)<sp/>reached.<sp/>Omit<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>further<sp/>logs<sp/>with<sp/>unique<sp/>categories.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogStorage::addLogMessage:<sp/>CategoryID<sp/>has<sp/>reached<sp/>max<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;value.<sp/>Log<sp/>message<sp/>with<sp/>new<sp/>unique<sp/>category<sp/>omitted.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LOG_ADDITION_FAILED;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;writeLogToDB(<sp/>componentMessage,<sp/>address,<sp/>inputStream,<sp/>header,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHandler,<sp/>categoryID<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">Mercury::Reason<sp/><ref refid="class_log_storage_1a11b5bbf9056e55e773d1e6a7b4c2c9ed" kindref="member">LogStorage::resolveUID</ref>(<sp/>uint16<sp/>uid,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageLogger::IPAddress<sp/>ipAddress,<sp/>BW::string<sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hard<sp/>coded<sp/>a<sp/>case<sp/>for<sp/>UID<sp/>0<sp/>which<sp/>will<sp/>appear<sp/>when<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>users<sp/>haven&apos;t<sp/>specified<sp/>a<sp/>UID.<sp/>This<sp/>should<sp/>default<sp/>to<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uid<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;root&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Mercury::REASON_SUCCESS;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageLogger::IPAddress<sp/>queryIpAddress<sp/>=<sp/>ipAddress;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>UsernameHandler<sp/>handler;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>UserMessage<sp/>um;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>um.uid_<sp/>=<sp/>uid;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>um.param_<sp/>=<sp/>um.PARAM_USE_UID;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Reason<sp/>reason<sp/>=<sp/>logger_.pBWMachineD()-&gt;queryHostWithMessage(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queryIpAddress,<sp/>um,<sp/>&amp;handler<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reason<sp/>!=<sp/>Mercury::REASON_SUCCESS)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogStorage::resolveUID:<sp/>UserMessage<sp/>query<sp/>to<sp/>%s<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UID<sp/>%hu<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(<sp/>(in_addr&amp;)queryIpAddress<sp/>),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid,<sp/>Mercury::reasonToString(<sp/>(Mercury::Reason&amp;)reason<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogStorage::resolveUID:<sp/>Retrying<sp/>UID<sp/>query<sp/>for<sp/>%hu<sp/>as<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;broadcast.\n&quot;</highlight><highlight class="normal">,<sp/>uid<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reason<sp/>=<sp/>logger_.pBWMachineD()-&gt;queryAll(<sp/>um,<sp/>&amp;handler<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>still<sp/>haven&apos;t<sp/>been<sp/>able<sp/>to<sp/>resolve<sp/>after<sp/>trying<sp/>a<sp/>broadcast,<sp/>fail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reason<sp/>!=<sp/>Mercury::REASON_SUCCESS)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reason;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>couldn&apos;t<sp/>resolve<sp/>the<sp/>username,<sp/>just<sp/>use<sp/>his<sp/>UID<sp/>as<sp/>his<sp/>username</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handler.username_.empty())</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogStorage::resolveUID:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>resolve<sp/>UID<sp/>%hu,<sp/>using<sp/>UID<sp/>as<sp/>username\n&quot;</highlight><highlight class="normal">,<sp/>uid<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<sp/>128<sp/>];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_snprintf(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>buf<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;%hu&quot;</highlight><highlight class="normal">,<sp/>uid<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>are<sp/>sure<sp/>the<sp/>resolving<sp/>was<sp/>successful,<sp/>update<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>handler.username_;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reason;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>log_storage.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/log_storage.cpp"/>
  </compounddef>
</doxygen>
