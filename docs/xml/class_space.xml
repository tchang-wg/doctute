<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_space" kind="class" language="C++" prot="public">
    <compoundname>Space</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TimerHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">GeometryMapper</basecompoundref>
    <includes refid="space_8hpp" local="no">space.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_space_1a74b108a910428a340fa6b069ce551673" prot="private" static="no">
        <type>BW::map&lt; Mercury::Address, <ref refid="class_smart_pointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="class_cell_info" kindref="compound">CellInfo</ref> &gt; &gt;</type>
        <definition>typedef BW::map&lt; Mercury::Address, SmartPointer&lt; CellInfo &gt; &gt; Space::CellInfos</definition>
        <argsstring></argsstring>
        <name>CellInfos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="219" column="1" bodyfile="cellapp/space.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_space_1a58b5a16fdbc33ea18354bffa90327299" prot="private" static="no">
        <type>BW::vector&lt; BW::Rect &gt;</type>
        <definition>typedef BW::vector&lt;BW::Rect&gt; Space::LoadableBounds</definition>
        <argsstring></argsstring>
        <name>LoadableBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="165" column="1" bodyfile="cellappmgr/space.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_space_1a4af112ea224e1ad0c1bf935a79b975c9" prot="private" static="no">
        <type>BW::set&lt; <ref refid="class_cell_data" kindref="compound">CellData</ref> * &gt;</type>
        <definition>typedef BW::set&lt; CellData * &gt; Space::CellsToDelete</definition>
        <argsstring></argsstring>
        <name>CellsToDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="170" column="1" bodyfile="cellappmgr/space.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_space_1adcaf97cec1355adf9cb4add6568f0c21" prot="private" static="no" mutable="no">
        <type>SpaceID</type>
        <definition>SpaceID Space::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="252" column="1" bodyfile="cellapp/space.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a4952bbbd893a49a782e4cec1125d6fbe" prot="private" static="no" mutable="no">
        <type>EntityTypeID</type>
        <definition>EntityTypeID Space::typeID_</definition>
        <argsstring></argsstring>
        <name>typeID_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="253" column="1" bodyfile="cellapp/space.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a37e96007d0bd78f3caff93086e97d434" prot="private" static="no" mutable="no">
        <type><ref refid="class_cell" kindref="compound">Cell</ref> *</type>
        <definition>Cell* Space::pCell_</definition>
        <argsstring></argsstring>
        <name>pCell_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="255" column="1" bodyfile="cellapp/space.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1ad464a67861c60ba4d70a59403cbc10be" prot="private" static="no" mutable="no">
        <type><ref refid="class_smart_pointer" kindref="compound">PhysicalSpacePtr</ref></type>
        <definition>PhysicalSpacePtr Space::pPhysicalSpace_</definition>
        <argsstring></argsstring>
        <name>pPhysicalSpace_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="257" column="1" bodyfile="cellapp/space.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1ac86e48f34f925fc7c4ffced44b01b5ad" prot="private" static="no" mutable="no">
        <type>SpaceEntities</type>
        <definition>SpaceEntities Space::entities_</definition>
        <argsstring></argsstring>
        <name>entities_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="259" column="1" bodyfile="cellapp/space.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a7aa6e184c6299d0dc397d3a09aadc784" prot="private" static="no" mutable="no">
        <type>CellInfos</type>
        <definition>CellInfos Space::cellInfos_</definition>
        <argsstring></argsstring>
        <name>cellInfos_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="260" column="1" bodyfile="cellapp/space.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a5e3020a3feb61731ecdefffb9047fa56" prot="private" static="no" mutable="no">
        <type><ref refid="class_range_list" kindref="compound">RangeList</ref></type>
        <definition>RangeList Space::rangeList_</definition>
        <argsstring></argsstring>
        <name>rangeList_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="262" column="1" bodyfile="cellapp/space.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a46c7e54adb0d867d5a746ce82dcad998" prot="private" static="no" mutable="no">
        <type>RangeTriggerList</type>
        <definition>RangeTriggerList Space::appealRadiusList_</definition>
        <argsstring></argsstring>
        <name>appealRadiusList_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="263" column="1" bodyfile="cellapp/space.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1aae7597219a0aba57bef14bbb95dfec62" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string Space::lastMappedGeometry_</definition>
        <argsstring></argsstring>
        <name>lastMappedGeometry_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="265" column="1" bodyfile="cellapp/space.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1aa822ab2a76b5a1853191203e416aba44" prot="private" static="no" mutable="no">
        <type><ref refid="class_space_node" kindref="compound">SpaceNode</ref> *</type>
        <definition>SpaceNode* Space::pCellInfoTree_</definition>
        <argsstring></argsstring>
        <name>pCellInfoTree_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="267" column="1" bodyfile="cellapp/space.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a1f2fe5a86c7d26e4487287447cc8881c" prot="private" static="no" mutable="no">
        <type>TimerHandle</type>
        <definition>TimerHandle Space::shuttingDownTimerHandle_</definition>
        <argsstring></argsstring>
        <name>shuttingDownTimerHandle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="269" column="1" bodyfile="cellapp/space.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a3bc947612bfe3d1307a4385a4e1fd3c2" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Space::artificialMinLoad_</definition>
        <argsstring></argsstring>
        <name>artificialMinLoad_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="271" column="1" bodyfile="cellapp/space.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a08946b8191a4688f4cb575bc83e49b7a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Space::shouldCheckLoadBounds_</definition>
        <argsstring></argsstring>
        <name>shouldCheckLoadBounds_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="272" column="1" bodyfile="cellapp/space.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1af2b91d2a4064fb8bfa3af28e97333f80" prot="private" static="no" mutable="no">
        <type>PySpacePtr</type>
        <definition>PySpacePtr Space::pPySpace_</definition>
        <argsstring></argsstring>
        <name>pPySpace_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="274" column="1" bodyfile="cellapp/space.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1af7938d891db003e2586adce1fa0c004f" prot="private" static="no" mutable="no">
        <type>SpaceDataObjectPtr</type>
        <definition>SpaceDataObjectPtr Space::pSpaceDataObject_</definition>
        <argsstring></argsstring>
        <name>pSpaceDataObject_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="276" column="1" bodyfile="cellapp/space.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a0c46b7cefa336f323f9a8a5073190f47" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string Space::propertyDefinitionsName_</definition>
        <argsstring></argsstring>
        <name>propertyDefinitionsName_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="277" column="1" bodyfile="cellapp/space.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a62c87a9fbf4d9dc0ec24da0fafb16a95" prot="private" static="no" mutable="no">
        <type>std::auto_ptr&lt; SpaceGeometryMappings &gt;</type>
        <definition>std::auto_ptr&lt; SpaceGeometryMappings &gt; Space::pGeometryMappings_</definition>
        <argsstring></argsstring>
        <name>pGeometryMappings_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="279" column="1" bodyfile="cellapp/space.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a3034e0561ca2b5fbe0e49fb4d3fb77c9" prot="private" static="no" mutable="no">
        <type><ref refid="class_event_history" kindref="compound">EventHistory</ref></type>
        <definition>EventHistory Space::geometryMappingEventHistory_</definition>
        <argsstring></argsstring>
        <name>geometryMappingEventHistory_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="280" column="1" bodyfile="cellapp/space.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1af40cc28c60322d7b03e38862e87ad7b1" prot="private" static="no" mutable="no">
        <type>EventNumber</type>
        <definition>EventNumber Space::lastGeometryMappingEventNumber_</definition>
        <argsstring></argsstring>
        <name>lastGeometryMappingEventNumber_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="281" column="1" bodyfile="cellapp/space.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1af4b790bd92dd8a4e85475b35301ed728" prot="private" static="no" mutable="no">
        <type>IPhysicalSpace::BoundsList</type>
        <definition>IPhysicalSpace::BoundsList Space::spaceLoadBounds_</definition>
        <argsstring></argsstring>
        <name>spaceLoadBounds_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="283" column="1" bodyfile="cellapp/space.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a447b3da8e0d1f0c0ed5e92da7ae79bf5" prot="private" static="no" mutable="no">
        <type><ref refid="class_cells" kindref="compound">Cells</ref></type>
        <definition>Cells Space::cells_</definition>
        <argsstring></argsstring>
        <name>cells_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="149" column="1" bodyfile="cellappmgr/space.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1ab6530a7d47931b3ea6e70e7abfeb0436" prot="private" static="no" mutable="no">
        <type><ref refid="class_c_m_1_1_b_s_p_node" kindref="compound">CM::BSPNode</ref> *</type>
        <definition>CM::BSPNode* Space::pRoot_</definition>
        <argsstring></argsstring>
        <name>pRoot_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="151" column="1" bodyfile="cellappmgr/space.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a13aa6fec1768cf725de25dbac7bbcaf4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Space::isBalancing_</definition>
        <argsstring></argsstring>
        <name>isBalancing_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="153" column="1" bodyfile="cellappmgr/space.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a8374661fbb2834982160b79db179c9b5" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 Space::preferredIP_</definition>
        <argsstring></argsstring>
        <name>preferredIP_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="154" column="1" bodyfile="cellappmgr/space.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1aaf5a3189ca8426d8aed2dffbc652cdee" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Space::isFirstCell_</definition>
        <argsstring></argsstring>
        <name>isFirstCell_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="156" column="1" bodyfile="cellappmgr/space.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1ad7633dd8e3e3ecb91f9b8a4cfab2a469" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Space::isFromDB_</definition>
        <argsstring></argsstring>
        <name>isFromDB_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="157" column="1" bodyfile="cellappmgr/space.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a5321aaa85ec5e4c89d7b6f6f45d43207" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Space::hasHadEntities_</definition>
        <argsstring></argsstring>
        <name>hasHadEntities_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="158" column="1" bodyfile="cellappmgr/space.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1adb6572b87bb77ef654d384c1949dce6d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Space::waitForChunkBoundUpdateCount_</definition>
        <argsstring></argsstring>
        <name>waitForChunkBoundUpdateCount_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="161" column="1" bodyfile="cellappmgr/space.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a8b706b6243e08d28a73a60ca31b8c9d4" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Space::spaceGrid_</definition>
        <argsstring></argsstring>
        <name>spaceGrid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="163" column="1" bodyfile="cellappmgr/space.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1afc6807e30ffd6ea1d4a6f3e7cdfc8634" prot="private" static="no" mutable="no">
        <type>BW::Rect</type>
        <definition>BW::Rect Space::spaceBounds_</definition>
        <argsstring></argsstring>
        <name>spaceBounds_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="164" column="1" bodyfile="cellappmgr/space.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a35addad4d19fc40876db355c9623f882" prot="private" static="no" mutable="no">
        <type>LoadableBounds</type>
        <definition>LoadableBounds Space::loadableBounds_</definition>
        <argsstring></argsstring>
        <name>loadableBounds_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="166" column="1" bodyfile="cellappmgr/space.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a34e40cbfcded84ccad9570ac736435d7" prot="private" static="no" mutable="no">
        <type>std::auto_ptr&lt; <ref refid="class_space_data_controller" kindref="compound">SpaceDataController</ref> &gt;</type>
        <definition>std::auto_ptr&lt; SpaceDataController &gt; Space::pSpaceDataController_</definition>
        <argsstring></argsstring>
        <name>pSpaceDataController_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="173" column="1" bodyfile="cellappmgr/space.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a676a8164e1a586377ecdc8e0b0eab1b7" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string Space::spaceDataDef_</definition>
        <argsstring></argsstring>
        <name>spaceDataDef_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="174" column="1" bodyfile="cellappmgr/space.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a5b518409a5088bf9dcc34e0a8d2d9144" prot="private" static="no" mutable="no">
        <type>EventNumber</type>
        <definition>EventNumber Space::lastSpaceDataEventNumber_</definition>
        <argsstring></argsstring>
        <name>lastSpaceDataEventNumber_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="175" column="1" bodyfile="cellappmgr/space.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1a0fad044005ad257a98586ea0b3440e0d" prot="private" static="no" mutable="no">
        <type>EventNumber</type>
        <definition>EventNumber Space::lastSpaceGeometryMappingEventNumber_</definition>
        <argsstring></argsstring>
        <name>lastSpaceGeometryMappingEventNumber_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="177" column="1" bodyfile="cellappmgr/space.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_1af86f4fefa483a48c5d0cea532ab6d1a4" prot="private" static="no" mutable="no">
        <type>MemoryOStream</type>
        <definition>MemoryOStream Space::recordingStream_</definition>
        <argsstring></argsstring>
        <name>recordingStream_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="179" column="1" bodyfile="cellappmgr/space.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_space_1a9d9e0be314326ac5d80de76981575ac0" prot="private" static="yes" mutable="no">
        <type>CellsToDelete</type>
        <definition>Space::CellsToDelete Space::cellsToDelete_</definition>
        <argsstring></argsstring>
        <name>cellsToDelete_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="171" column="1" bodyfile="cellappmgr/space.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_space_1a83ad8439814e00838aa977325fb3a4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE Space::Space</definition>
        <argsstring>(SpaceID id, const BW::StringRef &amp;propertyDefinitionsName, const IContext &amp;context)</argsstring>
        <name>Space</name>
        <param>
          <type>SpaceID</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const BW::StringRef &amp;</type>
          <declname>propertyDefinitionsName</declname>
        </param>
        <param>
          <type>const IContext &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="70" column="1" bodyfile="cellapp/space.cpp" bodystart="67" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a06d440a35bcb4b1554b69e8b18d53705" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Space::~Space</definition>
        <argsstring>()</argsstring>
        <name>~Space</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="72" column="1" bodyfile="cellapp/space.cpp" bodystart="114" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aaef7474c767c724ec134ef2322293138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::reuse</definition>
        <argsstring>()</argsstring>
        <name>reuse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets this space into a state that is appropriate for reuse. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="74" column="1" bodyfile="cellapp/space.cpp" bodystart="160" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a9406672d19af7f46bfa30a85d1164ca2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_cell_info" kindref="compound">CellInfo</ref> *</type>
        <definition>const CellInfo* Space::pCellAt</definition>
        <argsstring>(float x, float z) const </argsstring>
        <name>pCellAt</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a1d652be79e99d68c8fbbeaa53783bffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::visitRect</definition>
        <argsstring>(const BW::Rect &amp;rect, CellInfoVisitor &amp;visitRect)</argsstring>
        <name>visitRect</name>
        <param>
          <type>const BW::Rect &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type><ref refid="class_cell_info_visitor" kindref="compound">CellInfoVisitor</ref> &amp;</type>
          <declname>visitRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7c193a651b5dbea2599f882997c42266" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SpaceID</type>
        <definition>SpaceID Space::id</definition>
        <argsstring>() const </argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="80" column="1" bodyfile="cellapp/space.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aaf1e228077cc2753c76a0b4ead377c5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EntityTypeID</type>
        <definition>EntityTypeID Space::typeID</definition>
        <argsstring>() const </argsstring>
        <name>typeID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="81" column="1" bodyfile="cellapp/space.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1afd284c1be7f26bec4a209c4650218922" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_cell" kindref="compound">Cell</ref> *</type>
        <definition>Cell* Space::pCell</definition>
        <argsstring>() const </argsstring>
        <name>pCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="83" column="1" bodyfile="cellapp/space.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ab2b19c949ab12d43d71bbaacb69cfaa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::pCell</definition>
        <argsstring>(Cell *pCell)</argsstring>
        <name>pCell</name>
        <param>
          <type><ref refid="class_cell" kindref="compound">Cell</ref> *</type>
          <declname>pCell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the cell that controls real entities in this space on this cellapp. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="84" column="1" bodyfile="cellapp/space.cpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a4a64d22bf03b7791013b04512c392fe8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">ChunkSpacePtr</ref></type>
        <definition>ChunkSpacePtr Space::pChunkSpace</definition>
        <argsstring>() const </argsstring>
        <name>pChunkSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ChunkSpace accessor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="86" column="1" bodyfile="cellapp/space.cpp" bodystart="191" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1afdaaec1d44d90f7eb4a1935b4db9b4f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">PhysicalSpacePtr</ref></type>
        <definition>PhysicalSpacePtr Space::pPhysicalSpace</definition>
        <argsstring>() const </argsstring>
        <name>pPhysicalSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="87" column="1" bodyfile="cellapp/space.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a142e78abf53de7eadf45f3e0c4f1d8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Space::onSpaceGeometryLoaded</definition>
        <argsstring>(SpaceID spaceID, const BW::string &amp;name)</argsstring>
        <name>onSpaceGeometryLoaded</name>
        <param>
          <type>SpaceID</type>
          <declname>spaceID</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the when a geometry mapping has been fully loaded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="90" column="1" bodyfile="cellapp/space.cpp" bodystart="206" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a07d10f1bf7de82790ae38607a9332de6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Space::initialPoint</definition>
        <argsstring>(Vector3 &amp;result) const </argsstring>
        <name>initialPoint</name>
        <param>
          <type>Vector3 &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the output argument to the initial point of this <ref refid="class_space" kindref="compound">Space</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to the initial point.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if result is set to the initial point, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="93" column="1" bodyfile="cellapp/space.cpp" bodystart="221" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a3de244c65ba25a764306b13ad340605c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Space::artificialMinLoad</definition>
        <argsstring>() const </argsstring>
        <name>artificialMinLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method return artificial minimal load associated with this space. This may be used in load balancing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="95" column="1" bodyfile="cellapp/space.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a944cbd48768f72398d54542ef65baef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateArtificialMinLoad</definition>
        <argsstring>(float artificialMinLoad, bool notifyMgr=true)</argsstring>
        <name>updateArtificialMinLoad</name>
        <param>
          <type>float</type>
          <declname>artificialMinLoad</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>notifyMgr</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates the artificialMinLoad and notify <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>artificialMinLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>the artificial min load </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notifyMgr</parametername>
</parameternamelist>
<parameterdescription>
<para>true to notify <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>, false otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="96" column="1" bodyfile="cellapp/space.cpp" bodystart="1725" bodyend="1748"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1adc0855be9a91fb082a679a87c5f7f7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateArtificialMinLoad</definition>
        <argsstring>(const CellAppInterface::updateArtificialMinLoadArgs &amp;args)</argsstring>
        <name>updateArtificialMinLoad</name>
        <param>
          <type>const CellAppInterface::updateArtificialMinLoadArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method get the artificialMinLoad change. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="98" column="1" bodyfile="cellapp/space.cpp" bodystart="1754" bodyend="1759"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7926e854fdeb5027878be58746b3d2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::createGhost</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>createGhost</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates a new ghost entity on this cell according to the parameters in &apos;data&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="102" column="1" bodyfile="cellapp/space.cpp" bodystart="246" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ab3f3ca05db0f0bd28496653ee967519f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::createGhost</definition>
        <argsstring>(const EntityID entityID, BinaryIStream &amp;data)</argsstring>
        <name>createGhost</name>
        <param>
          <type>const EntityID</type>
          <declname>entityID</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates a ghost entity in this space. This version of createGhost already has the entity&apos;s id streamed off. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="107" column="1" bodyfile="cellapp/space.cpp" bodystart="291" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aafd9b375583682de71cf685b6f04ffde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::addEntity</definition>
        <argsstring>(Entity *pEntity)</argsstring>
        <name>addEntity</name>
        <param>
          <type><ref refid="class_entity" kindref="compound">Entity</ref> *</type>
          <declname>pEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds an entity to this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="112" column="1" bodyfile="cellapp/space.cpp" bodystart="319" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1af1a12be20ff78c563c2ce2a9d63caf5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::removeEntity</definition>
        <argsstring>(Entity *pEntity)</argsstring>
        <name>removeEntity</name>
        <param>
          <type><ref refid="class_entity" kindref="compound">Entity</ref> *</type>
          <declname>pEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method removes an entity from this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="113" column="1" bodyfile="cellapp/space.cpp" bodystart="333" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aaffe6a33ad510faeed638987a3480fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::visitLargeEntities</definition>
        <argsstring>(float x, float z, RangeTrigger &amp;visitor)</argsstring>
        <name>visitLargeEntities</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method visits all large entities in this space whose Area of Appeal contains the given position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="114" column="1" bodyfile="cellapp/space.cpp" bodystart="364" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ac6ba1d1baa02f0153083db97d67733da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref></type>
        <definition>EntityPtr Space::newEntity</definition>
        <argsstring>(EntityID id, EntityTypeID entityTypeID)</argsstring>
        <name>newEntity</name>
        <param>
          <type>EntityID</type>
          <declname>id</declname>
        </param>
        <param>
          <type>EntityTypeID</type>
          <declname>entityTypeID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a new entity. It may be the case that the entity returned is a re-initialised entity still in our population. This is possible that it could be if it was removed (via teleport or a ghost removed and added quickly, for example) and is now being re-added before it has been removed from everyone&apos;s AoI. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="116" column="1" bodyfile="cellapp/space.cpp" bodystart="541" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aa15aab97c13dc51d7b475303e3a815bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_entity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * Space::findNearestEntity</definition>
        <argsstring>(const Vector3 &amp;position)</argsstring>
        <name>findNearestEntity</name>
        <param>
          <type>const Vector3 &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method find the entity nearest to the given point. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="118" column="1" bodyfile="cellapp/space.cpp" bodystart="589" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7e2fba63fe194fce2154f3b25cd2c46c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const SpaceDataObjectPtr &amp;</type>
        <definition>const SpaceDataObjectPtr&amp; Space::pSpaceDataObject</definition>
        <argsstring>() const </argsstring>
        <name>pSpaceDataObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="123" column="1" bodyfile="cellapp/space.hpp" bodystart="123" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1af5945e983b45d0db9f680645064fc8c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SpaceDataObjectPtr &amp;</type>
        <definition>SpaceDataObjectPtr&amp; Space::pSpaceDataObject</definition>
        <argsstring>()</argsstring>
        <name>pSpaceDataObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="125" column="1" bodyfile="cellapp/space.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a714ac5b46feedf22957c8b65526e236e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const PySpacePtr &amp;</type>
        <definition>const PySpacePtr&amp; Space::pPySpace</definition>
        <argsstring>() const </argsstring>
        <name>pPySpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="126" column="1" bodyfile="cellapp/space.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a0f833dd0d204153086374761f8c85c98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PySpacePtr &amp;</type>
        <definition>PySpacePtr&amp; Space::pPySpace</definition>
        <argsstring>()</argsstring>
        <name>pPySpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="127" column="1" bodyfile="cellapp/space.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1acebe795bdc633e28ac50d498bde3bd33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; Space::propertyDefinitionsName</definition>
        <argsstring>() const </argsstring>
        <name>propertyDefinitionsName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="129" column="1" bodyfile="cellapp/space.hpp" bodystart="129" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ada1c5740ccdc27b161fde7d7182b3cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateProperty</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>updateProperty</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message handler for when another cellapp is telling us about some space data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="131" column="1" bodyfile="cellapp/space.cpp" bodystart="660" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1abff3865ea3b56808710f94f1e14e14d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::readAllProperties</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>readAllProperties</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method read the all space properties when a new <ref refid="class_cell_app" kindref="compound">CellApp</ref> startup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="132" column="1" bodyfile="cellapp/space.cpp" bodystart="979" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a4b7755cf81f98fd99227a6cc4a486d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::syncAllProperties</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>syncAllProperties</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message handler for <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> sync request for space data after its recovery. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="133" column="1" bodyfile="cellapp/space.cpp" bodystart="992" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a47df9944f1c2270d348a66c44318eaeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const SpaceGeometryMappings *</type>
        <definition>const SpaceGeometryMappings* Space::pGeometryMappings</definition>
        <argsstring>() const </argsstring>
        <name>pGeometryMappings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="135" column="1" bodyfile="cellapp/space.hpp" bodystart="135" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ac1e20cc3837ef853d119c241ecc0351e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SpaceGeometryMappings *</type>
        <definition>SpaceGeometryMappings* Space::pGeometryMappings</definition>
        <argsstring>()</argsstring>
        <name>pGeometryMappings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="137" column="1" bodyfile="cellapp/space.hpp" bodystart="137" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a271ad20267240920d0ac7804a204cccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::addGeometryMapping</definition>
        <argsstring>(const SpaceEntryID &amp;entryID, const SpaceGeometryMapping &amp;mapping, bool notifyMgr=true)</argsstring>
        <name>addGeometryMapping</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <param>
          <type>const SpaceGeometryMapping &amp;</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>notifyMgr</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function add a geometry mapping. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entryID</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping entryID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping to be added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notifyMgr</parametername>
</parameternamelist>
<parameterdescription>
<para>true to notify <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>, otherwise not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="139" column="1" bodyfile="cellapp/space.cpp" bodystart="823" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a9788d25cca2b04722bcf08ac590cb164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::removeGeometryMapping</definition>
        <argsstring>(const SpaceEntryID &amp;entryID, bool notifyMgr=true)</argsstring>
        <name>removeGeometryMapping</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>notifyMgr</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function remove a geometry mapping. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entryID</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping entryID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notifyMgr</parametername>
</parameternamelist>
<parameterdescription>
<para>true to notify <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>, otherwise not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="141" column="1" bodyfile="cellapp/space.cpp" bodystart="850" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a91c1581e33bd94d780777cdddd6b4cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::addGeometryMapping</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>addGeometryMapping</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message handler for when <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> is telling us to add a geometry mapping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="143" column="1" bodyfile="cellapp/space.cpp" bodystart="755" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ab56b07ecfcc0dd653f5b7b4465d318df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::removeGeometryMapping</definition>
        <argsstring>(const CellAppInterface::removeGeometryMappingArgs &amp;args)</argsstring>
        <name>removeGeometryMapping</name>
        <param>
          <type>const CellAppInterface::removeGeometryMappingArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message handler for when <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> is telling us to remove a geometry mapping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="144" column="1" bodyfile="cellapp/space.cpp" bodystart="790" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ad4a9d3eef2098cbee6957695a959a39c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::readAllGeometryMappings</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>readAllGeometryMappings</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method read the all space geometry mappings when a new <ref refid="class_cell_app" kindref="compound">CellApp</ref> startup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="146" column="1" bodyfile="cellapp/space.cpp" bodystart="1022" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a9bf631736ed3b109186fc83e914ee8a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_event_history" kindref="compound">EventHistory</ref> &amp;</type>
        <definition>EventHistory&amp; Space::geometryMappingEventHistory</definition>
        <argsstring>()</argsstring>
        <name>geometryMappingEventHistory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="147" column="1" bodyfile="cellapp/space.hpp" bodystart="147" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ae06c19e5475f685ef89f775e195e8a88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_event_history" kindref="compound">EventHistory</ref> &amp;</type>
        <definition>const EventHistory&amp; Space::geometryMappingEventHistory</definition>
        <argsstring>() const </argsstring>
        <name>geometryMappingEventHistory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="149" column="1" bodyfile="cellapp/space.hpp" bodystart="149" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ad622e7d5c8c3e06b60bbfce0a268973f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeClientGeometryMappingsUpdate</definition>
        <argsstring>(Mercury::Bundle &amp;bundle, EventNumber &amp;eventNumber)</argsstring>
        <name>writeClientGeometryMappingsUpdate</name>
        <param>
          <type>Mercury::Bundle &amp;</type>
          <declname>bundle</declname>
        </param>
        <param>
          <type>EventNumber &amp;</type>
          <declname>eventNumber</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add geometry mapping event histories. This method is called by witness. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eventNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping event number, all the changes later than this eventNumber will be written to the stream, and update eventNumber to the latest. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="151" column="1" bodyfile="cellapp/space.cpp" bodystart="674" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a34ede408e87a6e82d785ca72578c1aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::trimGeometryMappingEventHistory</definition>
        <argsstring>()</argsstring>
        <name>trimGeometryMappingEventHistory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Trim the geometry mapping event history. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="153" column="1" bodyfile="cellapp/space.cpp" bodystart="745" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a5965a53e64248a9d07e82de393cf4348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::syncAllGeometryMappings</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>syncAllGeometryMappings</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message handler for <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> sync request for geometry mappings after its recovery. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="154" column="1" bodyfile="cellapp/space.cpp" bodystart="1042" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aaf1bd1aa1d569f38b48d09ac01506264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateGeometry</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>updateGeometry</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message from the server that updates geometry information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="156" column="1" bodyfile="cellapp/space.cpp" bodystart="1219" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a98c14d92ea7b6da5178f01bf2a795a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::spaceGeometryLoaded</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>spaceGeometryLoaded</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message from the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> telling us that all the cells in this newly created space have loaded all the chunks that they need. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="158" column="1" bodyfile="cellapp/space.cpp" bodystart="1327" bodyend="1344"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aac0115ffe04c82cce6b6fc28da8b64ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Space::setLastMappedGeometry</definition>
        <argsstring>(const BW::string &amp;lastMappedGeometry)</argsstring>
        <name>setLastMappedGeometry</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>lastMappedGeometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is used to set the lastMappedGeometry_ of this space. Used during recovery only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="160" column="1" bodyfile="cellapp/space.hpp" bodystart="160" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a498280b82abd01c339a484eb42393578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::recordPropertyChange</definition>
        <argsstring>(int propertyIndex)</argsstring>
        <name>recordPropertyChange</name>
        <param>
          <type>int</type>
          <declname>propertyIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method records the space property change. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="163" column="1" bodyfile="cellapp/space.cpp" bodystart="1108" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a69bf53e10c29cd9b756f07cf9fee4a1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::notifyStartRecording</definition>
        <argsstring>(const ReplayDataCollector &amp;data) const </argsstring>
        <name>notifyStartRecording</name>
        <param>
          <type>const <ref refid="class_replay_data_collector" kindref="compound">ReplayDataCollector</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method notifies the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> of start recording. It is called after initially starting recording on this space. Do not call cellAppMgr.send() at the end of this function because the explicit send will send the message immediately and the remote <ref refid="class_cell_app" kindref="compound">CellApp</ref> will receive immediately and tick recording, which leads to the remote <ref refid="class_cell_app" kindref="compound">CellApp</ref> recording tick first in the recorded file which will be an invalid record file because the space creation will not be in the first tick. Use implicit send here to let the notification happens in the next tick and let the initial <ref refid="class_cell_app" kindref="compound">CellApp</ref> start recording tick first which contains the space creation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="164" column="1" bodyfile="cellapp/space.cpp" bodystart="1130" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a42c7efb270ceb3e36274a0dc7decba33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::notifyStopRecording</definition>
        <argsstring>() const </argsstring>
        <name>notifyStopRecording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method notifies the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> of stop recording. It is called after stopping recording on this space where this recording was initially started. Do not call cellAppMgr.send() at the end of this function to be consistent with the notifyStartRecording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="165" column="1" bodyfile="cellapp/space.cpp" bodystart="1150" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a253e0c5c3fddecc29f860c154bcca01a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::startRecording</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>startRecording</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
          <defname>stream</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles start recording message from <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="166" column="1" bodyfile="cellapp/space.cpp" bodystart="1162" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a9ea8464b73811ef212f43fa19aa50fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::stopRecording</definition>
        <argsstring>()</argsstring>
        <name>stopRecording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles stop recording message from <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="167" column="1" bodyfile="cellapp/space.cpp" bodystart="1176" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::isInRecording</definition>
        <argsstring>() const </argsstring>
        <name>isInRecording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether this space is in recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="168" column="1" bodyfile="cellapp/space.cpp" bodystart="1185" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a5c0ebe18eaa8490b2043a11a0ce232ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::syncRecording</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>syncRecording</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message handler for <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> sync request for recording after its recovery. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="169" column="1" bodyfile="cellapp/space.cpp" bodystart="1195" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a235ad7907aea7f12e47a40c18378ad41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::shutDownSpace</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>shutDownSpace</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message from the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> telling us that the space has been destroyed. It may take some time before all the cells are removed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="171" column="1" bodyfile="cellapp/space.cpp" bodystart="1351" bodyend="1364"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ae2072ae4bb67395e002b83d84d5f7844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::requestShutDown</definition>
        <argsstring>()</argsstring>
        <name>requestShutDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a request to the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> to shut this space down. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="172" column="1" bodyfile="cellapp/space.cpp" bodystart="1457" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a16f6fbe81d9d05cad788bde3976bfec1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_cell_info" kindref="compound">CellInfo</ref> *</type>
        <definition>CellData * Space::findCell</definition>
        <argsstring>(const Mercury::Address &amp;addr) const </argsstring>
        <name>findCell</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This static method returns the <ref refid="class_cell_info" kindref="compound">CellInfo</ref> associated with the input address.</para><para>This method finds a cell corresponding to the input address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="174" column="1" bodyfile="cellapp/space.cpp" bodystart="2232" bodyend="2242"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a1a785d230b104462b562d544bb5d7c38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_space_node" kindref="compound">SpaceNode</ref> *</type>
        <definition>SpaceNode * Space::readTree</definition>
        <argsstring>(BinaryIStream &amp;stream, const BW::Rect &amp;rect)</argsstring>
        <name>readTree</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const BW::Rect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method reads a BSP from the stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="176" column="1" bodyfile="cellapp/space.cpp" bodystart="2180" bodyend="2226"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aac954a3cb2b5563fc59a564a9e00bc2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::onLoadResourceFailed</definition>
        <argsstring>(const SpaceEntryID &amp;entryID)</argsstring>
        <name>onLoadResourceFailed</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called upon resource loading failed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="178" column="1" bodyfile="cellapp/space.cpp" bodystart="2262" bodyend="2265"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a4af44dfcb55b81ac9e5cb126e1fcd4f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_range_list" kindref="compound">RangeList</ref> &amp;</type>
        <definition>const RangeList&amp; Space::rangeList</definition>
        <argsstring>() const </argsstring>
        <name>rangeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="180" column="1" bodyfile="cellapp/space.hpp" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1acb1b2733309c9f354b419d2d699a2e83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const RangeTriggerList &amp;</type>
        <definition>const RangeTriggerList&amp; Space::appealRadiusList</definition>
        <argsstring>() const </argsstring>
        <name>appealRadiusList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="181" column="1" bodyfile="cellapp/space.hpp" bodystart="181" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aa3f636634350495dcdc136dcc82bd08d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::debugRangeList</definition>
        <argsstring>()</argsstring>
        <name>debugRangeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is used for debugging. It dumps out information about the range list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="184" column="1" bodyfile="cellapp/space.cpp" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ace836db0009bafc06a2a9d1bffbae40c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>SpaceEntities &amp;</type>
        <definition>SpaceEntities&amp; Space::spaceEntities</definition>
        <argsstring>()</argsstring>
        <name>spaceEntities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="186" column="1" bodyfile="cellapp/space.hpp" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1abe2be725672a95de5f49d241d7efe126" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const SpaceEntities &amp;</type>
        <definition>const SpaceEntities&amp; Space::spaceEntities</definition>
        <argsstring>() const </argsstring>
        <name>spaceEntities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="187" column="1" bodyfile="cellapp/space.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a8ad84fe0a12d1c5c76622bb65aaf956e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeDataToStream</definition>
        <argsstring>(BinaryOStream &amp;steam) const </argsstring>
        <name>writeDataToStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>steam</declname>
          <defname>stream</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the data associated with this space to the input stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="189" column="1" bodyfile="cellapp/space.cpp" bodystart="1605" bodyend="1648"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ad080615c23c27bc0ab37bdbef71ecf45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::readDataFromStream</definition>
        <argsstring>(BinaryIStream &amp;stream)</argsstring>
        <name>readDataFromStream</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a01387009db3e13c5c94d0be83c4e9da8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeBounds</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>writeBounds</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method streams on various boundaries to inform the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> for the purposes of load balancing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="192" column="1" bodyfile="cellapp/space.cpp" bodystart="1656" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1af92de2a77b1f0d5d7a97f224d88924d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::chunkTick</definition>
        <argsstring>()</argsstring>
        <name>chunkTick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method progresses with loading and/or unloading chunks, to cover the area we serve. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="194" column="1" bodyfile="cellapp/space.cpp" bodystart="1472" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a57278e39c1e541f8d72d79d146710399" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::calcLoadedRect</definition>
        <argsstring>(BW::Rect &amp;loadedRect) const </argsstring>
        <name>calcLoadedRect</name>
        <param>
          <type>BW::Rect &amp;</type>
          <declname>loadedRect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This private method does the best it can to determine an axis-aligned rectangle that has been loaded. If there is no geometry mapped into the space, then a very big rectangle is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="195" column="1" bodyfile="cellapp/space.cpp" bodystart="1553" bodyend="1556"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a76b52528d21e198685ff02c684214406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::prepareNewlyLoadedChunksForDelete</definition>
        <argsstring>()</argsstring>
        <name>prepareNewlyLoadedChunksForDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function goes through any chunks that were submitted to the loading thread and prepares them for deletion if the loading thread has finished loading them. Also changes the loading flag to false for those that were submitted but not loaded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="196" column="1" bodyfile="cellapp/space.cpp" bodystart="1542" bodyend="1545"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a9c28193d5d8423c6e57a63058d7acee0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::isFullyUnloaded</definition>
        <argsstring>() const </argsstring>
        <name>isFullyUnloaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether or not the space is fully unloaded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="198" column="1" bodyfile="cellapp/space.cpp" bodystart="1562" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a9374d64a22ebb95d7935d42cb7eb645a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::isShuttingDown</definition>
        <argsstring>() const </argsstring>
        <name>isShuttingDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="200" column="1" bodyfile="cellapp/space.hpp" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aef4e1aba87c45238f4350cdb04fdfe23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeRecoveryData</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>writeRecoveryData</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes data that is to be sent </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="202" column="1" bodyfile="cellapp/space.cpp" bodystart="1586" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1afbe39c9e4b343cf6766207961e9e8a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::setPendingCellDelete</definition>
        <argsstring>(const Mercury::Address &amp;addr)</argsstring>
        <name>setPendingCellDelete</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called prior to a cell being deleted. This cell is then marked. Ghost entities should no longer be created on that cell. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="204" column="1" bodyfile="cellapp/space.cpp" bodystart="2249" bodyend="2256"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a3e3d77a69974c935401dfb319a2b4ee9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Space::numEntities</definition>
        <argsstring>() const </argsstring>
        <name>numEntities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="206" column="1" bodyfile="cellapp/space.hpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a00e2feebbe27d6e30a91757f55c473c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Space::numCells</definition>
        <argsstring>() const </argsstring>
        <name>numCells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="208" column="1" bodyfile="cellapp/space.hpp" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a48d370784a2213d793668674d10fb5ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Space::onNewGeometryMapping</definition>
        <argsstring>()</argsstring>
        <name>onNewGeometryMapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when new geometry mapping is read </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="213" column="1" bodyfile="cellapp/space.hpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a8950c24b243e08994042a836aad34e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Space::Space</definition>
        <argsstring>(SpaceID id, const BW::StringRef &amp;spaceDataDef, bool isNewSpace=true, bool isFromDB=false, uint32 preferredIP=0)</argsstring>
        <name>Space</name>
        <param>
          <type>SpaceID</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const BW::StringRef &amp;</type>
          <declname>spaceDataDef</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isNewSpace</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isFromDB</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>uint32</type>
          <declname>preferredIP</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="31" column="1" bodyfile="cellappmgr/space.cpp" bodystart="123" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a06d440a35bcb4b1554b69e8b18d53705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Space::~Space</definition>
        <argsstring>()</argsstring>
        <name>~Space</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a0332d0bef3a74bcbef274e1fa0cc8e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::shutDown</definition>
        <argsstring>()</argsstring>
        <name>shutDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method shuts down this space and removes it from the system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="35" column="1" bodyfile="cellappmgr/space.cpp" bodystart="163" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7c193a651b5dbea2599f882997c42266" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SpaceID</type>
        <definition>SpaceID Space::id</definition>
        <argsstring>() const </argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="37" column="1" bodyfile="cellappmgr/space.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ae966d51bc44d667a2ecc9a9af860307a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
        <definition>CellData * Space::addCell</definition>
        <argsstring>(CellApp &amp;cellApp, CellData *pCellToSplit=NULL)</argsstring>
        <name>addCell</name>
        <param>
          <type><ref refid="class_cell_app" kindref="compound">CellApp</ref> &amp;</type>
          <declname>cellApp</declname>
        </param>
        <param>
          <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
          <declname>pCellToSplit</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates a cell and adds it to this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="39" column="1" bodyfile="cellappmgr/space.cpp" bodystart="405" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7c3623f9add6eeb55d9420bdf7d66bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
        <definition>CellData * Space::addCell</definition>
        <argsstring>()</argsstring>
        <name>addCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds a new cell to this <ref refid="class_space" kindref="compound">Space</ref>. It chooses an appropriate <ref refid="class_cell_app" kindref="compound">CellApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="40" column="1" bodyfile="cellappmgr/space.cpp" bodystart="490" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a65a8d1ac7ad100f784017d0660ea9409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::addCell</definition>
        <argsstring>(CellData *pCell)</argsstring>
        <name>addCell</name>
        <param>
          <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
          <declname>pCell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called from the <ref refid="class_cell_data" kindref="compound">CellData</ref>&apos;s constructor to add it to the space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="41" column="1" bodyfile="cellappmgr/space.cpp" bodystart="537" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1afba2f8ee5b16e77d4385545d2bd723c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
        <definition>CellData * Space::addCellTo</definition>
        <argsstring>(CellData *pCellToSplit)</argsstring>
        <name>addCellTo</name>
        <param>
          <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
          <declname>pCellToSplit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds a new cell to the tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="42" column="1" bodyfile="cellappmgr/space.cpp" bodystart="510" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a2ba7116ad067072ce23b8f36c20c7a1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::informCellAppsOfGeometry</definition>
        <argsstring>(bool shouldSend)</argsstring>
        <name>informCellAppsOfGeometry</name>
        <param>
          <type>bool</type>
          <declname>shouldSend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="44" column="1" bodyfile="cellappmgr/space.cpp" bodystart="188" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a0365558d41df67821520ed63d6b47066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::recoverCells</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>recoverCells</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method recovers cell information from the input stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="46" column="1" bodyfile="cellappmgr/space.cpp" bodystart="591" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7d530e46de704149c75b2b532feef26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
        <definition>CellData * Space::recoverCell</definition>
        <argsstring>(CellApp &amp;cellApp, const Mercury::Address &amp;addr)</argsstring>
        <name>recoverCell</name>
        <param>
          <type><ref refid="class_cell_app" kindref="compound">CellApp</ref> &amp;</type>
          <declname>cellApp</declname>
          <defname>app</defname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is used when a cell has been recovered. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="47" column="1" bodyfile="cellappmgr/space.cpp" bodystart="616" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a1a6ddc6feb3a66bbbc076d0997535c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::recoverGeometryMappings</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>recoverGeometryMappings</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method recovers the SpaceGeometryMappings from the input stream. If the event number extracted is newer than the existing one, then stream off the data to replace the existing one; Otherwise just consume the data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream used to recover geometry mappings.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data is accepted, otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="49" column="1" bodyfile="cellappmgr/space.cpp" bodystart="649" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a0730ffaffb0079b2bdf4077a0263a534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::recoverLoadBounds</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>recoverLoadBounds</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method recovers the LoadBounds from the input stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream used to recover load bounds.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data is accepted, otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="50" column="1" bodyfile="cellappmgr/space.cpp" bodystart="679" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a44b6a41f4f07bef9a4e0c2e0db417535" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::recoverSpaceData</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>recoverSpaceData</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method recovers the <ref refid="class_space" kindref="compound">Space</ref> Data from the input stream. If the event number extracted is newer than the existing one, then stream off the data to replace the existing one; Otherwise just consume the data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream used to recover space data.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data is accepted, otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="51" column="1" bodyfile="cellappmgr/space.cpp" bodystart="708" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a36bd5bdb3ac648831b7638161c516424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::recoverRecording</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>recoverRecording</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method recovers the <ref refid="class_space" kindref="compound">Space</ref> recording session from the input stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream used to recover recording session.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data is accepted, otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="52" column="1" bodyfile="cellappmgr/space.cpp" bodystart="744" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a44065d8115924152fe14f54e1e65cecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::loadBalance</definition>
        <argsstring>()</argsstring>
        <name>loadBalance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method changes the geometry of cells to balance the load. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="54" column="1" bodyfile="cellappmgr/space.cpp" bodystart="219" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a2067a9ff11b7c73515c26c7bef6a5ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateSpaceMetrics</definition>
        <argsstring>()</argsstring>
        <name>updateSpaceMetrics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs all the non-load balancing logic from <ref refid="class_space_1a44065d8115924152fe14f54e1e65cecb" kindref="member">Space::loadBalance()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="55" column="1" bodyfile="cellappmgr/space.cpp" bodystart="299" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a087e8f414d745b75259ea8ebd342a914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateRanges</definition>
        <argsstring>()</argsstring>
        <name>updateRanges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates the ranges of nodes in the BSP tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="56" column="1" bodyfile="cellappmgr/space.cpp" bodystart="318" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ae8af08ebaeaa08f6211e36560b9925dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
        <definition>CellData * Space::findCell</definition>
        <argsstring>(float x, float z) const </argsstring>
        <name>findCell</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method finds a cell corresponding to the input position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="57" column="1" bodyfile="cellappmgr/space.cpp" bodystart="387" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ab9dea0d96f805e010b26e2bb2823ebd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
        <definition>CellData* Space::findCell</definition>
        <argsstring>(const Mercury::Address &amp;addr) const </argsstring>
        <name>findCell</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a5bc5ce69cd422c09eb4bbd0e2f64e326" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::addToStream</definition>
        <argsstring>(BinaryOStream &amp;stream, bool isForViewer=false) const </argsstring>
        <name>addToStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isForViewer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds this space to the input stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream to add the space to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isForViewer</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the stream is being sent to <ref refid="class_cell_apps" kindref="compound">CellApps</ref> or to SpaceViewer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="60" column="1" bodyfile="cellappmgr/space.cpp" bodystart="346" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a0be7f949084a59a4016c3e1435fba0b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::addGeometryMappingsToStream</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>addGeometryMappingsToStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds all the geometry mappings in this space to the stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream to add the geometry mapping data to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="62" column="1" bodyfile="cellappmgr/space.cpp" bodystart="365" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ae823a95e891c785ac60ed367d3abf9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::shouldOffload</definition>
        <argsstring>(bool value)</argsstring>
        <name>shouldOffload</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method enables or disables offloading of entities on all cells in this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="64" column="1" bodyfile="cellappmgr/space.cpp" bodystart="899" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a618655910deda2e95fb3a3bd9eab3c8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::isLarge</definition>
        <argsstring>() const </argsstring>
        <name>isLarge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether this space is &quot;large&quot;. This is currently defined as being a space that has multiple cells and at least one of those cells is the only one on its <ref refid="class_cell_app" kindref="compound">CellApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="66" column="1" bodyfile="cellappmgr/space.cpp" bodystart="917" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a90ff76fc2f04a526c67604c4e66bc562" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Space::numCells</definition>
        <argsstring>() const </argsstring>
        <name>numCells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="68" column="1" bodyfile="cellappmgr/space.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a976ccb720633a7842e70f98ab0e69068" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_cells" kindref="compound">Cells</ref> &amp;</type>
        <definition>const Cells&amp; Space::cells</definition>
        <argsstring>() const </argsstring>
        <name>cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="70" column="1" bodyfile="cellappmgr/space.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a18b5a03d33e2e981416345355509a49e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::eraseCell</definition>
        <argsstring>(CellData *pCell, bool notifyCellApps=false)</argsstring>
        <name>eraseCell</name>
        <param>
          <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
          <declname>pCell</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>notifyCellApps</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method removes the input cell from this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="72" column="1" bodyfile="cellappmgr/space.cpp" bodystart="943" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a1d2ff728430334aa80d143bd1239fcd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::sendUpdateProperty</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>sendUpdateProperty</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a space property update message to all the cells that are part of the space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="74" column="1" bodyfile="cellappmgr/space.cpp" bodystart="964" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ac82b22c5b752a86b55088cc79aa6b229" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::syncSpaceData</definition>
        <argsstring>() const </argsstring>
        <name>syncSpaceData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initiates a synchronization to <ref refid="class_cell_apps" kindref="compound">CellApps</ref> for space data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="75" column="1" bodyfile="cellappmgr/space.cpp" bodystart="783" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a96cd7281560994d31527a0c719549dad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeToDB</definition>
        <argsstring>() const </argsstring>
        <name>writeToDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the space data to DB. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="77" column="1" bodyfile="cellappmgr/space.cpp" bodystart="992" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a61e0ae6eb3a15148325c5598360c6f11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeToDBStream</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>writeToDBStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the space data to DB stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="78" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1014" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ade866473f3a998c827d5ed83603c763e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::readFromDBStream</definition>
        <argsstring>(BinaryIStream &amp;stream)</argsstring>
        <name>readFromDBStream</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method reads the space data from DB stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="79" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1048" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aeb71a984f5242e6353bfc2a220535828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::sendAddGeometryMapping</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>sendAddGeometryMapping</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a space geometry mapping update message to all the cells that are part of the space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="81" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1083" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a5db1e9cf73d14b6e2d69a635cdd17f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::sendRemoveGeometryMapping</definition>
        <argsstring>(const SpaceEntryID &amp;entryID)</argsstring>
        <name>sendRemoveGeometryMapping</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a space geometry mapping update message to all the cells that are part of the space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="82" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1118" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7367fdd131bd5d3d15adc3d83540f5a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::syncGeometryMappings</definition>
        <argsstring>() const </argsstring>
        <name>syncGeometryMappings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initiates a synchronization to <ref refid="class_cell_apps" kindref="compound">CellApps</ref> for space geometry mappings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="83" column="1" bodyfile="cellappmgr/space.cpp" bodystart="815" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aca5e6eb9fe3be8574232cd27df74e0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateLoadBounds</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>updateLoadBounds</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates the loadable bounds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="85" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1219" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7a67fe97453ee61e35dd3caa68fe241d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::sendUpdateArtificialMinLoad</definition>
        <argsstring>(float artificialMinLoad)</argsstring>
        <name>sendUpdateArtificialMinLoad</name>
        <param>
          <type>float</type>
          <declname>artificialMinLoad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a space artificialMinLoadChange message to all the cells that are part of the space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="86" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1145" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a5a95e4c8acb292875e2619e3e4de886d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::sendStartRecording</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, BinaryIStream &amp;data)</argsstring>
        <name>sendStartRecording</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a start space recording request to all the cells that are part of the space, except the one specified by srcAddr. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="88" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1166" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a3740a84384fdf9ec41f24d0ee9078cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::sendStopRecording</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr)</argsstring>
        <name>sendStopRecording</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a stop space recording request to all the cells that are part of the space, except the one specified by srcAddr. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="90" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1195" bodyend="1213"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a65bbb3167c77208e5ec59bac11f9d835" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::syncRecording</definition>
        <argsstring>() const </argsstring>
        <name>syncRecording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initiates a synchronization to <ref refid="class_cell_apps" kindref="compound">CellApps</ref> for space recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="91" column="1" bodyfile="cellappmgr/space.cpp" bodystart="843" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ac005fb6ae4a92559e57d0343c1dcab95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Space::preferredIP</definition>
        <argsstring>(uint32 ip)</argsstring>
        <name>preferredIP</name>
        <param>
          <type>uint32</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="93" column="1" bodyfile="cellappmgr/space.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1afe8235567cefa4aa631ff21fd2d2d530" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 Space::preferredIP</definition>
        <argsstring>() const </argsstring>
        <name>preferredIP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="94" column="1" bodyfile="cellappmgr/space.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ad3c8842e5c0debd700a71dd32f0113e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint</type>
        <definition>uint Space::numUniqueIPs</definition>
        <argsstring>() const </argsstring>
        <name>numUniqueIPs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the number of unique IP addresses among the <ref refid="class_cell_apps" kindref="compound">CellApps</ref> that handle cells on this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="96" column="1" bodyfile="cellappmgr/space.cpp" bodystart="547" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ab5525b87491394970fa1ddc56b41af4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Space::numCellAppsOnIP</definition>
        <argsstring>(uint32 ip) const </argsstring>
        <name>numCellAppsOnIP</name>
        <param>
          <type>uint32</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the number of <ref refid="class_cell_apps" kindref="compound">CellApps</ref> in this space on a particular IP address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="98" column="1" bodyfile="cellappmgr/space.cpp" bodystart="572" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a9ba37d0f058effc67f5235880b71acf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::sendToDB</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>sendToDB</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds data to the input stream that will be sent to the database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="100" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1246" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a46314908c0ce36791edc16afb2e2b19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateBounds</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>updateBounds</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates space bounds information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="102" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1257" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1af888736d040d758e9a3230f7e74e2f72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::cellsHaveLoadedMappedGeometry</definition>
        <argsstring>() const </argsstring>
        <name>cellsHaveLoadedMappedGeometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if all cells in this space have loaded their respective geometry. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="104" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1267" bodyend="1274"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a7b4a6e1d24afc82a5b2d543cf74d331d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::checkCellsHaveLoadedMappedGeometry</definition>
        <argsstring>()</argsstring>
        <name>checkCellsHaveLoadedMappedGeometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks whether our cells have finished loading the geometry in their range. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="105" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1281" bodyend="1328"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aac0115ffe04c82cce6b6fc28da8b64ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::setLastMappedGeometry</definition>
        <argsstring>(const BW::string &amp;lastMappedGeometry)</argsstring>
        <name>setLastMappedGeometry</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>lastMappedGeometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a79df5b6f0d995470363ba9796d308fed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::hasLoadedRequiredChunks</definition>
        <argsstring>() const </argsstring>
        <name>hasLoadedRequiredChunks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether this space has loaded the chunks that it needs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="109" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1353" bodyend="1356"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1abf90bcb8c371b8b49882730df8842f7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Space::spaceGrid</definition>
        <argsstring>(const float spaceGrid)</argsstring>
        <name>spaceGrid</name>
        <param>
          <type>const float</type>
          <declname>spaceGrid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="111" column="1" bodyfile="cellappmgr/space.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a19e8e9b8c1188b8addf95fe6f73b3de7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Space::spaceGrid</definition>
        <argsstring>() const </argsstring>
        <name>spaceGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="112" column="1" bodyfile="cellappmgr/space.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a75f7b0178045d6869277ee69d285740e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const BW::Rect &amp;</type>
        <definition>const BW::Rect&amp; Space::spaceBounds</definition>
        <argsstring>() const </argsstring>
        <name>spaceBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="114" column="1" bodyfile="cellappmgr/space.hpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ae9845a09a41d0818cc65829f5f0f0dd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Space::hasHadEntities</definition>
        <argsstring>(bool value)</argsstring>
        <name>hasHadEntities</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="116" column="1" bodyfile="cellappmgr/space.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a2df5e5a7ce0dda198b3f28429bf7a413" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::hasHadEntities</definition>
        <argsstring>() const </argsstring>
        <name>hasHadEntities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="117" column="1" bodyfile="cellappmgr/space.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a1c843e39977a3e3c3cdfa1b387aaeb0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Space::minLoad</definition>
        <argsstring>() const </argsstring>
        <name>minLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the minimum load of all <ref refid="class_cell_apps" kindref="compound">CellApps</ref> handling this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="120" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1444" bodyend="1447"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1abd262776ff52b68d69aa570c77d9e01d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Space::maxLoad</definition>
        <argsstring>() const </argsstring>
        <name>maxLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the maximum load of all <ref refid="class_cell_apps" kindref="compound">CellApps</ref> handling this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="121" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1453" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ab6748cd0b25558bae67ef0c67f7d32b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Space::avgLoad</definition>
        <argsstring>() const </argsstring>
        <name>avgLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the average load of the cells in this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="122" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1462" bodyend="1465"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a3de244c65ba25a764306b13ad340605c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Space::artificialMinLoad</definition>
        <argsstring>() const </argsstring>
        <name>artificialMinLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a74a800b03da3c0e8d7cde15e61e7f1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::artificialMinLoad</definition>
        <argsstring>(float value)</argsstring>
        <name>artificialMinLoad</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method set artificial minimal load associated with this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="125" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1481" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ae2ac29892d39c286018068d796e257df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Space::artificialMinLoadCellShare</definition>
        <argsstring>(float receivedCellLoad) const </argsstring>
        <name>artificialMinLoadCellShare</name>
        <param>
          <type>float</type>
          <declname>receivedCellLoad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a per-cell share of artificial minimal load. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="126" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1490" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a951f3e886cea293be27e793f6afd8b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::debugPrint</definition>
        <argsstring>()</argsstring>
        <name>debugPrint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method prints debug information about the space to the logs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="133" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1561" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a12aca3e081306f327e0e499eb748ce07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::createSpaceDataController</definition>
        <argsstring>()</argsstring>
        <name>createSpaceDataController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates the <ref refid="class_space_data_controller" kindref="compound">SpaceDataController</ref> for this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="135" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1569" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a42062d4e267dec61426da1b2263c857b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Space::areaNotLoaded</definition>
        <argsstring>() const </argsstring>
        <name>areaNotLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the area of the chunks that are not yet loaded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="138" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1426" bodyend="1429"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a252d3985cdc7ee8e8c26b60bf3f3a211" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Space::numRetiringCells</definition>
        <argsstring>() const </argsstring>
        <name>numRetiringCells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the number of cells retiring from this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="139" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1435" bodyend="1438"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_space_1a7b8de0d42c94f14862532957cfcab607" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref></type>
        <definition>WatcherPtr Space::pWatcher</definition>
        <argsstring>()</argsstring>
        <name>pWatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the static Watcher associated with this class.</para><para>This method returns a watcher that can be used to watch <ref refid="class_space" kindref="compound">Space</ref> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="120" column="1" bodyfile="cellapp/space.cpp" bodystart="508" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aeea126431593d3a90b171716c35ca4a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::addCellToDelete</definition>
        <argsstring>(CellData *pCell)</argsstring>
        <name>addCellToDelete</name>
        <param>
          <type><ref refid="class_cell_data" kindref="compound">CellData</ref> *</type>
          <declname>pCell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This static method is used during load balancing. If a cell has been fully removed, it adds itself to a set so that it can be deleted later. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="128" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1367" bodyend="1370"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aa2d49c80b56e81f75062ca270d64ef83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::endRecovery</definition>
        <argsstring>()</argsstring>
        <name>endRecovery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This static method cleans up things after a recovery. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="129" column="1" bodyfile="cellappmgr/space.cpp" bodystart="869" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a06545f0de856ccc4023f5c4eb4c3b6cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref></type>
        <definition>static WatcherPtr Space::pWatcher</definition>
        <argsstring>()</argsstring>
        <name>pWatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="131" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_space_1ad2d8c2bd68b5e106d85c2418030267b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Space::handleTimeout</definition>
        <argsstring>(TimerHandle handle, void *arg)</argsstring>
        <name>handleTimeout</name>
        <param>
          <type>TimerHandle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the timer associated with the space. Currently it is only used for the shutting down timer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="221" column="1" bodyfile="cellapp/space.cpp" bodystart="1371" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aae7033f6b80e9264ac337ad01f6d92f8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeChunkBounds</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>writeChunkBounds</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the chunk bounds to inform the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>. These are used in load balancing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="223" column="1" bodyfile="cellapp/space.cpp" bodystart="1693" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a14551b07a93c6081ff1f88c821fb57cf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeEntityBounds</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>writeEntityBounds</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the entity bounds to inform the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>. These are used in load balancing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="225" column="1" bodyfile="cellapp/space.cpp" bodystart="1677" bodyend="1686"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a55d8d3f3cac26b775bcfcab53711ea05" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::writeEntityBoundsForEdge</definition>
        <argsstring>(BinaryOStream &amp;stream, bool isMax, bool isY) const </argsstring>
        <name>writeEntityBoundsForEdge</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isMax</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method calculates boundary values for the boundaries that contains the real entities of this space at different sizes based on CPU. This is used by load balancing to calculate where to move partitions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream to write the levels to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isMax</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the lower or upper bound should be calculated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isY</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates whether the X or Y/Z bound should be calculated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="226" column="1" bodyfile="cellapp/space.cpp" bodystart="391" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a0f661cd9c4525c0a6f3c355099000450" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::updateLoadBounds</definition>
        <argsstring>()</argsstring>
        <name>updateLoadBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates space data entries with existing loadable bounds information. It deletes the &apos;load bounds&apos; entries for which no loadable bounds exist. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="229" column="1" bodyfile="cellapp/space.cpp" bodystart="1392" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a8a549c4bec2bd846487483227d076079" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::checkForShutDown</definition>
        <argsstring>()</argsstring>
        <name>checkForShutDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks whether we should request for this space to shut down. If we have no entities and we&apos;re the only cell, request a shutdown. We won&apos;t actually be deleted however until we&apos;ve unloaded all our chunks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="230" column="1" bodyfile="cellapp/space.cpp" bodystart="1300" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ad52bf96e40260635f6c2845c9800cf91" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Space::hasSingleCell</definition>
        <argsstring>() const </argsstring>
        <name>hasSingleCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether or not this space contains only one cell. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="232" column="1" bodyfile="cellapp/space.cpp" bodystart="1317" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a25158b05c5de7625a73a774104d7acca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::createSpaceDataObject</definition>
        <argsstring>()</argsstring>
        <name>createSpaceDataObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates the <ref refid="class_space_data_object" kindref="compound">SpaceDataObject</ref> for this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="235" column="1" bodyfile="cellapp/space.cpp" bodystart="604" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a6319740f686f4adfa6c028935a821d30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::destroySpaceDataObject</definition>
        <argsstring>()</argsstring>
        <name>destroySpaceDataObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates the <ref refid="class_space_data_object" kindref="compound">SpaceDataObject</ref> for this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="236" column="1" bodyfile="cellapp/space.cpp" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aed00d9b05792298b8bbf9f536e876884" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::createSpaceGeometryMappings</definition>
        <argsstring>()</argsstring>
        <name>createSpaceGeometryMappings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates the SpaceGeometryMappings for this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="239" column="1" bodyfile="cellapp/space.cpp" bodystart="640" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1af12b40fd3aac2b487bbf7edb2c8b0b65" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::destroySpaceGeometryMappings</definition>
        <argsstring>()</argsstring>
        <name>destroySpaceGeometryMappings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method destroys the SpaceGeometryMappings for this space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="240" column="1" bodyfile="cellapp/space.cpp" bodystart="650" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1adf6c8452317208b2e5aa6e7650e397b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::applyAddedGeometryMapping</definition>
        <argsstring>(const SpaceEntryID &amp;entryID, const SpaceGeometryMapping &amp;mapping)</argsstring>
        <name>applyAddedGeometryMapping</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <param>
          <type>const SpaceGeometryMapping &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function apply the added geometry mapping, including loading resource, triggering callbacks, recording. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entryID</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping entryID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="241" column="1" bodyfile="cellapp/space.cpp" bodystart="921" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aef16c31533829bc0df939c11716f552c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::applyRemovedGeometryMapping</definition>
        <argsstring>(const SpaceEntryID &amp;entryID)</argsstring>
        <name>applyRemovedGeometryMapping</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function apply the removed geometry mapping, including unloading resource, triggering callbacks, recording. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entryID</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping entryID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="243" column="1" bodyfile="cellapp/space.cpp" bodystart="954" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ad53447cc17b85fff2642d5a986438813" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::notifyGeometryMappingAdded</definition>
        <argsstring>(const SpaceEntryID &amp;entryID, const SpaceGeometryMapping &amp;mapping) const </argsstring>
        <name>notifyGeometryMappingAdded</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <param>
          <type>const SpaceGeometryMapping &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function notify <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> of the added geometry mapping. It is used to notify the <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> of geometry mappings so the geometry mapping can be propogated to other cellapps. It should be called after the geometry has been added to the space on this Call cellAppMgr.send() at the end of this function to send the message immediately because loading geometry mapping is asynchronous and time- consuming, the earlier notification, the better. first cellapp <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entryID</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping entryID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="244" column="1" bodyfile="cellapp/space.cpp" bodystart="880" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a371bb61737932d9dc990edb577c2ace6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::notifyGeometryMappingRemoved</definition>
        <argsstring>(const SpaceEntryID &amp;entryID) const </argsstring>
        <name>notifyGeometryMappingRemoved</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function notify <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> of the removed geometry mapping. It is called when a geometry mapping was removed from this space. Call cellAppMgr.send() at the end of this function to be consistent with notifyGeometryMappingAdded. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entryID</parametername>
</parameternamelist>
<parameterdescription>
<para>the geometry mapping entryID </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="246" column="1" bodyfile="cellapp/space.cpp" bodystart="903" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1aad622be8285b831f64f6c71f0acaaa8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::createAddGeometryMappingHistoryEvent</definition>
        <argsstring>(const SpaceEntryID &amp;entryID, const SpaceGeometryMapping &amp;mapping)</argsstring>
        <name>createAddGeometryMappingHistoryEvent</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <param>
          <type>const SpaceGeometryMapping &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a history event for adding geometry mapping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="247" column="1" bodyfile="cellapp/space.cpp" bodystart="772" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1afc06fd8ae330b26e561dda8b58ef24e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Space::createRemoveGeometryMappingHistoryEvent</definition>
        <argsstring>(const SpaceEntryID &amp;entryID)</argsstring>
        <name>createRemoveGeometryMappingHistoryEvent</name>
        <param>
          <type>const SpaceEntryID &amp;</type>
          <declname>entryID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a history event for removing geometry mapping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.hpp" line="249" column="1" bodyfile="cellapp/space.cpp" bodystart="804" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ade1e9916c59ca60b89804b37f8fb9d79" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string Space::geometryMappingAsString</definition>
        <argsstring>() const </argsstring>
        <name>geometryMappingAsString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns only the <emphasis>first</emphasis> geometry mapping name, eg: &quot;spaces/highlands&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="142" column="1" bodyfile="cellappmgr/space.cpp" bodystart="1545" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1a1d42a5f0cbe0a0bcf074bc29c1d86570" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventNumber</type>
        <definition>INLINE EventNumber Space::getSpaceDataNextEventNumber</definition>
        <argsstring>()</argsstring>
        <name>getSpaceDataNextEventNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns and consumes the next event number use for space properties. The last EventNumber counter is incremented. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="144" column="1" bodyfile="cellappmgr/space.ipp" bodystart="14" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_space_1ad1c12e06b145a1f5bdbeaaf41f1bb59b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EventNumber</type>
        <definition>INLINE EventNumber Space::getSpaceGeometryMappingNextEventNumber</definition>
        <argsstring>()</argsstring>
        <name>getSpaceGeometryMappingNextEventNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns and consumes the next event number use for space geometry mappings. The last EventNumber counter is incremented. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/space.hpp" line="146" column="1" bodyfile="cellappmgr/space.ipp" bodystart="28" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is used to represent a space.</para><para>This class is used to manage the different spaces. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2748">
        <label>TimerHandler</label>
      </node>
      <node id="2749">
        <label>GeometryMapper</label>
      </node>
      <node id="2747">
        <label>Space</label>
        <link refid="class_space"/>
        <childnode refid="2748" relation="public-inheritance">
        </childnode>
        <childnode refid="2749" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2751">
        <label>TimerHandler</label>
      </node>
      <node id="2752">
        <label>GeometryMapper</label>
      </node>
      <node id="2750">
        <label>Space</label>
        <link refid="class_space"/>
        <childnode refid="2751" relation="public-inheritance">
        </childnode>
        <childnode refid="2752" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="cellapp/space.hpp" line="68" column="1" bodyfile="cellapp/space.hpp" bodystart="67" bodyend="284"/>
    <listofallmembers>
      <member refid="class_space_1ae966d51bc44d667a2ecc9a9af860307a" prot="public" virt="non-virtual"><scope>Space</scope><name>addCell</name></member>
      <member refid="class_space_1a7c3623f9add6eeb55d9420bdf7d66bb5" prot="public" virt="non-virtual"><scope>Space</scope><name>addCell</name></member>
      <member refid="class_space_1a65a8d1ac7ad100f784017d0660ea9409" prot="public" virt="non-virtual"><scope>Space</scope><name>addCell</name></member>
      <member refid="class_space_1afba2f8ee5b16e77d4385545d2bd723c3" prot="public" virt="non-virtual"><scope>Space</scope><name>addCellTo</name></member>
      <member refid="class_space_1aeea126431593d3a90b171716c35ca4a0" prot="public" virt="non-virtual"><scope>Space</scope><name>addCellToDelete</name></member>
      <member refid="class_space_1aafd9b375583682de71cf685b6f04ffde" prot="public" virt="non-virtual"><scope>Space</scope><name>addEntity</name></member>
      <member refid="class_space_1a271ad20267240920d0ac7804a204cccf" prot="public" virt="non-virtual"><scope>Space</scope><name>addGeometryMapping</name></member>
      <member refid="class_space_1a91c1581e33bd94d780777cdddd6b4cc9" prot="public" virt="non-virtual"><scope>Space</scope><name>addGeometryMapping</name></member>
      <member refid="class_space_1a0be7f949084a59a4016c3e1435fba0b9" prot="public" virt="non-virtual"><scope>Space</scope><name>addGeometryMappingsToStream</name></member>
      <member refid="class_space_1a5bc5ce69cd422c09eb4bbd0e2f64e326" prot="public" virt="non-virtual"><scope>Space</scope><name>addToStream</name></member>
      <member refid="class_space_1acb1b2733309c9f354b419d2d699a2e83" prot="public" virt="non-virtual"><scope>Space</scope><name>appealRadiusList</name></member>
      <member refid="class_space_1a46c7e54adb0d867d5a746ce82dcad998" prot="private" virt="non-virtual"><scope>Space</scope><name>appealRadiusList_</name></member>
      <member refid="class_space_1adf6c8452317208b2e5aa6e7650e397b4" prot="private" virt="non-virtual"><scope>Space</scope><name>applyAddedGeometryMapping</name></member>
      <member refid="class_space_1aef16c31533829bc0df939c11716f552c" prot="private" virt="non-virtual"><scope>Space</scope><name>applyRemovedGeometryMapping</name></member>
      <member refid="class_space_1a42062d4e267dec61426da1b2263c857b" prot="public" virt="non-virtual"><scope>Space</scope><name>areaNotLoaded</name></member>
      <member refid="class_space_1a3de244c65ba25a764306b13ad340605c" prot="public" virt="non-virtual"><scope>Space</scope><name>artificialMinLoad</name></member>
      <member refid="class_space_1a3de244c65ba25a764306b13ad340605c" prot="public" virt="non-virtual"><scope>Space</scope><name>artificialMinLoad</name></member>
      <member refid="class_space_1a74a800b03da3c0e8d7cde15e61e7f1f5" prot="public" virt="non-virtual"><scope>Space</scope><name>artificialMinLoad</name></member>
      <member refid="class_space_1a3bc947612bfe3d1307a4385a4e1fd3c2" prot="private" virt="non-virtual"><scope>Space</scope><name>artificialMinLoad_</name></member>
      <member refid="class_space_1ae2ac29892d39c286018068d796e257df" prot="public" virt="non-virtual"><scope>Space</scope><name>artificialMinLoadCellShare</name></member>
      <member refid="class_space_1ab6748cd0b25558bae67ef0c67f7d32b3" prot="public" virt="non-virtual"><scope>Space</scope><name>avgLoad</name></member>
      <member refid="class_space_1a57278e39c1e541f8d72d79d146710399" prot="public" virt="non-virtual"><scope>Space</scope><name>calcLoadedRect</name></member>
      <member refid="class_space_1a74b108a910428a340fa6b069ce551673" prot="private" virt="non-virtual"><scope>Space</scope><name>CellInfos</name></member>
      <member refid="class_space_1a7aa6e184c6299d0dc397d3a09aadc784" prot="private" virt="non-virtual"><scope>Space</scope><name>cellInfos_</name></member>
      <member refid="class_space_1a976ccb720633a7842e70f98ab0e69068" prot="public" virt="non-virtual"><scope>Space</scope><name>cells</name></member>
      <member refid="class_space_1a447b3da8e0d1f0c0ed5e92da7ae79bf5" prot="private" virt="non-virtual"><scope>Space</scope><name>cells_</name></member>
      <member refid="class_space_1af888736d040d758e9a3230f7e74e2f72" prot="public" virt="non-virtual"><scope>Space</scope><name>cellsHaveLoadedMappedGeometry</name></member>
      <member refid="class_space_1a4af112ea224e1ad0c1bf935a79b975c9" prot="private" virt="non-virtual"><scope>Space</scope><name>CellsToDelete</name></member>
      <member refid="class_space_1a9d9e0be314326ac5d80de76981575ac0" prot="private" virt="non-virtual"><scope>Space</scope><name>cellsToDelete_</name></member>
      <member refid="class_space_1a7b4a6e1d24afc82a5b2d543cf74d331d" prot="public" virt="non-virtual"><scope>Space</scope><name>checkCellsHaveLoadedMappedGeometry</name></member>
      <member refid="class_space_1a8a549c4bec2bd846487483227d076079" prot="private" virt="non-virtual"><scope>Space</scope><name>checkForShutDown</name></member>
      <member refid="class_space_1af92de2a77b1f0d5d7a97f224d88924d4" prot="public" virt="non-virtual"><scope>Space</scope><name>chunkTick</name></member>
      <member refid="class_space_1aad622be8285b831f64f6c71f0acaaa8c" prot="private" virt="non-virtual"><scope>Space</scope><name>createAddGeometryMappingHistoryEvent</name></member>
      <member refid="class_space_1a7926e854fdeb5027878be58746b3d2a7" prot="public" virt="non-virtual"><scope>Space</scope><name>createGhost</name></member>
      <member refid="class_space_1ab3f3ca05db0f0bd28496653ee967519f" prot="public" virt="non-virtual"><scope>Space</scope><name>createGhost</name></member>
      <member refid="class_space_1afc06fd8ae330b26e561dda8b58ef24e8" prot="private" virt="non-virtual"><scope>Space</scope><name>createRemoveGeometryMappingHistoryEvent</name></member>
      <member refid="class_space_1a12aca3e081306f327e0e499eb748ce07" prot="public" virt="non-virtual"><scope>Space</scope><name>createSpaceDataController</name></member>
      <member refid="class_space_1a25158b05c5de7625a73a774104d7acca" prot="private" virt="non-virtual"><scope>Space</scope><name>createSpaceDataObject</name></member>
      <member refid="class_space_1aed00d9b05792298b8bbf9f536e876884" prot="private" virt="non-virtual"><scope>Space</scope><name>createSpaceGeometryMappings</name></member>
      <member refid="class_space_1a951f3e886cea293be27e793f6afd8b4b" prot="public" virt="non-virtual"><scope>Space</scope><name>debugPrint</name></member>
      <member refid="class_space_1aa3f636634350495dcdc136dcc82bd08d" prot="public" virt="non-virtual"><scope>Space</scope><name>debugRangeList</name></member>
      <member refid="class_space_1a6319740f686f4adfa6c028935a821d30" prot="private" virt="non-virtual"><scope>Space</scope><name>destroySpaceDataObject</name></member>
      <member refid="class_space_1af12b40fd3aac2b487bbf7edb2c8b0b65" prot="private" virt="non-virtual"><scope>Space</scope><name>destroySpaceGeometryMappings</name></member>
      <member refid="class_space_1aa2d49c80b56e81f75062ca270d64ef83" prot="public" virt="non-virtual"><scope>Space</scope><name>endRecovery</name></member>
      <member refid="class_space_1ac86e48f34f925fc7c4ffced44b01b5ad" prot="private" virt="non-virtual"><scope>Space</scope><name>entities_</name></member>
      <member refid="class_space_1a18b5a03d33e2e981416345355509a49e" prot="public" virt="non-virtual"><scope>Space</scope><name>eraseCell</name></member>
      <member refid="class_space_1a16f6fbe81d9d05cad788bde3976bfec1" prot="public" virt="non-virtual"><scope>Space</scope><name>findCell</name></member>
      <member refid="class_space_1ae8af08ebaeaa08f6211e36560b9925dc" prot="public" virt="non-virtual"><scope>Space</scope><name>findCell</name></member>
      <member refid="class_space_1ab9dea0d96f805e010b26e2bb2823ebd7" prot="public" virt="non-virtual"><scope>Space</scope><name>findCell</name></member>
      <member refid="class_space_1aa15aab97c13dc51d7b475303e3a815bf" prot="public" virt="non-virtual"><scope>Space</scope><name>findNearestEntity</name></member>
      <member refid="class_space_1ade1e9916c59ca60b89804b37f8fb9d79" prot="private" virt="non-virtual"><scope>Space</scope><name>geometryMappingAsString</name></member>
      <member refid="class_space_1a9bf631736ed3b109186fc83e914ee8a1" prot="public" virt="non-virtual"><scope>Space</scope><name>geometryMappingEventHistory</name></member>
      <member refid="class_space_1ae06c19e5475f685ef89f775e195e8a88" prot="public" virt="non-virtual"><scope>Space</scope><name>geometryMappingEventHistory</name></member>
      <member refid="class_space_1a3034e0561ca2b5fbe0e49fb4d3fb77c9" prot="private" virt="non-virtual"><scope>Space</scope><name>geometryMappingEventHistory_</name></member>
      <member refid="class_space_1a1d42a5f0cbe0a0bcf074bc29c1d86570" prot="private" virt="non-virtual"><scope>Space</scope><name>getSpaceDataNextEventNumber</name></member>
      <member refid="class_space_1ad1c12e06b145a1f5bdbeaaf41f1bb59b" prot="private" virt="non-virtual"><scope>Space</scope><name>getSpaceGeometryMappingNextEventNumber</name></member>
      <member refid="class_space_1ad2d8c2bd68b5e106d85c2418030267b9" prot="private" virt="virtual"><scope>Space</scope><name>handleTimeout</name></member>
      <member refid="class_space_1ae9845a09a41d0818cc65829f5f0f0dd6" prot="public" virt="non-virtual"><scope>Space</scope><name>hasHadEntities</name></member>
      <member refid="class_space_1a2df5e5a7ce0dda198b3f28429bf7a413" prot="public" virt="non-virtual"><scope>Space</scope><name>hasHadEntities</name></member>
      <member refid="class_space_1a5321aaa85ec5e4c89d7b6f6f45d43207" prot="private" virt="non-virtual"><scope>Space</scope><name>hasHadEntities_</name></member>
      <member refid="class_space_1a79df5b6f0d995470363ba9796d308fed" prot="public" virt="non-virtual"><scope>Space</scope><name>hasLoadedRequiredChunks</name></member>
      <member refid="class_space_1ad52bf96e40260635f6c2845c9800cf91" prot="private" virt="non-virtual"><scope>Space</scope><name>hasSingleCell</name></member>
      <member refid="class_space_1a7c193a651b5dbea2599f882997c42266" prot="public" virt="non-virtual"><scope>Space</scope><name>id</name></member>
      <member refid="class_space_1a7c193a651b5dbea2599f882997c42266" prot="public" virt="non-virtual"><scope>Space</scope><name>id</name></member>
      <member refid="class_space_1adcaf97cec1355adf9cb4add6568f0c21" prot="private" virt="non-virtual"><scope>Space</scope><name>id_</name></member>
      <member refid="class_space_1a2ba7116ad067072ce23b8f36c20c7a1d" prot="public" virt="non-virtual"><scope>Space</scope><name>informCellAppsOfGeometry</name></member>
      <member refid="class_space_1a07d10f1bf7de82790ae38607a9332de6" prot="public" virt="virtual"><scope>Space</scope><name>initialPoint</name></member>
      <member refid="class_space_1a13aa6fec1768cf725de25dbac7bbcaf4" prot="private" virt="non-virtual"><scope>Space</scope><name>isBalancing_</name></member>
      <member refid="class_space_1aaf5a3189ca8426d8aed2dffbc652cdee" prot="private" virt="non-virtual"><scope>Space</scope><name>isFirstCell_</name></member>
      <member refid="class_space_1ad7633dd8e3e3ecb91f9b8a4cfab2a469" prot="private" virt="non-virtual"><scope>Space</scope><name>isFromDB_</name></member>
      <member refid="class_space_1a9c28193d5d8423c6e57a63058d7acee0" prot="public" virt="non-virtual"><scope>Space</scope><name>isFullyUnloaded</name></member>
      <member refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" prot="public" virt="non-virtual"><scope>Space</scope><name>isInRecording</name></member>
      <member refid="class_space_1a618655910deda2e95fb3a3bd9eab3c8b" prot="public" virt="non-virtual"><scope>Space</scope><name>isLarge</name></member>
      <member refid="class_space_1a9374d64a22ebb95d7935d42cb7eb645a" prot="public" virt="non-virtual"><scope>Space</scope><name>isShuttingDown</name></member>
      <member refid="class_space_1af40cc28c60322d7b03e38862e87ad7b1" prot="private" virt="non-virtual"><scope>Space</scope><name>lastGeometryMappingEventNumber_</name></member>
      <member refid="class_space_1aae7597219a0aba57bef14bbb95dfec62" prot="private" virt="non-virtual"><scope>Space</scope><name>lastMappedGeometry_</name></member>
      <member refid="class_space_1a5b518409a5088bf9dcc34e0a8d2d9144" prot="private" virt="non-virtual"><scope>Space</scope><name>lastSpaceDataEventNumber_</name></member>
      <member refid="class_space_1a0fad044005ad257a98586ea0b3440e0d" prot="private" virt="non-virtual"><scope>Space</scope><name>lastSpaceGeometryMappingEventNumber_</name></member>
      <member refid="class_space_1a58b5a16fdbc33ea18354bffa90327299" prot="private" virt="non-virtual"><scope>Space</scope><name>LoadableBounds</name></member>
      <member refid="class_space_1a35addad4d19fc40876db355c9623f882" prot="private" virt="non-virtual"><scope>Space</scope><name>loadableBounds_</name></member>
      <member refid="class_space_1a44065d8115924152fe14f54e1e65cecb" prot="public" virt="non-virtual"><scope>Space</scope><name>loadBalance</name></member>
      <member refid="class_space_1abd262776ff52b68d69aa570c77d9e01d" prot="public" virt="non-virtual"><scope>Space</scope><name>maxLoad</name></member>
      <member refid="class_space_1a1c843e39977a3e3c3cdfa1b387aaeb0f" prot="public" virt="non-virtual"><scope>Space</scope><name>minLoad</name></member>
      <member refid="class_space_1ac6ba1d1baa02f0153083db97d67733da" prot="public" virt="non-virtual"><scope>Space</scope><name>newEntity</name></member>
      <member refid="class_space_1ad53447cc17b85fff2642d5a986438813" prot="private" virt="non-virtual"><scope>Space</scope><name>notifyGeometryMappingAdded</name></member>
      <member refid="class_space_1a371bb61737932d9dc990edb577c2ace6" prot="private" virt="non-virtual"><scope>Space</scope><name>notifyGeometryMappingRemoved</name></member>
      <member refid="class_space_1a69bf53e10c29cd9b756f07cf9fee4a1a" prot="public" virt="non-virtual"><scope>Space</scope><name>notifyStartRecording</name></member>
      <member refid="class_space_1a42c7efb270ceb3e36274a0dc7decba33" prot="public" virt="non-virtual"><scope>Space</scope><name>notifyStopRecording</name></member>
      <member refid="class_space_1ab5525b87491394970fa1ddc56b41af4c" prot="public" virt="non-virtual"><scope>Space</scope><name>numCellAppsOnIP</name></member>
      <member refid="class_space_1a00e2feebbe27d6e30a91757f55c473c8" prot="public" virt="non-virtual"><scope>Space</scope><name>numCells</name></member>
      <member refid="class_space_1a90ff76fc2f04a526c67604c4e66bc562" prot="public" virt="non-virtual"><scope>Space</scope><name>numCells</name></member>
      <member refid="class_space_1a3e3d77a69974c935401dfb319a2b4ee9" prot="public" virt="non-virtual"><scope>Space</scope><name>numEntities</name></member>
      <member refid="class_space_1a252d3985cdc7ee8e8c26b60bf3f3a211" prot="public" virt="non-virtual"><scope>Space</scope><name>numRetiringCells</name></member>
      <member refid="class_space_1ad3c8842e5c0debd700a71dd32f0113e8" prot="public" virt="non-virtual"><scope>Space</scope><name>numUniqueIPs</name></member>
      <member refid="class_space_1aac954a3cb2b5563fc59a564a9e00bc2b" prot="public" virt="non-virtual"><scope>Space</scope><name>onLoadResourceFailed</name></member>
      <member refid="class_space_1a48d370784a2213d793668674d10fb5ee" prot="public" virt="non-virtual"><scope>Space</scope><name>onNewGeometryMapping</name></member>
      <member refid="class_space_1a142e78abf53de7eadf45f3e0c4f1d8d8" prot="public" virt="virtual"><scope>Space</scope><name>onSpaceGeometryLoaded</name></member>
      <member refid="class_space_1afd284c1be7f26bec4a209c4650218922" prot="public" virt="non-virtual"><scope>Space</scope><name>pCell</name></member>
      <member refid="class_space_1ab2b19c949ab12d43d71bbaacb69cfaa1" prot="public" virt="non-virtual"><scope>Space</scope><name>pCell</name></member>
      <member refid="class_space_1a37e96007d0bd78f3caff93086e97d434" prot="private" virt="non-virtual"><scope>Space</scope><name>pCell_</name></member>
      <member refid="class_space_1a9406672d19af7f46bfa30a85d1164ca2" prot="public" virt="non-virtual"><scope>Space</scope><name>pCellAt</name></member>
      <member refid="class_space_1aa822ab2a76b5a1853191203e416aba44" prot="private" virt="non-virtual"><scope>Space</scope><name>pCellInfoTree_</name></member>
      <member refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" prot="public" virt="non-virtual"><scope>Space</scope><name>pChunkSpace</name></member>
      <member refid="class_space_1a47df9944f1c2270d348a66c44318eaeb" prot="public" virt="non-virtual"><scope>Space</scope><name>pGeometryMappings</name></member>
      <member refid="class_space_1ac1e20cc3837ef853d119c241ecc0351e" prot="public" virt="non-virtual"><scope>Space</scope><name>pGeometryMappings</name></member>
      <member refid="class_space_1a62c87a9fbf4d9dc0ec24da0fafb16a95" prot="private" virt="non-virtual"><scope>Space</scope><name>pGeometryMappings_</name></member>
      <member refid="class_space_1afdaaec1d44d90f7eb4a1935b4db9b4f8" prot="public" virt="non-virtual"><scope>Space</scope><name>pPhysicalSpace</name></member>
      <member refid="class_space_1ad464a67861c60ba4d70a59403cbc10be" prot="private" virt="non-virtual"><scope>Space</scope><name>pPhysicalSpace_</name></member>
      <member refid="class_space_1a714ac5b46feedf22957c8b65526e236e" prot="public" virt="non-virtual"><scope>Space</scope><name>pPySpace</name></member>
      <member refid="class_space_1a0f833dd0d204153086374761f8c85c98" prot="public" virt="non-virtual"><scope>Space</scope><name>pPySpace</name></member>
      <member refid="class_space_1af2b91d2a4064fb8bfa3af28e97333f80" prot="private" virt="non-virtual"><scope>Space</scope><name>pPySpace_</name></member>
      <member refid="class_space_1ac005fb6ae4a92559e57d0343c1dcab95" prot="public" virt="non-virtual"><scope>Space</scope><name>preferredIP</name></member>
      <member refid="class_space_1afe8235567cefa4aa631ff21fd2d2d530" prot="public" virt="non-virtual"><scope>Space</scope><name>preferredIP</name></member>
      <member refid="class_space_1a8374661fbb2834982160b79db179c9b5" prot="private" virt="non-virtual"><scope>Space</scope><name>preferredIP_</name></member>
      <member refid="class_space_1a76b52528d21e198685ff02c684214406" prot="public" virt="non-virtual"><scope>Space</scope><name>prepareNewlyLoadedChunksForDelete</name></member>
      <member refid="class_space_1ab6530a7d47931b3ea6e70e7abfeb0436" prot="private" virt="non-virtual"><scope>Space</scope><name>pRoot_</name></member>
      <member refid="class_space_1acebe795bdc633e28ac50d498bde3bd33" prot="public" virt="non-virtual"><scope>Space</scope><name>propertyDefinitionsName</name></member>
      <member refid="class_space_1a0c46b7cefa336f323f9a8a5073190f47" prot="private" virt="non-virtual"><scope>Space</scope><name>propertyDefinitionsName_</name></member>
      <member refid="class_space_1a34e40cbfcded84ccad9570ac736435d7" prot="private" virt="non-virtual"><scope>Space</scope><name>pSpaceDataController_</name></member>
      <member refid="class_space_1a7e2fba63fe194fce2154f3b25cd2c46c" prot="public" virt="non-virtual"><scope>Space</scope><name>pSpaceDataObject</name></member>
      <member refid="class_space_1af5945e983b45d0db9f680645064fc8c1" prot="public" virt="non-virtual"><scope>Space</scope><name>pSpaceDataObject</name></member>
      <member refid="class_space_1af7938d891db003e2586adce1fa0c004f" prot="private" virt="non-virtual"><scope>Space</scope><name>pSpaceDataObject_</name></member>
      <member refid="class_space_1a7b8de0d42c94f14862532957cfcab607" prot="public" virt="non-virtual"><scope>Space</scope><name>pWatcher</name></member>
      <member refid="class_space_1a06545f0de856ccc4023f5c4eb4c3b6cc" prot="public" virt="non-virtual"><scope>Space</scope><name>pWatcher</name></member>
      <member refid="class_space_1a4af44dfcb55b81ac9e5cb126e1fcd4f1" prot="public" virt="non-virtual"><scope>Space</scope><name>rangeList</name></member>
      <member refid="class_space_1a5e3020a3feb61731ecdefffb9047fa56" prot="private" virt="non-virtual"><scope>Space</scope><name>rangeList_</name></member>
      <member refid="class_space_1ad4a9d3eef2098cbee6957695a959a39c" prot="public" virt="non-virtual"><scope>Space</scope><name>readAllGeometryMappings</name></member>
      <member refid="class_space_1abff3865ea3b56808710f94f1e14e14d4" prot="public" virt="non-virtual"><scope>Space</scope><name>readAllProperties</name></member>
      <member refid="class_space_1ad080615c23c27bc0ab37bdbef71ecf45" prot="public" virt="non-virtual"><scope>Space</scope><name>readDataFromStream</name></member>
      <member refid="class_space_1ade866473f3a998c827d5ed83603c763e" prot="public" virt="non-virtual"><scope>Space</scope><name>readFromDBStream</name></member>
      <member refid="class_space_1a1a785d230b104462b562d544bb5d7c38" prot="public" virt="non-virtual"><scope>Space</scope><name>readTree</name></member>
      <member refid="class_space_1af86f4fefa483a48c5d0cea532ab6d1a4" prot="private" virt="non-virtual"><scope>Space</scope><name>recordingStream_</name></member>
      <member refid="class_space_1a498280b82abd01c339a484eb42393578" prot="public" virt="non-virtual"><scope>Space</scope><name>recordPropertyChange</name></member>
      <member refid="class_space_1a7d530e46de704149c75b2b532feef26d" prot="public" virt="non-virtual"><scope>Space</scope><name>recoverCell</name></member>
      <member refid="class_space_1a0365558d41df67821520ed63d6b47066" prot="public" virt="non-virtual"><scope>Space</scope><name>recoverCells</name></member>
      <member refid="class_space_1a1a6ddc6feb3a66bbbc076d0997535c0f" prot="public" virt="non-virtual"><scope>Space</scope><name>recoverGeometryMappings</name></member>
      <member refid="class_space_1a0730ffaffb0079b2bdf4077a0263a534" prot="public" virt="non-virtual"><scope>Space</scope><name>recoverLoadBounds</name></member>
      <member refid="class_space_1a36bd5bdb3ac648831b7638161c516424" prot="public" virt="non-virtual"><scope>Space</scope><name>recoverRecording</name></member>
      <member refid="class_space_1a44b6a41f4f07bef9a4e0c2e0db417535" prot="public" virt="non-virtual"><scope>Space</scope><name>recoverSpaceData</name></member>
      <member refid="class_space_1af1a12be20ff78c563c2ce2a9d63caf5b" prot="public" virt="non-virtual"><scope>Space</scope><name>removeEntity</name></member>
      <member refid="class_space_1a9788d25cca2b04722bcf08ac590cb164" prot="public" virt="non-virtual"><scope>Space</scope><name>removeGeometryMapping</name></member>
      <member refid="class_space_1ab56b07ecfcc0dd653f5b7b4465d318df" prot="public" virt="non-virtual"><scope>Space</scope><name>removeGeometryMapping</name></member>
      <member refid="class_space_1ae2072ae4bb67395e002b83d84d5f7844" prot="public" virt="non-virtual"><scope>Space</scope><name>requestShutDown</name></member>
      <member refid="class_space_1aaef7474c767c724ec134ef2322293138" prot="public" virt="non-virtual"><scope>Space</scope><name>reuse</name></member>
      <member refid="class_space_1aeb71a984f5242e6353bfc2a220535828" prot="public" virt="non-virtual"><scope>Space</scope><name>sendAddGeometryMapping</name></member>
      <member refid="class_space_1a5db1e9cf73d14b6e2d69a635cdd17f2c" prot="public" virt="non-virtual"><scope>Space</scope><name>sendRemoveGeometryMapping</name></member>
      <member refid="class_space_1a5a95e4c8acb292875e2619e3e4de886d" prot="public" virt="non-virtual"><scope>Space</scope><name>sendStartRecording</name></member>
      <member refid="class_space_1a3740a84384fdf9ec41f24d0ee9078cbe" prot="public" virt="non-virtual"><scope>Space</scope><name>sendStopRecording</name></member>
      <member refid="class_space_1a9ba37d0f058effc67f5235880b71acf8" prot="public" virt="non-virtual"><scope>Space</scope><name>sendToDB</name></member>
      <member refid="class_space_1a7a67fe97453ee61e35dd3caa68fe241d" prot="public" virt="non-virtual"><scope>Space</scope><name>sendUpdateArtificialMinLoad</name></member>
      <member refid="class_space_1a1d2ff728430334aa80d143bd1239fcd0" prot="public" virt="non-virtual"><scope>Space</scope><name>sendUpdateProperty</name></member>
      <member refid="class_space_1aac0115ffe04c82cce6b6fc28da8b64ca" prot="public" virt="non-virtual"><scope>Space</scope><name>setLastMappedGeometry</name></member>
      <member refid="class_space_1aac0115ffe04c82cce6b6fc28da8b64ca" prot="public" virt="non-virtual"><scope>Space</scope><name>setLastMappedGeometry</name></member>
      <member refid="class_space_1afbe39c9e4b343cf6766207961e9e8a71" prot="public" virt="non-virtual"><scope>Space</scope><name>setPendingCellDelete</name></member>
      <member refid="class_space_1a08946b8191a4688f4cb575bc83e49b7a" prot="private" virt="non-virtual"><scope>Space</scope><name>shouldCheckLoadBounds_</name></member>
      <member refid="class_space_1ae823a95e891c785ac60ed367d3abf9ca" prot="public" virt="non-virtual"><scope>Space</scope><name>shouldOffload</name></member>
      <member refid="class_space_1a0332d0bef3a74bcbef274e1fa0cc8e0f" prot="public" virt="non-virtual"><scope>Space</scope><name>shutDown</name></member>
      <member refid="class_space_1a235ad7907aea7f12e47a40c18378ad41" prot="public" virt="non-virtual"><scope>Space</scope><name>shutDownSpace</name></member>
      <member refid="class_space_1a1f2fe5a86c7d26e4487287447cc8881c" prot="private" virt="non-virtual"><scope>Space</scope><name>shuttingDownTimerHandle_</name></member>
      <member refid="class_space_1a83ad8439814e00838aa977325fb3a4f0" prot="public" virt="non-virtual"><scope>Space</scope><name>Space</name></member>
      <member refid="class_space_1a8950c24b243e08994042a836aad34e4e" prot="public" virt="non-virtual"><scope>Space</scope><name>Space</name></member>
      <member refid="class_space_1a75f7b0178045d6869277ee69d285740e" prot="public" virt="non-virtual"><scope>Space</scope><name>spaceBounds</name></member>
      <member refid="class_space_1afc6807e30ffd6ea1d4a6f3e7cdfc8634" prot="private" virt="non-virtual"><scope>Space</scope><name>spaceBounds_</name></member>
      <member refid="class_space_1a676a8164e1a586377ecdc8e0b0eab1b7" prot="private" virt="non-virtual"><scope>Space</scope><name>spaceDataDef_</name></member>
      <member refid="class_space_1ace836db0009bafc06a2a9d1bffbae40c" prot="public" virt="non-virtual"><scope>Space</scope><name>spaceEntities</name></member>
      <member refid="class_space_1abe2be725672a95de5f49d241d7efe126" prot="public" virt="non-virtual"><scope>Space</scope><name>spaceEntities</name></member>
      <member refid="class_space_1a98c14d92ea7b6da5178f01bf2a795a30" prot="public" virt="non-virtual"><scope>Space</scope><name>spaceGeometryLoaded</name></member>
      <member refid="class_space_1abf90bcb8c371b8b49882730df8842f7a" prot="public" virt="non-virtual"><scope>Space</scope><name>spaceGrid</name></member>
      <member refid="class_space_1a19e8e9b8c1188b8addf95fe6f73b3de7" prot="public" virt="non-virtual"><scope>Space</scope><name>spaceGrid</name></member>
      <member refid="class_space_1a8b706b6243e08d28a73a60ca31b8c9d4" prot="private" virt="non-virtual"><scope>Space</scope><name>spaceGrid_</name></member>
      <member refid="class_space_1af4b790bd92dd8a4e85475b35301ed728" prot="private" virt="non-virtual"><scope>Space</scope><name>spaceLoadBounds_</name></member>
      <member refid="class_space_1a253e0c5c3fddecc29f860c154bcca01a" prot="public" virt="non-virtual"><scope>Space</scope><name>startRecording</name></member>
      <member refid="class_space_1a9ea8464b73811ef212f43fa19aa50fa9" prot="public" virt="non-virtual"><scope>Space</scope><name>stopRecording</name></member>
      <member refid="class_space_1a5965a53e64248a9d07e82de393cf4348" prot="public" virt="non-virtual"><scope>Space</scope><name>syncAllGeometryMappings</name></member>
      <member refid="class_space_1a4b7755cf81f98fd99227a6cc4a486d55" prot="public" virt="non-virtual"><scope>Space</scope><name>syncAllProperties</name></member>
      <member refid="class_space_1a7367fdd131bd5d3d15adc3d83540f5a8" prot="public" virt="non-virtual"><scope>Space</scope><name>syncGeometryMappings</name></member>
      <member refid="class_space_1a5c0ebe18eaa8490b2043a11a0ce232ca" prot="public" virt="non-virtual"><scope>Space</scope><name>syncRecording</name></member>
      <member refid="class_space_1a65bbb3167c77208e5ec59bac11f9d835" prot="public" virt="non-virtual"><scope>Space</scope><name>syncRecording</name></member>
      <member refid="class_space_1ac82b22c5b752a86b55088cc79aa6b229" prot="public" virt="non-virtual"><scope>Space</scope><name>syncSpaceData</name></member>
      <member refid="class_space_1a34ede408e87a6e82d785ca72578c1aa4" prot="public" virt="non-virtual"><scope>Space</scope><name>trimGeometryMappingEventHistory</name></member>
      <member refid="class_space_1aaf1e228077cc2753c76a0b4ead377c5c" prot="public" virt="non-virtual"><scope>Space</scope><name>typeID</name></member>
      <member refid="class_space_1a4952bbbd893a49a782e4cec1125d6fbe" prot="private" virt="non-virtual"><scope>Space</scope><name>typeID_</name></member>
      <member refid="class_space_1a944cbd48768f72398d54542ef65baef1" prot="public" virt="non-virtual"><scope>Space</scope><name>updateArtificialMinLoad</name></member>
      <member refid="class_space_1adc0855be9a91fb082a679a87c5f7f7ba" prot="public" virt="non-virtual"><scope>Space</scope><name>updateArtificialMinLoad</name></member>
      <member refid="class_space_1a46314908c0ce36791edc16afb2e2b19e" prot="public" virt="non-virtual"><scope>Space</scope><name>updateBounds</name></member>
      <member refid="class_space_1aaf1bd1aa1d569f38b48d09ac01506264" prot="public" virt="non-virtual"><scope>Space</scope><name>updateGeometry</name></member>
      <member refid="class_space_1a0f661cd9c4525c0a6f3c355099000450" prot="private" virt="non-virtual"><scope>Space</scope><name>updateLoadBounds</name></member>
      <member refid="class_space_1aca5e6eb9fe3be8574232cd27df74e0b5" prot="public" virt="non-virtual"><scope>Space</scope><name>updateLoadBounds</name></member>
      <member refid="class_space_1ada1c5740ccdc27b161fde7d7182b3cce" prot="public" virt="non-virtual"><scope>Space</scope><name>updateProperty</name></member>
      <member refid="class_space_1a087e8f414d745b75259ea8ebd342a914" prot="public" virt="non-virtual"><scope>Space</scope><name>updateRanges</name></member>
      <member refid="class_space_1a2067a9ff11b7c73515c26c7bef6a5ecf" prot="public" virt="non-virtual"><scope>Space</scope><name>updateSpaceMetrics</name></member>
      <member refid="class_space_1aaffe6a33ad510faeed638987a3480fea" prot="public" virt="non-virtual"><scope>Space</scope><name>visitLargeEntities</name></member>
      <member refid="class_space_1a1d652be79e99d68c8fbbeaa53783bffe" prot="public" virt="non-virtual"><scope>Space</scope><name>visitRect</name></member>
      <member refid="class_space_1adb6572b87bb77ef654d384c1949dce6d" prot="private" virt="non-virtual"><scope>Space</scope><name>waitForChunkBoundUpdateCount_</name></member>
      <member refid="class_space_1a01387009db3e13c5c94d0be83c4e9da8" prot="public" virt="non-virtual"><scope>Space</scope><name>writeBounds</name></member>
      <member refid="class_space_1aae7033f6b80e9264ac337ad01f6d92f8" prot="private" virt="non-virtual"><scope>Space</scope><name>writeChunkBounds</name></member>
      <member refid="class_space_1ad622e7d5c8c3e06b60bbfce0a268973f" prot="public" virt="non-virtual"><scope>Space</scope><name>writeClientGeometryMappingsUpdate</name></member>
      <member refid="class_space_1a8ad84fe0a12d1c5c76622bb65aaf956e" prot="public" virt="non-virtual"><scope>Space</scope><name>writeDataToStream</name></member>
      <member refid="class_space_1a14551b07a93c6081ff1f88c821fb57cf" prot="private" virt="non-virtual"><scope>Space</scope><name>writeEntityBounds</name></member>
      <member refid="class_space_1a55d8d3f3cac26b775bcfcab53711ea05" prot="private" virt="non-virtual"><scope>Space</scope><name>writeEntityBoundsForEdge</name></member>
      <member refid="class_space_1aef4e1aba87c45238f4350cdb04fdfe23" prot="public" virt="non-virtual"><scope>Space</scope><name>writeRecoveryData</name></member>
      <member refid="class_space_1a96cd7281560994d31527a0c719549dad" prot="public" virt="non-virtual"><scope>Space</scope><name>writeToDB</name></member>
      <member refid="class_space_1a61e0ae6eb3a15148325c5598360c6f11" prot="public" virt="non-virtual"><scope>Space</scope><name>writeToDBStream</name></member>
      <member refid="class_space_1a06d440a35bcb4b1554b69e8b18d53705" prot="public" virt="virtual"><scope>Space</scope><name>~Space</name></member>
      <member refid="class_space_1a06d440a35bcb4b1554b69e8b18d53705" prot="public" virt="non-virtual"><scope>Space</scope><name>~Space</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
