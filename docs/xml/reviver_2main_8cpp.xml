<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="reviver_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes refid="reviver_8hpp" local="yes">reviver.hpp</includes>
    <includes refid="reviver__config_8hpp" local="yes">reviver_config.hpp</includes>
    <includes local="yes">server/bwservice.hpp</includes>
    <incdepgraph>
      <node id="3666">
        <label>server/server_app.hpp</label>
      </node>
      <node id="3664">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="3665">
        <label>network/machine_guard.hpp</label>
      </node>
      <node id="3662">
        <label>reviver/main.cpp</label>
        <link refid="reviver/main.cpp"/>
        <childnode refid="3663" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3669" relation="include">
        </childnode>
      </node>
      <node id="3669">
        <label>server/bwservice.hpp</label>
      </node>
      <node id="3668">
        <label>server/server_app_config.hpp</label>
      </node>
      <node id="3663">
        <label>reviver.hpp</label>
        <link refid="reviver_8hpp_source"/>
        <childnode refid="3664" relation="include">
        </childnode>
        <childnode refid="3665" relation="include">
        </childnode>
        <childnode refid="3666" relation="include">
        </childnode>
      </node>
      <node id="3667">
        <label>reviver_config.hpp</label>
        <link refid="reviver__config_8hpp_source"/>
        <childnode refid="3668" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="reviver_2main_8cpp_1aa068485fac3562a072e48500b03ae9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BW_USE_NAMESPACE void</type>
        <definition>BW_USE_NAMESPACE void printHelp</definition>
        <argsstring>(const char *commandName)</argsstring>
        <name>printHelp</name>
        <param>
          <type>const char *</type>
          <declname>commandName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method prints the usage of this program. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="reviver/main.cpp" line="13" column="1" bodyfile="reviver/main.cpp" bodystart="13" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="reviver_2main_8cpp_1ab22ed389948ccf45fd6e480f89bb422f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BIGWORLD_MAIN</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>BIGWORLD_MAIN</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="reviver/main.cpp" line="32" column="1" bodyfile="reviver/main.cpp" bodystart="32" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;reviver.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;reviver_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Needs<sp/>to<sp/>be<sp/>after<sp/>bwStop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/bwservice.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">BW_USE_NAMESPACE</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printHelp(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>commandName<sp/>)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>%s<sp/>[OPTION]\n&quot;</highlight><highlight class="normal">,<sp/>commandName<sp/>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;Monitors<sp/>BigWorld<sp/>server<sp/>components<sp/>and<sp/>spawns<sp/>a<sp/>new<sp/>process<sp/>if<sp/>a<sp/>component\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;fails.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--add<sp/>{baseAppMgr|cellAppMgr|dbAppMgr|loginApp}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/>--del<sp/>{baseAppMgr|cellAppMgr|dbAppMgr|loginApp}\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;For<sp/>example,<sp/>the<sp/>following<sp/>monitors<sp/>the<sp/>dbAppMgr<sp/>process<sp/>and<sp/>starts<sp/>a<sp/>new\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;instance<sp/>if<sp/>that<sp/>one<sp/>fails.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s<sp/>--add<sp/>dbAppMgr\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>commandName<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BIGWORLD_MAIN(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[]<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>++i)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(argv[i],<sp/></highlight><highlight class="stringliteral">&quot;--help&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printHelp(<sp/>argv[0]<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bwMainT&lt;<sp/>Reviver<sp/>&gt;(<sp/>argc,<sp/>argv<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>main.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="reviver/main.cpp"/>
  </compounddef>
</doxygen>
