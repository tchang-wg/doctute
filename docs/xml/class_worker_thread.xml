<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_worker_thread" kind="class" language="C++" prot="public">
    <compoundname>WorkerThread</compoundname>
    <basecompoundref prot="public" virt="non-virtual">SimpleThread</basecompoundref>
    <includes refid="worker__thread_8hpp" local="no">worker_thread.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_worker_thread_1ab01203a6ea6879887a3838c5371d5ab1" prot="private" static="no">
        <type>BW::map&lt; uint64, <ref refid="class_worker_job" kindref="compound">WorkerJob</ref> * &gt;</type>
        <definition>typedef BW::map&lt;uint64,WorkerJob*&gt; WorkerThread::DoleQueue</definition>
        <argsstring></argsstring>
        <name>DoleQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="32" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_worker_thread_1a1fa8aa7ff4081af2f4198f437b131c8f" prot="private" static="no" mutable="no">
        <type>DoleQueue</type>
        <definition>DoleQueue WorkerThread::queue_</definition>
        <argsstring></argsstring>
        <name>queue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="33" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_worker_thread_1aaf5574e362fd12e1fe206361ef947cc9" prot="private" static="no" mutable="no">
        <type>SimpleMutex</type>
        <definition>SimpleMutex WorkerThread::queueLock_</definition>
        <argsstring></argsstring>
        <name>queueLock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="34" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_worker_thread_1a083895ea6d313f37f8bad31787e548d2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WorkerThread::ready_</definition>
        <argsstring></argsstring>
        <name>ready_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="36" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_worker_thread_1acaa3a34dc0185386f0e05e120cbf86ea" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WorkerThread::done_</definition>
        <argsstring></argsstring>
        <name>done_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="37" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_worker_thread_1a71d3c58c0f827d5ff2430b3cfc920000" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class WorkerJob</definition>
        <argsstring></argsstring>
        <name>WorkerJob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="39" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_worker_thread_1a30bd719fc3e4146a46cf9b2c707a01f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE WorkerThread::WorkerThread</definition>
        <argsstring>()</argsstring>
        <name>WorkerThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="19" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_thread_1a5aa554e7d73f0f185a850ca0ef145d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WorkerThread::~WorkerThread</definition>
        <argsstring>()</argsstring>
        <name>~WorkerThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="20" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="38" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_worker_thread_1ab70af7788d2d866158a64c38177b71a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WorkerThread::WorkerThread</definition>
        <argsstring>(const WorkerThread &amp;)</argsstring>
        <name>WorkerThread</name>
        <param>
          <type>const <ref refid="class_worker_thread" kindref="compound">WorkerThread</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_thread_1a8d42568756c3b3c739d5e2a53e833f3b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_worker_thread" kindref="compound">WorkerThread</ref> &amp;</type>
        <definition>WorkerThread&amp; WorkerThread::operator=</definition>
        <argsstring>(const WorkerThread &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_worker_thread" kindref="compound">WorkerThread</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_thread_1ab1b55d37c2317d8799cd65ee864f7d8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WorkerThread::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="27" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="65" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_thread_1a40baaf801797cca710cc3945fb9a340c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WorkerThread::add</definition>
        <argsstring>(WorkerJob *pJob, uint64 delay=0)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="class_worker_job" kindref="compound">WorkerJob</ref> *</type>
          <declname>pJob</declname>
        </param>
        <param>
          <type>uint64</type>
          <declname>delay</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a job </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="29" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="138" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_thread_1a20b360db8fec5296be50dc109b96b87c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WorkerThread::del</definition>
        <argsstring>(WorkerJob *pJob)</argsstring>
        <name>del</name>
        <param>
          <type><ref refid="class_worker_job" kindref="compound">WorkerJob</ref> *</type>
          <declname>pJob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a job </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="30" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="160" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_worker_thread_1a084926b602eab49f14eb943d066287ae" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void WorkerThread::s_run</definition>
        <argsstring>(void *arg)</argsstring>
        <name>s_run</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="26" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is a worker thread. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3176">
        <label>WorkerThread</label>
        <link refid="class_worker_thread"/>
        <childnode refid="3177" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3177">
        <label>SimpleThread</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3178">
        <label>WorkerThread</label>
        <link refid="class_worker_thread"/>
        <childnode refid="3179" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3179">
        <label>SimpleThread</label>
      </node>
    </collaborationgraph>
    <location file="baseapp/worker_thread.hpp" line="17" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="16" bodyend="40"/>
    <listofallmembers>
      <member refid="class_worker_thread_1a40baaf801797cca710cc3945fb9a340c" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>add</name></member>
      <member refid="class_worker_thread_1a20b360db8fec5296be50dc109b96b87c" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>del</name></member>
      <member refid="class_worker_thread_1ab01203a6ea6879887a3838c5371d5ab1" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>DoleQueue</name></member>
      <member refid="class_worker_thread_1acaa3a34dc0185386f0e05e120cbf86ea" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>done_</name></member>
      <member refid="class_worker_thread_1a8d42568756c3b3c739d5e2a53e833f3b" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>operator=</name></member>
      <member refid="class_worker_thread_1a1fa8aa7ff4081af2f4198f437b131c8f" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>queue_</name></member>
      <member refid="class_worker_thread_1aaf5574e362fd12e1fe206361ef947cc9" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>queueLock_</name></member>
      <member refid="class_worker_thread_1a083895ea6d313f37f8bad31787e548d2" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>ready_</name></member>
      <member refid="class_worker_thread_1ab1b55d37c2317d8799cd65ee864f7d8b" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>run</name></member>
      <member refid="class_worker_thread_1a084926b602eab49f14eb943d066287ae" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>s_run</name></member>
      <member refid="class_worker_thread_1a71d3c58c0f827d5ff2430b3cfc920000" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>WorkerJob</name></member>
      <member refid="class_worker_thread_1a30bd719fc3e4146a46cf9b2c707a01f5" prot="public" virt="non-virtual"><scope>WorkerThread</scope><name>WorkerThread</name></member>
      <member refid="class_worker_thread_1ab70af7788d2d866158a64c38177b71a2" prot="private" virt="non-virtual"><scope>WorkerThread</scope><name>WorkerThread</name></member>
      <member refid="class_worker_thread_1a5aa554e7d73f0f185a850ca0ef145d6d" prot="public" virt="non-virtual"><scope>WorkerThread</scope><name>~WorkerThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
