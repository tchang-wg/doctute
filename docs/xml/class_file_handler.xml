<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_file_handler" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>FileHandler</compoundname>
    <derivedcompoundref refid="class_binary_file_handler" prot="public" virt="non-virtual">BinaryFileHandler</derivedcompoundref>
    <derivedcompoundref refid="class_text_file_handler" prot="public" virt="non-virtual">TextFileHandler</derivedcompoundref>
    <includes refid="file__handler_8hpp" local="no">file_handler.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_file_handler_1a48f6ab15fbc95172ce6db0878cd4d5e7" prot="protected" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string FileHandler::filename_</definition>
        <argsstring></argsstring>
        <name>filename_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="40" column="1" bodyfile="tools/message_logger/file_handler.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_file_handler_1a3d60ec446935def914042db894c1bd3a" prot="protected" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string FileHandler::mode_</definition>
        <argsstring></argsstring>
        <name>mode_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="41" column="1" bodyfile="tools/message_logger/file_handler.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_file_handler_1aa513ca77c5578ff7f931578c4e2f767c" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long FileHandler::length_</definition>
        <argsstring></argsstring>
        <name>length_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="45" column="1" bodyfile="tools/message_logger/file_handler.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_file_handler_1a6beda2ae2fd3b91e1928615ebde690af" prot="protected" static="yes" mutable="no">
        <type>char</type>
        <definition>BW_BEGIN_NAMESPACE char FileHandler::s_pathBuf_</definition>
        <argsstring>[]</argsstring>
        <name>s_pathBuf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="47" column="1" bodyfile="tools/message_logger/file_handler.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_file_handler_1aaaee9a739ef82b4dd568946af8a46636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FileHandler::init</definition>
        <argsstring>(const char *path, const char *mode)</argsstring>
        <name>init</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Don&apos;t call this from subclass implementations of <ref refid="class_file_handler_1aaaee9a739ef82b4dd568946af8a46636" kindref="member">init()</ref> until you are ready to read (if you&apos;re in read mode). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="22" column="1" bodyfile="tools/message_logger/file_handler.cpp" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_file_handler_1a83d056536289a502e280ad909c998e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FileHandler::isDirty</definition>
        <argsstring>()</argsstring>
        <name>isDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether the file has been modified since last using it.</para><para><simplesect kind="return"><para>true if the file has been modified, false if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="25" column="1" bodyfile="tools/message_logger/file_handler.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_file_handler_1a21db311b76430aff514bf39a238b015d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * FileHandler::filename</definition>
        <argsstring>() const </argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the filename being referenced by the object instance.</para><para><simplesect kind="return"><para>The filename as a const char *. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="27" column="1" bodyfile="tools/message_logger/file_handler.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_file_handler_1af160a3724165ff7d40488471ad2cfeba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * FileHandler::mode</definition>
        <argsstring>() const </argsstring>
        <name>mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the file access mode being referenced by the object instance.</para><para><simplesect kind="return"><para>The mode as a const char *. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="28" column="1" bodyfile="tools/message_logger/file_handler.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_file_handler_1a81e45df04afafdc54b27686861c4475c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool FileHandler::read</definition>
        <argsstring>()=0</argsstring>
        <name>read</name>
        <reimplementedby refid="class_active_files_1a2e79d821686c1d8670bcda8df05c92b9">read</reimplementedby>
        <reimplementedby refid="class_text_file_handler_1a2f455865be705691ce2795bbd1a48a30">read</reimplementedby>
        <reimplementedby refid="class_format_strings_m_l_d_b_1a7379a015de642fb55343f0f3e5d1311b">read</reimplementedby>
        <reimplementedby refid="class_categories_m_l_d_b_1ae6f848aed996047bf34959e56296375b">read</reimplementedby>
        <reimplementedby refid="class_user_components_1a9f1d96ed81c515a58e95d208eb46dbd3">read</reimplementedby>
        <reimplementedby refid="class_metadata_m_l_d_b_1a067084999c2efa04a0567ff861bf9438">read</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_file_handler_1a115fb06c8296264b46a3ef98ac1afc28" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long FileHandler::length</definition>
        <argsstring>()=0</argsstring>
        <name>length</name>
        <reimplementedby refid="class_binary_file_handler_1a2f569a2a2f1478ec6312a9f559cade02">length</reimplementedby>
        <reimplementedby refid="class_text_file_handler_1a862ec561f457c469e70b1c8a6489df04">length</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_file_handler_1aa529a9fd4b544fd8b85e8aba4da1b32b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FileHandler::refresh</definition>
        <argsstring>()</argsstring>
        <name>refresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method flushes any current output in the buffer and re-reads the contents.</para><para><simplesect kind="return"><para>true on success, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="32" column="1" bodyfile="tools/message_logger/file_handler.cpp" bodystart="65" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_file_handler_1aeca3703f7450120817ff241f9ab5cebc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * FileHandler::join</definition>
        <argsstring>(const char *dir, const char *filename)</argsstring>
        <name>join</name>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This static method provides a convenient way of concatenating the provided directory and filename together.</para><para><simplesect kind="return"><para>A pointer to the concatenated file path. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="34" column="1" bodyfile="tools/message_logger/file_handler.cpp" bodystart="81" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_file_handler_1aaa5e02b440b04dd78fe9ac2c8f19c69e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void FileHandler::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <reimplementedby refid="class_unary_integer_file_1a063f6ebf2d99124c92ef2df21073790b">flush</reimplementedby>
        <reimplementedby refid="class_log_component_names_m_l_d_b_1acd44578ed63fa8b3ce7c246a70524a57">flush</reimplementedby>
        <reimplementedby refid="class_format_strings_m_l_d_b_1a728215fbc374b3beebc4eec7e03372ed">flush</reimplementedby>
        <reimplementedby refid="class_hostnames_validator_m_l_d_b_1a26192fa889fa9562c75d4a3703c33461">flush</reimplementedby>
        <reimplementedby refid="class_hostnames_m_l_d_b_1ae96877463f6c3476e586a9a8f6a63b22">flush</reimplementedby>
        <reimplementedby refid="class_categories_m_l_d_b_1a31745ebff1b1ad7da159f511157a41f7">flush</reimplementedby>
        <reimplementedby refid="class_user_components_1a6b6723fc6b50079f9cc71c04daba29e0">flush</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/file_handler.hpp" line="38" column="1" bodyfile="tools/message_logger/file_handler.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Subclasses of <ref refid="class_file_handler" kindref="compound">FileHandler</ref> are used for managing pretty much all the files generated by the logs except for the actual log entry / args blob files. Note that each class defines an &apos;init&apos; method ... those with a first argument called &apos;path&apos; expect the exact filename of the file to be passed, whereas those whose first argument is &apos;root&apos; expect the containing directory name to passed; they work out their filename from that path. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1270">
        <label>ActiveFiles</label>
        <link refid="class_active_files"/>
        <childnode refid="1269" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1264">
        <label>BinaryFileHandler</label>
        <link refid="class_binary_file_handler"/>
        <childnode refid="1263" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1263">
        <label>FileHandler</label>
        <link refid="class_file_handler"/>
      </node>
      <node id="1273">
        <label>LogComponentNamesMLDB</label>
        <link refid="class_log_component_names_m_l_d_b"/>
        <childnode refid="1269" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1271">
        <label>HostnamesMLDB</label>
        <link refid="class_hostnames_m_l_d_b"/>
        <childnode refid="1269" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1265">
        <label>CategoriesMLDB</label>
        <link refid="class_categories_m_l_d_b"/>
        <childnode refid="1264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1268">
        <label>UserComponents</label>
        <link refid="class_user_components"/>
        <childnode refid="1264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1267">
        <label>MetadataMLDB</label>
        <link refid="class_metadata_m_l_d_b"/>
        <childnode refid="1264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1266">
        <label>FormatStringsMLDB</label>
        <link refid="class_format_strings_m_l_d_b"/>
        <childnode refid="1264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1269">
        <label>TextFileHandler</label>
        <link refid="class_text_file_handler"/>
        <childnode refid="1263" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1272">
        <label>HostnamesValidatorMLDB</label>
        <link refid="class_hostnames_validator_m_l_d_b"/>
        <childnode refid="1269" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1274">
        <label>UnaryIntegerFile</label>
        <link refid="class_unary_integer_file"/>
        <childnode refid="1269" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="tools/message_logger/file_handler.hpp" line="20" column="1" bodyfile="tools/message_logger/file_handler.hpp" bodystart="19" bodyend="48"/>
    <listofallmembers>
      <member refid="class_file_handler_1a21db311b76430aff514bf39a238b015d" prot="public" virt="non-virtual"><scope>FileHandler</scope><name>filename</name></member>
      <member refid="class_file_handler_1a48f6ab15fbc95172ce6db0878cd4d5e7" prot="protected" virt="non-virtual"><scope>FileHandler</scope><name>filename_</name></member>
      <member refid="class_file_handler_1aaa5e02b440b04dd78fe9ac2c8f19c69e" prot="protected" virt="virtual"><scope>FileHandler</scope><name>flush</name></member>
      <member refid="class_file_handler_1aaaee9a739ef82b4dd568946af8a46636" prot="public" virt="non-virtual"><scope>FileHandler</scope><name>init</name></member>
      <member refid="class_file_handler_1a83d056536289a502e280ad909c998e29" prot="public" virt="non-virtual"><scope>FileHandler</scope><name>isDirty</name></member>
      <member refid="class_file_handler_1aeca3703f7450120817ff241f9ab5cebc" prot="public" virt="non-virtual"><scope>FileHandler</scope><name>join</name></member>
      <member refid="class_file_handler_1a115fb06c8296264b46a3ef98ac1afc28" prot="public" virt="pure-virtual"><scope>FileHandler</scope><name>length</name></member>
      <member refid="class_file_handler_1aa513ca77c5578ff7f931578c4e2f767c" prot="protected" virt="non-virtual"><scope>FileHandler</scope><name>length_</name></member>
      <member refid="class_file_handler_1af160a3724165ff7d40488471ad2cfeba" prot="public" virt="non-virtual"><scope>FileHandler</scope><name>mode</name></member>
      <member refid="class_file_handler_1a3d60ec446935def914042db894c1bd3a" prot="protected" virt="non-virtual"><scope>FileHandler</scope><name>mode_</name></member>
      <member refid="class_file_handler_1a81e45df04afafdc54b27686861c4475c" prot="public" virt="pure-virtual"><scope>FileHandler</scope><name>read</name></member>
      <member refid="class_file_handler_1aa529a9fd4b544fd8b85e8aba4da1b32b" prot="public" virt="non-virtual"><scope>FileHandler</scope><name>refresh</name></member>
      <member refid="class_file_handler_1a6beda2ae2fd3b91e1928615ebde690af" prot="protected" virt="non-virtual"><scope>FileHandler</scope><name>s_pathBuf_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
