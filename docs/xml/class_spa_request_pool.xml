<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_spa_request_pool" kind="class" language="C++" prot="public">
    <compoundname>SpaRequestPool</compoundname>
    <includes refid="spa__request__pool_8hpp" local="no">spa_request_pool.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_spa_request_pool_1a1ae6848d651983b09ae30a522c001064" prot="private" static="no">
        <type>BW::vector&lt; <ref refid="class_spa_pipeline" kindref="compound">SpaPipeline</ref> * &gt;</type>
        <definition>typedef BW::vector&lt; SpaPipeline * &gt; SpaRequestPool::SpaPipelineList</definition>
        <argsstring></argsstring>
        <name>SpaPipelineList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="117" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_spa_request_pool_1ad60eb31818ffbeb187443a7b0883ee0d" prot="private" static="no">
        <type>std::deque&lt; <ref refid="class_spa_request" kindref="compound">SpaRequest</ref> * &gt;</type>
        <definition>typedef std::deque&lt; SpaRequest * &gt; SpaRequestPool::SpaRequestDeque</definition>
        <argsstring></argsstring>
        <name>SpaRequestDeque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="132" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_spa_request_pool_1ab18b8ed2b382a862a7cb15a663ba6526" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SpaPipeline</definition>
        <argsstring></argsstring>
        <name>SpaPipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="27" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_spa_request_pool_1a9dca04ba81101a64037d27ee4ce0c8b6" prot="private" static="no" mutable="no">
        <type>Mercury::EventDispatcher &amp;</type>
        <definition>Mercury::EventDispatcher&amp; SpaRequestPool::dispatcher_</definition>
        <argsstring></argsstring>
        <name>dispatcher_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="85" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a40ecca3c70f3ba5e268344e7eceb01c4" prot="private" static="no" mutable="no">
        <type><ref refid="class_dns_resolver" kindref="compound">DnsResolver</ref></type>
        <definition>DnsResolver SpaRequestPool::resolver_</definition>
        <argsstring></argsstring>
        <name>resolver_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="89" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a07df5c4f1be12ff479f2aa27ca780118" prot="private" static="no" mutable="no">
        <type>uint64</type>
        <definition>uint64 SpaRequestPool::failurePeriodStart_</definition>
        <argsstring></argsstring>
        <name>failurePeriodStart_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="98" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a8a454160ab7cef0eddaef9b7b783f4f1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int SpaRequestPool::failurePeriodCount_</definition>
        <argsstring></argsstring>
        <name>failurePeriodCount_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="100" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a13a01524e511b83ba81e4058de46cf05" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string SpaRequestPool::hostname_</definition>
        <argsstring></argsstring>
        <name>hostname_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="103" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a163850d0adbd56e2a5719e550357c0ac" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 SpaRequestPool::port_</definition>
        <argsstring></argsstring>
        <name>port_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="104" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a0a3ed3f749f7d0f69c7678276da5afdf" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 SpaRequestPool::pipelineCount_</definition>
        <argsstring></argsstring>
        <name>pipelineCount_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="107" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a67e48c1be559870571bc468e905e3c8f" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 SpaRequestPool::batchSize_</definition>
        <argsstring></argsstring>
        <name>batchSize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="108" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1afb92a25d58920a0e83aa1d2974cb415d" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 SpaRequestPool::queueSize_</definition>
        <argsstring></argsstring>
        <name>queueSize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="110" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a952b582545690bccb2f55f1f450c3fea" prot="private" static="no" mutable="no">
        <type>int64</type>
        <definition>int64 SpaRequestPool::connectionTimeout_</definition>
        <argsstring></argsstring>
        <name>connectionTimeout_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="114" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a56eb103bdf9eba7c6e4756ba3bcc3d30" prot="private" static="no" mutable="no">
        <type>uint64</type>
        <definition>uint64 SpaRequestPool::requestTimeout_</definition>
        <argsstring></argsstring>
        <name>requestTimeout_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="115" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a91184be38059e1fe4369d3a0e6801d78" prot="private" static="no" mutable="no">
        <type>SpaPipelineList</type>
        <definition>SpaPipelineList SpaRequestPool::lruPipelines_</definition>
        <argsstring></argsstring>
        <name>lruPipelines_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="121" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a4d5cc4110c152edf133a5dcc3f68a4b9" prot="private" static="no" mutable="no">
        <type>SpaPipelineList</type>
        <definition>SpaPipelineList SpaRequestPool::failedPipelines_</definition>
        <argsstring></argsstring>
        <name>failedPipelines_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="126" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1ae18f30484e59fa55125c1f279bccb048" prot="private" static="no" mutable="no">
        <type>SpaRequestDeque</type>
        <definition>SpaRequestDeque SpaRequestPool::requestQueue_</definition>
        <argsstring></argsstring>
        <name>requestQueue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="133" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1af2eb450aa7f43dd98c33b93bfca7b085" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SpaRequestPool::rwLock_</definition>
        <argsstring></argsstring>
        <name>rwLock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="137" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a87c2c13ecf20cb35690b65e43247de11" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SpaRequestPool::isEnabled_</definition>
        <argsstring></argsstring>
        <name>isEnabled_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="139" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1aa2eaffcae3d8a74ee792724b7b91785b" prot="private" static="no" mutable="no">
        <type>EMA</type>
        <definition>EMA SpaRequestPool::retryCount_</definition>
        <argsstring></argsstring>
        <name>retryCount_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="143" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a4bba4c8f34351280198386023bf51f78" prot="private" static="no" mutable="no">
        <type>EMA</type>
        <definition>EMA SpaRequestPool::totalTime_</definition>
        <argsstring></argsstring>
        <name>totalTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="144" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a087f6f2de18cd6f662e1e843f4085155" prot="private" static="no" mutable="no">
        <type>EMA</type>
        <definition>EMA SpaRequestPool::timeInQueue_</definition>
        <argsstring></argsstring>
        <name>timeInQueue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="145" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a3551de2e8543d11a4599519b0995cf9d" prot="private" static="no" mutable="no">
        <type>EMA</type>
        <definition>EMA SpaRequestPool::spaRequestTime_</definition>
        <argsstring></argsstring>
        <name>spaRequestTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="146" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_spa_request_pool_1aa0b869a6f470398312cab0f7399b7045" prot="private" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float SpaRequestPool::FAILURE_REPORT_PERIOD</definition>
        <argsstring></argsstring>
        <name>FAILURE_REPORT_PERIOD</name>
        <initializer>= 30.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="92" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spa_request_pool_1a046a226b9af87217b22614f8ab4dc42c" prot="private" static="yes" mutable="no">
        <type>const float</type>
        <definition>BW_BEGIN_NAMESPACE const float SpaRequestPool::BIAS</definition>
        <argsstring></argsstring>
        <name>BIAS</name>
        <initializer>= 1.0 / 512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="95" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_spa_request_pool_1abc30be5f6d37dd7c6b2c54b3022c0f03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpaRequestPool::SpaRequestPool</definition>
        <argsstring>(Mercury::EventDispatcher &amp;dispatcher, const BW::string &amp;poolName, const BW::string &amp;host, const uint16 port, int pipelineCount, int batchSize, int queueSize, int connectionTimeout, int requestTimeout)</argsstring>
        <name>SpaRequestPool</name>
        <param>
          <type>Mercury::EventDispatcher &amp;</type>
          <declname>dispatcher</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>poolName</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const uint16</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pipelineCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batchSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>queueSize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>connectionTimeout</declname>
        </param>
        <param>
          <type>int</type>
          <declname>requestTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para>Immediately spawns the pool. Timeouts are in milliseconds.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dispatcher</parametername>
</parameternamelist>
<parameterdescription>
<para>EventDispatcher that orchestrates all the aggregated HTTP pipelines </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poolName</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique pool name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial HTTP pipeline hostname (unified between requests) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial HTTP pipeline port </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipelineCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pipelines in the pool (ideal one) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>HTTP pipeline maximum batch size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queueSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum size of front-end queue of requests not yet placed on pipelines </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connectionTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Network connection timeout </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requestTimeout</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of requests allowed before timing out. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="30" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="36" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a198390bd71e765ee8464c4d32781542e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpaRequestPool::~SpaRequestPool</definition>
        <argsstring>()</argsstring>
        <name>~SpaRequestPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor.</para><para>Fails all the ongoings requests and destroys the pool. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="39" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1ae4713ce3b17c121662baa68337b4d1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpaRequestPool::forceReconnect</definition>
        <argsstring>()</argsstring>
        <name>forceReconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method forces a reconnection for all existing pool connections. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="41" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1acbc2c7efb1c050344d207af2e85c9640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SpaRequestPool::addRequest</definition>
        <argsstring>(SpaRequest *pRequest)</argsstring>
        <name>addRequest</name>
        <param>
          <type><ref refid="class_spa_request" kindref="compound">SpaRequest</ref> *</type>
          <declname>pRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds a fresh request into the pool.</para><para><simplesect kind="return"><para>true if the request was queued, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="43" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="135" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a4f8e76c9a3fae743a95b6cf0bf2b3e57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpaRequestPool::updateStats</definition>
        <argsstring>(uint64 totalTime, uint64 spaRequestTime, uint32 retryCount)</argsstring>
        <name>updateStats</name>
        <param>
          <type>uint64</type>
          <declname>totalTime</declname>
        </param>
        <param>
          <type>uint64</type>
          <declname>spaRequestTime</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>retryCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates request stats. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="44" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="158" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1ac5b1cca5bb2c67df97623fd7b54b3cb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16</type>
        <definition>INLINE uint16 SpaRequestPool::port</definition>
        <argsstring>() const </argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method gets the port associated with this request pool&apos;s endpoint. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="46" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a43b52f4300049a24255e3f761f9188fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>INLINE void SpaRequestPool::port</definition>
        <argsstring>(const uint16 port)</argsstring>
        <name>port</name>
        <param>
          <type>const uint16</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="47" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="19" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1ac10c4bbf2247fb735aafd8d6289ed715" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>INLINE BW::string SpaRequestPool::host</definition>
        <argsstring>() const </argsstring>
        <name>host</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="49" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1aca3b05aedbba145272ea8cc7c3a039ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>INLINE void SpaRequestPool::host</definition>
        <argsstring>(const BW::string hostname)</argsstring>
        <name>host</name>
        <param>
          <type>const BW::string</type>
          <declname>hostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="50" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a745bffda84ee132d02c970c6a542d9f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>INLINE int SpaRequestPool::queuedCount</definition>
        <argsstring>() const </argsstring>
        <name>queuedCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the size of the request queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="52" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a70ece3522f1b5805a6d5c2075c6b3988" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>INLINE bool SpaRequestPool::isEnabled</definition>
        <argsstring>() const </argsstring>
        <name>isEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns pool status. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="54" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a8bb7cc49074b7b4891c30bddd488472c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>INLINE void SpaRequestPool::isEnabled</definition>
        <argsstring>(const bool isEnabled)</argsstring>
        <name>isEnabled</name>
        <param>
          <type>const bool</type>
          <declname>isEnabled</declname>
          <defname>b</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method enable/disable pool. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="55" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="180" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a792eb0718303d766e5eadea5ce5c8d21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>INLINE uint32 SpaRequestPool::batchSize</definition>
        <argsstring>() const </argsstring>
        <name>batchSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the size of the batch sent to spa. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="57" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a430631e6a0686cc0651d1e2ed4f68701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>INLINE void SpaRequestPool::batchSize</definition>
        <argsstring>(const uint32 batchSize)</argsstring>
        <name>batchSize</name>
        <param>
          <type>const uint32</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method set the size of the batch sent to spa. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="58" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a6d41cf7130a8457437070a2a8e0badac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>INLINE uint32 SpaRequestPool::maxQueueSize</definition>
        <argsstring>() const </argsstring>
        <name>maxQueueSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the size of the request queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="60" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1adef9033dfe6b29c3f873c61a7430ef58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>INLINE void SpaRequestPool::maxQueueSize</definition>
        <argsstring>(const uint32 queueSize)</argsstring>
        <name>maxQueueSize</name>
        <param>
          <type>const uint32</type>
          <declname>queueSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method set the size of the request queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="61" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1ab9ad891d472e1cffe5ea5e0a76dc77f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>INLINE uint32 SpaRequestPool::pipelineCount</definition>
        <argsstring>() const </argsstring>
        <name>pipelineCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the number of pipelines. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="63" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1ad107e0145521d76edd49d64013b819ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>INLINE void SpaRequestPool::pipelineCount</definition>
        <argsstring>(const uint32 pipelineCount)</argsstring>
        <name>pipelineCount</name>
        <param>
          <type>const uint32</type>
          <declname>pipelineCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method set the number of pipelines. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="64" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a7923a764eba482a304e40e3d80328f69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64</type>
        <definition>INLINE uint64 SpaRequestPool::requestTimeout</definition>
        <argsstring>() const </argsstring>
        <name>requestTimeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the timeout in queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="66" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a20ed8c16ef69dfc3e9beea19fe48964f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>INLINE void SpaRequestPool::requestTimeout</definition>
        <argsstring>(const uint64 requestTimeout)</argsstring>
        <name>requestTimeout</name>
        <param>
          <type>const uint64</type>
          <declname>requestTimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the timeout in queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="67" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1ae573bf1791afafd59d992c60440dea90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>INLINE float SpaRequestPool::avgTotalTime</definition>
        <argsstring>() const </argsstring>
        <name>avgTotalTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns average total request time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="69" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a542412113593db43473dafc4385e8dec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>INLINE float SpaRequestPool::avgTimeInQueue</definition>
        <argsstring>() const </argsstring>
        <name>avgTimeInQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns average request time in queue. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="70" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a85a160675e74e62dcb3140e883368bb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>INLINE float SpaRequestPool::avgSpaRequestTime</definition>
        <argsstring>() const </argsstring>
        <name>avgSpaRequestTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns average spa request time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="71" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a9a135c74e547adef8635be94497af5aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>INLINE float SpaRequestPool::avgRetryCount</definition>
        <argsstring>() const </argsstring>
        <name>avgRetryCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns average retry count. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="72" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.ipp" bodystart="162" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_spa_request_pool_1a2714fc5c8886780f2487f45e1d7f8b49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpaRequestPool::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method deallocates queues and pipelines. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="75" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="358" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a110c8595a8d147463e02e3111068e0d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpaRequestPool::managePipelines</definition>
        <argsstring>()</argsstring>
        <name>managePipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method manages spawning new pipelines, deleting old ones and timing out requests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="76" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="227" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1aba76fb1b1f14aaa451e71ee8dd4e7867" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpaRequestPool::markActivePipelinesAsFailed</definition>
        <argsstring>()</argsstring>
        <name>markActivePipelinesAsFailed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="77" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="381" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a77e8fbd7482bbf885fb0b3961196ddb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpaRequestPool::destroyFailedPipelines</definition>
        <argsstring>()</argsstring>
        <name>destroyFailedPipelines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method destroys all the managed pipelines stuck in failed state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="78" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="318" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1a936a07176f7bcc05f20bac20ce0f90a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_spa_pipeline" kindref="compound">SpaPipeline</ref> *</type>
        <definition>SpaPipeline * SpaRequestPool::findFreePipeline</definition>
        <argsstring>()</argsstring>
        <name>findFreePipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method finds the first free pipeline in the Least Recently Used Pipelines to put a new batch into.</para><para><simplesect kind="return"><para>A pointer to a pipe if there if one is available, NULL otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="79" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="337" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_spa_request_pool_1ae375f2bfeb117c4f0f6e35836960b825" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpaRequestPool::onPipelineProcessed</definition>
        <argsstring>(SpaPipeline *pPipeline, const HttpRequestBatch &amp;requeueBatch, bool pipelineSuccess)</argsstring>
        <name>onPipelineProcessed</name>
        <param>
          <type><ref refid="class_spa_pipeline" kindref="compound">SpaPipeline</ref> *</type>
          <declname>pPipeline</declname>
        </param>
        <param>
          <type>const HttpRequestBatch &amp;</type>
          <declname>requeueBatch</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pipelineSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called on completion of either the onConnectionFailure() or onBatchSuccess() callbacks from one of the pool&apos;s pipelines.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pPipeline</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to aggregated pipeline. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>requeueBatch</parametername>
</parameternamelist>
<parameterdescription>
<para>A batch of requests to be retried on other pipelines either due to connection failure or high-level retry logic. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pipelineSuccess</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean signifying whether this specific pipeline should stay alive after processing. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="80" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.cpp" bodystart="178" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements the <ref refid="class_spa_request_pool" kindref="compound">SpaRequestPool</ref></para><para>A <ref refid="class_spa_pipeline" kindref="compound">SpaPipeline</ref> pool with front-end queue, pipeline respawn, alterable ip/port/host and request (not pipeline) timeouts. </para>    </detaileddescription>
    <location file="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" line="26" column="1" bodyfile="dbapp_extensions/wgbilling_spa/spa_request_pool.hpp" bodystart="25" bodyend="147"/>
    <listofallmembers>
      <member refid="class_spa_request_pool_1acbc2c7efb1c050344d207af2e85c9640" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>addRequest</name></member>
      <member refid="class_spa_request_pool_1a9a135c74e547adef8635be94497af5aa" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>avgRetryCount</name></member>
      <member refid="class_spa_request_pool_1a85a160675e74e62dcb3140e883368bb2" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>avgSpaRequestTime</name></member>
      <member refid="class_spa_request_pool_1a542412113593db43473dafc4385e8dec" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>avgTimeInQueue</name></member>
      <member refid="class_spa_request_pool_1ae573bf1791afafd59d992c60440dea90" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>avgTotalTime</name></member>
      <member refid="class_spa_request_pool_1a792eb0718303d766e5eadea5ce5c8d21" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>batchSize</name></member>
      <member refid="class_spa_request_pool_1a430631e6a0686cc0651d1e2ed4f68701" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>batchSize</name></member>
      <member refid="class_spa_request_pool_1a67e48c1be559870571bc468e905e3c8f" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>batchSize_</name></member>
      <member refid="class_spa_request_pool_1a046a226b9af87217b22614f8ab4dc42c" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>BIAS</name></member>
      <member refid="class_spa_request_pool_1a2714fc5c8886780f2487f45e1d7f8b49" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>cleanup</name></member>
      <member refid="class_spa_request_pool_1a952b582545690bccb2f55f1f450c3fea" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>connectionTimeout_</name></member>
      <member refid="class_spa_request_pool_1a77e8fbd7482bbf885fb0b3961196ddb3" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>destroyFailedPipelines</name></member>
      <member refid="class_spa_request_pool_1a9dca04ba81101a64037d27ee4ce0c8b6" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>dispatcher_</name></member>
      <member refid="class_spa_request_pool_1a4d5cc4110c152edf133a5dcc3f68a4b9" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>failedPipelines_</name></member>
      <member refid="class_spa_request_pool_1aa0b869a6f470398312cab0f7399b7045" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>FAILURE_REPORT_PERIOD</name></member>
      <member refid="class_spa_request_pool_1a8a454160ab7cef0eddaef9b7b783f4f1" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>failurePeriodCount_</name></member>
      <member refid="class_spa_request_pool_1a07df5c4f1be12ff479f2aa27ca780118" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>failurePeriodStart_</name></member>
      <member refid="class_spa_request_pool_1a936a07176f7bcc05f20bac20ce0f90a1" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>findFreePipeline</name></member>
      <member refid="class_spa_request_pool_1ae4713ce3b17c121662baa68337b4d1d3" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>forceReconnect</name></member>
      <member refid="class_spa_request_pool_1ac10c4bbf2247fb735aafd8d6289ed715" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>host</name></member>
      <member refid="class_spa_request_pool_1aca3b05aedbba145272ea8cc7c3a039ea" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>host</name></member>
      <member refid="class_spa_request_pool_1a13a01524e511b83ba81e4058de46cf05" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>hostname_</name></member>
      <member refid="class_spa_request_pool_1a70ece3522f1b5805a6d5c2075c6b3988" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>isEnabled</name></member>
      <member refid="class_spa_request_pool_1a8bb7cc49074b7b4891c30bddd488472c" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>isEnabled</name></member>
      <member refid="class_spa_request_pool_1a87c2c13ecf20cb35690b65e43247de11" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>isEnabled_</name></member>
      <member refid="class_spa_request_pool_1a91184be38059e1fe4369d3a0e6801d78" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>lruPipelines_</name></member>
      <member refid="class_spa_request_pool_1a110c8595a8d147463e02e3111068e0d3" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>managePipelines</name></member>
      <member refid="class_spa_request_pool_1aba76fb1b1f14aaa451e71ee8dd4e7867" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>markActivePipelinesAsFailed</name></member>
      <member refid="class_spa_request_pool_1a6d41cf7130a8457437070a2a8e0badac" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>maxQueueSize</name></member>
      <member refid="class_spa_request_pool_1adef9033dfe6b29c3f873c61a7430ef58" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>maxQueueSize</name></member>
      <member refid="class_spa_request_pool_1ae375f2bfeb117c4f0f6e35836960b825" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>onPipelineProcessed</name></member>
      <member refid="class_spa_request_pool_1ab9ad891d472e1cffe5ea5e0a76dc77f2" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>pipelineCount</name></member>
      <member refid="class_spa_request_pool_1ad107e0145521d76edd49d64013b819ce" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>pipelineCount</name></member>
      <member refid="class_spa_request_pool_1a0a3ed3f749f7d0f69c7678276da5afdf" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>pipelineCount_</name></member>
      <member refid="class_spa_request_pool_1ac5b1cca5bb2c67df97623fd7b54b3cb5" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>port</name></member>
      <member refid="class_spa_request_pool_1a43b52f4300049a24255e3f761f9188fb" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>port</name></member>
      <member refid="class_spa_request_pool_1a163850d0adbd56e2a5719e550357c0ac" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>port_</name></member>
      <member refid="class_spa_request_pool_1a745bffda84ee132d02c970c6a542d9f3" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>queuedCount</name></member>
      <member refid="class_spa_request_pool_1afb92a25d58920a0e83aa1d2974cb415d" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>queueSize_</name></member>
      <member refid="class_spa_request_pool_1ae18f30484e59fa55125c1f279bccb048" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>requestQueue_</name></member>
      <member refid="class_spa_request_pool_1a7923a764eba482a304e40e3d80328f69" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>requestTimeout</name></member>
      <member refid="class_spa_request_pool_1a20ed8c16ef69dfc3e9beea19fe48964f" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>requestTimeout</name></member>
      <member refid="class_spa_request_pool_1a56eb103bdf9eba7c6e4756ba3bcc3d30" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>requestTimeout_</name></member>
      <member refid="class_spa_request_pool_1a40ecca3c70f3ba5e268344e7eceb01c4" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>resolver_</name></member>
      <member refid="class_spa_request_pool_1aa2eaffcae3d8a74ee792724b7b91785b" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>retryCount_</name></member>
      <member refid="class_spa_request_pool_1af2eb450aa7f43dd98c33b93bfca7b085" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>rwLock_</name></member>
      <member refid="class_spa_request_pool_1ab18b8ed2b382a862a7cb15a663ba6526" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>SpaPipeline</name></member>
      <member refid="class_spa_request_pool_1a1ae6848d651983b09ae30a522c001064" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>SpaPipelineList</name></member>
      <member refid="class_spa_request_pool_1ad60eb31818ffbeb187443a7b0883ee0d" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>SpaRequestDeque</name></member>
      <member refid="class_spa_request_pool_1abc30be5f6d37dd7c6b2c54b3022c0f03" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>SpaRequestPool</name></member>
      <member refid="class_spa_request_pool_1a3551de2e8543d11a4599519b0995cf9d" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>spaRequestTime_</name></member>
      <member refid="class_spa_request_pool_1a087f6f2de18cd6f662e1e843f4085155" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>timeInQueue_</name></member>
      <member refid="class_spa_request_pool_1a4bba4c8f34351280198386023bf51f78" prot="private" virt="non-virtual"><scope>SpaRequestPool</scope><name>totalTime_</name></member>
      <member refid="class_spa_request_pool_1a4f8e76c9a3fae743a95b6cf0bf2b3e57" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>updateStats</name></member>
      <member refid="class_spa_request_pool_1a198390bd71e765ee8464c4d32781542e" prot="public" virt="non-virtual"><scope>SpaRequestPool</scope><name>~SpaRequestPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
