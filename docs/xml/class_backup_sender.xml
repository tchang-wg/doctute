<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_backup_sender" kind="class" language="C++" prot="public">
    <compoundname>BackupSender</compoundname>
    <includes refid="backup__sender_8hpp" local="no">backup_sender.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_backup_sender_1a69d15ca4d01177eea5bd45a17fa2effe" prot="private" static="no">
        <type>BW::vector&lt; EntityID &gt;</type>
        <definition>typedef BW::vector&lt;EntityID&gt; BackupSender::BasesToBackUp</definition>
        <argsstring></argsstring>
        <name>BasesToBackUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="65" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_backup_sender_1ad256c66175e84635a2e4050b794433e9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BackupSender::offloadPerTick_</definition>
        <argsstring></argsstring>
        <name>offloadPerTick_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="61" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1ae558abcb588507d7db04ca34e890b823" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BackupSender::backupRemainder_</definition>
        <argsstring></argsstring>
        <name>backupRemainder_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="64" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1ae4d6c50874d686f9af7bc6485d487687" prot="private" static="no" mutable="no">
        <type>BasesToBackUp</type>
        <definition>BasesToBackUp BackupSender::basesToBackUp_</definition>
        <argsstring></argsstring>
        <name>basesToBackUp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="66" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1a01eac7465ffe8a22eb6cc1779b0b3cd4" prot="private" static="no" mutable="no">
        <type>BackupHash</type>
        <definition>BackupHash BackupSender::entityToAppHash_</definition>
        <argsstring></argsstring>
        <name>entityToAppHash_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="68" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1a55d7e42273233c07031e03180613e180" prot="private" static="no" mutable="no">
        <type>BackupHash</type>
        <definition>BackupHash BackupSender::newEntityToAppHash_</definition>
        <argsstring></argsstring>
        <name>newEntityToAppHash_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="69" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1ae5a9e9dfcc66c0cd69a4b99f2b7f5ff7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BackupSender::isSwitchingToNewBackup_</definition>
        <argsstring></argsstring>
        <name>isSwitchingToNewBackup_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="70" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1a685a514dda13a71a158cc479e75a2bdb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BackupSender::isOffloading_</definition>
        <argsstring></argsstring>
        <name>isOffloading_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="71" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1abd34a89fc892b5fe201ff5aaf25d0595" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BackupSender::ticksSinceLastSuccessfulOffload_</definition>
        <argsstring></argsstring>
        <name>ticksSinceLastSuccessfulOffload_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="72" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_backup_sender_1a08219b1c3b9f358e019989ea55d94cab" prot="private" static="no" mutable="no">
        <type><ref refid="class_base_app" kindref="compound">BaseApp</ref> &amp;</type>
        <definition>BaseApp&amp; BackupSender::baseApp_</definition>
        <argsstring></argsstring>
        <name>baseApp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="73" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_backup_sender_1afad582f4cf927fbdbc3e803d0b0d517b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BackupSender::BackupSender</definition>
        <argsstring>(BaseApp &amp;baseApp)</argsstring>
        <name>BackupSender</name>
        <param>
          <type><ref refid="class_base_app" kindref="compound">BaseApp</ref> &amp;</type>
          <declname>baseApp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="29" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="75" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1a7384ead275d9e126701d663d6b2c64b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackupSender::tick</definition>
        <argsstring>(const Bases &amp;bases, Mercury::NetworkInterface &amp;networkInterface)</argsstring>
        <name>tick</name>
        <param>
          <type>const <ref refid="class_bases" kindref="compound">Bases</ref> &amp;</type>
          <declname>bases</declname>
        </param>
        <param>
          <type>Mercury::NetworkInterface &amp;</type>
          <declname>networkInterface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends backups for as many base entities as we are supposed to each tick.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bases</parametername>
</parameternamelist>
<parameterdescription>
<para>The collection of base entities. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>networkInterface</parametername>
</parameternamelist>
<parameterdescription>
<para>The network interface to use to send backups through. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="31" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="98" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1af69b857269117172c52d386e51b3b104" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Mercury::Address</type>
        <definition>Mercury::Address BackupSender::addressFor</definition>
        <argsstring>(EntityID entityID) const </argsstring>
        <name>addressFor</name>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="34" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1aeca1479114be3c8a806d46a440fd6c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackupSender::addToStream</definition>
        <argsstring>(BinaryOStream &amp;stream)</argsstring>
        <name>addToStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds information about this object to the stream. It is used to send to a new <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="39" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1ab70de4a09b686415b823f538fa183192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackupSender::handleBaseAppDeath</definition>
        <argsstring>(const Mercury::Address &amp;addr)</argsstring>
        <name>handleBaseAppDeath</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when a <ref refid="class_base_app" kindref="compound">BaseApp</ref> has died. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="40" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="360" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1af1115ac5d0816baa3a8cbffd44c68224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackupSender::setBackupBaseApps</definition>
        <argsstring>(BinaryIStream &amp;data, Mercury::NetworkInterface &amp;networkInterface)</argsstring>
        <name>setBackupBaseApps</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>Mercury::NetworkInterface &amp;</type>
          <declname>networkInterface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message informing us of which BaseApps this <ref refid="class_base_app" kindref="compound">BaseApp</ref> should back up its entities to. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="41" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="384" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1a902554e4cfaeefded5830df6a428573e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackupSender::restartBackupCycle</definition>
        <argsstring>(const Bases &amp;bases)</argsstring>
        <name>restartBackupCycle</name>
        <param>
          <type>const <ref refid="class_bases" kindref="compound">Bases</ref> &amp;</type>
          <declname>bases</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method restarts the backup cycle.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bases</parametername>
</parameternamelist>
<parameterdescription>
<para>The collection of bases to consider for backing up. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="44" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="192" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1a04778a66fabdc86a6100294ae47a2d69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BackupSender::startOffloading</definition>
        <argsstring>()</argsstring>
        <name>startOffloading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="46" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1ab47a0be1a7cec262e21e5dbd911d2dba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BackupSender::isOffloading</definition>
        <argsstring>() const </argsstring>
        <name>isOffloading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="47" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1abcd9d08735b30c50df4a4efdee822c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BackupSender::autoBackupBase</definition>
        <argsstring>(Base &amp;base, Mercury::BundleSendingMap &amp;bundles, Mercury::ReplyMessageHandler *pHandler=NULL, void *arg=NULL)</argsstring>
        <name>autoBackupBase</name>
        <param>
          <type><ref refid="class_base" kindref="compound">Base</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>Mercury::BundleSendingMap &amp;</type>
          <declname>bundles</declname>
        </param>
        <param>
          <type>Mercury::ReplyMessageHandler *</type>
          <declname>pHandler</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the automatic backup operation for a single base entity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The given base entity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bundles</parametername>
</parameternamelist>
<parameterdescription>
<para>The bundle map to send on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data to associate with the request, returned to the callback handler on completion. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="49" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="223" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_backup_sender_1a8ad68c14d46e7ce326a0f241b6ed825e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BackupSender::backupBase</definition>
        <argsstring>(Base &amp;base, bool isRequired, Mercury::BundleSendingMap &amp;bundles, Mercury::ReplyMessageHandler *pHandler=NULL, void *arg=NULL)</argsstring>
        <name>backupBase</name>
        <param>
          <type><ref refid="class_base" kindref="compound">Base</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isRequired</declname>
        </param>
        <param>
          <type>Mercury::BundleSendingMap &amp;</type>
          <declname>bundles</declname>
        </param>
        <param>
          <type>Mercury::ReplyMessageHandler *</type>
          <declname>pHandler</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the backup operation for a single base entity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base entity to backup. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isRequired</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies whether this backup is mandatory or can be sometimes skipped. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bundles</parametername>
</parameternamelist>
<parameterdescription>
<para>Bundle sending map (used for aggregating request sends). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>The request handler for the backupEntity request operation on the peer <ref refid="class_base_app" kindref="compound">BaseApp</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data to be associated with the Mercury request, returned in the request handler.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a base was actually backed up, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="53" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="271" bodyend="326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_backup_sender_1a177cc3331af1904df7e9b8457f88ef30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackupSender::ackNewBackupHash</definition>
        <argsstring>()</argsstring>
        <name>ackNewBackupHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is used to acknowledge to <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref> that a hash that we are transitioning to is now fully in use, i.e. all the base entities residing on this <ref refid="class_base_app" kindref="compound">BaseApp</ref> have backups according to the new hash scheme. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backup_sender.hpp" line="59" column="1" bodyfile="baseapp/backup_sender.cpp" bodystart="334" bodyend="344"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is responsible for backing up the base entities to other BaseApps. </para>    </detaileddescription>
    <location file="baseapp/backup_sender.hpp" line="27" column="1" bodyfile="baseapp/backup_sender.hpp" bodystart="26" bodyend="74"/>
    <listofallmembers>
      <member refid="class_backup_sender_1a177cc3331af1904df7e9b8457f88ef30" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>ackNewBackupHash</name></member>
      <member refid="class_backup_sender_1af69b857269117172c52d386e51b3b104" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>addressFor</name></member>
      <member refid="class_backup_sender_1aeca1479114be3c8a806d46a440fd6c8d" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>addToStream</name></member>
      <member refid="class_backup_sender_1abcd9d08735b30c50df4a4efdee822c00" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>autoBackupBase</name></member>
      <member refid="class_backup_sender_1a8ad68c14d46e7ce326a0f241b6ed825e" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>backupBase</name></member>
      <member refid="class_backup_sender_1ae558abcb588507d7db04ca34e890b823" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>backupRemainder_</name></member>
      <member refid="class_backup_sender_1afad582f4cf927fbdbc3e803d0b0d517b" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>BackupSender</name></member>
      <member refid="class_backup_sender_1a08219b1c3b9f358e019989ea55d94cab" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>baseApp_</name></member>
      <member refid="class_backup_sender_1a69d15ca4d01177eea5bd45a17fa2effe" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>BasesToBackUp</name></member>
      <member refid="class_backup_sender_1ae4d6c50874d686f9af7bc6485d487687" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>basesToBackUp_</name></member>
      <member refid="class_backup_sender_1a01eac7465ffe8a22eb6cc1779b0b3cd4" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>entityToAppHash_</name></member>
      <member refid="class_backup_sender_1ab70de4a09b686415b823f538fa183192" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>handleBaseAppDeath</name></member>
      <member refid="class_backup_sender_1ab47a0be1a7cec262e21e5dbd911d2dba" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>isOffloading</name></member>
      <member refid="class_backup_sender_1a685a514dda13a71a158cc479e75a2bdb" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>isOffloading_</name></member>
      <member refid="class_backup_sender_1ae5a9e9dfcc66c0cd69a4b99f2b7f5ff7" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>isSwitchingToNewBackup_</name></member>
      <member refid="class_backup_sender_1a55d7e42273233c07031e03180613e180" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>newEntityToAppHash_</name></member>
      <member refid="class_backup_sender_1ad256c66175e84635a2e4050b794433e9" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>offloadPerTick_</name></member>
      <member refid="class_backup_sender_1a902554e4cfaeefded5830df6a428573e" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>restartBackupCycle</name></member>
      <member refid="class_backup_sender_1af1115ac5d0816baa3a8cbffd44c68224" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>setBackupBaseApps</name></member>
      <member refid="class_backup_sender_1a04778a66fabdc86a6100294ae47a2d69" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>startOffloading</name></member>
      <member refid="class_backup_sender_1a7384ead275d9e126701d663d6b2c64b5" prot="public" virt="non-virtual"><scope>BackupSender</scope><name>tick</name></member>
      <member refid="class_backup_sender_1abd34a89fc892b5fe201ff5aaf25d0595" prot="private" virt="non-virtual"><scope>BackupSender</scope><name>ticksSinceLastSuccessfulOffload_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
