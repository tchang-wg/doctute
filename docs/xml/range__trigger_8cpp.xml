<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="range__trigger_8cpp" kind="file" language="C++">
    <compoundname>range_trigger.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="range__trigger_8hpp" local="yes">range_trigger.hpp</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">math.h</includes>
    <includes refid="cellapp_2entity_8hpp" local="yes">entity.hpp</includes>
    <includes local="yes">cstdmf/debug.hpp</includes>
    <incdepgraph>
      <node id="11643">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="11633">
        <label>network/misc.hpp</label>
      </node>
      <node id="11637">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="11603">
        <label>float.h</label>
      </node>
      <node id="11611">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="11613">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="11602">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="11601">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="11597">
        <label>script/first_include.hpp</label>
      </node>
      <node id="11622">
        <label>script/script_object.hpp</label>
      </node>
      <node id="11599">
        <label>entity_range_list_node.hpp</label>
        <link refid="entity__range__list__node_8hpp_source"/>
        <childnode refid="11600" relation="include">
        </childnode>
      </node>
      <node id="11612">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="11613" relation="include">
        </childnode>
        <childnode refid="11614" relation="include">
        </childnode>
        <childnode refid="11615" relation="include">
        </childnode>
        <childnode refid="11616" relation="include">
        </childnode>
        <childnode refid="11617" relation="include">
        </childnode>
      </node>
      <node id="11625">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="11620">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="11616">
        <label>server/common.hpp</label>
      </node>
      <node id="11623">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="11642">
        <label>entitydef/py_volatile_info.hpp</label>
      </node>
      <node id="11635">
        <label>entity_callback_buffer.hpp</label>
        <link refid="entity__callback__buffer_8hpp_source"/>
        <childnode refid="11636" relation="include">
        </childnode>
        <childnode refid="11605" relation="include">
        </childnode>
        <childnode refid="11622" relation="include">
        </childnode>
      </node>
      <node id="11621">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="11645">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="11631">
        <label>entitydef/data_description.hpp</label>
      </node>
      <node id="11604">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="11624">
        <label>entity_type.hpp</label>
        <link refid="cellapp_2entity__type_8hpp_source"/>
        <childnode refid="11609" relation="include">
        </childnode>
        <childnode refid="11604" relation="include">
        </childnode>
        <childnode refid="11625" relation="include">
        </childnode>
        <childnode refid="11626" relation="include">
        </childnode>
        <childnode refid="11627" relation="include">
        </childnode>
        <childnode refid="11628" relation="include">
        </childnode>
        <childnode refid="11619" relation="include">
        </childnode>
        <childnode refid="11629" relation="include">
        </childnode>
        <childnode refid="11611" relation="include">
        </childnode>
      </node>
      <node id="11638">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="11640">
        <label>entitydef/property_event_stamps.hpp</label>
      </node>
      <node id="11644">
        <label>physics2/worldtri.hpp</label>
      </node>
      <node id="11649">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="11648">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="11600">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="11601" relation="include">
        </childnode>
        <childnode refid="11602" relation="include">
        </childnode>
        <childnode refid="11603" relation="include">
        </childnode>
        <childnode refid="11604" relation="include">
        </childnode>
        <childnode refid="11605" relation="include">
        </childnode>
      </node>
      <node id="11610">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="11647">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="11609">
        <label>Python.h</label>
      </node>
      <node id="11630">
        <label>history_event.hpp</label>
        <link refid="history__event_8hpp_source"/>
        <childnode refid="11631" relation="include">
        </childnode>
        <childnode refid="11619" relation="include">
        </childnode>
        <childnode refid="11632" relation="include">
        </childnode>
        <childnode refid="11633" relation="include">
        </childnode>
        <childnode refid="11634" relation="include">
        </childnode>
        <childnode refid="11620" relation="include">
        </childnode>
      </node>
      <node id="11634">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="11641">
        <label>entitydef/property_owner.hpp</label>
      </node>
      <node id="11618">
        <label>controller.hpp</label>
        <link refid="controller_8hpp_source"/>
        <childnode refid="11609" relation="include">
        </childnode>
        <childnode refid="11619" relation="include">
        </childnode>
        <childnode refid="11620" relation="include">
        </childnode>
        <childnode refid="11621" relation="include">
        </childnode>
        <childnode refid="11622" relation="include">
        </childnode>
        <childnode refid="11623" relation="include">
        </childnode>
        <childnode refid="11611" relation="include">
        </childnode>
      </node>
      <node id="11629">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="11628">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="11598">
        <label>range_trigger.hpp</label>
        <link refid="range__trigger_8hpp_source"/>
        <childnode refid="11599" relation="include">
        </childnode>
      </node>
      <node id="11627">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="11607">
        <label>math.h</label>
      </node>
      <node id="11619">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="11617">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="11606">
        <label>cstddef</label>
      </node>
      <node id="11626">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="11615">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="11636">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="11646">
        <label>server/backup_hash.hpp</label>
      </node>
      <node id="11605">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="11614">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="11608">
        <label>entity.hpp</label>
        <link refid="cellapp_2entity_8hpp_source"/>
        <childnode refid="11609" relation="include">
        </childnode>
        <childnode refid="11610" relation="include">
        </childnode>
        <childnode refid="11611" relation="include">
        </childnode>
        <childnode refid="11612" relation="include">
        </childnode>
        <childnode refid="11618" relation="include">
        </childnode>
        <childnode refid="11624" relation="include">
        </childnode>
        <childnode refid="11630" relation="include">
        </childnode>
        <childnode refid="11635" relation="include">
        </childnode>
        <childnode refid="11637" relation="include">
        </childnode>
        <childnode refid="11638" relation="include">
        </childnode>
        <childnode refid="11639" relation="include">
        </childnode>
        <childnode refid="11640" relation="include">
        </childnode>
        <childnode refid="11641" relation="include">
        </childnode>
        <childnode refid="11642" relation="include">
        </childnode>
        <childnode refid="11643" relation="include">
        </childnode>
        <childnode refid="11628" relation="include">
        </childnode>
        <childnode refid="11644" relation="include">
        </childnode>
        <childnode refid="11645" relation="include">
        </childnode>
        <childnode refid="11646" relation="include">
        </childnode>
        <childnode refid="11647" relation="include">
        </childnode>
        <childnode refid="11648" relation="include">
        </childnode>
        <childnode refid="11605" relation="include">
        </childnode>
        <childnode refid="11649" relation="include">
        </childnode>
      </node>
      <node id="11596">
        <label>cellapp/range_trigger.cpp</label>
        <link refid="range_trigger.cpp"/>
        <childnode refid="11597" relation="include">
        </childnode>
        <childnode refid="11598" relation="include">
        </childnode>
        <childnode refid="11606" relation="include">
        </childnode>
        <childnode refid="11607" relation="include">
        </childnode>
        <childnode refid="11608" relation="include">
        </childnode>
        <childnode refid="11602" relation="include">
        </childnode>
      </node>
      <node id="11632">
        <label>network/interface_element.hpp</label>
      </node>
      <node id="11639">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="range__trigger_8cpp_1afcff2d410aca869e6122a7ffe360fcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DEBUG_COMPONENT2</definition>
        <argsstring>(&quot;Cell&quot;, 0)</argsstring>
        <name>DECLARE_DEBUG_COMPONENT2</name>
        <param>
          <type>&quot;Cell&quot;</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/range_trigger.cpp" line="12" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>http://docs.python.org/api/includes.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;range_trigger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/debug.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">DECLARE_DEBUG_COMPONENT2(<sp/></highlight><highlight class="stringliteral">&quot;Cell&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>RangeTriggerNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="class_range_trigger_node_1a5bc47e3b0b77b5b66d0e8e4f0ee68a27" kindref="member">RangeTriggerNode::RangeTriggerNode</ref>(<sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>*<sp/>pRangeTrigger,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListFlags<sp/>wantsFlags,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListFlags<sp/>makesFlags<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref>(<sp/>wantsFlags,<sp/>makesFlags,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(makesFlags<sp/>&amp;<sp/>FLAG_IS_LOWER_BOUND)<sp/>?</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RANGE_LIST_ORDER_LOWER_BOUND<sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RANGE_LIST_ORDER_UPPER_BOUND<sp/>),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>pRange_(<sp/>pRangeTrigger<sp/>),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>range_(<sp/>range<sp/>),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>oldRange_(<sp/>0.f<sp/>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">RangeTriggerNode::x</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>important<sp/>that<sp/>this<sp/>is<sp/>volatile.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>a<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>pass<sp/>back<sp/>the<sp/>value<sp/>in<sp/>a<sp/>floating<sp/>point<sp/>register<sp/>that<sp/>has<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precision<sp/>than<sp/>we<sp/>expect.<sp/>This<sp/>can<sp/>later<sp/>cause<sp/>problems<sp/>when<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>assumed<sp/>to<sp/>have<sp/>less<sp/>precision<sp/>in<sp/>isInXRange.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>pRange_-&gt;pCentralNode()-&gt;x()<sp/>+<sp/>range_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a3113a63a17fb1ae1d4856d7c53795340" kindref="member">RangeTriggerNode::z</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>important<sp/>that<sp/>this<sp/>is<sp/>volatile.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>a<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>pass<sp/>back<sp/>the<sp/>value<sp/>in<sp/>a<sp/>floating<sp/>point<sp/>register<sp/>that<sp/>has<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precision<sp/>than<sp/>we<sp/>expect.<sp/>This<sp/>can<sp/>later<sp/>cause<sp/>problems<sp/>when<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>assumed<sp/>to<sp/>have<sp/>less<sp/>precision<sp/>in<sp/>wasInZRange.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>pRange_-&gt;pCentralNode()-&gt;z()<sp/>+<sp/>range_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1aa0adc8162aeb9e96b7f7cb88fc27271a" kindref="member">RangeTriggerNode::oldX</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>important<sp/>that<sp/>this<sp/>is<sp/>volatile.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>a<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>pass<sp/>back<sp/>the<sp/>value<sp/>in<sp/>a<sp/>floating<sp/>point<sp/>register<sp/>that<sp/>has<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precision<sp/>than<sp/>we<sp/>expect.<sp/>This<sp/>can<sp/>later<sp/>cause<sp/>problems<sp/>when<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>assumed<sp/>to<sp/>have<sp/>less<sp/>precision<sp/>in<sp/>isInXRange.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>pRange_-&gt;oldEntityX_<sp/>+<sp/>oldRange_;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a62132a618da5247a95e58bffdba5085d" kindref="member">RangeTriggerNode::oldZ</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="105"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>important<sp/>that<sp/>this<sp/>is<sp/>volatile.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>a<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>may<sp/>pass<sp/>back<sp/>the<sp/>value<sp/>in<sp/>a<sp/>floating<sp/>point<sp/>register<sp/>that<sp/>has<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precision<sp/>than<sp/>we<sp/>expect.<sp/>This<sp/>can<sp/>later<sp/>cause<sp/>problems<sp/>when<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>assumed<sp/>to<sp/>have<sp/>less<sp/>precision<sp/>in<sp/>wasInZRange.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>pRange_-&gt;oldEntityZ_<sp/>+<sp/>oldRange_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">BW::string<sp/><ref refid="class_range_trigger_node_1a4ccd72991aca5193ac777303d9a2841a" kindref="member">RangeTriggerNode::debugString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="123"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[256];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_snprintf(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>trigger<sp/>of<sp/>%s<sp/>range<sp/>%6.3f<sp/>Flags:<sp/>%x<sp/>%x&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(range_<sp/>&gt;<sp/>0.f)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Upper&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Lower&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;debugString().c_str(),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(range_),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wantsFlags_,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makesFlags_<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a869fbe58da10d6bbb41ec2fe90195b0a" kindref="member">RangeTriggerNode::crossedX</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;isEntity())</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;crossedXEntity(<sp/>pNode,<sp/>positiveCrossing,<sp/>oldOthX,<sp/>oldOthZ<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;crossedXEntityRange(<sp/>pNode,<sp/>positiveCrossing<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a6446ffa9eab859f16a37f4cd7c6de1bc" kindref="member">RangeTriggerNode::crossedXEntity</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNode,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode<sp/>==<sp/>pRange_-&gt;pCentralNode())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>is<sp/>shuffled<sp/>first<sp/>so<sp/>the<sp/>old<sp/>z<sp/>position<sp/>is<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInZ<sp/>=<sp/>pRange_-&gt;wasInZRange(<sp/>oldOthZ,<sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wasInZ)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pOtherEntity<sp/>=<sp/><ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pNode<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEntering<sp/>=<sp/>(this-&gt;isLowerBound()<sp/>==<sp/>positiveCrossing);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isEntering)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInX<sp/>=<sp/>pRange_-&gt;isInXRange(<sp/>pNode-&gt;x(),<sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInZ<sp/>=<sp/>pRange_-&gt;isInZRange(<sp/>pNode-&gt;z(),<sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInX<sp/>&amp;&amp;<sp/>isInZ)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;triggerEnter(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInX<sp/>=<sp/>pRange_-&gt;wasInXRange(<sp/>oldOthX,<sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasInX)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;triggerLeave(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a8e3e315f5f342fe4d6e5ee4419e14753" kindref="member">RangeTriggerNode::crossedXEntityRange</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNode,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing<sp/>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/>*<sp/>pOtherNode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pNode<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>&amp;<sp/>otherRangeTrigger<sp/>=<sp/>pOtherNode-&gt;rangeTrigger();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>&amp;<sp/>thisRangeTrigger<sp/>=<sp/>*pRange_;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>is<sp/>shuffled<sp/>first<sp/>so<sp/>the<sp/>old<sp/>z<sp/>position<sp/>is<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInZ<sp/>=</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisRangeTrigger.wasInZRange(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1a62132a618da5247a95e58bffdba5085d" kindref="member">oldZ</ref>(),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1a62132a618da5247a95e58bffdba5085d" kindref="member">oldZ</ref>(),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wasInZ)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pOtherEntity<sp/>=<sp/>otherRangeTrigger.pEntity();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEntering<sp/>=<sp/>(this-&gt;isLowerBound()<sp/>==<sp/>positiveCrossing);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isEntering)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInX<sp/>=<sp/>thisRangeTrigger.isInXRange(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">x</ref>(),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">x</ref>(),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInZ<sp/>=<sp/>thisRangeTrigger.isInZRange(</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1a3113a63a17fb1ae1d4856d7c53795340" kindref="member">z</ref>(),</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1a3113a63a17fb1ae1d4856d7c53795340" kindref="member">z</ref>(),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInX<sp/>&amp;&amp;<sp/>isInZ)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisRangeTrigger.triggerEnter(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInX<sp/>=</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisRangeTrigger.wasInXRange(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1aa0adc8162aeb9e96b7f7cb88fc27271a" kindref="member">oldX</ref>(),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1aa0adc8162aeb9e96b7f7cb88fc27271a" kindref="member">oldX</ref>(),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasInX)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisRangeTrigger.triggerLeave(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1acab23e8d8ce325d5d7216ac820bd7b54" kindref="member">RangeTriggerNode::crossedZ</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNode,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode-&gt;isEntity())</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;crossedZEntity(<sp/>pNode,<sp/>positiveCrossing,<sp/>oldOthX,<sp/>oldOthZ<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;crossedZEntityRange(<sp/>pNode,<sp/>positiveCrossing<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a9247704ea49f96e6450ad8012eb7029b" kindref="member">RangeTriggerNode::crossedZEntity</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNode,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNode<sp/>==<sp/>pRange_-&gt;pCentralNode())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>z<sp/>is<sp/>shuffled<sp/>second<sp/>so<sp/>the<sp/>new<sp/>x<sp/>position<sp/>is<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInX<sp/>=<sp/>pRange_-&gt;isInXRange(<sp/>pNode-&gt;x(),<sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isInX)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pOtherEntity<sp/>=<sp/><ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pNode<sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEntering<sp/>=<sp/>(this-&gt;isLowerBound()<sp/>==<sp/>positiveCrossing);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isEntering)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInZ<sp/>=<sp/>pRange_-&gt;isInZRange(<sp/>pNode-&gt;z(),<sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInZ)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;triggerEnter(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInX<sp/>=<sp/>pRange_-&gt;wasInXRange(<sp/>oldOthX,<sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInZ<sp/>=<sp/>pRange_-&gt;wasInZRange(<sp/>oldOthZ,<sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasInX<sp/>&amp;&amp;<sp/>wasInZ)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;triggerLeave(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1ac75731dc04f07a2784de498ed35a2c8a" kindref="member">RangeTriggerNode::crossedZEntityRange</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNode,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing<sp/>)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/>*<sp/>pOtherNode<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pNode<sp/>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>&amp;<sp/>otherRangeTrigger<sp/>=<sp/>pOtherNode-&gt;rangeTrigger();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>&amp;<sp/>thisRangeTrigger<sp/>=<sp/>*pRange_;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>is<sp/>shuffled<sp/>first<sp/>so<sp/>the<sp/>new<sp/>x<sp/>position<sp/>is<sp/>checked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInX<sp/>=<sp/>thisRangeTrigger.isInXRange(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">x</ref>(),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">x</ref>(),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isInX)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pOtherEntity<sp/>=<sp/>otherRangeTrigger.pEntity();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEntering<sp/>=<sp/>(this-&gt;isLowerBound()<sp/>==<sp/>positiveCrossing);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isEntering)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInZ<sp/>=<sp/>pRange_-&gt;isInZRange(</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1a3113a63a17fb1ae1d4856d7c53795340" kindref="member">z</ref>(),</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1a3113a63a17fb1ae1d4856d7c53795340" kindref="member">z</ref>(),</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInZ)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;triggerEnter(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInX<sp/>=</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;wasInXRange(</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1aa0adc8162aeb9e96b7f7cb88fc27271a" kindref="member">oldX</ref>(),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1aa0adc8162aeb9e96b7f7cb88fc27271a" kindref="member">oldX</ref>(),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInZ<sp/>=</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;wasInZRange(</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pLowerTrigger()-&gt;<ref refid="class_range_trigger_node_1a62132a618da5247a95e58bffdba5085d" kindref="member">oldZ</ref>(),</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherRangeTrigger.pUpperTrigger()-&gt;<ref refid="class_range_trigger_node_1a62132a618da5247a95e58bffdba5085d" kindref="member">oldZ</ref>(),</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabsf(<sp/>oldRange_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasInX<sp/>&amp;&amp;<sp/>wasInZ)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange_-&gt;triggerLeave(<sp/>*pOtherEntity<sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a2c651870dbb5fcd28cd876e15338850e" kindref="member">RangeTriggerNode::setRange</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>oldRange_<sp/>=<sp/>range_;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldX<sp/>=<sp/>this-&gt;x();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldZ<sp/>=<sp/>this-&gt;z();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>range_<sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_range_list_node_1a71f3fea44c51ea217658cb2341653bd5" kindref="member">shuffleXThenZ</ref>(<sp/>oldX,<sp/>oldZ<sp/>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>oldRange_<sp/>=<sp/>range_;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>RangeTrigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><ref refid="class_range_trigger_1a6db90bc220c9a01fc1058aaef53c99e8" kindref="member">RangeTrigger::RangeTrigger</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pCentralNode,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>wantsFlagsLower,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>wantsFlagsUpper,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>makesFlagsLower,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>makesFlagsUpper<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>pCentralNode_(<sp/>pCentralNode<sp/>),</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_(<sp/>this,<sp/>range,<sp/>wantsFlagsUpper,<sp/>makesFlagsUpper<sp/>),</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_(<sp/>this,<sp/>-range,<sp/>wantsFlagsLower,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref>::RangeListFlags(</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makesFlagsLower<sp/>|<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref>::FLAG_IS_LOWER_BOUND<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityX_(<sp/>pCentralNode-&gt;x()<sp/>),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityZ_(<sp/>pCentralNode-&gt;z()<sp/>)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><ref refid="class_range_trigger_1a71e0918e9d36cb75becacabec9c4b78b" kindref="member">RangeTrigger::~RangeTrigger</ref>()</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1a12fa2db7cbf4d534f1b9ec4c227098f3" kindref="member">RangeTrigger::insert</ref>()</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/>pCentralNode_-&gt;insertBeforeX(<sp/>&amp;lowerBound_<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/>pCentralNode_-&gt;insertBeforeZ(<sp/>&amp;lowerBound_<sp/>);</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/>pCentralNode_-&gt;nextX()-&gt;insertBeforeX(<sp/>&amp;upperBound_<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/>pCentralNode_-&gt;nextZ()-&gt;insertBeforeZ(<sp/>&amp;upperBound_<sp/>);</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>code<sp/>above<sp/>does<sp/>not<sp/>work<sp/>in<sp/>the<sp/>following<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>the<sp/>range<sp/>of<sp/>the<sp/>trigger<sp/>is<sp/>less<sp/>than<sp/>the<sp/>floating<sp/>pt<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>there<sp/>is<sp/>&gt;1<sp/>entity<sp/>type<sp/>node<sp/>at<sp/>the<sp/>same<sp/>posn<sp/>as<sp/>pCentralNode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>initial<sp/>shuffle<sp/>will<sp/>generate<sp/>spurious<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>nodes<sp/>that<sp/>happened<sp/>to<sp/>get<sp/>sorted<sp/>after<sp/>pCentralNode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>triggers<sp/>are<sp/>x,<sp/>entities<sp/>are<sp/>o,<sp/>new<sp/>triggers<sp/>are<sp/>|:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>x<sp/>x<sp/>x<sp/>o<sp/>o<sp/>o<sp/>o<sp/>o<sp/>x<sp/>x<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>triggers<sp/>encapsulate<sp/>the<sp/>entity.<sp/>But<sp/>if<sp/>say<sp/>the<sp/>range<sp/>is<sp/>zero,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>inital<sp/>shuffle<sp/>will<sp/>move<sp/>them<sp/>to<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>x<sp/>x<sp/>x<sp/>o<sp/>o<sp/>o<sp/>o<sp/>o<sp/>|<sp/>|<sp/>x<sp/>x<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>generates<sp/>two<sp/>triggerLeaves<sp/>for<sp/>entities<sp/>never<sp/>entered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>already<sp/>code<sp/>to<sp/>ignore<sp/>the<sp/>when<sp/>the<sp/>trigger<sp/>crosses<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>own<sp/>entity,<sp/>required<sp/>for<sp/>the<sp/>setRange(0)<sp/>call<sp/>used<sp/>to<sp/>remove<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>there<sp/>might<sp/>be<sp/>a<sp/>problem<sp/>with<sp/>seeing<sp/>those<sp/>co-located<sp/>entities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>first<sp/>place<sp/>too<sp/>...<sp/>anyway,<sp/>this<sp/>solution<sp/>is<sp/>much<sp/>saner<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>concerned:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>lowerOrder<sp/>=<sp/>lowerBound_.order();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>upperOrder<sp/>=<sp/>upperBound_.order();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowerOrder<sp/>&lt;<sp/>upperOrder<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowerOrder<sp/>&gt;<sp/>pCentralNode_-&gt;order()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperOrder<sp/>&gt;<sp/>pCentralNode_-&gt;order()<sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pCursor<sp/>=<sp/>pCentralNode_-&gt;nextX();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isEqual(<sp/>pCursor-&gt;x(),<sp/>pCentralNode_-&gt;x()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pCursor-&gt;order()<sp/>&lt;<sp/>upperOrder))</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCursor<sp/>=<sp/>pCursor-&gt;nextX();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>pCursor-&gt;<ref refid="class_range_list_node_1a570ce871ee4f9b904b6b8f58059f2ab4" kindref="member">insertBeforeX</ref>(<sp/>&amp;lowerBound_<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>pCursor-&gt;insertBeforeX(<sp/>&amp;upperBound_<sp/>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>pCursor<sp/>=<sp/>pCentralNode_-&gt;nextZ();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isEqual(<sp/>pCursor-&gt;z(),<sp/>pCentralNode_-&gt;z()<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pCursor-&gt;order()<sp/>&lt;<sp/>upperOrder))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCursor<sp/>=<sp/>pCursor-&gt;nextZ();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>pCursor-&gt;insertBeforeZ(<sp/>&amp;lowerBound_<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>pCursor-&gt;insertBeforeZ(<sp/>&amp;upperBound_<sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityX_<sp/>=<sp/>pCentralNode_-&gt;x();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityZ_<sp/>=<sp/>pCentralNode_-&gt;z();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>perform<sp/>the<sp/>initial<sp/>shuffle<sp/>from<sp/>this<sp/>location,<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>spot<sp/>that<sp/>setRange(0)<sp/>would<sp/>put<sp/>us<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.oldRange(<sp/>0.f<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.oldRange(<sp/>0.f<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.shuffleX(<sp/>oldEntityX_,<sp/>oldEntityZ_<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.shuffleX(<sp/>oldEntityX_,<sp/>oldEntityZ_<sp/>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.shuffleZ(<sp/>oldEntityX_,<sp/>oldEntityZ_<sp/>);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.shuffleZ(<sp/>oldEntityX_,<sp/>oldEntityZ_<sp/>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.updateOldRange();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.updateOldRange();</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1ae621f3f691d64dc27662316d86bee8f4" kindref="member">RangeTrigger::remove</ref>()</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>our<sp/>=<sp/>upperBound_.range();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>olr<sp/>=<sp/>lowerBound_.range();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.setRange(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.setRange(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;removeWithoutContracting();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.range(<sp/>our<sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.range(<sp/>olr<sp/>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1ae76f23ffdf580976415200475da1c001" kindref="member">RangeTrigger::removeWithoutContracting</ref>()</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.removeFromRangeList();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.removeFromRangeList();</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1a3581a23c0557024ca3e8e37db8ea5951" kindref="member">RangeTrigger::shuffleXThenZ</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldZ<sp/>)</highlight></codeline>
<codeline lineno="571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remove<sp/>this<sp/>assert<sp/>after<sp/>a<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isEqual(<sp/>oldEntityX_,<sp/>oldX<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isEqual(<sp/>oldEntityZ_,<sp/>oldZ<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.shuffleXThenZ(</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldX<sp/>+<sp/>upperBound_.range(),<sp/>oldZ<sp/>+<sp/>upperBound_.range()<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.shuffleXThenZ(</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldX<sp/>+<sp/>lowerBound_.range(),<sp/>oldZ<sp/>+<sp/>lowerBound_.range()<sp/>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityX_<sp/>=<sp/>pCentralNode_-&gt;x();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityZ_<sp/>=<sp/>pCentralNode_-&gt;z();</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1a4ed1d9ffbd2e6896c5fc177a4a874481" kindref="member">RangeTrigger::shuffleXThenZExpand</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xInc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zInc,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldZ<sp/>)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remove<sp/>this<sp/>assert<sp/>after<sp/>a<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isEqual(<sp/>oldEntityX_,<sp/>oldX<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isEqual(<sp/>oldEntityZ_,<sp/>oldZ<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>does<sp/>really<sp/>matter<sp/>what<sp/>arguments<sp/>are<sp/>passed<sp/>here<sp/>for<sp/>shuffleX<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffleZ<sp/>as<sp/>they<sp/>are<sp/>not<sp/>used<sp/>since<sp/>the<sp/>triggers<sp/>do<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FLAG_MAKES_CROSSINGS<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref>*<sp/>xTrigger<sp/>=<sp/>xInc<sp/>?<sp/>&amp;upperBound_<sp/>:<sp/>&amp;lowerBound_;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>xTrigger-&gt;<ref refid="class_range_list_node_1a64d09ef9737c804bae2e1747e8da4b3a" kindref="member">shuffleX</ref>(<sp/>oldX<sp/>+<sp/>xTrigger-&gt;range(),<sp/>oldZ<sp/>+<sp/>xTrigger-&gt;range()<sp/>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref>*<sp/>zTrigger<sp/>=<sp/>zInc<sp/>?<sp/>&amp;upperBound_<sp/>:<sp/>&amp;lowerBound_;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>zTrigger-&gt;<ref refid="class_range_list_node_1a73e62225d1db04e36d278355dea39340" kindref="member">shuffleZ</ref>(<sp/>oldX<sp/>+<sp/>zTrigger-&gt;range(),<sp/>oldZ<sp/>+<sp/>zTrigger-&gt;range()<sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1a19ec1644a0b20fde7d1451122ba9236a" kindref="member">RangeTrigger::shuffleXThenZContract</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xInc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zInc,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldZ<sp/>)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remove<sp/>this<sp/>assert<sp/>after<sp/>a<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isEqual(<sp/>oldEntityX_,<sp/>oldX<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isEqual(<sp/>oldEntityZ_,<sp/>oldZ<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>does<sp/>really<sp/>matter<sp/>what<sp/>arguments<sp/>are<sp/>passed<sp/>here<sp/>for<sp/>shuffleX<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffleZ<sp/>as<sp/>they<sp/>are<sp/>not<sp/>used<sp/>since<sp/>the<sp/>triggers<sp/>do<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FLAG_MAKES_CROSSINGS<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref>*<sp/>xTrigger<sp/>=<sp/>xInc<sp/>?<sp/>&amp;lowerBound_<sp/>:<sp/>&amp;upperBound_;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>xTrigger-&gt;<ref refid="class_range_list_node_1a64d09ef9737c804bae2e1747e8da4b3a" kindref="member">shuffleX</ref>(<sp/>oldX<sp/>+<sp/>xTrigger-&gt;range(),<sp/>oldZ<sp/>+<sp/>xTrigger-&gt;range()<sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref>*<sp/>zTrigger<sp/>=<sp/>zInc<sp/>?<sp/>&amp;<sp/>lowerBound_<sp/>:<sp/>&amp;upperBound_;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>zTrigger-&gt;<ref refid="class_range_list_node_1a73e62225d1db04e36d278355dea39340" kindref="member">shuffleZ</ref>(<sp/>oldX<sp/>+<sp/>zTrigger-&gt;range(),<sp/>oldZ<sp/>+<sp/>zTrigger-&gt;range()<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityX_<sp/>=<sp/>pCentralNode_-&gt;x();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>oldEntityZ_<sp/>=<sp/>pCentralNode_-&gt;z();</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1a73c4d12a5184991b73e6b585cd3d3a9b" kindref="member">RangeTrigger::setRange</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>0.001f)<sp/>r<sp/>=<sp/>0.001f;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>upperBound_.setRange(<sp/><sp/>r<sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>lowerBound_.setRange(<sp/>-r<sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal">BW::string<sp/><ref refid="class_range_trigger_1aef795871cdf9174c15313e1a5325b746" kindref="member">RangeTrigger::debugString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="646"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RangeTrigger&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1aeff1830e60140e662ed4860b5643ec42" kindref="member">RangeTrigger::contains</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pQuery<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="656"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>qx<sp/>=<sp/>pQuery-&gt;x();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>qz<sp/>=<sp/>pQuery-&gt;z();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>qo<sp/>=<sp/>pQuery-&gt;order();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lx<sp/>=<sp/>lowerBound_.x();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lz<sp/>=<sp/>lowerBound_.z();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>lo<sp/>=<sp/>lowerBound_.order();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ux<sp/>=<sp/>upperBound_.x();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uz<sp/>=<sp/>upperBound_.z();</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>uo<sp/>=<sp/>upperBound_.order();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lx<sp/>&lt;<sp/>qx<sp/>||<sp/>(isEqual(<sp/>lx,<sp/>qx<sp/>)<sp/>&amp;&amp;<sp/>lo<sp/>&lt;<sp/>qo))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(qx<sp/>&lt;<sp/>ux<sp/>||<sp/>(isEqual(<sp/>qx,<sp/>ux<sp/>)<sp/>&amp;&amp;<sp/>qo<sp/>&lt;<sp/>uo))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lz<sp/>&lt;<sp/>qz<sp/>||<sp/>(isEqual(<sp/>lz,<sp/>qz<sp/>)<sp/>&amp;&amp;<sp/>lo<sp/>&lt;<sp/>qo))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(qz<sp/>&lt;<sp/>uz<sp/>||<sp/>(isEqual(<sp/>qz,<sp/>uz<sp/>)<sp/>&amp;&amp;<sp/>qo<sp/>&lt;<sp/>uo));</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_1a0b4044811c57fb58d5f820144d8400cb" kindref="member">RangeTrigger::containsInZ</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pQuery<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="682"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>qz<sp/>=<sp/>pQuery-&gt;z();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>qo<sp/>=<sp/>pQuery-&gt;order();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lz<sp/>=<sp/>lowerBound_.z();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>lo<sp/>=<sp/>lowerBound_.order();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uz<sp/>=<sp/>upperBound_.z();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>uo<sp/>=<sp/>upperBound_.order();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lz<sp/>&lt;<sp/>qz<sp/>||<sp/>(isEqual(<sp/>lz,<sp/>qz<sp/>)<sp/>&amp;&amp;<sp/>lo<sp/>&lt;<sp/>qo))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(qz<sp/>&lt;<sp/>uz<sp/>||<sp/>(isEqual(<sp/>qz,<sp/>uz<sp/>)<sp/>&amp;&amp;<sp/>qo<sp/>&lt;<sp/>uo));</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>range_trigger.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellapp/range_trigger.cpp"/>
  </compounddef>
</doxygen>
