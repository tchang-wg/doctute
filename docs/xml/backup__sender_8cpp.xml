<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="backup__sender_8cpp" kind="file" language="C++">
    <compoundname>backup_sender.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="backup__sender_8hpp" local="yes">backup_sender.hpp</includes>
    <includes refid="base_8hpp" local="yes">base.hpp</includes>
    <includes refid="baseapp_8hpp" local="yes">baseapp.hpp</includes>
    <includes refid="baseapp__config_8hpp" local="yes">baseapp_config.hpp</includes>
    <includes refid="baseappmgr__gateway_8hpp" local="yes">baseappmgr_gateway.hpp</includes>
    <includes refid="baseappmgr__interface_8hpp" local="yes">baseappmgr/baseappmgr_interface.hpp</includes>
    <includes refid="cellapp__interface_8hpp" local="yes">cellapp/cellapp_interface.hpp</includes>
    <includes local="yes">network/bundle.hpp</includes>
    <includes local="yes">network/bundle_sending_map.hpp</includes>
    <includes local="yes">network/channel_sender.hpp</includes>
    <includes local="yes">server/bwconfig.hpp</includes>
    <includes local="yes">server/backup_hash_chain.hpp</includes>
    <incdepgraph>
      <node id="452">
        <label>baseappmgr/baseappmgr_interface.hpp</label>
        <link refid="baseappmgr__interface_8hpp_source"/>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="384">
        <label>connection/common_baseapp_interface.hpp</label>
      </node>
      <node id="444">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="424">
        <label>bwtracer.hpp</label>
        <link refid="bwtracer_8hpp_source"/>
        <childnode refid="425" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>server/bwconfig.hpp</label>
      </node>
      <node id="441">
        <label>queue</label>
      </node>
      <node id="445">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="374">
        <label>base.hpp</label>
        <link refid="base_8hpp_source"/>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
      </node>
      <node id="410">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="428">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="376">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="457">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="386">
        <label>baseapp_int_interface_stream_helpers.hpp</label>
        <link refid="baseapp__int__interface__stream__helpers_8hpp_source"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="371">
        <label>script/first_include.hpp</label>
      </node>
      <node id="385">
        <label>buffered_input_message_handler.hpp</label>
        <link refid="baseapp_2buffered__input__message__handler_8hpp_source"/>
      </node>
      <node id="449">
        <label>script/script_object.hpp</label>
      </node>
      <node id="458">
        <label>network/bundle.hpp</label>
      </node>
      <node id="438">
        <label>network/message_filter.hpp</label>
      </node>
      <node id="432">
        <label>connection/client_interface.hpp</label>
      </node>
      <node id="456">
        <label>cellapp/cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="407">
        <label>pyscript/pyobject_pointer.hpp</label>
      </node>
      <node id="400">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="453">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="378">
        <label>server/entity_app_config.hpp</label>
      </node>
      <node id="402">
        <label>math/stat_watcher_creator.hpp</label>
      </node>
      <node id="370">
        <label>baseapp/backup_sender.cpp</label>
        <link refid="backup_sender.cpp"/>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="433">
        <label>cstdmf/concurrency.hpp</label>
      </node>
      <node id="388">
        <label>server/common.hpp</label>
      </node>
      <node id="399">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="411">
        <label>server/auto_backup_and_archive.hpp</label>
      </node>
      <node id="405">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="418">
        <label>server/backup_hash_chain.hpp</label>
      </node>
      <node id="396">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="443">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="404">
        <label>write_to_db_request.hpp</label>
        <link refid="write__to__db__request_8hpp_source"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
      </node>
      <node id="387">
        <label>network/stream_helpers.hpp</label>
      </node>
      <node id="394">
        <label>network/udp_channel.hpp</label>
      </node>
      <node id="450">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="409">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="413">
        <label>server/writedb.hpp</label>
      </node>
      <node id="426">
        <label>proxy.hpp</label>
        <link refid="proxy_8hpp_source"/>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="419">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="430">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="435">
        <label>network/channel.hpp</label>
      </node>
      <node id="395">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="420">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="437">
        <label>rate_limit_message_filter.hpp</label>
        <link refid="rate__limit__message__filter_8hpp_source"/>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>baseapp_int_interface.hpp</label>
        <link refid="baseapp__int__interface_8hpp_source"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="372">
        <label>backup_sender.hpp</label>
        <link refid="backup__sender_8hpp_source"/>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="427">
        <label>data_downloads.hpp</label>
        <link refid="data__downloads_8hpp_source"/>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
      </node>
      <node id="416">
        <label>backed_up_base_app.hpp</label>
        <link refid="backed__up__base__app_8hpp_source"/>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
      </node>
      <node id="412">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="375">
        <label>Python.h</label>
      </node>
      <node id="431">
        <label>connection/baseapp_ext_interface.hpp</label>
      </node>
      <node id="448">
        <label>network/tcp_server.hpp</label>
      </node>
      <node id="460">
        <label>network/channel_sender.hpp</label>
      </node>
      <node id="422">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="455">
        <label>server/reviver_subject.hpp</label>
      </node>
      <node id="403">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="436">
        <label>pyscript/stl_to_py.hpp</label>
      </node>
      <node id="398">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="440">
        <label>cstdmf/timestamp.hpp</label>
      </node>
      <node id="434">
        <label>math/ema.hpp</label>
      </node>
      <node id="401">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="439">
        <label>network/unpacked_message_header.hpp</label>
      </node>
      <node id="381">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="383">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="442">
        <label>cstdmf/background_file_writer.hpp</label>
      </node>
      <node id="429">
        <label>deque</label>
      </node>
      <node id="397">
        <label>entity_type.hpp</label>
        <link refid="baseapp_2entity__type_8hpp_source"/>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="415">
        <label>baseapp.hpp</label>
        <link refid="baseapp_8hpp_source"/>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="425">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="406">
        <label>db/database_gateway.hpp</label>
      </node>
      <node id="377">
        <label>baseapp_config.hpp</label>
        <link refid="baseapp__config_8hpp_source"/>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
      </node>
      <node id="373">
        <label>server/backup_hash.hpp</label>
      </node>
      <node id="390">
        <label>connection/common_client_interface.hpp</label>
      </node>
      <node id="451">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="454">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="391">
        <label>mailbox.hpp</label>
        <link refid="baseapp_2mailbox_8hpp_source"/>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="379">
        <label>server/external_app_config.hpp</label>
      </node>
      <node id="459">
        <label>network/bundle_sending_map.hpp</label>
      </node>
      <node id="423">
        <label>bases.hpp</label>
        <link refid="bases_8hpp_source"/>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="447">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="421">
        <label>baseappmgr_gateway.hpp</label>
        <link refid="baseappmgr__gateway_8hpp_source"/>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>memory</label>
      </node>
      <node id="446">
        <label>network/channel_listener.hpp</label>
      </node>
      <node id="408">
        <label>common/py_timer.hpp</label>
      </node>
      <node id="393">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_start_set_backup_diff_visitor" prot="public">StartSetBackupDiffVisitor</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;backup_sender.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;base.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseappmgr_gateway.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseappmgr/baseappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp/cellapp_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle_sending_map.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/channel_sender.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/bwconfig.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/backup_hash_chain.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>StartSetBackupDiffVisitor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_start_set_backup_diff_visitor" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_start_set_backup_diff_visitor" kindref="compound">StartSetBackupDiffVisitor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BackupHash::DiffVisitor</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_start_set_backup_diff_visitor" kindref="compound">StartSetBackupDiffVisitor</ref>(<sp/>Mercury::NetworkInterface<sp/>&amp;<sp/>interface<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface_(<sp/>interface<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onAdd(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>index,<sp/>uint32<sp/>virtualSize,<sp/>uint32<sp/>prime<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>BaseApp::getChannel(<sp/>addr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::startBaseEntitiesBackupArgs<sp/>&amp;<sp/>args<sp/>=</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::startBaseEntitiesBackupArgs::start(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender.bundle()<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.realBaseAppAddr<sp/>=<sp/>interface_.address();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.index<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.hashSize<sp/>=<sp/>virtualSize;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.prime<sp/>=<sp/>prime;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.isInitial<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onChange(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>index,<sp/>uint32<sp/>virtualSize,<sp/>uint32<sp/>prime<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;onAdd(<sp/>addr,<sp/>index,<sp/>virtualSize,<sp/>prime<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onRemove(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>index,<sp/>uint32<sp/>virtualSize,<sp/>uint32<sp/>prime<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::NetworkInterface<sp/>&amp;<sp/>interface_;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>BackupSender</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="class_backup_sender_1afad582f4cf927fbdbc3e803d0b0d517b" kindref="member">BackupSender::BackupSender</ref>(<sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>offloadPerTick_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>backupRemainder_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>basesToBackUp_(),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>entityToAppHash_(),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>newEntityToAppHash_(),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>isSwitchingToNewBackup_(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>isOffloading_(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>ticksSinceLastSuccessfulOffload_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApp_(<sp/>baseApp<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backup_sender_1a7384ead275d9e126701d663d6b2c64b5" kindref="member">BackupSender::tick</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bases" kindref="compound">Bases</ref><sp/>&amp;<sp/>bases,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::NetworkInterface<sp/>&amp;<sp/>networkInterface<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>periodInTicks<sp/>=<sp/>BaseAppConfig::backupPeriodInTicks();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periodInTicks<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isSwitchingToNewBackup_<sp/>&amp;&amp;<sp/>entityToAppHash_.empty())</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::BundleSendingMap<sp/>bundles(<sp/>networkInterface<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>entities<sp/>to<sp/>back<sp/>up<sp/>is<sp/>calculated.<sp/>A<sp/>floating<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remainder<sp/>is<sp/>kept<sp/>so<sp/>that<sp/>the<sp/>backup<sp/>period<sp/>is<sp/>roughly<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numToBackUpFloat<sp/>=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(bases.size())/periodInTicks<sp/>+<sp/>backupRemainder_;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numToBackUp<sp/>=<sp/>int(numToBackUpFloat);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>backupRemainder_<sp/>=<sp/>numToBackUpFloat<sp/>-<sp/>numToBackUp;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOffloading_)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offloadPerTick_<sp/>&lt;<sp/>numToBackUp)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offloadPerTick_<sp/>=<sp/>numToBackUp;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BackupSender::tick:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseApp<sp/>is<sp/>retiring,<sp/>offloading<sp/>at<sp/>%d<sp/>entities<sp/>per<sp/>tick\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offloadPerTick_<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numToBackUp<sp/>=<sp/>offloadPerTick_;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basesToBackUp_.empty())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;restartBackupCycle(<sp/>bases<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>madeProgress<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((numToBackUp<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>!basesToBackUp_.empty())</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/><sp/><sp/><sp/>Must<sp/>use<sp/>the<sp/>SmartPointer<sp/>in<sp/>case<sp/>the<sp/>entity<sp/>gets<sp/>offloaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>discarded<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">BasePtr</ref><sp/>pBase<sp/>=<sp/>bases.findEntity(<sp/>basesToBackUp_.back()<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basesToBackUp_.pop_back();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBase<sp/>&amp;&amp;<sp/>this-&gt;autoBackupBase(<sp/>*pBase,<sp/>bundles<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>madeProgress<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--numToBackUp;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>at<sp/>least<sp/>one<sp/>base<sp/>was<sp/>backed<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(madeProgress)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>all<sp/>the<sp/>backup<sp/>data<sp/>to<sp/>the<sp/>other<sp/>baseapps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundles.sendAll();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ticksSinceLastSuccessfulOffload_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOffloading_<sp/>&amp;&amp;<sp/>!bases.empty())</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ticksSinceLastSuccessfulOffload_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>the<sp/>number<sp/>of<sp/>pending<sp/>entities<sp/>every<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::div_t<sp/>sec<sp/>=<sp/>std::div(<sp/>ticksSinceLastSuccessfulOffload_,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppConfig::updateHertz()<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sec.rem<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BackupSender::tick:<sp/>unable<sp/>to<sp/>offload<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIzu</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>entities<sp/>during<sp/>last<sp/>%d<sp/>seconds<sp/>(possibly<sp/>waiting<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>client<sp/>connection)\n&quot;</highlight><highlight class="normal">,<sp/>bases.size(),<sp/>sec.quot<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basesToBackUp_.empty()<sp/>&amp;&amp;<sp/>isSwitchingToNewBackup_)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>were<sp/>updating<sp/>a<sp/>new<sp/>backup,<sp/>we<sp/>are<sp/>now<sp/>finished.<sp/>Inform<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BaseAppMgr<sp/>and<sp/>start<sp/>using<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ackNewBackupHash();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backup_sender_1a902554e4cfaeefded5830df6a428573e" kindref="member">BackupSender::restartBackupCycle</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bases" kindref="compound">Bases</ref><sp/>&amp;<sp/>bases<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>basesToBackUp_.clear();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>Bases::const_iterator<sp/>iBase<sp/>=<sp/>bases.begin();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iBase<sp/>!=<sp/>bases.end())</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basesToBackUp_.push_back(<sp/>(iBase++)-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Randomise<sp/>the<sp/>backup<sp/>so<sp/>we<sp/>do<sp/>not<sp/>load<sp/>ourselves<sp/>if<sp/>contiguous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blocks<sp/>of<sp/>large<sp/>entities<sp/>exist<sp/>in<sp/>the<sp/>bases<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_shuffle(<sp/>basesToBackUp_.begin(),<sp/>basesToBackUp_.end()<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>It<sp/>would<sp/>be<sp/>nicer<sp/>if<sp/>we<sp/>maintained<sp/>the<sp/>random<sp/>order.<sp/>Currently,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>would<sp/>be<sp/>possible<sp/>for<sp/>an<sp/>entity<sp/>not<sp/>to<sp/>be<sp/>backed<sp/>up<sp/>for<sp/>twice<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>archive<sp/>period.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backup_sender_1abcd9d08735b30c50df4a4efdee822c00" kindref="member">BackupSender::autoBackupBase</ref>(<sp/><ref refid="class_base" kindref="compound">Base</ref><sp/>&amp;<sp/>base,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::BundleSendingMap<sp/>&amp;<sp/>bundles,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ReplyMessageHandler<sp/>*<sp/>pHandler<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>NULL<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>NULL<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>auto<sp/>backup<sp/>is<sp/>turned<sp/>on,<sp/>which<sp/>should<sp/>be<sp/>disregarded<sp/>if<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>offloading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isOffloading_<sp/>&amp;&amp;<sp/>!base.shouldAutoBackup())</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;backupBase(<sp/>base,<sp/></highlight><highlight class="comment">/*isRequired*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>bundles,<sp/>pHandler,<sp/>arg<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BaseAppConfig::shouldLogBackups())</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BackupSender::autoBackupBase:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Base<sp/>%d<sp/>backed<sp/>up.\n&quot;</highlight><highlight class="normal">,<sp/>base.id()<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base.shouldAutoBackup()<sp/>==<sp/>AutoBackupAndArchive::NEXT_ONLY)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base.shouldAutoBackup(<sp/>AutoBackupAndArchive::NO<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_backup_sender_1a8ad68c14d46e7ce326a0f241b6ed825e" kindref="member">BackupSender::backupBase</ref>(<sp/><ref refid="class_base" kindref="compound">Base</ref><sp/>&amp;<sp/>base,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRequired,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::BundleSendingMap<sp/>&amp;<sp/>bundles,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ReplyMessageHandler<sp/>*<sp/>pHandler,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>addr<sp/>=<sp/>entityToAppHash_.addressFor(<sp/>base.id()<sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSwitchingToNewBackup_)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>new<sp/>hash<sp/>is<sp/>being<sp/>updated,<sp/>only<sp/>send<sp/>the<sp/>backup<sp/>for<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entities<sp/>whose<sp/>hash<sp/>has<sp/>changed.<sp/>The<sp/>destination<sp/>already<sp/>has<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backup<sp/>for<sp/>those<sp/>entities<sp/>that<sp/>have<sp/>not<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>newAddr<sp/>=<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntityToAppHash_.addressFor(<sp/>base.id()<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((newAddr<sp/>==<sp/>addr)<sp/>&amp;&amp;<sp/>base.wasBackupSent()<sp/>&amp;&amp;<sp/>!isRequired)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>newAddr;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr<sp/>==<sp/>Mercury::Address::NONE)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOffloading_)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base.isProxy())</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_proxy" kindref="compound">Proxy</ref><sp/>&amp;<sp/>proxy<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_proxy" kindref="compound">Proxy</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>base<sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(proxy.hasClient()<sp/>&amp;&amp;<sp/>!proxy.isClientConnected())</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>client<sp/>to<sp/>connect<sp/>so<sp/>it<sp/>can<sp/>be<sp/>transferred<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>another<sp/>BaseApp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BackupSender::backupBase:<sp/>client<sp/>%s<sp/>%d<sp/>has<sp/>not<sp/>yet<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;connected,<sp/>offloading<sp/>is<sp/>delayed\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proxy.pType()-&gt;name(),<sp/>proxy.id()<sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>baseapp<sp/>is<sp/>offloading,<sp/>the<sp/>hash<sp/>is<sp/>immutable,<sp/>so<sp/>if<sp/>an<sp/>address<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>dead,<sp/>just<sp/>find<sp/>another<sp/>baseapp<sp/>to<sp/>send<sp/>stuff<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr<sp/>=<sp/>baseApp_.backupHashChain().addressFor(<sp/>addr,<sp/>base.id()<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>bundles[<sp/>addr<sp/>];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>base.backupTo(<sp/>addr,<sp/>bundle,<sp/>isOffloading_,<sp/>pHandler,<sp/>arg<sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BackupSender::ackNewBackupHash()</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BackupSender::tick:<sp/>New<sp/>backup<sp/>is<sp/>ready.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApp_.baseAppMgr().useNewBackupHash(<sp/>entityToAppHash_,<sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntityToAppHash_<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>entityToAppHash_.swap(<sp/>newEntityToAppHash_<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>newEntityToAppHash_.clear();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>isSwitchingToNewBackup_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backup_sender_1aeca1479114be3c8a806d46a440fd6c8d" kindref="member">BackupSender::addToStream</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>entityToAppHash_<sp/>&lt;&lt;<sp/>newEntityToAppHash_;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backup_sender_1ab70de4a09b686415b823f538fa183192" kindref="member">BackupSender::handleBaseAppDeath</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr<sp/>)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>offloading,<sp/>don&apos;t<sp/>touch<sp/>that<sp/>hash!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOffloading_)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>were<sp/>backing<sp/>up<sp/>to<sp/>the<sp/>dead<sp/>baseapp,<sp/>no<sp/>longer<sp/>send<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSwitchingToNewBackup_)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntityToAppHash_.clearAddress(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityToAppHash_.clearAddress(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_backup_sender_1af1115ac5d0816baa3a8cbffd44c68224" kindref="member">BackupSender::setBackupBaseApps</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::NetworkInterface<sp/>&amp;<sp/>networkInterface<sp/>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!isOffloading_<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSwitchingToNewBackup_)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>were<sp/>already<sp/>transitioning<sp/>to<sp/>a<sp/>new<sp/>hash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>newEntityToAppHash_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>dstAddr<sp/>=<sp/>newEntityToAppHash_[<sp/>i<sp/>];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstAddr<sp/>!=<sp/>Mercury::Address::NONE)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>BaseApp::getChannel(<sp/>dstAddr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::stopBaseEntitiesBackupArgs<sp/>&amp;<sp/>args<sp/>=</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::stopBaseEntitiesBackupArgs::start(</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender.bundle()<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.realBaseAppAddr<sp/>=<sp/>networkInterface.address();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.index<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.hashSize<sp/>=<sp/>newEntityToAppHash_.virtualSizeFor(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.prime<sp/>=<sp/>newEntityToAppHash_.prime();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.isPending<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>newEntityToAppHash_;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_start_set_backup_diff_visitor" kindref="compound">StartSetBackupDiffVisitor</ref><sp/>visitor(<sp/>networkInterface<sp/>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>entityToAppHash_.diff(<sp/>newEntityToAppHash_,<sp/>visitor<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>isSwitchingToNewBackup_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;restartBackupCycle(<sp/>baseApp_.bases()<sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>backup_sender.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="baseapp/backup_sender.cpp"/>
  </compounddef>
</doxygen>
