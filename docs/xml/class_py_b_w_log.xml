<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_py_b_w_log" kind="class" language="C++" prot="public">
    <compoundname>PyBWLog</compoundname>
    <basecompoundref prot="public" virt="non-virtual">PyObject</basecompoundref>
    <includes refid="py__bwlog_8hpp" local="no">py_bwlog.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_py_b_w_log_1aa43c00b31ef613c6484085fc3777d01f" prot="public" static="yes" mutable="no">
        <type>PyTypeObject</type>
        <definition>PyTypeObject PyBWLog::s_type_</definition>
        <argsstring></argsstring>
        <name>s_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type object for <ref refid="class_py_b_w_log" kindref="compound">PyBWLog</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="55" column="1" bodyfile="tools/message_logger/py_bwlog.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_py_b_w_log_1abf893fffe21beaa651caa0648b39ab75" prot="private" static="no" mutable="no">
        <type><ref refid="class_log_reader_m_l_d_b" kindref="compound">LogReaderMLDB</ref> *</type>
        <definition>LogReaderMLDB* PyBWLog::pLogReader_</definition>
        <argsstring></argsstring>
        <name>pLogReader_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="80" column="1" bodyfile="tools/message_logger/py_bwlog.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_py_b_w_log_1ac0c8927bea661e056beaaf1ca7731578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::pyGetAttribute</definition>
        <argsstring>(const char *attr)</argsstring>
        <name>pyGetAttribute</name>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns an attribute object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="29" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="401" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a695d1d6e8fd8a73490e0e73e7c604eef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::py_fetch</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_fetch</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the result of a query on the user log. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="31" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="429" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1afd39dd49000781c5231a5423a29d0b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::py_getCategoryNames</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_getCategoryNames</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns None, in place of the list of category names. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="32" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="465" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1adc6db68a3b529f5619dcd53f7027cb4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::py_getComponentNames</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_getComponentNames</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the list of component names. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="33" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="487" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1acd6d8ed6c0468f3b8e73a8019fb127e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::py_getFormatStrings</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_getFormatStrings</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the list of format strings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="34" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="509" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1ad48b6295f8343c188ac8df2e67742b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::py_getHostnames</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_getHostnames</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the dict of hostnames. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="35" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="543" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a10eeda4907458a156f5a44c5cc7e26d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::py_getUsers</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_getUsers</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the dict of users. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="36" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="565" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a0117fe54b4bdffe5efa8f24b60900340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::py_getUserLog</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_getUserLog</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the user log </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="37" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="597" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1aafe5e2b4d3571c40e0a54ab48987d578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::pyGet_logDirectory</definition>
        <argsstring>()</argsstring>
        <name>pyGet_logDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method converts the log reader&apos;s directory to a Python string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="39" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="745" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a268e29731ea4da6bac46e055be7c7786" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PyBWLog::incRef</definition>
        <argsstring>() const </argsstring>
        <name>incRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="47" column="1" bodyfile="tools/message_logger/py_bwlog.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a9eaf32633d73553e50d07b310342786b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PyBWLog::decRef</definition>
        <argsstring>() const </argsstring>
        <name>decRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="48" column="1" bodyfile="tools/message_logger/py_bwlog.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a22a2e2b7e272ff9f39bf7d98585b52bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PyBWLog::refCount</definition>
        <argsstring>() const </argsstring>
        <name>refCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="49" column="1" bodyfile="tools/message_logger/py_bwlog.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a9fa33364f4e92804731bc2e455b994b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyBWLog::PyBWLog</definition>
        <argsstring>()</argsstring>
        <name>PyBWLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="58" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="666" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a21e8871b1d2f75fe277abb43b19578b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PyBWLog::init</definition>
        <argsstring>(const char *logDir)</argsstring>
        <name>init</name>
        <param>
          <type>const char *</type>
          <declname>logDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates the log reader </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="60" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="695" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a3f0a0794fce07131c33f3590d62473ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">QueryParamsPtr</ref></type>
        <definition>QueryParamsPtr PyBWLog::getQueryParamsFromPyArgs</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>getQueryParamsFromPyArgs</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method converts an arg list into a set of query parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="62" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="712" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1acd08f85add966661ccf23dc759d72f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::fetch</definition>
        <argsstring>(PyUserLogPtr pUserLog, QueryParamsPtr pParams)</argsstring>
        <name>fetch</name>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyUserLogPtr</ref></type>
          <declname>pUserLog</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">QueryParamsPtr</ref></type>
          <declname>pParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method queries the given user log with the given parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="63" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="729" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1abd09a030932a4f333bed321e4395bf78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * PyBWLog::getLogDirectory</definition>
        <argsstring>() const </argsstring>
        <name>getLogDirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the log reader&apos;s directory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="65" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="754" bodyend="764"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1aaf19f636670683a61ceab9734289b900" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string PyBWLog::getHostByAddr</definition>
        <argsstring>(MessageLogger::IPAddress ipAddress) const </argsstring>
        <name>getHostByAddr</name>
        <param>
          <type>MessageLogger::IPAddress</type>
          <declname>ipAddress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method converts an IP address into its associated host </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="66" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="770" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a051f7ac1e5fd3d3fece3f90caa45c8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_log_reader_m_l_d_b" kindref="compound">LogReaderMLDB</ref> *</type>
        <definition>LogReaderMLDB * PyBWLog::getBWLogReader</definition>
        <argsstring>()</argsstring>
        <name>getBWLogReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allows access to our contained <ref refid="class_log_reader_m_l_d_b" kindref="compound">LogReaderMLDB</ref> object.</para><para>It should only be used to temporarily gain access to the reader to resolve log state and then discard. DO NOT STORE THIS POINTER!</para><para>This is a borrowed reference. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="68" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="784" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a9bcf05b8a40f945d0f93a6992e9bff71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_log_string_interpolator" kindref="compound">LogStringInterpolator</ref> *</type>
        <definition>const LogStringInterpolator * PyBWLog::getHandlerForLogEntry</definition>
        <argsstring>(const LogEntry &amp;entry)</argsstring>
        <name>getHandlerForLogEntry</name>
        <param>
          <type>const <ref refid="class_log_entry" kindref="compound">LogEntry</ref> &amp;</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the log entry handler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="70" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="804" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a1508ead630e11a0c8ab1bf167aa1fd38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PyBWLog::refreshFileMaps</definition>
        <argsstring>()</argsstring>
        <name>refreshFileMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method provides a simple pass through to the wrapped <ref refid="class_log_reader_m_l_d_b" kindref="compound">LogReaderMLDB</ref>.</para><para><simplesect kind="return"><para>true on successful file map refresh, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="72" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="795" bodyend="798"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_py_b_w_log_1aced8588d3845b1613f2f2269980b422b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::pyNew</definition>
        <argsstring>(PyObject *pArgs)</argsstring>
        <name>pyNew</name>
        <param>
          <type>PyObject *</type>
          <declname>pArgs</declname>
          <defname>args</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is the implementation of the object&apos;s _tp_new method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="41" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="364" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a82783ad9827f3ce4613369c5c3c036cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* PyBWLog::_pyNew</definition>
        <argsstring>(PyObject *, PyObject *args, PyObject *)</argsstring>
        <name>_pyNew</name>
        <param>
          <type>PyObject *</type>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="42" column="1" bodyfile="tools/message_logger/py_bwlog.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1a50ad92819652cb31c9d99b17f1ca9c49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PyBWLog::_tp_dealloc</definition>
        <argsstring>(PyObject *pObj)</argsstring>
        <name>_tp_dealloc</name>
        <param>
          <type>PyObject *</type>
          <declname>pObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method implements the Python dealloc method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="51" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="624" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1ae67b924b4b3d0a77d011a20ea8a73657" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::_tp_repr</definition>
        <argsstring>(PyObject *pObj)</argsstring>
        <name>_tp_repr</name>
        <param>
          <type>PyObject *</type>
          <declname>pObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method implements the Python repr method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="52" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="632" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1ad5b4ab91f884336e839a8f6900bf3453" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyBWLog::_tp_getattro</definition>
        <argsstring>(PyObject *pObj, PyObject *name)</argsstring>
        <name>_tp_getattro</name>
        <param>
          <type>PyObject *</type>
          <declname>pObj</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method implements the Python getattribute method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="53" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="645" bodyend="649"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_py_b_w_log_1af080d0925a5bad223d4352fad1b945b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyBWLog::~PyBWLog</definition>
        <argsstring>()</argsstring>
        <name>~PyBWLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="76" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="683" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="class_py_b_w_log_1af8f2f3867931355f82d3ed2e29a4b228" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">PyUserLogPtr</ref></type>
        <definition>PyUserLogPtr PyBWLog::getUserLog</definition>
        <argsstring>(uint16 uid)</argsstring>
        <name>getUserLog</name>
        <param>
          <type>uint16</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates a user log </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/py_bwlog.hpp" line="78" column="1" bodyfile="tools/message_logger/py_bwlog.cpp" bodystart="814" bodyend="826"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class provides the Python wrapper for the <ref refid="class_log_reader_m_l_d_b" kindref="compound">LogReaderMLDB</ref> class. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2225">
        <label>PyBWLog</label>
        <link refid="class_py_b_w_log"/>
        <childnode refid="2226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2226">
        <label>PyObject</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2227">
        <label>PyBWLog</label>
        <link refid="class_py_b_w_log"/>
        <childnode refid="2228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2228">
        <label>PyObject</label>
      </node>
    </collaborationgraph>
    <location file="tools/message_logger/py_bwlog.hpp" line="25" column="1" bodyfile="tools/message_logger/py_bwlog.hpp" bodystart="24" bodyend="81"/>
    <listofallmembers>
      <member refid="class_py_b_w_log_1a82783ad9827f3ce4613369c5c3c036cf" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>_pyNew</name></member>
      <member refid="class_py_b_w_log_1a50ad92819652cb31c9d99b17f1ca9c49" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>_tp_dealloc</name></member>
      <member refid="class_py_b_w_log_1ad5b4ab91f884336e839a8f6900bf3453" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>_tp_getattro</name></member>
      <member refid="class_py_b_w_log_1ae67b924b4b3d0a77d011a20ea8a73657" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>_tp_repr</name></member>
      <member refid="class_py_b_w_log_1a9eaf32633d73553e50d07b310342786b" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>decRef</name></member>
      <member refid="class_py_b_w_log_1acd08f85add966661ccf23dc759d72f07" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>fetch</name></member>
      <member refid="class_py_b_w_log_1a051f7ac1e5fd3d3fece3f90caa45c8a5" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>getBWLogReader</name></member>
      <member refid="class_py_b_w_log_1a9bcf05b8a40f945d0f93a6992e9bff71" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>getHandlerForLogEntry</name></member>
      <member refid="class_py_b_w_log_1aaf19f636670683a61ceab9734289b900" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>getHostByAddr</name></member>
      <member refid="class_py_b_w_log_1abd09a030932a4f333bed321e4395bf78" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>getLogDirectory</name></member>
      <member refid="class_py_b_w_log_1a3f0a0794fce07131c33f3590d62473ee" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>getQueryParamsFromPyArgs</name></member>
      <member refid="class_py_b_w_log_1af8f2f3867931355f82d3ed2e29a4b228" prot="private" virt="non-virtual"><scope>PyBWLog</scope><name>getUserLog</name></member>
      <member refid="class_py_b_w_log_1a268e29731ea4da6bac46e055be7c7786" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>incRef</name></member>
      <member refid="class_py_b_w_log_1a21e8871b1d2f75fe277abb43b19578b9" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>init</name></member>
      <member refid="class_py_b_w_log_1abf893fffe21beaa651caa0648b39ab75" prot="private" virt="non-virtual"><scope>PyBWLog</scope><name>pLogReader_</name></member>
      <member refid="class_py_b_w_log_1a695d1d6e8fd8a73490e0e73e7c604eef" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>py_fetch</name></member>
      <member refid="class_py_b_w_log_1afd39dd49000781c5231a5423a29d0b41" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>py_getCategoryNames</name></member>
      <member refid="class_py_b_w_log_1adc6db68a3b529f5619dcd53f7027cb4d" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>py_getComponentNames</name></member>
      <member refid="class_py_b_w_log_1acd6d8ed6c0468f3b8e73a8019fb127e4" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>py_getFormatStrings</name></member>
      <member refid="class_py_b_w_log_1ad48b6295f8343c188ac8df2e67742b21" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>py_getHostnames</name></member>
      <member refid="class_py_b_w_log_1a0117fe54b4bdffe5efa8f24b60900340" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>py_getUserLog</name></member>
      <member refid="class_py_b_w_log_1a10eeda4907458a156f5a44c5cc7e26d4" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>py_getUsers</name></member>
      <member refid="class_py_b_w_log_1a9fa33364f4e92804731bc2e455b994b7" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>PyBWLog</name></member>
      <member refid="class_py_b_w_log_1aafe5e2b4d3571c40e0a54ab48987d578" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>pyGet_logDirectory</name></member>
      <member refid="class_py_b_w_log_1ac0c8927bea661e056beaaf1ca7731578" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>pyGetAttribute</name></member>
      <member refid="class_py_b_w_log_1aced8588d3845b1613f2f2269980b422b" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>pyNew</name></member>
      <member refid="class_py_b_w_log_1a22a2e2b7e272ff9f39bf7d98585b52bb" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>refCount</name></member>
      <member refid="class_py_b_w_log_1a1508ead630e11a0c8ab1bf167aa1fd38" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>refreshFileMaps</name></member>
      <member refid="class_py_b_w_log_1aa43c00b31ef613c6484085fc3777d01f" prot="public" virt="non-virtual"><scope>PyBWLog</scope><name>s_type_</name></member>
      <member refid="class_py_b_w_log_1af080d0925a5bad223d4352fad1b945b1" prot="private" virt="non-virtual"><scope>PyBWLog</scope><name>~PyBWLog</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
