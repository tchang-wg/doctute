<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="tools_2bots_2py__spaces_8cpp" kind="file" language="C++">
    <compoundname>py_spaces.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="tools_2bots_2py__spaces_8hpp" local="yes">py_spaces.hpp</includes>
    <includes refid="tools_2bots_2entity__type_8hpp" local="yes">entity_type.hpp</includes>
    <includes refid="tools_2bots_2py__space_8hpp" local="yes">py_space.hpp</includes>
    <incdepgraph>
      <node id="11450">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="11441">
        <label>script/first_include.hpp</label>
      </node>
      <node id="11445">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="11452">
        <label>py_space.hpp</label>
        <link refid="tools_2bots_2py__space_8hpp_source"/>
        <childnode refid="11443" relation="include">
        </childnode>
        <childnode refid="11444" relation="include">
        </childnode>
        <childnode refid="11446" relation="include">
        </childnode>
      </node>
      <node id="11449">
        <label>connection/entity_def_constants.hpp</label>
      </node>
      <node id="11444">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="11447">
        <label>Python.h</label>
      </node>
      <node id="11451">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="11443">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="11440">
        <label>tools/bots/py_spaces.cpp</label>
        <link refid="tools/bots/py_spaces.cpp"/>
        <childnode refid="11441" relation="include">
        </childnode>
        <childnode refid="11442" relation="include">
        </childnode>
        <childnode refid="11446" relation="include">
        </childnode>
        <childnode refid="11452" relation="include">
        </childnode>
      </node>
      <node id="11446">
        <label>entity_type.hpp</label>
        <link refid="tools_2bots_2entity__type_8hpp_source"/>
        <childnode refid="11447" relation="include">
        </childnode>
        <childnode refid="11448" relation="include">
        </childnode>
        <childnode refid="11449" relation="include">
        </childnode>
        <childnode refid="11450" relation="include">
        </childnode>
        <childnode refid="11451" relation="include">
        </childnode>
      </node>
      <node id="11448">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="11442">
        <label>py_spaces.hpp</label>
        <link refid="tools_2bots_2py__spaces_8hpp_source"/>
        <childnode refid="11443" relation="include">
        </childnode>
        <childnode refid="11444" relation="include">
        </childnode>
        <childnode refid="11445" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_b_w">BW</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_spaces.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_b_w" kindref="compound">BW</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>g_spacesMapping<sp/>=</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>PySpaces::_length,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mp_length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>PySpaces::_subscript,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mp_subscript</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mp_ass_subscript</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>PySpaces<sp/>has_key</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>has_key<sp/>reports<sp/>whether<sp/>a<sp/>space<sp/>with<sp/>a<sp/>specific<sp/>ID</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>listed<sp/>in<sp/>this<sp/>PySpaces<sp/>object.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>key<sp/>is<sp/>the<sp/>integer<sp/>key<sp/>to<sp/>be<sp/>searched<sp/>for.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>boolean.<sp/>True<sp/>if<sp/>the<sp/>key<sp/>was<sp/>found,<sp/>false<sp/>if<sp/>it<sp/>was<sp/>not.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>PySpaces<sp/>keys</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>keys<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>IDs<sp/>of<sp/>all<sp/>of<sp/>the<sp/>spaces<sp/>listed<sp/>in</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>object.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>list<sp/>containing<sp/>all<sp/>of<sp/>the<sp/>keys.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>PySpaces<sp/>items</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>items<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>items,<sp/>as<sp/>(ID,<sp/>space)<sp/>pairs,<sp/>that<sp/>are<sp/>listed</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>this<sp/>object.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>list<sp/>containing<sp/>all<sp/>of<sp/>the<sp/>(ID,<sp/>space)<sp/>pairs,<sp/>represented<sp/>as</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>tuples<sp/>containing<sp/>an<sp/>integer<sp/>ID<sp/>and<sp/>an<sp/>space.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>PySpaces<sp/>values</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>values<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>spaces<sp/>listed<sp/>in</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>object.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>list<sp/>containing<sp/>all<sp/>of<sp/>the<sp/>spaces.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>PySpaces<sp/>get</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>bots<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>id<sp/>The<sp/>id<sp/>of<sp/>the<sp/>space<sp/>to<sp/>find.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>defaultValue<sp/>An<sp/>optional<sp/>argument<sp/>that<sp/>is<sp/>the<sp/>return<sp/>value<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>space<sp/>cannot<sp/>be<sp/>found.<sp/>This<sp/>defaults<sp/>to<sp/>None.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>The<sp/>space<sp/>with<sp/>the<sp/>input<sp/>id<sp/>or<sp/>the<sp/>default<sp/>value<sp/>if<sp/>not<sp/>found.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">PY_TYPEOBJECT_WITH_MAPPING(<sp/><ref refid="class_py_spaces" kindref="compound">PySpaces</ref>,<sp/>&amp;g_spacesMapping<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">PY_BEGIN_METHODS(<sp/><ref refid="class_py_spaces" kindref="compound">PySpaces</ref><sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>has_key<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>keys<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>items<sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>values<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>get<sp/>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">PY_END_METHODS()</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">PY_BEGIN_ATTRIBUTES(<sp/><ref refid="class_py_spaces" kindref="compound">PySpaces</ref><sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">PY_END_ATTRIBUTES()</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="class_py_spaces" kindref="compound">PySpaces</ref>::<ref refid="class_py_spaces" kindref="compound">PySpaces</ref>(<sp/>PyTypeObject<sp/>*<sp/>pType<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObjectPlus(<sp/>pType<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">PySpaces::~PySpaces()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">PySpacePtr<sp/>PySpaces::add(<sp/>SpaceID<sp/>spaceID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_entity_type" kindref="compound">EntityType</ref><sp/>&amp;<sp/>spaceType<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>container_.find(<sp/>spaceID<sp/>)<sp/>==<sp/>container_.end()<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTypeObject<sp/>*<sp/>pPyType<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><sp/>PyTypeObject<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceType.type().get()<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPyType)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPyType<sp/>=<sp/>&amp;PySpace::s_type_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;PySpaces::add:<sp/>SpaceId(%d)<sp/>have<sp/>no<sp/>bot<sp/>script.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pObject<sp/>=<sp/>PyType_GenericAlloc(<sp/>pPyType,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pObject)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;PySpaces::add:<sp/>Allocation<sp/>failed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PySpacePtr();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>BW_STATIC_ASSERT(<sp/>std::tr1::is_polymorphic&lt;<sp/>PySpace<sp/>&gt;::value<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PySpace_is_virtual_but_uses_PyType_GenericAlloc<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>PySpacePtr<sp/>pPySpace(<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(pObject)<sp/><ref refid="class_py_space" kindref="compound">PySpace</ref>(<sp/>spaceID,<sp/>spaceType,<sp/>pPyType<sp/>),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>container_[<sp/>spaceID<sp/>]<sp/>=<sp/>pPySpace;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pPySpace;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PySpaces::remove(<sp/>SpaceID<sp/>spaceID<sp/>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::iterator<sp/>iter<sp/>=<sp/>container_.find(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_.erase(<sp/>iter<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">PyObject<sp/>*<sp/>PySpaces::subscript(<sp/>PyObject*<sp/>spaceID<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>PyInt_AsLong(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;getPySpace(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>).newRef();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">Py_ssize_t<sp/>PySpaces::length()</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>container_.size()<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PySpaces::has_key(<sp/>SpaceID<sp/>spaceID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>container_.find(<sp/>spaceID<sp/>)<sp/>!=<sp/>container_.end();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">ScriptList<sp/>PySpaces::keys()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList<sp/>pList<sp/>=<sp/>ScriptList::create(<sp/>container_.size()<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::const_iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList::size_type<sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pInt<sp/>=<sp/>ScriptObject::createFrom(<sp/>iter-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pList.setItem(<sp/>index,<sp/>pInt<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">ScriptList<sp/>PySpaces::values()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList<sp/>pList<sp/>=<sp/>ScriptList::create(<sp/>container_.size()<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::const_iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList::size_type<sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pList.setItem(<sp/>index,<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">ScriptList<sp/>PySpaces::items()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="227"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList<sp/>pList<sp/>=<sp/>ScriptList::create(<sp/>container_.size()<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::const_iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList::size_type<sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptTuple<sp/>pTuple<sp/>=<sp/>ScriptTuple::create(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTuple.setItem(<sp/>0,<sp/>ScriptObject::createFrom(<sp/>iter-&gt;first<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTuple.setItem(<sp/>1,<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pList.setItem(<sp/>index,<sp/>pTuple<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">ScriptObject<sp/>PySpaces::get(<sp/>SpaceID<sp/>spaceID<sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;getPySpace(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">PySpacePtr<sp/>PySpaces::getPySpace(<sp/>SpaceID<sp/>spaceID<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::iterator<sp/>iter<sp/>=<sp/>container_.find(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>container_.end())</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_KeyError,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>space(%d)<sp/>exists.&quot;</highlight><highlight class="normal">,<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PySpacePtr();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>BW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>py_spaces.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/bots/py_spaces.cpp"/>
  </compounddef>
</doxygen>
