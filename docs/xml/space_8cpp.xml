<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="space_8cpp" kind="file" language="C++">
    <compoundname>space.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="space_8hpp" local="yes">space.hpp</includes>
    <includes refid="space__data__object_8hpp" local="yes">space_data_object.hpp</includes>
    <includes refid="physical__chunk__space_8hpp" local="yes">physical_chunk_space.hpp</includes>
    <includes refid="physical__delegate__space_8hpp" local="yes">physical_delegate_space.hpp</includes>
    <includes refid="cellapp_2py__spaces_8hpp" local="yes">py_spaces.hpp</includes>
    <includes refid="buffered__ghost__message__factory_8hpp" local="yes">buffered_ghost_message_factory.hpp</includes>
    <includes refid="buffered__ghost__messages_8hpp" local="yes">buffered_ghost_messages.hpp</includes>
    <includes refid="cell_8hpp" local="yes">cell.hpp</includes>
    <includes refid="cell__chunk_8hpp" local="yes">cell_chunk.hpp</includes>
    <includes refid="cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <includes refid="cellapp__config_8hpp" local="yes">cellapp_config.hpp</includes>
    <includes refid="cellapp_2entity_8hpp" local="yes">entity.hpp</includes>
    <includes refid="cellapp_2entity__type_8hpp" local="yes">entity_type.hpp</includes>
    <includes refid="entity__population_8hpp" local="yes">entity_population.hpp</includes>
    <includes refid="entity__range__list__node_8hpp" local="yes">entity_range_list_node.hpp</includes>
    <includes refid="range__list__node_8hpp" local="yes">range_list_node.hpp</includes>
    <includes refid="range__trigger_8hpp" local="yes">range_trigger.hpp</includes>
    <includes refid="real__entity_8hpp" local="yes">real_entity.hpp</includes>
    <includes refid="replay__data__collector_8hpp" local="yes">replay_data_collector.hpp</includes>
    <includes refid="space__branch_8hpp" local="yes">space_branch.hpp</includes>
    <includes refid="cellappmgr__interface_8hpp" local="yes">cellappmgr/cellappmgr_interface.hpp</includes>
    <includes refid="baseapp__int__interface_8hpp" local="yes">baseapp/baseapp_int_interface.hpp</includes>
    <includes local="yes">connection/client_interface.hpp</includes>
    <includes local="yes">chunk/chunk_vlo.hpp</includes>
    <includes local="yes">common/closest_triangle.hpp</includes>
    <includes local="yes">common/closest_chunk_item.hpp</includes>
    <includes local="yes">common/py_physics2.hpp</includes>
    <includes local="yes">common/space_geometry_mappings.hpp</includes>
    <includes local="yes">cstdmf/debug.hpp</includes>
    <includes local="yes">network/bundle.hpp</includes>
    <includes local="yes">network/event_dispatcher.hpp</includes>
    <includes local="yes">pyscript/personality.hpp</includes>
    <includes local="yes">server/balance_config.hpp</includes>
    <includes local="no">cmath</includes>
    <includes local="no">limits</includes>
    <includes local="yes">cstdmf/bw_string.hpp</includes>
    <includes local="yes">server/server_app_config.hpp</includes>
    <includes local="yes">chunk/chunk_obstacle.hpp</includes>
    <includes local="yes">chunk/chunk_manager.hpp</includes>
    <includes local="yes">pyscript/script.hpp</includes>
    <includes local="yes">pyscript/script_math.hpp</includes>
    <incdepgraph>
      <node id="12236">
        <label>connection/common_baseapp_interface.hpp</label>
      </node>
      <node id="12151">
        <label>buffered_ghost_messages.hpp</label>
        <link refid="buffered__ghost__messages_8hpp_source"/>
        <childnode refid="12152" relation="include">
        </childnode>
        <childnode refid="12104" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12136" relation="include">
        </childnode>
        <childnode refid="12154" relation="include">
        </childnode>
      </node>
      <node id="12145">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="12218">
        <label>real_entity.hpp</label>
        <link refid="real__entity_8hpp_source"/>
        <childnode refid="12156" relation="include">
        </childnode>
        <childnode refid="12104" relation="include">
        </childnode>
        <childnode refid="12219" relation="include">
        </childnode>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12220" relation="include">
        </childnode>
        <childnode refid="12197" relation="include">
        </childnode>
        <childnode refid="12133" relation="include">
        </childnode>
        <childnode refid="12223" relation="include">
        </childnode>
        <childnode refid="12225" relation="include">
        </childnode>
        <childnode refid="12195" relation="include">
        </childnode>
        <childnode refid="12224" relation="include">
        </childnode>
        <childnode refid="12142" relation="include">
        </childnode>
        <childnode refid="12226" relation="include">
        </childnode>
        <childnode refid="12227" relation="include">
        </childnode>
        <childnode refid="12228" relation="include">
        </childnode>
      </node>
      <node id="12130">
        <label>chunk_loading/edge_geometry_mappings.hpp</label>
      </node>
      <node id="12119">
        <label>math/rectt.hpp</label>
      </node>
      <node id="12166">
        <label>functional</label>
      </node>
      <node id="12127">
        <label>scene/collision_scene_view.hpp</label>
      </node>
      <node id="12251">
        <label>limits</label>
      </node>
      <node id="12184">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="12208">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="12148">
        <label>py_spaces.hpp</label>
        <link refid="cellapp_2py__spaces_8hpp_source"/>
        <childnode refid="12142" relation="include">
        </childnode>
        <childnode refid="12139" relation="include">
        </childnode>
        <childnode refid="12149" relation="include">
        </childnode>
      </node>
      <node id="12243">
        <label>common/closest_triangle.hpp</label>
      </node>
      <node id="12248">
        <label>pyscript/personality.hpp</label>
      </node>
      <node id="12136">
        <label>network/misc.hpp</label>
      </node>
      <node id="12161">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="12114">
        <label>float.h</label>
      </node>
      <node id="12169">
        <label>chunk/chunk_cache.hpp</label>
      </node>
      <node id="12156">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="12131">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="12105">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="12238">
        <label>baseapp_int_interface_stream_helpers.hpp</label>
        <link refid="baseapp__int__interface__stream__helpers_8hpp_source"/>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12239" relation="include">
        </childnode>
      </node>
      <node id="12113">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="12112">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="12102">
        <label>script/first_include.hpp</label>
      </node>
      <node id="12237">
        <label>buffered_input_message_handler.hpp</label>
        <link refid="baseapp_2buffered__input__message__handler_8hpp_source"/>
      </node>
      <node id="12152">
        <label>buffered_ghost_messages_for_entity.hpp</label>
        <link refid="buffered__ghost__messages__for__entity_8hpp_source"/>
        <childnode refid="12153" relation="include">
        </childnode>
        <childnode refid="12154" relation="include">
        </childnode>
      </node>
      <node id="12192">
        <label>type_system/context.hpp</label>
      </node>
      <node id="12191">
        <label>script/script_object.hpp</label>
      </node>
      <node id="12139">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="12216">
        <label>entity_range_list_node.hpp</label>
        <link refid="entity__range__list__node_8hpp_source"/>
        <childnode refid="12111" relation="include">
        </childnode>
      </node>
      <node id="12155">
        <label>cell.hpp</label>
        <link refid="cell_8hpp_source"/>
        <childnode refid="12156" relation="include">
        </childnode>
        <childnode refid="12104" relation="include">
        </childnode>
        <childnode refid="12157" relation="include">
        </childnode>
        <childnode refid="12159" relation="include">
        </childnode>
        <childnode refid="12115" relation="include">
        </childnode>
        <childnode refid="12116" relation="include">
        </childnode>
        <childnode refid="12161" relation="include">
        </childnode>
        <childnode refid="12121" relation="include">
        </childnode>
        <childnode refid="12138" relation="include">
        </childnode>
        <childnode refid="12162" relation="include">
        </childnode>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12108" relation="include">
        </childnode>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12166" relation="include">
        </childnode>
      </node>
      <node id="12141">
        <label>network/bundle.hpp</label>
      </node>
      <node id="12241">
        <label>connection/client_interface.hpp</label>
      </node>
      <node id="12103">
        <label>space.hpp</label>
        <link refid="space_8hpp_source"/>
        <childnode refid="12104" relation="include">
        </childnode>
        <childnode refid="12110" relation="include">
        </childnode>
        <childnode refid="12117" relation="include">
        </childnode>
        <childnode refid="12133" relation="include">
        </childnode>
        <childnode refid="12131" relation="include">
        </childnode>
        <childnode refid="12130" relation="include">
        </childnode>
        <childnode refid="12138" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12116" relation="include">
        </childnode>
        <childnode refid="12139" relation="include">
        </childnode>
        <childnode refid="12123" relation="include">
        </childnode>
      </node>
      <node id="12104">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="12105" relation="include">
        </childnode>
        <childnode refid="12106" relation="include">
        </childnode>
        <childnode refid="12107" relation="include">
        </childnode>
        <childnode refid="12108" relation="include">
        </childnode>
        <childnode refid="12109" relation="include">
        </childnode>
      </node>
      <node id="12235">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="12231">
        <label>cellappmgr/cellappmgr_interface.hpp</label>
        <link refid="cellappmgr__interface_8hpp_source"/>
        <childnode refid="12232" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12106" relation="include">
        </childnode>
        <childnode refid="12109" relation="include">
        </childnode>
        <childnode refid="12108" relation="include">
        </childnode>
        <childnode refid="12233" relation="include">
        </childnode>
      </node>
      <node id="12126">
        <label>chunk/chunk_space.hpp</label>
      </node>
      <node id="12250">
        <label>cmath</label>
      </node>
      <node id="12185">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="12137">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="12157">
        <label>cell_info.hpp</label>
        <link refid="cell__info_8hpp_source"/>
        <childnode refid="12158" relation="include">
        </childnode>
        <childnode refid="12121" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
      </node>
      <node id="12194">
        <label>server/entity_app_config.hpp</label>
      </node>
      <node id="12223">
        <label>mailbox.hpp</label>
        <link refid="cellapp_2mailbox_8hpp_source"/>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12224" relation="include">
        </childnode>
        <childnode refid="12142" relation="include">
        </childnode>
        <childnode refid="12210" relation="include">
        </childnode>
        <childnode refid="12211" relation="include">
        </childnode>
        <childnode refid="12197" relation="include">
        </childnode>
      </node>
      <node id="12230">
        <label>space_branch.hpp</label>
        <link refid="space__branch_8hpp_source"/>
        <childnode refid="12158" relation="include">
        </childnode>
      </node>
      <node id="12110">
        <label>cell_range_list.hpp</label>
        <link refid="cell__range__list_8hpp_source"/>
        <childnode refid="12111" relation="include">
        </childnode>
      </node>
      <node id="12108">
        <label>server/common.hpp</label>
      </node>
      <node id="12178">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="12124">
        <label>chunk_space_collision_provider.hpp</label>
        <link refid="chunk__space__collision__provider_8hpp_source"/>
        <childnode refid="12125" relation="include">
        </childnode>
        <childnode refid="12126" relation="include">
        </childnode>
        <childnode refid="12127" relation="include">
        </childnode>
        <childnode refid="12128" relation="include">
        </childnode>
      </node>
      <node id="12226">
        <label>server/auto_backup_and_archive.hpp</label>
      </node>
      <node id="12147">
        <label>map</label>
      </node>
      <node id="12187">
        <label>pyscript/pickler.hpp</label>
      </node>
      <node id="12207">
        <label>entitydef/py_volatile_info.hpp</label>
      </node>
      <node id="12202">
        <label>entity_callback_buffer.hpp</label>
        <link refid="entity__callback__buffer_8hpp_source"/>
        <childnode refid="12125" relation="include">
        </childnode>
        <childnode refid="12116" relation="include">
        </childnode>
        <childnode refid="12191" relation="include">
        </childnode>
      </node>
      <node id="12123">
        <label>pyscript/script_math.hpp</label>
      </node>
      <node id="12159">
        <label>cell_profiler.hpp</label>
        <link refid="cell__profiler_8hpp_source"/>
        <childnode refid="12160" relation="include">
        </childnode>
      </node>
      <node id="12227">
        <label>server/util.hpp</label>
      </node>
      <node id="12121">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="12210">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="12134">
        <label>entitydef/data_description.hpp</label>
      </node>
      <node id="12115">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="12162">
        <label>math/vector2.hpp</label>
      </node>
      <node id="12197">
        <label>entity_type.hpp</label>
        <link refid="cellapp_2entity__type_8hpp_source"/>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12115" relation="include">
        </childnode>
        <childnode refid="12185" relation="include">
        </childnode>
        <childnode refid="12198" relation="include">
        </childnode>
        <childnode refid="12199" relation="include">
        </childnode>
        <childnode refid="12200" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12201" relation="include">
        </childnode>
        <childnode refid="12156" relation="include">
        </childnode>
      </node>
      <node id="12239">
        <label>network/stream_helpers.hpp</label>
      </node>
      <node id="12224">
        <label>network/udp_channel.hpp</label>
      </node>
      <node id="12220">
        <label>entity_cache.hpp</label>
        <link refid="entity__cache_8hpp_source"/>
        <childnode refid="12221" relation="include">
        </childnode>
        <childnode refid="12137" relation="include">
        </childnode>
        <childnode refid="12107" relation="include">
        </childnode>
        <childnode refid="12121" relation="include">
        </childnode>
        <childnode refid="12195" relation="include">
        </childnode>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12222" relation="include">
        </childnode>
        <childnode refid="12212" relation="include">
        </childnode>
      </node>
      <node id="12188">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="12225">
        <label>server/updatable.hpp</label>
      </node>
      <node id="12203">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="12205">
        <label>entitydef/property_event_stamps.hpp</label>
      </node>
      <node id="12222">
        <label>limits.h</label>
      </node>
      <node id="12120">
        <label>math/boundbox.hpp</label>
      </node>
      <node id="12163">
        <label>math/vector3.hpp</label>
      </node>
      <node id="12209">
        <label>physics2/worldtri.hpp</label>
      </node>
      <node id="12154">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="12146">
        <label>delegate_interface/game_delegate.hpp</label>
      </node>
      <node id="12118">
        <label>physical_space.hpp</label>
        <link refid="physical__space_8hpp_source"/>
        <childnode refid="12119" relation="include">
        </childnode>
        <childnode refid="12120" relation="include">
        </childnode>
        <childnode refid="12121" relation="include">
        </childnode>
        <childnode refid="12122" relation="include">
        </childnode>
        <childnode refid="12123" relation="include">
        </childnode>
      </node>
      <node id="12101">
        <label>cellapp/space.cpp</label>
        <link refid="space.cpp"/>
        <childnode refid="12102" relation="include">
        </childnode>
        <childnode refid="12103" relation="include">
        </childnode>
        <childnode refid="12140" relation="include">
        </childnode>
        <childnode refid="12117" relation="include">
        </childnode>
        <childnode refid="12144" relation="include">
        </childnode>
        <childnode refid="12148" relation="include">
        </childnode>
        <childnode refid="12150" relation="include">
        </childnode>
        <childnode refid="12151" relation="include">
        </childnode>
        <childnode refid="12155" relation="include">
        </childnode>
        <childnode refid="12167" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12195" relation="include">
        </childnode>
        <childnode refid="12197" relation="include">
        </childnode>
        <childnode refid="12213" relation="include">
        </childnode>
        <childnode refid="12216" relation="include">
        </childnode>
        <childnode refid="12111" relation="include">
        </childnode>
        <childnode refid="12217" relation="include">
        </childnode>
        <childnode refid="12218" relation="include">
        </childnode>
        <childnode refid="12229" relation="include">
        </childnode>
        <childnode refid="12230" relation="include">
        </childnode>
        <childnode refid="12231" relation="include">
        </childnode>
        <childnode refid="12234" relation="include">
        </childnode>
        <childnode refid="12241" relation="include">
        </childnode>
        <childnode refid="12242" relation="include">
        </childnode>
        <childnode refid="12243" relation="include">
        </childnode>
        <childnode refid="12244" relation="include">
        </childnode>
        <childnode refid="12245" relation="include">
        </childnode>
        <childnode refid="12246" relation="include">
        </childnode>
        <childnode refid="12113" relation="include">
        </childnode>
        <childnode refid="12141" relation="include">
        </childnode>
        <childnode refid="12247" relation="include">
        </childnode>
        <childnode refid="12248" relation="include">
        </childnode>
        <childnode refid="12249" relation="include">
        </childnode>
        <childnode refid="12250" relation="include">
        </childnode>
        <childnode refid="12251" relation="include">
        </childnode>
        <childnode refid="12115" relation="include">
        </childnode>
        <childnode refid="12252" relation="include">
        </childnode>
        <childnode refid="12253" relation="include">
        </childnode>
        <childnode refid="12254" relation="include">
        </childnode>
        <childnode refid="12210" relation="include">
        </childnode>
        <childnode refid="12123" relation="include">
        </childnode>
      </node>
      <node id="12212">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="12111">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="12112" relation="include">
        </childnode>
        <childnode refid="12113" relation="include">
        </childnode>
        <childnode refid="12114" relation="include">
        </childnode>
        <childnode refid="12115" relation="include">
        </childnode>
        <childnode refid="12116" relation="include">
        </childnode>
      </node>
      <node id="12143">
        <label>entitydef_script/script_data_properties.hpp</label>
      </node>
      <node id="12142">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="12140">
        <label>space_data_object.hpp</label>
        <link refid="space__data__object_8hpp_source"/>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12141" relation="include">
        </childnode>
        <childnode refid="12142" relation="include">
        </childnode>
        <childnode refid="12139" relation="include">
        </childnode>
        <childnode refid="12143" relation="include">
        </childnode>
        <childnode refid="12133" relation="include">
        </childnode>
      </node>
      <node id="12175">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="12245">
        <label>common/py_physics2.hpp</label>
      </node>
      <node id="12234">
        <label>baseapp/baseapp_int_interface.hpp</label>
        <link refid="baseapp__int__interface_8hpp_source"/>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12235" relation="include">
        </childnode>
        <childnode refid="12109" relation="include">
        </childnode>
        <childnode refid="12236" relation="include">
        </childnode>
        <childnode refid="12237" relation="include">
        </childnode>
        <childnode refid="12238" relation="include">
        </childnode>
        <childnode refid="12108" relation="include">
        </childnode>
        <childnode refid="12107" relation="include">
        </childnode>
        <childnode refid="12240" relation="include">
        </childnode>
      </node>
      <node id="12244">
        <label>common/closest_chunk_item.hpp</label>
      </node>
      <node id="12252">
        <label>server/server_app_config.hpp</label>
      </node>
      <node id="12173">
        <label>cstdmf/safe_static.hpp</label>
      </node>
      <node id="12180">
        <label>emergency_throttle.hpp</label>
        <link refid="emergency__throttle_8hpp_source"/>
        <childnode refid="12121" relation="include">
        </childnode>
      </node>
      <node id="12153">
        <label>buffered_ghost_message_queue.hpp</label>
        <link refid="buffered__ghost__message__queue_8hpp_source"/>
        <childnode refid="12121" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12122" relation="include">
        </childnode>
      </node>
      <node id="12160">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="12171">
        <label>Python.h</label>
      </node>
      <node id="12133">
        <label>history_event.hpp</label>
        <link refid="history__event_8hpp_source"/>
        <childnode refid="12134" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12135" relation="include">
        </childnode>
        <childnode refid="12136" relation="include">
        </childnode>
        <childnode refid="12122" relation="include">
        </childnode>
        <childnode refid="12137" relation="include">
        </childnode>
      </node>
      <node id="12122">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="12170">
        <label>cellapp.hpp</label>
        <link refid="cellapp_8hpp_source"/>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12156" relation="include">
        </childnode>
        <childnode refid="12172" relation="include">
        </childnode>
        <childnode refid="12104" relation="include">
        </childnode>
        <childnode refid="12174" relation="include">
        </childnode>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12180" relation="include">
        </childnode>
        <childnode refid="12181" relation="include">
        </childnode>
        <childnode refid="12131" relation="include">
        </childnode>
        <childnode refid="12183" relation="include">
        </childnode>
        <childnode refid="12161" relation="include">
        </childnode>
        <childnode refid="12145" relation="include">
        </childnode>
        <childnode refid="12184" relation="include">
        </childnode>
        <childnode refid="12185" relation="include">
        </childnode>
        <childnode refid="12186" relation="include">
        </childnode>
        <childnode refid="12187" relation="include">
        </childnode>
        <childnode refid="12108" relation="include">
        </childnode>
        <childnode refid="12188" relation="include">
        </childnode>
        <childnode refid="12189" relation="include">
        </childnode>
        <childnode refid="12190" relation="include">
        </childnode>
        <childnode refid="12191" relation="include">
        </childnode>
        <childnode refid="12192" relation="include">
        </childnode>
        <childnode refid="12148" relation="include">
        </childnode>
      </node>
      <node id="12206">
        <label>entitydef/property_owner.hpp</label>
      </node>
      <node id="12186">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="12196">
        <label>controller.hpp</label>
        <link refid="controller_8hpp_source"/>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12137" relation="include">
        </childnode>
        <childnode refid="12121" relation="include">
        </childnode>
        <childnode refid="12191" relation="include">
        </childnode>
        <childnode refid="12178" relation="include">
        </childnode>
        <childnode refid="12156" relation="include">
        </childnode>
      </node>
      <node id="12177">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="12233">
        <label>server/reviver_subject.hpp</label>
      </node>
      <node id="12201">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="12200">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="12172">
        <label>cellapp_death_listener.hpp</label>
        <link refid="cellapp__death__listener_8hpp_source"/>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12122" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
      </node>
      <node id="12167">
        <label>cell_chunk.hpp</label>
        <link refid="cell__chunk_8hpp_source"/>
        <childnode refid="12168" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
      </node>
      <node id="12168">
        <label>chunk/chunk.hpp</label>
      </node>
      <node id="12217">
        <label>range_trigger.hpp</label>
        <link refid="range__trigger_8hpp_source"/>
        <childnode refid="12216" relation="include">
        </childnode>
      </node>
      <node id="12214">
        <label>ack_cell_app_death_helper.hpp</label>
        <link refid="ack__cell__app__death__helper_8hpp_source"/>
        <childnode refid="12195" relation="include">
        </childnode>
        <childnode refid="12215" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
      </node>
      <node id="12128">
        <label>scene/scene_provider.hpp</label>
      </node>
      <node id="12254">
        <label>chunk/chunk_manager.hpp</label>
      </node>
      <node id="12189">
        <label>server/id_client.hpp</label>
      </node>
      <node id="12199">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="12138">
        <label>math/math_extra.hpp</label>
      </node>
      <node id="12229">
        <label>replay_data_collector.hpp</label>
        <link refid="replay__data__collector_8hpp_source"/>
        <childnode refid="12154" relation="include">
        </childnode>
        <childnode refid="12212" relation="include">
        </childnode>
        <childnode refid="12115" relation="include">
        </childnode>
        <childnode refid="12161" relation="include">
        </childnode>
        <childnode refid="12121" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
      </node>
      <node id="12228">
        <label>math.h</label>
      </node>
      <node id="12129">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="12183">
        <label>chunk_loading/preloaded_chunk_space.hpp</label>
      </node>
      <node id="12109">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="12221">
        <label>aoi_update_schemes.hpp</label>
        <link refid="aoi__update__schemes_8hpp_source"/>
        <childnode refid="12112" relation="include">
        </childnode>
        <childnode refid="12154" relation="include">
        </childnode>
        <childnode refid="12115" relation="include">
        </childnode>
      </node>
      <node id="12150">
        <label>buffered_ghost_message_factory.hpp</label>
        <link refid="buffered__ghost__message__factory_8hpp_source"/>
        <childnode refid="12129" relation="include">
        </childnode>
      </node>
      <node id="12215">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="12165">
        <label>deque</label>
      </node>
      <node id="12219">
        <label>cell_app_channel.hpp</label>
        <link refid="cell__app__channel_8hpp_source"/>
        <childnode refid="12176" relation="include">
        </childnode>
      </node>
      <node id="12198">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="12107">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="12125">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="12174">
        <label>cellappmgr_gateway.hpp</label>
        <link refid="cellappmgr__gateway_8hpp_source"/>
        <childnode refid="12112" relation="include">
        </childnode>
        <childnode refid="12175" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12176" relation="include">
        </childnode>
        <childnode refid="12136" relation="include">
        </childnode>
        <childnode refid="12108" relation="include">
        </childnode>
        <childnode refid="12177" relation="include">
        </childnode>
        <childnode refid="12178" relation="include">
        </childnode>
      </node>
      <node id="12193">
        <label>cellapp_config.hpp</label>
        <link refid="cellapp__config_8hpp_source"/>
        <childnode refid="12194" relation="include">
        </childnode>
      </node>
      <node id="12211">
        <label>server/backup_hash.hpp</label>
      </node>
      <node id="12240">
        <label>connection/common_client_interface.hpp</label>
      </node>
      <node id="12144">
        <label>physical_delegate_space.hpp</label>
        <link refid="physical__delegate__space_8hpp_source"/>
        <childnode refid="12118" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12125" relation="include">
        </childnode>
        <childnode refid="12145" relation="include">
        </childnode>
        <childnode refid="12146" relation="include">
        </childnode>
        <childnode refid="12132" relation="include">
        </childnode>
        <childnode refid="12147" relation="include">
        </childnode>
      </node>
      <node id="12179">
        <label>cells.hpp</label>
        <link refid="cells_8hpp_source"/>
        <childnode refid="12175" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12154" relation="include">
        </childnode>
      </node>
      <node id="12190">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="12116">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="12242">
        <label>chunk/chunk_vlo.hpp</label>
      </node>
      <node id="12106">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="12181">
        <label>profile.hpp</label>
        <link refid="profile_8hpp_source"/>
        <childnode refid="12182" relation="include">
        </childnode>
      </node>
      <node id="12213">
        <label>entity_population.hpp</label>
        <link refid="entity__population_8hpp_source"/>
        <childnode refid="12214" relation="include">
        </childnode>
        <childnode refid="12172" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12154" relation="include">
        </childnode>
      </node>
      <node id="12164">
        <label>algorithm</label>
      </node>
      <node id="12247">
        <label>network/event_dispatcher.hpp</label>
      </node>
      <node id="12246">
        <label>common/space_geometry_mappings.hpp</label>
      </node>
      <node id="12195">
        <label>entity.hpp</label>
        <link refid="cellapp_2entity_8hpp_source"/>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12142" relation="include">
        </childnode>
        <childnode refid="12156" relation="include">
        </childnode>
        <childnode refid="12104" relation="include">
        </childnode>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12197" relation="include">
        </childnode>
        <childnode refid="12133" relation="include">
        </childnode>
        <childnode refid="12202" relation="include">
        </childnode>
        <childnode refid="12161" relation="include">
        </childnode>
        <childnode refid="12203" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12205" relation="include">
        </childnode>
        <childnode refid="12206" relation="include">
        </childnode>
        <childnode refid="12207" relation="include">
        </childnode>
        <childnode refid="12208" relation="include">
        </childnode>
        <childnode refid="12200" relation="include">
        </childnode>
        <childnode refid="12209" relation="include">
        </childnode>
        <childnode refid="12210" relation="include">
        </childnode>
        <childnode refid="12211" relation="include">
        </childnode>
        <childnode refid="12160" relation="include">
        </childnode>
        <childnode refid="12212" relation="include">
        </childnode>
        <childnode refid="12116" relation="include">
        </childnode>
        <childnode refid="12154" relation="include">
        </childnode>
      </node>
      <node id="12117">
        <label>physical_chunk_space.hpp</label>
        <link refid="physical__chunk__space_8hpp_source"/>
        <childnode refid="12118" relation="include">
        </childnode>
        <childnode refid="12124" relation="include">
        </childnode>
        <childnode refid="12129" relation="include">
        </childnode>
        <childnode refid="12125" relation="include">
        </childnode>
        <childnode refid="12126" relation="include">
        </childnode>
        <childnode refid="12130" relation="include">
        </childnode>
        <childnode refid="12131" relation="include">
        </childnode>
        <childnode refid="12132" relation="include">
        </childnode>
        <childnode refid="12123" relation="include">
        </childnode>
      </node>
      <node id="12249">
        <label>server/balance_config.hpp</label>
      </node>
      <node id="12182">
        <label>cstdmf/profile.hpp</label>
      </node>
      <node id="12253">
        <label>chunk/chunk_obstacle.hpp</label>
      </node>
      <node id="12158">
        <label>space_node.hpp</label>
        <link refid="space__node_8hpp_source"/>
        <childnode refid="12137" relation="include">
        </childnode>
        <childnode refid="12119" relation="include">
        </childnode>
      </node>
      <node id="12135">
        <label>network/interface_element.hpp</label>
      </node>
      <node id="12176">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="12232">
        <label>cstdmf/unique_id.hpp</label>
      </node>
      <node id="12132">
        <label>scene/scene.hpp</label>
      </node>
      <node id="12204">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
      <node id="12149">
        <label>space/forward_declarations.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="space_8cpp_1a1db2c0d7c91b698330e890ccfde42507" prot="public" static="no" mutable="no">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2092" column="1" bodyfile="cellapp/space.cpp" bodystart="2092" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="space_8cpp_1aef5413982773f5222c01b49a118f362c" prot="public" static="no" mutable="no">
        <type>const BW::string bool</type>
        <definition>const BW::string bool shouldRecordAoIEvents</definition>
        <argsstring></argsstring>
        <name>shouldRecordAoIEvents</name>
        <initializer>{
	<ref refid="class_space" kindref="compound">Space</ref> * pSpace = CellApp::instance().findSpace( spaceID )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2093" column="1" bodyfile="cellapp/space.cpp" bodystart="2094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="space_8cpp_1ac24ad81b71163bbf04ff58b6675ae534" prot="public" static="no" mutable="no">
        <type>SpaceEntryID</type>
        <definition>SpaceEntryID entryID</definition>
        <argsstring></argsstring>
        <name>entryID</name>
        <initializer>= CellApp::instance().nextSpaceEntryID()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2103" column="1" bodyfile="cellapp/space.cpp" bodystart="2103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="space_8cpp_1a930920b2bc42824a5c03be681830f4b2" prot="public" static="no" mutable="no">
        <type>return</type>
        <definition>return true</definition>
        <argsstring></argsstring>
        <name>true</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2113" column="1" bodyfile="cellapp/space.cpp" bodystart="2113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="space_8cpp_1a8e2c33e9bbd9a5fd5e4d23cad1210e5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BW_END_NAMESPACE static BW_BEGIN_NAMESPACE PyObject *</type>
        <definition>BW_END_NAMESPACE static BW_BEGIN_NAMESPACE PyObject* isUnderWater</definition>
        <argsstring>(SpaceID spaceID, const Vector3 &amp;point)</argsstring>
        <name>isUnderWater</name>
        <param>
          <type>SpaceID</type>
          <declname>spaceID</declname>
        </param>
        <param>
          <type>const Vector3 &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Old space data API documentation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2035" column="1" bodyfile="cellapp/space.cpp" bodystart="2035" bodyend="2062"/>
      </memberdef>
      <memberdef kind="function" id="space_8cpp_1a59f7bdfe76d012b5055e7fc7868e2192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, isUnderWater, ARG(SpaceID, ARG(Vector3, END)), BigWorld) static bool startRecording(SpaceID spaceID</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>isUnderWater</type>
        </param>
        <param>
          <type>ARG(SpaceID, ARG(Vector3, END))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2063" column="1"/>
      </memberdef>
      <memberdef kind="function" id="space_8cpp_1a76e01263b03ac6bc66d57dea6bc08ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>((pSpace==NULL)||(pSpace-&gt;pCell()==NULL))</argsstring>
        <name>if</name>
        <param>
          <type>(pSpace==NULL)||(pSpace-&gt;pCell()==NULL)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2097" column="1" bodyfile="cellapp/space.cpp" bodystart="2097" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="space_8cpp_1a2ab34b5e44bb14e33317246546e34e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(!pSpace-&gt;pCell() -&gt;startRecording(entryID, name, shouldRecordAoIEvents))</argsstring>
        <name>if</name>
        <param>
          <type>!pSpace-&gt;</type>
          <declname>pCell</declname>
          <array>) -&gt;startRecording(entryID, name, shouldRecordAoIEvents</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2105" column="1" bodyfile="cellapp/space.cpp" bodystart="2105" bodyend="2111"/>
      </memberdef>
      <memberdef kind="function" id="space_8cpp_1ab7de0644e631e449b4b9898bc09eaeff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, startRecording, ARG(SpaceID, ARG(BW::string, OPTARG(bool, false, END))), BigWorld) static bool stopRecording(SpaceID spaceID)</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>startRecording</type>
        </param>
        <param>
          <type>ARG(SpaceID, ARG(BW::string, OPTARG(bool, false, END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2115" column="1" bodyfile="cellapp/space.cpp" bodystart="2115" bodyend="2143"/>
      </memberdef>
      <memberdef kind="function" id="space_8cpp_1afc2f326a89eef3273c7c5f9a6b92b031" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, stopRecording, ARG(SpaceID, END), BigWorld)           const CellInfo *Space</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>stopRecording</type>
        </param>
        <param>
          <type>ARG(SpaceID, END)</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method return the <ref refid="class_cell_info" kindref="compound">CellInfo</ref> at the input point. This method visits the cells that overlaps the input rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space.cpp" line="2144" column="1" bodyfile="cellapp/space.cpp" bodystart="2144" bodyend="2175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space_data_object.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;physical_chunk_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;physical_delegate_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_spaces.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffered_ghost_message_factory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffered_ghost_messages.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_chunk.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_population.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_range_list_node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;range_list_node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;range_trigger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;replay_data_collector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space_branch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr/cellappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp/baseapp_int_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection/client_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_vlo.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/closest_triangle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/closest_chunk_item.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/py_physics2.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/space_geometry_mappings.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/debug.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/event_dispatcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/personality.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/balance_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/bw_string.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/server_app_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">DECLARE_DEBUG_COMPONENT(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Chunk<sp/>Items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Constructor/Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="class_space" kindref="compound">Space</ref>::<ref refid="class_space" kindref="compound">Space</ref>(<sp/>SpaceID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="namespace_b_w" kindref="compound">BW</ref>::StringRef<sp/>&amp;<sp/>propertyDefinitionsName,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>IContext<sp/>&amp;<sp/>context<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>id_(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>typeID_(<sp/>INVALID_ENTITY_TYPE_ID<sp/>),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>pCell_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>pPhysicalSpace_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>entities_(),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>rangeList_(),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>appealRadiusList_(),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellInfoTree_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>shuttingDownTimerHandle_(),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>artificialMinLoad_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>shouldCheckLoadBounds_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaceDataObject_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyDefinitionsName_(<sp/>propertyDefinitionsName.to_string()<sp/>),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>pGeometryMappings_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>geometryMappingEventHistory_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>lastGeometryMappingEventNumber_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceLoadBounds_()</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>id_<sp/>!=<sp/>NULL_SPACE_ID<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IGameDelegate::instance()<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPhysicalSpace_<sp/>=<sp/><ref refid="class_smart_pointer" kindref="compound">PhysicalSpacePtr</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space" kindref="compound">PhysicalDelegateSpace</ref>(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPhysicalSpace_<sp/>=<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">PhysicalSpacePtr</ref>(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_physical_chunk_space" kindref="compound">PhysicalChunkSpace</ref>(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>context<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pPhysicalSpace_<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>typeID_<sp/>=<sp/>EntityType::nameToIndex(<sp/>propertyDefinitionsName_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createSpaceDataObject();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createSpaceGeometryMappings();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>pPySpace_<sp/>=<sp/>CellApp::instance().pySpaces().add(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="class_space_1a06d440a35bcb4b1554b69e8b18d53705" kindref="member">Space::~Space</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destroy<sp/>any<sp/>ghosts<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(real<sp/>entities<sp/>should<sp/>be<sp/>taken<sp/>care<sp/>of<sp/>by<sp/>~Cell)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntities::iterator<sp/>entityIter<sp/>=<sp/>entities_.begin();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>entityIter<sp/>!=<sp/>entities_.end()<sp/>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>&amp;<sp/>pEntity<sp/>=<sp/>*entityIter;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!pEntity-&gt;isReal()<sp/>&amp;&amp;<sp/>!pEntity-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;destroy();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityIter<sp/>=<sp/>entities_.begin();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;isReal()<sp/>&amp;&amp;<sp/>!pEntity-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::~Space:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;not<sp/>destroying<sp/>real<sp/>entity<sp/>%s<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;pType()-&gt;name(),</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;id()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++entityIter;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().pySpaces().remove(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>shuttingDownTimerHandle_.cancel();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfoTree_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfoTree_-&gt;deleteTree();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfoTree_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>pPhysicalSpace_-&gt;clear();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1aaef7474c767c724ec134ef2322293138" kindref="member">Space::reuse</ref>()</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfoTree_)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfoTree_-&gt;deleteTree();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfoTree_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>pPhysicalSpace_-&gt;reuse();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;destroySpaceDataObject();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createSpaceDataObject();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;destroySpaceGeometryMappings();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createSpaceGeometryMappings();</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::pCell(<sp/><ref refid="class_cell" kindref="compound">Cell</ref><sp/>*<sp/>pCell<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>pCell_<sp/>=<sp/>pCell;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">ChunkSpacePtr</ref><sp/><ref refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" kindref="member">Space::pChunkSpace</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="192"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IGameDelegate::instance()<sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_physical_chunk_space" kindref="compound">PhysicalChunkSpace</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pPhysicalSpace_.get()</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)-&gt;<ref refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" kindref="member">pChunkSpace</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a142e78abf53de7eadf45f3e0c4f1d8d8" kindref="member">Space::onSpaceGeometryLoaded</ref>(<sp/>SpaceID<sp/>spaceID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().scriptEvents().triggerEvent(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryLoaded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal">,<sp/>spaceID,<sp/>name.c_str()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_1a07d10f1bf7de82790ae38607a9332de6" kindref="member">Space::initialPoint</ref>(<sp/>Vector3<sp/>&amp;<sp/>result<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="222"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCell_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>cellRect<sp/>=<sp/>pCell_-&gt;cellInfo().rect();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>result.x<sp/>=<sp/>0.5f<sp/>*<sp/>cellRect.xMin()<sp/>+<sp/>0.5f<sp/>*<sp/>cellRect.xMax();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>result.y<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>result.z<sp/>=<sp/>0.5f<sp/>*<sp/>cellRect.yMin()<sp/>+<sp/>0.5f<sp/>*<sp/>cellRect.yMax();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Entities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a7926e854fdeb5027878be58746b3d2a7" kindref="member">Space::createGhost</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>entityID;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>entityID;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>&amp;<sp/>app<sp/>=<sp/>ServerApp::getApp&lt;<sp/>CellApp<sp/>&gt;(<sp/>header<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pExistingEntity<sp/>=<sp/>app.findEntity(<sp/>entityID<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_buffered_ghost_messages" kindref="compound">BufferedGhostMessages</ref><sp/>&amp;<sp/>bufferedMessages<sp/>=<sp/>app.bufferedGhostMessages();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pExistingEntity<sp/>!=<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferedMessages.<ref refid="class_buffered_ghost_messages_1a0d5b923daf54548931b1b10343bf68d5" kindref="member">hasMessagesFor</ref>(<sp/>entityID,<sp/>srcAddr<sp/>))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_buffered_ghost_message" kindref="compound">BufferedGhostMessage</ref><sp/>*<sp/>pMsg<sp/>=</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufferedGhostMessageFactory::createBufferedCreateGhostMessage(</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAddr,<sp/>entityID,<sp/>id_,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufferedMessages.<ref refid="class_buffered_ghost_messages_1a0d5b923daf54548931b1b10343bf68d5" kindref="member">hasMessagesFor</ref>(<sp/>entityID,<sp/>srcAddr<sp/>))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferedMessages.<ref refid="class_buffered_ghost_messages_1a43a3a8cb18939c48c32228626238d592" kindref="member">add</ref>(<sp/>entityID,<sp/>srcAddr,<sp/>pMsg<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>if<sp/>pExistingEntity<sp/>!=<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::createGhost:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;delaying<sp/>subsequence<sp/>for<sp/>%d<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityID,<sp/>srcAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferedMessages.<ref refid="class_buffered_ghost_messages_1ad98569b83c897912ff007c55bfee2be3" kindref="member">delaySubsequence</ref>(<sp/>entityID,<sp/>srcAddr,<sp/>pMsg<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::createGhost(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Buffered<sp/>createGhost<sp/>message<sp/>for<sp/>entity<sp/>%u<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>entityID,<sp/>srcAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a7926e854fdeb5027878be58746b3d2a7" kindref="member">createGhost</ref>(<sp/>entityID,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a7926e854fdeb5027878be58746b3d2a7" kindref="member">Space::createGhost</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityID<sp/>entityID,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ToDo:<sp/>remove<sp/>when<sp/>load<sp/>balancing<sp/>is<sp/>supported<sp/>on<sp/>Delegate<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>physical<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IGameDelegate::instance()<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::createGhost:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Currently<sp/>not<sp/>supported<sp/>by<sp/>Delegate<sp/>Physical<sp/>spaces&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;createGhost&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>TRANSIENT_LOAD_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>up<sp/>the<sp/>Entity<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityTypeID<sp/>entityTypeID;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>entityTypeID;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pNewEntity<sp/>=<sp/>this-&gt;<ref refid="class_space_1ac6ba1d1baa02f0153083db97d67733da" kindref="member">newEntity</ref>(<sp/>entityID,<sp/>entityTypeID<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>pNewEntity-&gt;initGhost(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::population().notifyObservers(<sp/>*pNewEntity<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1aafd9b375583682de71cf685b6f04ffde" kindref="member">Space::addEntity</ref>(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntity-&gt;removalHandle()<sp/>==<sp/>NO_SPACE_REMOVAL_HANDLE<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntity-&gt;removalHandle(<sp/>entities_.size()<sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>entities_.push_back(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntity-&gt;addToRangeList(<sp/>rangeList_,<sp/>appealRadiusList_<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1af1a12be20ff78c563c2ce2a9d63caf5b" kindref="member">Space::removeEntity</ref>(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceRemovalHandle<sp/>handle<sp/>=<sp/>pEntity-&gt;removalHandle();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>handle<sp/>&lt;<sp/>entities_.size()<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>entities_[<sp/>handle<sp/>]<sp/>==<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pBack<sp/>=<sp/>entities_.back().get();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>pBack-&gt;removalHandle(<sp/>handle<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>entities_[<sp/>handle<sp/>]<sp/>=<sp/>pBack;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntity-&gt;removalHandle(<sp/>NO_SPACE_REMOVAL_HANDLE<sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>entities_.pop_back();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>remove<sp/>this<sp/>after<sp/>pop_back()<sp/>since<sp/>it<sp/>can<sp/>set<sp/>off<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>can<sp/>potentially<sp/>call<sp/>addEntity()<sp/>or<sp/>removeEntity().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntity-&gt;removeFromRangeList(<sp/>rangeList_,<sp/>appealRadiusList_<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entities_.empty())</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCell_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;checkForShutDown();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1aaffe6a33ad510faeed638987a3480fea" kindref="member">Space::visitLargeEntities</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>&amp;<sp/>visitor<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(RangeTriggerList::iterator<sp/>iter<sp/>=<sp/>appealRadiusList_.begin();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>appealRadiusList_.end();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>*<sp/>pAppealTrigger<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pAppealTrigger-&gt;<ref refid="class_range_trigger_1aeff1830e60140e662ed4860b5643ec42" kindref="member">contains</ref>(<sp/>x,<sp/>z<sp/>))</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor.triggerEnter(<sp/>*pAppealTrigger-&gt;pEntity()<sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::writeEntityBoundsForEdge(<sp/>BinaryOStream<sp/>&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMax,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isY<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="393"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNode<sp/>=</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isMax<sp/>?<sp/>rangeList_.pLastNode()<sp/>:<sp/>rangeList_.pFirstNode();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currCPULoad<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>BalanceConfig::numCPUOffloadLevels();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currCPULimit<sp/>=<sp/>BalanceConfig::cpuOffloadForLevel(<sp/>--level<sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>perEntityLoadShare<sp/>=<sp/>CellApp::instance().getPerEntityLoadShare();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasEntities<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lastEntityPosition<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FUDGE_FACTOR<sp/>=<sp/>isMax<sp/>?<sp/>-0.1f<sp/>:<sp/>0.1f;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Looking<sp/>for<sp/>the<sp/>first<sp/>real<sp/>entity<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pNode<sp/>&amp;&amp;<sp/>(!pNode-&gt;isEntity()<sp/>||</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pNode<sp/>)-&gt;isReal()))</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNode-&gt;getNeighbour(<sp/>!isMax,<sp/>isY<sp/>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>iterate<sp/>through<sp/>the<sp/>real<sp/>entities<sp/>but<sp/>counting<sp/>dense<sp/>bursts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>POS_DIFF_EPSILON<sp/>range<sp/>as<sp/>one<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pNode<sp/>&amp;&amp;<sp/>(level<sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>POS_DIFF_EPSILON<sp/>=<sp/>0.01f;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldCountThisEntity<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pNextNode<sp/>=<sp/>pNode-&gt;getNeighbour(<sp/>!isMax,<sp/>isY<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pNextNode<sp/>&amp;&amp;<sp/>(!pNextNode-&gt;isEntity()<sp/>||</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pNextNode<sp/>)-&gt;isReal()))</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNextNode<sp/>=<sp/>pNextNode-&gt;getNeighbour(<sp/>!isMax,<sp/>isY<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/><ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pNode<sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityPosition<sp/>=<sp/>pEntity-&gt;position()[<sp/>isY<sp/>*<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currCPULoad<sp/>+=<sp/>pEntity-&gt;profiler().load()<sp/>+<sp/>perEntityLoadShare;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pNextEntity<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextEntityPosition<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNextNode)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNextEntity<sp/>=<sp/><ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pNextNode<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextEntityPosition<sp/>=<sp/>pNextEntity-&gt;position()[<sp/>isY<sp/>*<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(almostEqual(entityPosition,<sp/>nextEntityPosition,<sp/>POS_DIFF_EPSILON))</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldCountThisEntity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldCountThisEntity)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currCPULoad<sp/>&gt;<sp/>currCPULimit)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>limitPosition<sp/>=<sp/>pNextEntity<sp/>?</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nextEntityPosition<sp/>+<sp/>entityPosition)<sp/>/<sp/>2<sp/>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityPosition<sp/>+<sp/>FUDGE_FACTOR;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>limitPosition<sp/>&lt;&lt;<sp/>currCPULoad;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currCPULimit<sp/>=<sp/>BalanceConfig::cpuOffloadForLevel(<sp/>--level<sp/>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasEntities<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastEntityPosition<sp/>=<sp/>entityPosition;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNode<sp/>=<sp/>pNextNode;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>failed<sp/>to<sp/>overcome<sp/>the<sp/>limit?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>BalanceConfig::numCPUOffloadLevels()<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>hasEntities)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>lastEntityPosition<sp/>+<sp/>FUDGE_FACTOR<sp/>&lt;&lt;<sp/>currCPULoad;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--level;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(level<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isMax)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>-std::numeric_limits&lt;<sp/>float<sp/>&gt;::max();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>std::numeric_limits&lt;<sp/>float<sp/>&gt;::max();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>std::max(<sp/>currCPULoad,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BalanceConfig::cpuOffloadForLevel(<sp/>level<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--level;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1aa3f636634350495dcdc136dcc82bd08d" kindref="member">Space::debugRangeList</ref>()</highlight></codeline>
<codeline lineno="500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>rangeList_.debugDump();</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/><ref refid="class_space_1a7b8de0d42c94f14862532957cfcab607" kindref="member">Space::pWatcher</ref>()</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DirectoryWatcherPtr<sp/><ref refid="class_space_1a7b8de0d42c94f14862532957cfcab607" kindref="member">pWatcher</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pWatcher)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DirectoryWatcher;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Space::id_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;cellInfos&quot;</highlight><highlight class="normal">,<sp/>makeWatcher&lt;MapWatcher&gt;(</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Space::cellInfos_)<sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Watcher<sp/>*<sp/>pCellInfoWatcher<sp/>=</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SmartPointerDereferenceWatcher&lt;<sp/>CellInfoPtr<sp/>&gt;(</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_info_1a471e1c7e211a610f5176695403814742" kindref="member">CellInfo::pWatcher</ref>()<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;cellInfos/*&quot;</highlight><highlight class="normal">,<sp/>pCellInfoWatcher<sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;numEntities&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Space::numEntities<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;artificialMinLoad&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_space_1a3de244c65ba25a764306b13ad340605c" kindref="member">Space::artificialMinLoad</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_space_1a7b8de0d42c94f14862532957cfcab607" kindref="member">pWatcher</ref>;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/><ref refid="class_space_1ac6ba1d1baa02f0153083db97d67733da" kindref="member">Space::newEntity</ref>(<sp/>EntityID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>EntityTypeID<sp/>entityTypeID<sp/>)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>check<sp/>here<sp/>that<sp/>the<sp/>new<sp/>entity<sp/>is<sp/>not<sp/>in<sp/>our<sp/>population.<sp/>It<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>possible<sp/>that<sp/>it<sp/>could<sp/>be<sp/>if<sp/>it<sp/>was<sp/>removed<sp/>(via<sp/>teleport<sp/>or<sp/>a<sp/>ghost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>added<sp/>and<sp/>removed<sp/>quickly,<sp/>for<sp/>example)<sp/>and<sp/>is<sp/>now<sp/>being<sp/>re-added<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>has<sp/>been<sp/>removed<sp/>from<sp/>everyone&apos;s<sp/>AoI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>deadEntity<sp/>=</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::population().find(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pNewEntity;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deadEntity<sp/>!=<sp/>Entity::population().end())</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//WARNING_MSG(<sp/>&quot;Space::newEntity:<sp/>Bringing<sp/>%d<sp/>back<sp/>to<sp/>life\n&quot;,<sp/>id<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewEntity<sp/>=<sp/>deadEntity-&gt;second;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>should<sp/>never<sp/>call<sp/>through<sp/>to<sp/>here<sp/>for<sp/>non-destroyed<sp/>entities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cell::createEntityInternal()<sp/>checks<sp/>this<sp/>before<sp/>calling<sp/>this<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pNewEntity-&gt;isDestroyed()<sp/>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pNewEntity-&gt;entityTypeID()<sp/>==<sp/>entityTypeID<sp/>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>entityTypeID<sp/>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType<sp/>||<sp/>!pType-&gt;canBeOnCell())</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::newEntity:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>type<sp/>%d<sp/>has<sp/>no<sp/>cell<sp/>entity<sp/>class\n&quot;</highlight><highlight class="normal">,<sp/>entityTypeID<sp/>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewEntity<sp/>=</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref>(<sp/>pType-&gt;newEntity(),<sp/>EntityPtr::STEAL_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>pNewEntity-&gt;setToInitialState(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pNewEntity;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/><ref refid="class_space_1aa15aab97c13dc51d7b475303e3a815bf" kindref="member">Space::findNearestEntity</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>position<sp/>)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Implement<sp/>this<sp/>function<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entities_.empty())<sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entities_.back().get();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::createSpaceDataObject()</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpaceDataObject_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propertyDefinitionsName_.empty())</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::createSpaceDataObject:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Empty<sp/>space<sp/>data<sp/>def<sp/>name<sp/>for<sp/>space<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>typePtr<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyDefinitionsName_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typePtr<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>desc<sp/>=<sp/>typePtr-&gt;description();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaceDataObject_<sp/>=<sp/>ScriptObjectPtr&lt;<sp/>SpaceDataObject<sp/>&gt;(</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space_data_object" kindref="compound">SpaceDataObject</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>desc,<sp/>&amp;SpaceDataObject::s_type_<sp/>),</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::destroySpaceDataObject()</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaceDataObject_<sp/>=<sp/>ScriptObjectPtr&lt;<sp/>SpaceDataObject<sp/>&gt;(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::createSpaceGeometryMappings()</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pGeometryMappings_.get()<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>pGeometryMappings_.reset(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SpaceGeometryMappings()<sp/>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::destroySpaceGeometryMappings()</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>pGeometryMappings_.reset(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1ada1c5740ccdc27b161fde7d7182b3cce" kindref="member">Space::updateProperty</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stream<sp/>off<sp/>to<sp/>apply<sp/>the<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;applyPropertyChange(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1ad622e7d5c8c3e06b60bbfce0a268973f" kindref="member">Space::writeClientGeometryMappingsUpdate</ref>(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EventNumber<sp/>&amp;<sp/>eventNumber<sp/>)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eventNumber<sp/>==<sp/>lastGeometryMappingEventNumber_)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>first<sp/>time,<sp/>we<sp/>send<sp/>all<sp/>the<sp/>geometry<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eventNumber<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpaceGeometryMappings::const_iterator<sp/>it<sp/>=</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pGeometryMappings()-&gt;begin();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>this-&gt;pGeometryMappings()-&gt;end())</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppIntInterface::sendMessageToClient<sp/>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>ClientInterface::addSpaceGeometryMapping.id();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int16)ClientInterface::addSpaceGeometryMapping.streamSize();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>it-&gt;first;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventNumber<sp/>=<sp/>lastGeometryMappingEventNumber_;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>EventHistory::const_reverse_iterator<sp/>eventIter<sp/>=</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;geometryMappingEventHistory().rbegin();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>EventHistory::const_reverse_iterator<sp/>eventEnd<sp/><sp/>=</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;geometryMappingEventHistory().rend();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>case<sp/>only<sp/>happens<sp/>if<sp/>receiving<sp/>an<sp/>old<sp/>version<sp/>synchronization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>CellAppMgr<sp/>when<sp/>CellAppMgr<sp/>recovery<sp/>occurs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>Space::syncAllGeometryMappings()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eventNumber<sp/>&gt;<sp/>lastGeometryMappingEventNumber_)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>a<sp/>full<sp/>flush<sp/>of<sp/>the<sp/>history<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventIter<sp/>=<sp/>this-&gt;geometryMappingEventHistory().rend();</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventNumber<sp/>=<sp/>lastGeometryMappingEventNumber_;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(eventIter<sp/>!=<sp/>eventEnd<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*eventIter)-&gt;number()<sp/>&gt;<sp/>eventNumber)</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventIter++;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_history_event" kindref="compound">HistoryEvent</ref><sp/>*<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(eventIter<sp/>!=<sp/>this-&gt;geometryMappingEventHistory().rbegin())</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventIter--;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>*eventIter;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;<ref refid="class_history_event_1a9af6aba083c32babd26ed1e310167378" kindref="member">addToBundle</ref>(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventNumber<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;number();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a34ede408e87a6e82d785ca72578c1aa4" kindref="member">Space::trimGeometryMappingEventHistory</ref>()</highlight></codeline>
<codeline lineno="746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;geometryMappingEventHistory().<ref refid="class_event_history_1adc7e9c589cf83decfbc191d74f5beefe" kindref="member">trim</ref>();</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a271ad20267240920d0ac7804a204cccf" kindref="member">Space::addGeometryMapping</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>lastGeometryMappingEventNumber_;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>entryID;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMapping<sp/>mapping;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>mapping;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a271ad20267240920d0ac7804a204cccf" kindref="member">addGeometryMapping</ref>(<sp/>entryID,<sp/>mapping,<sp/></highlight><highlight class="comment">/*<sp/>notifyMgr<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createAddGeometryMappingHistoryEvent(<sp/>entryID,<sp/>mapping<sp/>);</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::createAddGeometryMappingHistoryEvent(</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceGeometryMapping<sp/>&amp;<sp/>mapping<sp/>)</highlight></codeline>
<codeline lineno="774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>history<sp/>event<sp/>of<sp/>add<sp/>geometry<sp/>mapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryOStream<sp/>stream;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>entryID;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>mapping;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;geometryMappingEventHistory().<ref refid="class_event_history_1a814b60f4f724e2cf5fe7d0de53640336" kindref="member">add</ref>(<sp/>lastGeometryMappingEventNumber_,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientInterface::addSpaceGeometryMapping,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a9788d25cca2b04722bcf08ac590cb164" kindref="member">Space::removeGeometryMapping</ref>(</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::removeGeometryMappingArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>lastGeometryMappingEventNumber_<sp/>=<sp/>args.eventNumber;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a9788d25cca2b04722bcf08ac590cb164" kindref="member">removeGeometryMapping</ref>(<sp/>args.entryID,<sp/></highlight><highlight class="comment">/*<sp/>notifyMgr<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createRemoveGeometryMappingHistoryEvent(<sp/>args.entryID<sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::createRemoveGeometryMappingHistoryEvent(<sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID<sp/>)</highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>history<sp/>event<sp/>of<sp/>remove<sp/>geometry<sp/>mapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryOStream<sp/>stream;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>entryID;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;geometryMappingEventHistory().<ref refid="class_event_history_1a814b60f4f724e2cf5fe7d0de53640336" kindref="member">add</ref>(<sp/>lastGeometryMappingEventNumber_,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientInterface::removeSpaceGeometryMapping,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_1a271ad20267240920d0ac7804a204cccf" kindref="member">Space::addGeometryMapping</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceGeometryMapping<sp/>&amp;<sp/>mapping,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notifyMgr<sp/>)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!mapping.path().empty()<sp/>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;pGeometryMappings()-&gt;add(<sp/>entryID,<sp/>mapping<sp/>))</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1aac0115ffe04c82cce6b6fc28da8b64ca" kindref="member">setLastMappedGeometry</ref>(<sp/>mapping.path()<sp/>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;applyAddedGeometryMapping(<sp/>entryID,<sp/>mapping<sp/>);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notifyMgr)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;notifyGeometryMappingAdded(<sp/>entryID,<sp/>mapping<sp/>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_1a9788d25cca2b04722bcf08ac590cb164" kindref="member">Space::removeGeometryMapping</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notifyMgr<sp/>)</highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pGeometryMappings()-&gt;</highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<sp/>entryID<sp/>))</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;applyRemovedGeometryMapping(<sp/>entryID<sp/>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notifyMgr)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;notifyGeometryMappingRemoved(<sp/>entryID<sp/>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::notifyGeometryMappingAdded(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceGeometryMapping<sp/>&amp;<sp/>mapping<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="882"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>b<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>b.startMessage(<sp/>CellAppMgrInterface::addSpaceGeometryMapping<sp/>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>entryID;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>mapping;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr.send();</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::notifyGeometryMappingRemoved(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="904"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>b<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppMgrInterface::removeSpaceGeometryMappingArgs<sp/>&amp;<sp/>args<sp/>=</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::removeSpaceGeometryMappingArgs::start(<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>args.spaceID<sp/>=<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>args.entryID<sp/>=<sp/>entryID;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr.send();</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::applyAddedGeometryMapping(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceGeometryMapping<sp/>&amp;<sp/>mapping<sp/>)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapping.shouldLoadOnServer())</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pPhysicalSpace()-&gt;loadResource(</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryID,<sp/>mapping.path(),</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping.matrix()<sp/>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a48d370784a2213d793668674d10fb5ee" kindref="member">onNewGeometryMapping</ref>();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::applyAddedGeometryMapping:<sp/>Added<sp/>mapping<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping.path().c_str()<sp/>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1aac0115ffe04c82cce6b6fc28da8b64ca" kindref="member">setLastMappedGeometry</ref>(<sp/>mapping.path()<sp/>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().scriptEvents().triggerEvent(</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryMappingAdded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;iO&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::createFrom(<sp/>entryID<sp/>).</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">isInRecording</ref>())</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pCell()-&gt;pReplayData()-&gt;<ref refid="class_replay_data_collector_1a3347ac6e3f4c86b65596b9ee3ed8db3d" kindref="member">addAddSpaceGeometryMapping</ref>(</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryID,<sp/>mapping<sp/>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::applyRemovedGeometryMapping(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID<sp/>)</highlight></codeline>
<codeline lineno="955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMappings::const_iterator<sp/>it<sp/>=</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGeometryMappings()-&gt;find(<sp/>entryID<sp/>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>it<sp/>==<sp/>this-&gt;pGeometryMappings()-&gt;end()<sp/>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pPhysicalSpace()-&gt;unloadResource(<sp/>entryID<sp/>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().scriptEvents().triggerEvent(</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryMappingRemoved&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;iO&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::createFrom(<sp/>entryID<sp/>).</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">isInRecording</ref>())</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pCell()-&gt;pReplayData()-&gt;<ref refid="class_replay_data_collector_1a9123679de4e1cc572ed325c77eb29bab" kindref="member">addRemoveSpaceGeometryMapping</ref>(</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryID<sp/>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1abff3865ea3b56808710f94f1e14e14d4" kindref="member">Space::readAllProperties</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>EventNumber<sp/>currentEventNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>currentEventNumber;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;lastEventNumber(<sp/>currentEventNumber<sp/>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;readFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a4b7755cf81f98fd99227a6cc4a486d55" kindref="member">Space::syncAllProperties</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>EventNumber<sp/>currentEventNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>currentEventNumber;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEventNumber<sp/>&lt;<sp/>pSpaceDataObject_-&gt;lastEventNumber())</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::syncAllProperties:<sp/>Existing<sp/>event<sp/>number(%d)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>newer<sp/>than<sp/>CellAppMgr&apos;s<sp/>event<sp/>number(%d)<sp/>for<sp/>space(%d).\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;lastEventNumber(),<sp/>currentEventNumber,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>flush<sp/>the<sp/>local<sp/>copy<sp/>in<sp/>case<sp/>local<sp/>changes<sp/>have<sp/>happened</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>during<sp/>CellAppMgr<sp/>absence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;readFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>a<sp/>full<sp/>witness<sp/>update<sp/>to<sp/>clients<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEventNumber<sp/>!=<sp/>pSpaceDataObject_-&gt;lastEventNumber())</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;lastEventNumber(<sp/>currentEventNumber<sp/>);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;eventHistory().clear();</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;eventHistory().lastTrimmedEventNumber(</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentEventNumber<sp/>);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1ad4a9d3eef2098cbee6957695a959a39c" kindref="member">Space::readAllGeometryMappings</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>lastGeometryMappingEventNumber_;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pGeometryMappings()-&gt;readFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMappings::const_iterator<sp/>it<sp/>=</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pGeometryMappings()-&gt;begin();</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>this-&gt;pGeometryMappings()-&gt;end())</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;applyAddedGeometryMapping(<sp/>it-&gt;first,<sp/>it-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a5965a53e64248a9d07e82de393cf4348" kindref="member">Space::syncAllGeometryMappings</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>EventNumber<sp/>currentEventNumber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>currentEventNumber;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEventNumber<sp/>==<sp/>lastGeometryMappingEventNumber_)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEventNumber<sp/>&lt;<sp/>lastGeometryMappingEventNumber_)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::syncAllGeometryMappings:<sp/>Existing<sp/>event<sp/>number(%d)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>newer<sp/>than<sp/>CellAppMgr&apos;s<sp/>event<sp/>number(%d)<sp/>for<sp/>space(%d).\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastGeometryMappingEventNumber_,<sp/>currentEventNumber,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;geometryMappingEventHistory().<ref refid="class_event_history_1ac25bcceb40c673823736d36aa05a4a3f" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>lastGeometryMappingEventNumber_<sp/>=<sp/>currentEventNumber;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMappings<sp/>currentMappings;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>currentMappings.readFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>old<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMappings<sp/>removedMappings;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMappings::const_iterator<sp/>it<sp/>=</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pGeometryMappings()-&gt;begin();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>this-&gt;pGeometryMappings()-&gt;end())</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentMappings.find(<sp/>it-&gt;first<sp/>)<sp/>==<sp/>currentMappings.end())</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removedMappings.add(<sp/>it-&gt;first,<sp/>it-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMappings::const_iterator<sp/>itRemove<sp/>=<sp/>removedMappings.begin();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(itRemove<sp/>!=<sp/>removedMappings.end())</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a9788d25cca2b04722bcf08ac590cb164" kindref="member">removeGeometryMapping</ref>(<sp/>itRemove-&gt;first,<sp/></highlight><highlight class="comment">/*<sp/>notifyMgr<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;createRemoveGeometryMappingHistoryEvent(<sp/>itRemove-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itRemove++;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>new<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceGeometryMappings::const_iterator<sp/>itAdd<sp/>=<sp/>currentMappings.begin();</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(itAdd<sp/>!=<sp/>currentMappings.end())</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pGeometryMappings()-&gt;find(<sp/>itAdd-&gt;first<sp/>)<sp/>==</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pGeometryMappings()-&gt;end())</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a271ad20267240920d0ac7804a204cccf" kindref="member">addGeometryMapping</ref>(</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itAdd-&gt;first,<sp/>itAdd-&gt;second,<sp/></highlight><highlight class="comment">/*<sp/>notifyMgr<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;createAddGeometryMappingHistoryEvent(</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itAdd-&gt;first,<sp/>itAdd-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itAdd++;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a498280b82abd01c339a484eb42393578" kindref="member">Space::recordPropertyChange</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>propertyIndex<sp/>)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">isInRecording</ref>())</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pCell()-&gt;pReplayData()-&gt;<ref refid="class_replay_data_collector_1a6b7d5a925cd23648c9d0a4bc1d3574ec" kindref="member">addSpacePropertyChange</ref>(<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyIndex,<sp/>this-&gt;pSpaceDataObject().</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a69bf53e10c29cd9b756f07cf9fee4a1a" kindref="member">Space::notifyStartRecording</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_replay_data_collector" kindref="compound">ReplayDataCollector</ref><sp/>&amp;<sp/>data<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1131"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>b<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>b.startMessage(<sp/>CellAppMgrInterface::notifySpaceStartRecording<sp/>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>data.recordingSpaceEntryID();</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>data.name();</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>(uint8)data.shouldRecordAoIEvents();</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a42c7efb270ceb3e36274a0dc7decba33" kindref="member">Space::notifyStopRecording</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1151"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>b<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppMgrInterface::notifySpaceStopRecordingArgs::start(<sp/>b<sp/>).spaceID</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>id_;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a253e0c5c3fddecc29f860c154bcca01a" kindref="member">Space::startRecording</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>name;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>shouldRecordAoIEvents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>entryID<sp/>&gt;&gt;<sp/>name<sp/>&gt;&gt;<sp/>shouldRecordAoIEvents;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pCell()-&gt;<ref refid="class_cell_1a937d6bff38202441926ba22106ea0b4e" kindref="member">startRecording</ref>(<sp/>entryID,<sp/>name,<sp/></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(shouldRecordAoIEvents<sp/>!=<sp/>0),<sp/></highlight><highlight class="comment">/*<sp/>isInitial<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a9ea8464b73811ef212f43fa19aa50fa9" kindref="member">Space::stopRecording</ref>()</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pCell()-&gt;<ref refid="class_cell_1a8999b06c6ac67808acd47242e0645e3a" kindref="member">stopRecording</ref>(<sp/></highlight><highlight class="comment">/*<sp/>isInitial*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">Space::isInRecording</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1186"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;pCell()<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(this-&gt;pCell()-&gt;pReplayData()<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a65bbb3167c77208e5ec59bac11f9d835" kindref="member">Space::syncRecording</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recording<sp/>session<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">isInRecording</ref>())</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a253e0c5c3fddecc29f860c154bcca01a" kindref="member">startRecording</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">isInRecording</ref>())</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a9ea8464b73811ef212f43fa19aa50fa9" kindref="member">stopRecording</ref>();</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1aaf1bd1aa1d569f38b48d09ac01506264" kindref="member">Space::updateGeometry</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasMulticell<sp/>=<sp/>!this-&gt;hasSingleCell();</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>them<sp/>all<sp/>to<sp/>be<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>step<sp/>if<sp/>we<sp/>used<sp/>a<sp/>flip-flop<sp/>value<sp/>but<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simpler<sp/>this<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellInfos::const_iterator<sp/>iter<sp/>=<sp/>cellInfos_.begin();</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>cellInfos_.end())</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;shouldDelete(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfoTree_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfoTree_-&gt;deleteTree();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>rect(</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-std::numeric_limits&lt;<sp/>float<sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-std::numeric_limits&lt;<sp/>float<sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;<sp/>float<sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;<sp/>float<sp/>&gt;::max()<sp/>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellInfoTree_<sp/>=<sp/>this-&gt;<ref refid="class_space_1a1a785d230b104462b562d544bb5d7c38" kindref="member">readTree</ref>(<sp/>data,<sp/>rect<sp/>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>cells<sp/>that<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellInfos::iterator<sp/>iter<sp/>=<sp/>cellInfos_.begin();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>cellInfos_.end())</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellInfos::iterator<sp/>oldIter<sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldIter-&gt;second-&gt;shouldDelete())</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>assertion<sp/>can<sp/>be<sp/>triggered.<sp/>I<sp/>believe<sp/>this<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>occur<sp/>if<sp/>multiple<sp/>cells<sp/>are<sp/>deleted<sp/>at<sp/>the<sp/>same<sp/>time.<sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>be<sp/>good<sp/>to<sp/>confirm<sp/>that<sp/>this<sp/>is<sp/>not<sp/>an<sp/>issue<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>missing<sp/>notifyOfCellRemoval<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MF_ASSERT(<sp/>oldIter-&gt;second-&gt;isDeletePending()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellInfos_.erase(<sp/>oldIter<sp/>);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>we<sp/>are<sp/>going<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>our<sp/>own<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCell_)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCell_-&gt;cellInfo().shouldDelete())</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::updateGeometry:<sp/>Cell<sp/>in<sp/>space<sp/>%u<sp/>is<sp/>going\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCell_-&gt;<ref refid="class_cell_1a6dc9d9f608c287f823c371a658e2b0e2" kindref="member">checkOffloadsAndGhosts</ref>();</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>we<sp/>want<sp/>to<sp/>expressly<sp/>shut<sp/>down<sp/>this<sp/>space<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wasMulticell)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;checkForShutDown();</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::checkForShutDown()</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;hasSingleCell()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entities_.empty()<sp/>&amp;&amp;<sp/>CellApp::instance().hasStarted()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!this-&gt;isShuttingDown()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!CellApp::instance().mainDispatcher().processingBroken()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(CellAppConfig::useDefaultSpace()<sp/>&amp;&amp;<sp/>id_<sp/>==<sp/>1))<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>for<sp/>the<sp/>default<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::checkForShutDown:<sp/>Space<sp/>%u<sp/>is<sp/>now<sp/>empty.\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1ae2072ae4bb67395e002b83d84d5f7844" kindref="member">requestShutDown</ref>();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Space::hasSingleCell()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1318"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCell_<sp/>&amp;&amp;<sp/>((<ref refid="class_space_node" kindref="compound">SpaceNode</ref>*)&amp;pCell_-&gt;cellInfo()<sp/>==<sp/>pCellInfoTree_);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a98c14d92ea7b6da5178f01bf2a795a30" kindref="member">Space::spaceGeometryLoaded</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>flags;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>flags;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>lastMappedGeometry;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>lastMappedGeometry;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastMappedGeometry<sp/>==<sp/>lastMappedGeometry_)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMappedGeometry_.clear();</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBootStrap<sp/>=<sp/>(flags<sp/>&amp;<sp/>SPACE_GEOMETRY_LOADED_BOOTSTRAP_FLAG)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>script<sp/>to<sp/>let<sp/>them<sp/>know.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().scriptEvents().triggerEvent(<sp/></highlight><highlight class="stringliteral">&quot;onAllSpaceGeometryLoaded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;iis#&quot;</highlight><highlight class="normal">,<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(isBootStrap),</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMappedGeometry.data(),<sp/>lastMappedGeometry.length()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a235ad7907aea7f12e47a40c18378ad41" kindref="member">Space::shutDownSpace</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shuttingDownTimerHandle_.isSet())</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>a<sp/>timer<sp/>to<sp/>go<sp/>off<sp/>in<sp/>one<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shuttingDownTimerHandle_<sp/>=</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().mainDispatcher().addTimer(<sp/>1000000,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>NULL,</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ShutdownSpace&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::shutDownSpace:<sp/>Already<sp/>shutting<sp/>down.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::handleTimeout(<sp/>TimerHandle<sp/>handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCell_)</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCell_-&gt;<ref refid="class_cell_1aca5e5be325ed50f7ce7c5f559ba2c264" kindref="member">onSpaceGone</ref>();</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;hasSingleCell()<sp/>&amp;&amp;<sp/>entities_.empty())</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().destroyCell(<sp/>pCell_<sp/>);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>the<sp/>cell<sp/>is<sp/>destructed<sp/>it<sp/>will<sp/>clear<sp/>our<sp/>ptr<sp/>to<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pCell_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::updateLoadBounds()</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>IPhysicalSpace::BoundsList<sp/>loadableRects;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>IPhysicalSpace::BoundsList<sp/>toDeleteList;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;pPhysicalSpace()-&gt;getLoadableRects(<sp/>loadableRects<sp/>))</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(IPhysicalSpace::BoundsList::const_iterator<sp/>iter</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>spaceLoadBounds_.begin();</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>spaceLoadBounds_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPhysicalSpace::BoundsList::iterator<sp/>boundsIter<sp/>=</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::find(<sp/>loadableRects.begin(),<sp/>loadableRects.end(),<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boundsIter<sp/>!=<sp/>loadableRects.end())</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadableRects.erase(<sp/>boundsIter<sp/>);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toDeleteList.push_back(<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(IPhysicalSpace::BoundsList::iterator<sp/>iter<sp/>=<sp/>loadableRects.begin();</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>loadableRects.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceLoadBounds_.push_back(<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>b<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.startMessage(<sp/>CellAppMgrInterface::updateSpaceLoadBounds<sp/>);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>*iter;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(IPhysicalSpace::BoundsList::iterator<sp/>iter<sp/>=<sp/>toDeleteList.begin();</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>toDeleteList.end();<sp/>iter++<sp/>)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPhysicalSpace::BoundsList::iterator<sp/>boundsIter<sp/>=</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::find(<sp/>spaceLoadBounds_.begin(),<sp/></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceLoadBounds_.end(),<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boundsIter<sp/>!=<sp/>spaceLoadBounds_.end())</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceLoadBounds_.erase(<sp/>boundsIter<sp/>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>b<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.startMessage(<sp/>CellAppMgrInterface::updateSpaceLoadBounds<sp/>);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>&lt;&lt;<sp/>*iter;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>shouldCheckLoadBounds_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1ae2072ae4bb67395e002b83d84d5f7844" kindref="member">Space::requestShutDown</ref>()</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>CellAppConfig::useDefaultSpace()<sp/>&amp;&amp;<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::requestShutDown:<sp/>Requesting<sp/>shut<sp/>down<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>default<sp/>space\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().cellAppMgr().shutDownSpace(<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1af92de2a77b1f0d5d7a97f224d88924d4" kindref="member">Space::chunkTick</ref>()</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unloadOnly<sp/>=<sp/>(pCell_<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>cellRect;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unloadOnly)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>retreat<sp/>to<sp/>origin<sp/>if<sp/>no<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect<sp/>=<sp/>BW::Rect(<sp/>0.f,<sp/>0.f,<sp/>0.f,<sp/>0.f<sp/>);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inflate<sp/>boundary<sp/>of<sp/>rect<sp/>to<sp/>load,<sp/>but<sp/>don&apos;t<sp/>go<sp/>outside<sp/>+-(nearIntMax);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nearIntMax<sp/>=<sp/>1000000000.f;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inflateBy<sp/>=<sp/>CellAppConfig::ghostDistance()*2;<sp/></highlight><highlight class="comment">//<sp/>or<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect<sp/>=<sp/>pCell_-&gt;cellInfo().rect();</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect.safeInflateBy(<sp/>inflateBy<sp/>);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect.xMin(<sp/>Math::clamp(<sp/>-nearIntMax,<sp/>cellRect.xMin(),<sp/>nearIntMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect.yMin(<sp/>Math::clamp(<sp/>-nearIntMax,<sp/>cellRect.yMin(),<sp/>nearIntMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect.xMax(<sp/>Math::clamp(<sp/>-nearIntMax,<sp/>cellRect.xMax(),<sp/>nearIntMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect.yMax(<sp/>Math::clamp(<sp/>-nearIntMax,<sp/>cellRect.yMax(),<sp/>nearIntMax<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sometimes<sp/>the<sp/>CellAppMgr<sp/>will<sp/>give<sp/>us<sp/>an<sp/>inverted<sp/>cellRect<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FLT_MAX<sp/>on<sp/>the<sp/>min<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect.xMin(<sp/>std::min(<sp/>cellRect.xMin(),<sp/>cellRect.xMax()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellRect.yMin(<sp/>std::min(<sp/>cellRect.yMin(),<sp/>cellRect.yMax()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldCheckLoadBounds_)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateLoadBounds();</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anyColumnsLoaded<sp/>=<sp/>pPhysicalSpace_-&gt;update(<sp/>cellRect,<sp/>unloadOnly<sp/>);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" kindref="member">pChunkSpace</ref>())<sp/></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Entities<sp/>as<sp/>dynamic<sp/>chunk<sp/>items<sp/>that<sp/>get<sp/>moved<sp/>into<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>chunk<sp/>when<sp/>one<sp/>loads<sp/>underneath<sp/>them.<sp/>Of<sp/>course,<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>happen<sp/>if<sp/>the<sp/>load<sp/>balancing<sp/>all<sp/>does<sp/>its<sp/>thing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>know<sp/>it&apos;s<sp/>going<sp/>to<sp/>anyway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anyColumnsLoaded)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>A<sp/>separate<sp/>linked<sp/>list<sp/>of<sp/>entities<sp/>without<sp/>a<sp/>chunk<sp/>could<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kept<sp/>(using<sp/>their<sp/>pNextInChunk/pPrevInChunk<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SpaceEntities::iterator<sp/>it<sp/>=<sp/>entities_.begin();</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>entities_.end();</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>it-&gt;get();</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;pChunk()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;checkChunkCrossing();</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a76b52528d21e198685ff02c684214406" kindref="member">Space::prepareNewlyLoadedChunksForDelete</ref>()</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>pPhysicalSpace_-&gt;cancelCurrentlyLoading();</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a57278e39c1e541f8d72d79d146710399" kindref="member">Space::calcLoadedRect</ref>(<sp/>BW::Rect<sp/>&amp;<sp/>loadedRect<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1554"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>pPhysicalSpace_-&gt;getLoadedRect(<sp/>loadedRect<sp/>);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_1a9c28193d5d8423c6e57a63058d7acee0" kindref="member">Space::isFullyUnloaded</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1563"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>some<sp/>(ghost)<sp/>entities<sp/>have<sp/>been<sp/>given<sp/>to<sp/>us<sp/>since<sp/>killCell<sp/>was<sp/>called,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>1.<sp/>that&apos;s<sp/>bad,<sp/>and<sp/>2.<sp/>we&apos;re<sp/>not<sp/>unloaded<sp/>(really<sp/>a<sp/>sanity<sp/>check).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entities_.empty())</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>pPhysicalSpace_-&gt;isFullyUnloaded();</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::isFullyUnloaded:<sp/>ChunkSpace<sp/>unloading<sp/>complete.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1aef4e1aba87c45238f4350cdb04fdfe23" kindref="member">Space::writeRecoveryData</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1587"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Do<sp/>we<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>cell&apos;less<sp/>spaces?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCell_)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a8ad84fe0a12d1c5c76622bb65aaf956e" kindref="member">writeDataToStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>BSP<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfoTree_)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfoTree_-&gt;addToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a8ad84fe0a12d1c5c76622bb65aaf956e" kindref="member">Space::writeDataToStream</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1606"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>propertyDefinitionsName_;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>lastMappedGeometry_;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>geometry<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>lastGeometryMappingEventNumber_;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pGeometryMappings()-&gt;writeToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>artificialMinLoad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>artificialMinLoad_;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>static_cast&lt;<sp/>uint32<sp/>&gt;(<sp/>spaceLoadBounds_.size()<sp/>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>IPhysicalSpace::BoundsList::const_iterator<sp/>iter<sp/>=<sp/>spaceLoadBounds_.begin();</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>iter<sp/>!=<sp/>spaceLoadBounds_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>*iter;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!propertyDefinitionsName_.empty())</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpaceDataObject_<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>pSpaceDataObject_-&gt;lastEventNumber();</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaceDataObject_-&gt;writeToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space<sp/>recording</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">isInRecording</ref>();</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_space_1a62ebdfbfcad446743d65fdc2f3fcf91a" kindref="member">isInRecording</ref>())</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOStream<sp/>recordingStream;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_replay_data_collector" kindref="compound">ReplayDataCollector</ref><sp/>*<sp/>pReplayData<sp/>=<sp/>this-&gt;pCell()-&gt;pReplayData();</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordingStream<sp/>&lt;&lt;<sp/>pReplayData-&gt;recordingSpaceEntryID();</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordingStream<sp/>&lt;&lt;<sp/>pReplayData-&gt;name();</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordingStream<sp/>&lt;&lt;<sp/>(uint8)pReplayData-&gt;shouldRecordAoIEvents();</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>recordingStream.remainingLength();</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.addBlob(<sp/>recordingStream.retrieve(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordingStream.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a01387009db3e13c5c94d0be83c4e9da8" kindref="member">Space::writeBounds</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1657"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isShuttingDown())</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeEntityBounds(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeChunkBounds(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>entities<sp/>including<sp/>ghosts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>uint32(<sp/>this-&gt;spaceEntities().size()<sp/>);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::writeEntityBounds(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1678"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>needs<sp/>to<sp/>match<sp/>CellAppMgr&apos;s<sp/>CellData::updateEntityBounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Args<sp/>are<sp/>isMax<sp/>and<sp/>isY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeEntityBoundsForEdge(<sp/>stream,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeEntityBoundsForEdge(<sp/>stream,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeEntityBoundsForEdge(<sp/>stream,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeEntityBoundsForEdge(<sp/>stream,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::writeChunkBounds(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1694"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>loadedBoundary(<sp/>-FLT_MAX,<sp/>-FLT_MAX,<sp/>FLT_MAX,<sp/>FLT_MAX<sp/>);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a57278e39c1e541f8d72d79d146710399" kindref="member">calcLoadedRect</ref>(<sp/>loadedBoundary<sp/>);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>BoundingBox<sp/>bbox<sp/>=<sp/>this-&gt;pPhysicalSpace_-&gt;bounds();</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>spaceBoundary(<sp/>bbox.minBounds().x,<sp/>bbox.minBounds().z,</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox.maxBounds().x,<sp/>bbox.maxBounds().z<sp/>);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gridSize;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;<ref refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" kindref="member">pChunkSpace</ref>()<sp/>)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridSize<sp/>=<sp/>this-&gt;<ref refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" kindref="member">pChunkSpace</ref>()-&gt;gridSize();<sp/></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridSize<sp/>=<sp/>std::min(<sp/>spaceBoundary.range1D(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>).length(),</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceBoundary.range1D(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>).length()<sp/>);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>loadedBoundary;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>spaceBoundary;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>gridSize;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a944cbd48768f72398d54542ef65baef1" kindref="member">Space::updateArtificialMinLoad</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_space_1a3de244c65ba25a764306b13ad340605c" kindref="member">artificialMinLoad</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notifyMgr<sp/>)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(artificialMinLoad<sp/>&lt;<sp/>0.f)</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::updateArtificialMinLoad:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>artificialMinLoad<sp/>should<sp/>be<sp/>[0,<sp/>+intf)\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>artificialMinLoad_<sp/>=<sp/><ref refid="class_space_1a3de244c65ba25a764306b13ad340605c" kindref="member">artificialMinLoad</ref>;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>CellAppMgr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(notifyMgr)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>b<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::updateSpaceArtificialMinLoadArgs<sp/>&amp;<sp/>args<sp/>=</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::updateSpaceArtificialMinLoadArgs::start(<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.spaceID<sp/>=<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.artificialMinLoad<sp/>=<sp/>artificialMinLoad_;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellAppMgr.send();</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1a944cbd48768f72398d54542ef65baef1" kindref="member">Space::updateArtificialMinLoad</ref>(</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::updateArtificialMinLoadArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a944cbd48768f72398d54542ef65baef1" kindref="member">updateArtificialMinLoad</ref>(</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.artificialMinLoad,<sp/></highlight><highlight class="comment">/*<sp/>notifyMgr<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Script<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_obstacle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/script.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/script_math.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>addSpaceData</highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].property<sp/>instead.</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/>*<sp/><sp/>Adds<sp/>a<sp/>key/value<sp/>pair<sp/>(space<sp/>data)<sp/>to<sp/>the<sp/>given<sp/>space.</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/>*<sp/><sp/>Old<sp/>values<sp/>associated<sp/>with<sp/>the<sp/>input<sp/>key<sp/>are<sp/>kept.</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/>*<sp/><sp/>Consider<sp/>using<sp/>BigWorld.setSpaceData<sp/>if<sp/>old<sp/>values<sp/>are<sp/>no</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/>*<sp/><sp/>longer<sp/>required.</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1793"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>given<sp/>key<sp/>is<sp/>not<sp/>in<sp/>the<sp/>valid<sp/>user<sp/>range<sp/>of<sp/>256<sp/>to<sp/>32767,<sp/>or<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/>*<sp/><sp/>spaceID<sp/>does<sp/>not<sp/>refer<sp/>to<sp/>a<sp/>valid<sp/>space,<sp/>then<sp/>a<sp/>ValueError<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.setSpaceData</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataFirstForKey</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceDataForKey</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceData</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataForKey</highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceData</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/><sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>add<sp/>the<sp/>data</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>key<sp/>under<sp/>which<sp/>to<sp/>add<sp/>the<sp/>space<sp/>data<sp/>(between<sp/>256<sp/>and</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32767)</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>value<sp/><sp/><sp/><sp/>the<sp/>string<sp/>data<sp/>to<sp/>add<sp/>for<sp/>this<sp/>key</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>new<sp/>space<sp/>data<sp/>entry<sp/>id<sp/>for<sp/>the<sp/>added<sp/>data</highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>delSpaceData</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].property<sp/>instead.</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/>*<sp/><sp/>Deletes<sp/>the<sp/>space<sp/>data<sp/>entry<sp/>of<sp/>the<sp/>given<sp/>id<sp/>in<sp/>the<sp/>given<sp/>space.<sp/>Note<sp/>that</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/>*<sp/><sp/>only<sp/>the<sp/>data<sp/>known<sp/>by<sp/>the<sp/>current<sp/>CellApp<sp/>is<sp/>deleted<sp/>from<sp/>other<sp/>CellApps.</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>ValueError<sp/>is<sp/>raised<sp/>if<sp/>the<sp/>space<sp/>ID<sp/>is<sp/>invalid,<sp/>or<sp/>the<sp/>entry<sp/>ID<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/>*<sp/><sp/>refer<sp/>to<sp/>a<sp/>mapped<sp/>entry.</highlight></codeline>
<codeline lineno="1820"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>entryID<sp/>refers<sp/>to<sp/>a<sp/>previously<sp/>added<sp/>geometry<sp/>mapping,<sp/>the<sp/>mapping</highlight></codeline>
<codeline lineno="1822"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>be<sp/>deleted.<sp/>A<sp/>mapping<sp/>can<sp/>not<sp/>be<sp/>deleted<sp/>while<sp/>there<sp/>is<sp/>space<sp/>geometry</highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/>*<sp/><sp/>loading<sp/>in<sp/>progress.<sp/>A<sp/>RuntimeError<sp/>is<sp/>raised<sp/>in<sp/>this<sp/>case.</highlight></codeline>
<codeline lineno="1824"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>onSpaceGeometryLoaded<sp/>callback<sp/>to<sp/>detect<sp/>when<sp/>loading<sp/>is<sp/>finished.</highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.setSpaceData</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataFirstForKey</highlight></codeline>
<codeline lineno="1828"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceDataForKey</highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.addSpaceData</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataForKey</highlight></codeline>
<codeline lineno="1831"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceData</highlight></codeline>
<codeline lineno="1832"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.addSpaceGeometryMapping</highlight></codeline>
<codeline lineno="1833"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/><sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>operate</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entryID<sp/><sp/>the<sp/>entry<sp/>to<sp/>delete</highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>delSpaceDataForKey</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].property<sp/>instead.</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/>*<sp/><sp/>Deletes<sp/>all<sp/>space<sp/>data<sp/>for<sp/>a<sp/>given<sp/>key<sp/>in<sp/>the<sp/>given<sp/>space.</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1845"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.setSpaceData</highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataFirstForKey</highlight></codeline>
<codeline lineno="1847"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.addSpaceData</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceData</highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataForKey</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceData</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>operate</highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>the<sp/>key<sp/>to<sp/>delete<sp/>space<sp/>data<sp/>for</highlight></codeline>
<codeline lineno="1854"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>getSpaceData</highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1859"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].property<sp/>instead.</highlight></codeline>
<codeline lineno="1860"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/>*<sp/><sp/>Gets<sp/>space<sp/>data<sp/>for<sp/>a<sp/>given<sp/>entry<sp/>id<sp/>in<sp/>the<sp/>given<sp/>space.</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.setSpaceData</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataFirstForKey</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceDataForKey</highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.addSpaceData</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceData</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataForKey</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>operate</highlight></codeline>
<codeline lineno="1871"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entryID<sp/>the<sp/>entry<sp/>to<sp/>get<sp/>data<sp/>for</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>the<sp/>key<sp/>of<sp/>the<sp/>entry.<sp/>(deprecated:<sp/>the<sp/>key<sp/>value<sp/>is<sp/>ignored).</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>a<sp/>tuple<sp/>of<sp/>(key,<sp/>value)<sp/>for<sp/>the<sp/>entry<sp/>if<sp/>found</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>getSpaceDataForKey</highlight></codeline>
<codeline lineno="1877"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1879"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].property<sp/>instead.</highlight></codeline>
<codeline lineno="1880"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/>*<sp/><sp/>Gets<sp/>all<sp/>space<sp/>data<sp/>for<sp/>a<sp/>key<sp/>in<sp/>the<sp/>given<sp/>space.</highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.setSpaceData</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataFirstForKey</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceDataForKey</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.addSpaceData</highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceData</highlight></codeline>
<codeline lineno="1888"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceData</highlight></codeline>
<codeline lineno="1889"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1890"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>operate</highlight></codeline>
<codeline lineno="1891"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>the<sp/>key<sp/>to<sp/>get<sp/>data<sp/>for</highlight></codeline>
<codeline lineno="1892"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>a<sp/>tuple<sp/>of<sp/>(entryID,<sp/>value)<sp/>for<sp/>each<sp/>entry<sp/>under<sp/>the<sp/>given<sp/>key</highlight></codeline>
<codeline lineno="1893"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>getSpaceDataFirstForKey</highlight></codeline>
<codeline lineno="1896"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1898"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].property<sp/>instead.</highlight></codeline>
<codeline lineno="1899"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1900"><highlight class="comment"><sp/>*<sp/><sp/>Gets<sp/>space<sp/>data<sp/>for<sp/>a<sp/>key<sp/>in<sp/>the<sp/>given<sp/>space.<sp/>Only<sp/>appropriate<sp/>for<sp/>keys<sp/>that</highlight></codeline>
<codeline lineno="1901"><highlight class="comment"><sp/>*<sp/><sp/>should<sp/>have<sp/>only<sp/>one<sp/>value.</highlight></codeline>
<codeline lineno="1902"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1903"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.setSpaceData</highlight></codeline>
<codeline lineno="1904"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceDataForKey</highlight></codeline>
<codeline lineno="1905"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.addSpaceData</highlight></codeline>
<codeline lineno="1906"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceData</highlight></codeline>
<codeline lineno="1907"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataForKey</highlight></codeline>
<codeline lineno="1908"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceData</highlight></codeline>
<codeline lineno="1909"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1910"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>operate</highlight></codeline>
<codeline lineno="1911"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>the<sp/>key<sp/>to<sp/>get<sp/>data<sp/>for</highlight></codeline>
<codeline lineno="1912"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>the<sp/>value<sp/>of<sp/>the<sp/>first<sp/>entry<sp/>for<sp/>the<sp/>key</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>setSpaceData</highlight></codeline>
<codeline lineno="1916"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1918"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].property<sp/>instead.</highlight></codeline>
<codeline lineno="1919"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/>*<sp/><sp/>Sets<sp/>space<sp/>data<sp/>for<sp/>a<sp/>key<sp/>in<sp/>the<sp/>given<sp/>space.<sp/>This<sp/>is<sp/>a<sp/>utility<sp/>method<sp/>that</highlight></codeline>
<codeline lineno="1921"><highlight class="comment"><sp/>*<sp/><sp/>calls<sp/>delSpaceDataForKey<sp/>then<sp/>addSpaceData.<sp/>Only<sp/>appropriate<sp/>for<sp/>keys<sp/>that</highlight></codeline>
<codeline lineno="1922"><highlight class="comment"><sp/>*<sp/><sp/>should<sp/>have<sp/>only<sp/>one<sp/>value.</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataFirstForKey</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceDataForKey</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.addSpaceData</highlight></codeline>
<codeline lineno="1927"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.delSpaceData</highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceDataForKey</highlight></codeline>
<codeline lineno="1929"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>BigWorld.getSpaceData</highlight></codeline>
<codeline lineno="1930"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1931"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>add<sp/>the<sp/>data</highlight></codeline>
<codeline lineno="1932"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>the<sp/>key<sp/>under<sp/>which<sp/>to<sp/>add<sp/>the<sp/>space<sp/>data<sp/>(between<sp/>256<sp/>and</highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/>*<sp/><sp/>32767).<sp/>Keys<sp/>between<sp/>256<sp/>and<sp/>16383<sp/>are<sp/>sent<sp/>to<sp/>the<sp/>client.<sp/>Keys<sp/>between</highlight></codeline>
<codeline lineno="1934"><highlight class="comment"><sp/>*<sp/><sp/>16384<sp/>and<sp/>32767<sp/>are<sp/>not<sp/>sent<sp/>to<sp/>the<sp/>client;<sp/>they<sp/>are<sp/>only<sp/>available<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1935"><highlight class="comment"><sp/>*<sp/><sp/>CellApps.<sp/>Keys<sp/>0<sp/>to<sp/>255<sp/>are<sp/>reserved<sp/>for<sp/>internal<sp/>use.<sp/></highlight></codeline>
<codeline lineno="1936"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>value<sp/>the<sp/>string<sp/>data<sp/>to<sp/>add<sp/>for<sp/>this<sp/>key</highlight></codeline>
<codeline lineno="1937"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>the<sp/>new<sp/>space<sp/>data<sp/>entry<sp/>id<sp/>for<sp/>the<sp/>added<sp/>data</highlight></codeline>
<codeline lineno="1938"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>setSpaceArtificialMinLoad</highlight></codeline>
<codeline lineno="1941"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1942"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1943"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].artificialMinLoad<sp/>instead.</highlight></codeline>
<codeline lineno="1944"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1945"><highlight class="comment"><sp/>*<sp/><sp/>Sets<sp/>the<sp/>artificial<sp/>minimal<sp/>load<sp/>for<sp/>the<sp/>given<sp/>space.</highlight></codeline>
<codeline lineno="1946"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>will<sp/>then<sp/>be<sp/>used<sp/>in<sp/>load<sp/>balancing<sp/>to<sp/>avoid<sp/>congestions<sp/>of</highlight></codeline>
<codeline lineno="1947"><highlight class="comment"><sp/>*<sp/><sp/>empty<sp/>spaces<sp/>on<sp/>the<sp/>same<sp/>CellApp.</highlight></codeline>
<codeline lineno="1948"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>operate</highlight></codeline>
<codeline lineno="1949"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>artificialMinLoad<sp/>artificial<sp/>minimal<sp/>load<sp/>for<sp/>the<sp/>given<sp/>space.</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Zero<sp/>value<sp/>will<sp/>effectively<sp/>disable<sp/>the<sp/>artificial<sp/>load.</highlight></codeline>
<codeline lineno="1951"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>spaceID<sp/>does<sp/>not<sp/>refer<sp/>to<sp/>a<sp/>valid<sp/>space,<sp/>then<sp/>a<sp/>ValueError</highlight></codeline>
<codeline lineno="1952"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="1953"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>addSpaceGeometryMapping</highlight></codeline>
<codeline lineno="1956"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="1958"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].geometryMappings.add()<sp/>instead.</highlight></codeline>
<codeline lineno="1959"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1960"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>associates<sp/>a<sp/>geometry<sp/>mapping<sp/>to<sp/>the<sp/>given<sp/>space.<sp/>This<sp/>causes</highlight></codeline>
<codeline lineno="1961"><highlight class="comment"><sp/>*<sp/><sp/>geometry<sp/>to<sp/>be<sp/>loaded<sp/>on<sp/>the<sp/>client<sp/>and<sp/>server.</highlight></codeline>
<codeline lineno="1962"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>server,<sp/>the<sp/>geometry<sp/>from<sp/>all<sp/>chunks<sp/>in<sp/>the<sp/>given<sp/>directory<sp/>is<sp/>loaded</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/>*<sp/><sp/>into<sp/>the<sp/>specified<sp/>space.<sp/>The<sp/>chunk<sp/>files<sp/>are<sp/>loaded<sp/>asynchronously,</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>when<sp/>the<sp/>geometry<sp/>is<sp/>fully<sp/>loaded<sp/>the<sp/>following<sp/>notification<sp/>method<sp/>is</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/>*<sp/><sp/>called<sp/>on<sp/>the<sp/>personality<sp/>module:</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>onAllSpaceGeometryLoaded(<sp/>self,<sp/>spaceID,<sp/>mappingName<sp/>):</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="1970"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>server<sp/>only<sp/>loads<sp/>the<sp/>data<sp/>it<sp/>needs.<sp/>For<sp/>example,<sp/>it<sp/>only<sp/>loads<sp/>the<sp/>BSP</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>each<sp/>model,<sp/>it<sp/>does<sp/>not<sp/>load<sp/>textures<sp/>or<sp/>the<sp/>model&apos;s<sp/>full<sp/>mesh.</highlight></codeline>
<codeline lineno="1973"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1974"><highlight class="comment"><sp/>*<sp/><sp/>Terrain<sp/>height<sp/>data<sp/>is<sp/>loaded,<sp/>but<sp/>not<sp/>terrain<sp/>texturing<sp/>data.</highlight></codeline>
<codeline lineno="1975"><highlight class="comment"><sp/>*<sp/><sp/>To<sp/>save<sp/>memory,<sp/>the<sp/>server<sp/>can<sp/>load<sp/>lower<sp/>resolutions<sp/>of<sp/>the<sp/>terrain<sp/>height</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"><sp/>*<sp/><sp/>data.<sp/><sp/>This<sp/>is<sp/>specified<sp/>in<sp/>the<sp/>space.settings<sp/>file<sp/>in<sp/>the<sp/>space<sp/>directory.</highlight></codeline>
<codeline lineno="1977"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>tag<sp/>&lt;terrain/lodInfo/server/heightMapLod&gt;<sp/>governs<sp/>which<sp/>LOD<sp/>level<sp/>is</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/>*<sp/><sp/>chosen.<sp/>The<sp/>tag<sp/>value<sp/>can<sp/>be<sp/>set<sp/>from<sp/>0<sp/>to<sp/>6.<sp/><sp/>Each<sp/>level<sp/>is<sp/>half<sp/>the</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/>*<sp/><sp/>resolution<sp/>of<sp/>the<sp/>previous<sp/>one,<sp/>so<sp/>0<sp/>is<sp/>the<sp/>full<sp/>mesh<sp/>resolution,<sp/>1<sp/>is</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/>*<sp/><sp/>half<sp/>the<sp/>resolution,<sp/>etc.</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/>*<sp/><sp/>There<sp/>is<sp/>a<sp/>possibility<sp/>that<sp/>onAllSpaceGeometryLoaded()<sp/>will<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/>*<sp/><sp/>called<sp/>if<sp/>the<sp/>CellAppMgr<sp/>crashes<sp/>at<sp/>the<sp/>precise<sp/>moment<sp/>multiple<sp/>CellApps</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"><sp/>*<sp/><sp/>simultaneously<sp/>call<sp/>this<sp/>method<sp/>to<sp/>add<sp/>geometry<sp/>to<sp/>the<sp/>same<sp/>space.</highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>given<sp/>transform<sp/>must<sp/>be<sp/>aligned<sp/>to<sp/>the<sp/>chunk<sp/>grid.<sp/>That<sp/>is,<sp/>it<sp/>should</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>a<sp/>translation<sp/>matrix<sp/>whose<sp/>position<sp/>is<sp/>in<sp/>multiples<sp/>of<sp/>100<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"><sp/>*<sp/><sp/>X<sp/>and<sp/>Z<sp/>axis.<sp/>Any<sp/>other<sp/>transform<sp/>will<sp/>result<sp/>in<sp/>undefined<sp/>behaviour.</highlight></codeline>
<codeline lineno="1989"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1990"><highlight class="comment"><sp/>*<sp/><sp/>Any<sp/>extra<sp/>space<sp/>mapped<sp/>in<sp/>must<sp/>use<sp/>the<sp/>same<sp/>terrain<sp/>system<sp/>as<sp/>the<sp/>first,</highlight></codeline>
<codeline lineno="1991"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>same<sp/>settings,<sp/>the<sp/>behaviour<sp/>of<sp/>anything<sp/>else<sp/>is<sp/>undefined.</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>operate</highlight></codeline>
<codeline lineno="1994"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>mapper<sp/>the<sp/>matrix<sp/>to<sp/>map<sp/>the<sp/>chunks<sp/>in<sp/>at<sp/>(or<sp/>None<sp/>=<sp/>identity)</highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>path<sp/>the<sp/>path<sp/>to<sp/>the<sp/>directory<sp/>that<sp/>contains<sp/>the<sp/>chunks</highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>shouldLoadOnServer<sp/>Optional<sp/>boolean<sp/>argument<sp/>indicates<sp/>whether<sp/>to</highlight></codeline>
<codeline lineno="1997"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>load<sp/>the<sp/>geometry<sp/>on<sp/>the<sp/>server.<sp/>Defaults<sp/>to<sp/>True.</highlight></codeline>
<codeline lineno="1998"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1999"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>the<sp/>new<sp/>space<sp/>data<sp/>entry<sp/>id<sp/>for<sp/>the<sp/>added<sp/>data</highlight></codeline>
<codeline lineno="2000"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getSpaceGeometryMappings</highlight></codeline>
<codeline lineno="2004"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>has<sp/>now<sp/>been<sp/>deprecated.</highlight></codeline>
<codeline lineno="2006"><highlight class="comment"><sp/>*<sp/><sp/>Use<sp/>BigWorld.spaces[spaceID].geometryMappings.values()<sp/>instead.</highlight></codeline>
<codeline lineno="2007"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2008"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>client-server<sp/>geometry<sp/>mappings<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2009"><highlight class="comment"><sp/>*<sp/><sp/>space<sp/>with<sp/>the<sp/>given<sp/>space<sp/>ID.<sp/>Each<sp/>list<sp/>element<sp/>consists<sp/>of<sp/>a<sp/>tuple<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2010"><highlight class="comment"><sp/>*<sp/><sp/>mapping,<sp/>its<sp/>transform<sp/>matrix<sp/>and<sp/>a<sp/>boolean<sp/>indicating<sp/>whether<sp/>it<sp/>is<sp/>client</highlight></codeline>
<codeline lineno="2011"><highlight class="comment"><sp/>*<sp/><sp/>only.</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>The<sp/>id<sp/>of<sp/>the<sp/>space<sp/>to<sp/>query.</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.isUnderWater</highlight></codeline>
<codeline lineno="2017"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2018"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2019"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>tests<sp/>if<sp/>a<sp/>point<sp/>is<sp/>under<sp/>a<sp/>water<sp/>plane.<sp/>It<sp/>performs<sp/>the<sp/>test</highlight></codeline>
<codeline lineno="2020"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>casting<sp/>a<sp/>ray,<sp/>from<sp/>a<sp/>given<sp/>point<sp/>in<sp/>direction<sp/>(0,<sp/>1,<sp/>0),<sp/>through<sp/>the</highlight></codeline>
<codeline lineno="2021"><highlight class="comment"><sp/>*<sp/><sp/>collision<sp/>scene.<sp/>The<sp/>test<sp/>returns<sp/>True<sp/>if<sp/>the<sp/>ray<sp/>intersects<sp/>a<sp/>water<sp/>plane,</highlight></codeline>
<codeline lineno="2022"><highlight class="comment"><sp/>*<sp/><sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="2023"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2024"><highlight class="comment"><sp/>*<sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="2025"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="2026"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>BigWorld.isUnderWater(<sp/>spaceID,<sp/>(0,<sp/>-10,<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="2027"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>True</highlight></codeline>
<codeline lineno="2028"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="2029"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2030"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/><sp/>The<sp/>space<sp/>in<sp/>which<sp/>to<sp/>perform<sp/>the<sp/>test.</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>point<sp/><sp/><sp/><sp/>The<sp/>point<sp/>to<sp/>test.</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>if<sp/>the<sp/>point<sp/>is<sp/>under<sp/>water,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*<sp/>isUnderWater(<sp/>SpaceID<sp/>spaceID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>point<sp/>)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>CellApp::instance().findSpace(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSpace)</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.isUnderWater():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>space<sp/>ID<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(spaceID)<sp/>);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ToDo:<sp/>remove<sp/>the<sp/>following<sp/>if/when<sp/>collide()<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//by<sp/>other<sp/>(non-chunk)<sp/>Physical<sp/>Space<sp/>implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSpace-&gt;<ref refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" kindref="member">pChunkSpace</ref>())</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BigWorld.isUnderWater():<sp/>Space<sp/>ID<sp/>%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>support<sp/>collision<sp/>queries&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(spaceID)<sp/>);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>ClosestWater<sp/>callback;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>src(<sp/>point.x,<sp/>point.y,<sp/>point.z<sp/>);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>dst(<sp/>point.x,<sp/>point.y<sp/>+<sp/>1000000.f,<sp/>point.z<sp/>);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a4a64d22bf03b7791013b04512c392fe8" kindref="member">pChunkSpace</ref>()-&gt;collide(<sp/>src,<sp/>dst,<sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>callback.pWater()<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>isUnderWater,<sp/>ARG(<sp/>SpaceID,</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>Vector3,<sp/>END<sp/>)<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.startRecording</highlight></codeline>
<codeline lineno="2068"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>starts<sp/>a<sp/>space<sp/>recording<sp/>for<sp/>the<sp/>specified<sp/>space.</highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/>*<sp/><sp/>There<sp/>can<sp/>only<sp/>be<sp/>a<sp/>single<sp/>recording<sp/>for<sp/>a<sp/>given<sp/>space<sp/>at<sp/>any<sp/>given<sp/>time.</highlight></codeline>
<codeline lineno="2073"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2074"><highlight class="comment"><sp/>*<sp/><sp/>Callbacks<sp/>on<sp/>the<sp/>personality<sp/>script<sp/>are<sp/>called<sp/>back<sp/>during<sp/>recording.</highlight></codeline>
<codeline lineno="2075"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2076"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>recording<sp/>starts,<sp/>the<sp/>callback<sp/>onRecordingStarted()<sp/>is<sp/>called,<sp/>though</highlight></codeline>
<codeline lineno="2077"><highlight class="comment"><sp/>*<sp/><sp/>only<sp/>once<sp/>for<sp/>the<sp/>CellApp<sp/>where<sp/>the<sp/>call<sp/>to<sp/>startRecording()<sp/>was<sp/>made.<sp/>It</highlight></codeline>
<codeline lineno="2078"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>passed<sp/>(spaceID,<sp/>name)<sp/>as<sp/>arguments.<sp/></highlight></codeline>
<codeline lineno="2079"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2080"><highlight class="comment"><sp/>*<sp/><sp/>During<sp/>each<sp/>tick<sp/>of<sp/>the<sp/>recording<sp/>duration,<sp/>each<sp/>CellApp<sp/>with<sp/>a<sp/>cell<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2081"><highlight class="comment"><sp/>*<sp/><sp/>recorded<sp/>space<sp/>will<sp/>have<sp/>onRecordingTickData()<sp/>called,<sp/>with<sp/>arguments</highlight></codeline>
<codeline lineno="2082"><highlight class="comment"><sp/>*<sp/><sp/>(spaceID,<sp/>gameTime,<sp/>name,<sp/>numCells,<sp/>data<sp/>).</highlight></codeline>
<codeline lineno="2083"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2084"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/><sp/>The<sp/>space<sp/>ID.</highlight></codeline>
<codeline lineno="2085"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>name<sp/><sp/><sp/><sp/><sp/>The<sp/>name<sp/>of<sp/>the<sp/>recording.<sp/>This<sp/>is<sp/>passed<sp/>to<sp/>the<sp/>script</highlight></codeline>
<codeline lineno="2086"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callbacks<sp/>and<sp/>can<sp/>be<sp/>used<sp/>to<sp/>identify<sp/>the<sp/>recording<sp/>by</highlight></codeline>
<codeline lineno="2087"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.</highlight></codeline>
<codeline lineno="2088"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>shouldRecordAoIEvents</highlight></codeline>
<codeline lineno="2089"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Whether<sp/>AoI<sp/>events<sp/>should<sp/>be<sp/>recorded<sp/>in<sp/>the<sp/>replay<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="2090"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2091"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_1a253e0c5c3fddecc29f860c154bcca01a" kindref="member">startRecording</ref>(<sp/>SpaceID<sp/>spaceID,<sp/>const<sp/><ref refid="namespace_b_w" kindref="compound">BW</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>name,<sp/></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldRecordAoIEvents<sp/>)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>CellApp::instance().findSpace(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pSpace<sp/>==<sp/>NULL)<sp/>||<sp/>(pSpace-&gt;pCell()<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>space<sp/>ID:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>spaceID<sp/>);<sp/></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID<sp/>=<sp/>CellApp::instance().nextSpaceEntryID();</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSpace-&gt;pCell()-&gt;<ref refid="class_cell_1a937d6bff38202441926ba22106ea0b4e" kindref="member">startRecording</ref>(<sp/>entryID,<sp/>name,<sp/></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldRecordAoIEvents<sp/>))</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Space<sp/>%d<sp/>is<sp/>already<sp/>recording&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/><ref refid="class_space_1a253e0c5c3fddecc29f860c154bcca01a" kindref="member">startRecording</ref>,<sp/></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>SpaceID,<sp/>ARG(<sp/>BW::string,<sp/>OPTARG(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>END<sp/>)<sp/>)<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.stopRecording</highlight></codeline>
<codeline lineno="2120"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2122"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>stops<sp/>any<sp/>existing<sp/>recording<sp/>for<sp/>the<sp/>specified<sp/>space.</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2124"><highlight class="comment"><sp/>*<sp/><sp/>After<sp/>the<sp/>next<sp/>tick&apos;s<sp/>data<sp/>is<sp/>recorded,<sp/>onRecordingStopped()<sp/>is<sp/>called<sp/>for</highlight></codeline>
<codeline lineno="2125"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>CellApp<sp/>where<sp/>the<sp/>call<sp/>to<sp/>stopRecording()<sp/>was<sp/>made.<sp/>It<sp/>is<sp/>passed</highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/>*<sp/><sp/>(spaceID,<sp/>name)<sp/>as<sp/>arguments.</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>ID<sp/>of<sp/>the<sp/>space<sp/>to<sp/>stop.</highlight></codeline>
<codeline lineno="2129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_space_1a9ea8464b73811ef212f43fa19aa50fa9" kindref="member">stopRecording</ref>(<sp/>SpaceID<sp/>spaceID<sp/>)</highlight></codeline>
<codeline lineno="2131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>CellApp::instance().findSpace(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pSpace<sp/>==<sp/>NULL)<sp/>||<sp/>(pSpace-&gt;pCell()<sp/>==<sp/>NULL))</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>space<sp/>ID:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>spaceID<sp/>);<sp/></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;pCell()-&gt;<ref refid="class_cell_1a8999b06c6ac67808acd47242e0645e3a" kindref="member">stopRecording</ref>(<sp/></highlight><highlight class="comment">/*<sp/>isInitial<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/><ref refid="class_space_1a9ea8464b73811ef212f43fa19aa50fa9" kindref="member">stopRecording</ref>,<sp/></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>SpaceID,<sp/>END<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>BSP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal">const<sp/><ref refid="class_cell_info" kindref="compound">CellInfo</ref><sp/>*<sp/><ref refid="class_space" kindref="compound">Space</ref>::pCellAt(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfoTree_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCellInfoTree_-&gt;pCellAt(<sp/>x,<sp/>z<sp/>);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Space::visitRect(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/>rect,<sp/><ref refid="class_cell_info_visitor" kindref="compound">CellInfoVisitor</ref><sp/>&amp;<sp/>visitRect<sp/>)</highlight></codeline>
<codeline lineno="2170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfoTree_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfoTree_-&gt;visitRect(<sp/>rect,<sp/>visitRect<sp/>);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><ref refid="class_space_node" kindref="compound">SpaceNode</ref><sp/>*<sp/><ref refid="class_space_1a1a785d230b104462b562d544bb5d7c38" kindref="member">Space::readTree</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/>rect<sp/>)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space_node" kindref="compound">SpaceNode</ref><sp/>*<sp/>pResult<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>type<sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>type;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pResult<sp/>=</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space_branch" kindref="compound">SpaceBranch</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rect,</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream,<sp/>type<sp/>==<sp/>0<sp/></highlight><highlight class="comment">/*isHorizontal*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Address<sp/>addr;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>addr;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_info" kindref="compound">CellInfo</ref><sp/>*<sp/>pCellInfo<sp/>=<sp/>this-&gt;<ref refid="class_space_1a16f6fbe81d9d05cad788bde3976bfec1" kindref="member">findCell</ref>(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfo)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfo-&gt;shouldDelete(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfo-&gt;rect(<sp/>rect<sp/>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfo-&gt;<ref refid="class_cell_info_1aba94cba13f65ddbe78a408f0f42e8aaa" kindref="member">updateFromStream</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pResult<sp/>=<sp/>pCellInfo;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_cell_info" kindref="compound">CellInfo</ref>(<sp/>id_,<sp/>rect,<sp/>addr,<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pResult<sp/>=<sp/>pCellInfo;</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellInfos_[<sp/>addr<sp/>]<sp/>=<sp/>pCellInfo;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Space::readTree:<sp/>stream.error<sp/>=<sp/>%d.<sp/>type<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.error(),<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pResult;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><ref refid="class_cell_info" kindref="compound">CellInfo</ref><sp/>*<sp/><ref refid="class_space_1a16f6fbe81d9d05cad788bde3976bfec1" kindref="member">Space::findCell</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2233"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>CellInfos::const_iterator<sp/>iter<sp/>=<sp/>cellInfos_.find(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>cellInfos_.end())</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;second.get();</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1afbe39c9e4b343cf6766207961e9e8a71" kindref="member">Space::setPendingCellDelete</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr<sp/>)</highlight></codeline>
<codeline lineno="2250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>CellInfos::iterator<sp/>iter<sp/>=<sp/>cellInfos_.find(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>iter<sp/>!=<sp/>cellInfos_.end()<sp/>);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;setPendingDelete();</highlight></codeline>
<codeline lineno="2256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_space_1aac954a3cb2b5563fc59a564a9e00bc2b" kindref="member">Space::onLoadResourceFailed</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>entryID<sp/>)</highlight></codeline>
<codeline lineno="2263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_space_1a9788d25cca2b04722bcf08ac590cb164" kindref="member">removeGeometryMapping</ref>(<sp/>entryID,<sp/></highlight><highlight class="comment">/*<sp/>notifyMgr<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>space.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellapp/space.cpp"/>
  </compounddef>
</doxygen>
