<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_base_message_forwarder" kind="class" language="C++" prot="public">
    <compoundname>BaseMessageForwarder</compoundname>
    <includes refid="base__message__forwarder_8hpp" local="no">base_message_forwarder.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_base_message_forwarder_1a9c011f16f913b12826041c1e6121f7ef" prot="private" static="no">
        <type>BW::map&lt; EntityID, Mercury::Address &gt;</type>
        <definition>typedef BW::map&lt; EntityID, Mercury::Address &gt; BaseMessageForwarder::Map</definition>
        <argsstring></argsstring>
        <name>Map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/base_message_forwarder.hpp" line="40" column="1" bodyfile="baseapp/base_message_forwarder.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_base_message_forwarder_1a631d402a20ef6f925aa6fd130ebc0ccf" prot="private" static="no" mutable="no">
        <type>Map</type>
        <definition>Map BaseMessageForwarder::map_</definition>
        <argsstring></argsstring>
        <name>map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/base_message_forwarder.hpp" line="42" column="1" bodyfile="baseapp/base_message_forwarder.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_base_message_forwarder_1ab11e5f2654506dca4de3f80778d3cf31" prot="private" static="no" mutable="no">
        <type>Mercury::NetworkInterface &amp;</type>
        <definition>Mercury::NetworkInterface&amp; BaseMessageForwarder::networkInterface_</definition>
        <argsstring></argsstring>
        <name>networkInterface_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/base_message_forwarder.hpp" line="43" column="1" bodyfile="baseapp/base_message_forwarder.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_base_message_forwarder_1a41fee989bfd3858b5bc425e2c57535fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE BaseMessageForwarder::BaseMessageForwarder</definition>
        <argsstring>(Mercury::NetworkInterface &amp;networkInterface)</argsstring>
        <name>BaseMessageForwarder</name>
        <param>
          <type>Mercury::NetworkInterface &amp;</type>
          <declname>networkInterface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/base_message_forwarder.hpp" line="27" column="1" bodyfile="baseapp/base_message_forwarder.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_base_message_forwarder_1af9ddc607c17101fe42a61aab3037cbaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BaseMessageForwarder::addForwardingMapping</definition>
        <argsstring>(EntityID entityID, const Mercury::Address &amp;destAddr)</argsstring>
        <name>addForwardingMapping</name>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>destAddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds a forwarding mapping for the given entity ID to the given destination address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/base_message_forwarder.hpp" line="29" column="1" bodyfile="baseapp/base_message_forwarder.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_base_message_forwarder_1a85b810f182399fd7b786c86e6516788e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BaseMessageForwarder::forwardIfNecessary</definition>
        <argsstring>(EntityID entityID, const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>forwardIfNecessary</name>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method forwards a message if a mapping exists for this entity ID. Returns true if a mapping exists, and forwarding occurred, otherwise it returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/base_message_forwarder.hpp" line="32" column="1" bodyfile="baseapp/base_message_forwarder.cpp" bodystart="39" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_base_message_forwarder_1a7058dfa06501abea04ceb806752aee0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Mercury::ChannelPtr</type>
        <definition>Mercury::ChannelPtr BaseMessageForwarder::getForwardingChannel</definition>
        <argsstring>(EntityID entityID)</argsstring>
        <name>getForwardingChannel</name>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method forwards a message if a mapping exists for this entity ID. Returns true if a mapping exists, and forwarding occurred, otherwise it returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/base_message_forwarder.hpp" line="37" column="1" bodyfile="baseapp/base_message_forwarder.cpp" bodystart="70" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is responsible for maintaining a mapping for bases that have been offloaded to their offloaded destination addresses, and forwarding messages destined for those bases to their new location. </para>    </detaileddescription>
    <location file="baseapp/base_message_forwarder.hpp" line="25" column="1" bodyfile="baseapp/base_message_forwarder.hpp" bodystart="24" bodyend="44"/>
    <listofallmembers>
      <member refid="class_base_message_forwarder_1af9ddc607c17101fe42a61aab3037cbaa" prot="public" virt="non-virtual"><scope>BaseMessageForwarder</scope><name>addForwardingMapping</name></member>
      <member refid="class_base_message_forwarder_1a41fee989bfd3858b5bc425e2c57535fc" prot="public" virt="non-virtual"><scope>BaseMessageForwarder</scope><name>BaseMessageForwarder</name></member>
      <member refid="class_base_message_forwarder_1a85b810f182399fd7b786c86e6516788e" prot="public" virt="non-virtual"><scope>BaseMessageForwarder</scope><name>forwardIfNecessary</name></member>
      <member refid="class_base_message_forwarder_1a7058dfa06501abea04ceb806752aee0a" prot="public" virt="non-virtual"><scope>BaseMessageForwarder</scope><name>getForwardingChannel</name></member>
      <member refid="class_base_message_forwarder_1a9c011f16f913b12826041c1e6121f7ef" prot="private" virt="non-virtual"><scope>BaseMessageForwarder</scope><name>Map</name></member>
      <member refid="class_base_message_forwarder_1a631d402a20ef6f925aa6fd130ebc0ccf" prot="private" virt="non-virtual"><scope>BaseMessageForwarder</scope><name>map_</name></member>
      <member refid="class_base_message_forwarder_1ab11e5f2654506dca4de3f80778d3cf31" prot="private" virt="non-virtual"><scope>BaseMessageForwarder</scope><name>networkInterface_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
