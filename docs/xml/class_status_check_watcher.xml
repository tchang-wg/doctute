<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_status_check_watcher" kind="class" language="C++" prot="public">
    <compoundname>StatusCheckWatcher</compoundname>
    <basecompoundref prot="public" virt="non-virtual">CallableWatcher</basecompoundref>
    <includes refid="status__check__watcher_8hpp" local="no">status_check_watcher.hpp</includes>
    <innerclass refid="class_status_check_watcher_1_1_reply_handler" prot="private">StatusCheckWatcher::ReplyHandler</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_status_check_watcher_1ad3b5b3520b2426753c20c975030ab6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>StatusCheckWatcher::StatusCheckWatcher</definition>
        <argsstring>()</argsstring>
        <name>StatusCheckWatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/status_check_watcher.hpp" line="16" column="1" bodyfile="loginapp/status_check_watcher.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_status_check_watcher_1a0d01c98be4e174c96ebe6a9f65b09291" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool StatusCheckWatcher::setFromStream</definition>
        <argsstring>(void *base, const char *path, WatcherPathRequestV2 &amp;pathRequest)</argsstring>
        <name>setFromStream</name>
        <param>
          <type>void *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>WatcherPathRequestV2 &amp;</type>
          <declname>pathRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a set call on this watcher. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/status_check_watcher.hpp" line="19" column="1" bodyfile="loginapp/status_check_watcher.cpp" bodystart="103" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This watcher is used to check the current status of the system. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2834">
        <label>StatusCheckWatcher</label>
        <link refid="class_status_check_watcher"/>
        <childnode refid="2835" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2835">
        <label>CallableWatcher</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2836">
        <label>StatusCheckWatcher</label>
        <link refid="class_status_check_watcher"/>
        <childnode refid="2837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2837">
        <label>CallableWatcher</label>
      </node>
    </collaborationgraph>
    <location file="loginapp/status_check_watcher.hpp" line="14" column="1" bodyfile="loginapp/status_check_watcher.hpp" bodystart="13" bodyend="45"/>
    <listofallmembers>
      <member refid="class_status_check_watcher_1a0d01c98be4e174c96ebe6a9f65b09291" prot="protected" virt="virtual"><scope>StatusCheckWatcher</scope><name>setFromStream</name></member>
      <member refid="class_status_check_watcher_1ad3b5b3520b2426753c20c975030ab6ee" prot="public" virt="non-virtual"><scope>StatusCheckWatcher</scope><name>StatusCheckWatcher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
