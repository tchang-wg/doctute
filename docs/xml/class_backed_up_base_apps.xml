<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_backed_up_base_apps" kind="class" language="C++" prot="public">
    <compoundname>BackedUpBaseApps</compoundname>
    <includes refid="backed__up__base__apps_8hpp" local="no">backed_up_base_apps.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_backed_up_base_apps_1a09e8d840075c1e78b74bb0be0fcd5eb0" prot="private" static="no">
        <type>BW::map&lt; Mercury::Address, <ref refid="class_backed_up_base_app" kindref="compound">BackedUpBaseApp</ref> &gt;</type>
        <definition>typedef BW::map&lt; Mercury::Address, BackedUpBaseApp &gt; BackedUpBaseApps::Container</definition>
        <argsstring></argsstring>
        <name>Container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="49" column="1" bodyfile="baseapp/backed_up_base_apps.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_backed_up_base_apps_1a7b6a023738e1136003180d772f998e7f" prot="private" static="no" mutable="no">
        <type>Container</type>
        <definition>Container BackedUpBaseApps::apps_</definition>
        <argsstring></argsstring>
        <name>apps_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="50" column="1" bodyfile="baseapp/backed_up_base_apps.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_backed_up_base_apps_1a5630c88933b41a5055eaa424ceea35cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>BW_BEGIN_NAMESPACE void BackedUpBaseApps::startAppBackup</definition>
        <argsstring>(const Mercury::Address &amp;realBaseAppAddr, uint32 index, uint32 hashSize, uint32 prime, bool isInitial)</argsstring>
        <name>startAppBackup</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>realBaseAppAddr</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>hashSize</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>prime</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isInitial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message informing this <ref refid="class_base_app" kindref="compound">BaseApp</ref> that it should start being a backup for another <ref refid="class_base_app" kindref="compound">BaseApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="24" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="16" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_backed_up_base_apps_1af6795d445a6ee7caa3dc9e459af05124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackedUpBaseApps::stopAppBackup</definition>
        <argsstring>(const Mercury::Address &amp;realBaseAppAddr, uint32 index, uint32 hashSize, uint32 prime, bool isPending)</argsstring>
        <name>stopAppBackup</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>realBaseAppAddr</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>hashSize</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>prime</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isPending</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message informing this <ref refid="class_base_app" kindref="compound">BaseApp</ref> that it should stop being a backup for another <ref refid="class_base_app" kindref="compound">BaseApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="27" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="57" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_backed_up_base_apps_1a42789550a4e855eb73268bfe6558e59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackedUpBaseApps::backUpEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, EntityID entityID, BinaryIStream &amp;data)</argsstring>
        <name>backUpEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the message that backs up a base entity from another <ref refid="class_base_app" kindref="compound">BaseApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="31" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="102" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_backed_up_base_apps_1a776f91b5518bb43060d792c30df4f075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackedUpBaseApps::stopEntityBackup</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, EntityID entityID)</argsstring>
        <name>stopEntityBackup</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the message that this <ref refid="class_base_app" kindref="compound">BaseApp</ref> should stop being a backup for an entity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="34" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="125" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_backed_up_base_apps_1ad78f9336921e8d4d8e978acabb4a0dfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackedUpBaseApps::handleBaseAppDeath</definition>
        <argsstring>(const Mercury::Address &amp;deadAddr)</argsstring>
        <name>handleBaseAppDeath</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>deadAddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method responds to a <ref refid="class_base_app" kindref="compound">BaseApp</ref> dying. If this <ref refid="class_base_app" kindref="compound">BaseApp</ref> was backing up any entities from that <ref refid="class_base_app" kindref="compound">BaseApp</ref>, they are restored here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="37" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="147" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_backed_up_base_apps_1ae48b7ef753580d76d8f6f39f0c86c2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BackedUpBaseApps::onloadedEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, EntityID entityID)</argsstring>
        <name>onloadedEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called when a base has been offloaded to this app. If another baseapp has given us a new entity, we don&apos;t want to try to restore it a second time if the source crashes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="39" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="168" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_backed_up_base_apps_1ad47b8fcfa34d13f71ed606f4764601d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BackedUpBaseApps::isBackingUpOthers</definition>
        <argsstring>() const </argsstring>
        <name>isBackingUpOthers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="42" column="1" bodyfile="baseapp/backed_up_base_apps.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_backed_up_base_apps_1a8680b8f9f6416218d12058e8311e55cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref></type>
        <definition>WatcherPtr BackedUpBaseApps::pWatcher</definition>
        <argsstring>()</argsstring>
        <name>pWatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates a watcher that can inspect instances of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="44" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="201" bodyend="214"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_backed_up_base_apps_1a226aa0f42b6cd667fb25373f97253525" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BackedUpBaseApps::numEntitiesBackedUp</definition>
        <argsstring>() const </argsstring>
        <name>numEntitiesBackedUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the total number of base entities being backed up. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/backed_up_base_apps.hpp" line="47" column="1" bodyfile="baseapp/backed_up_base_apps.cpp" bodystart="183" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class handles the backing up of other BaseApps by this <ref refid="class_base_app" kindref="compound">BaseApp</ref>. </para>    </detaileddescription>
    <location file="baseapp/backed_up_base_apps.hpp" line="22" column="1" bodyfile="baseapp/backed_up_base_apps.hpp" bodystart="21" bodyend="51"/>
    <listofallmembers>
      <member refid="class_backed_up_base_apps_1a7b6a023738e1136003180d772f998e7f" prot="private" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>apps_</name></member>
      <member refid="class_backed_up_base_apps_1a42789550a4e855eb73268bfe6558e59c" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>backUpEntity</name></member>
      <member refid="class_backed_up_base_apps_1a09e8d840075c1e78b74bb0be0fcd5eb0" prot="private" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>Container</name></member>
      <member refid="class_backed_up_base_apps_1ad78f9336921e8d4d8e978acabb4a0dfe" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>handleBaseAppDeath</name></member>
      <member refid="class_backed_up_base_apps_1ad47b8fcfa34d13f71ed606f4764601d1" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>isBackingUpOthers</name></member>
      <member refid="class_backed_up_base_apps_1a226aa0f42b6cd667fb25373f97253525" prot="private" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>numEntitiesBackedUp</name></member>
      <member refid="class_backed_up_base_apps_1ae48b7ef753580d76d8f6f39f0c86c2f6" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>onloadedEntity</name></member>
      <member refid="class_backed_up_base_apps_1a8680b8f9f6416218d12058e8311e55cf" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>pWatcher</name></member>
      <member refid="class_backed_up_base_apps_1a5630c88933b41a5055eaa424ceea35cf" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>startAppBackup</name></member>
      <member refid="class_backed_up_base_apps_1af6795d445a6ee7caa3dc9e459af05124" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>stopAppBackup</name></member>
      <member refid="class_backed_up_base_apps_1a776f91b5518bb43060d792c30df4f075" prot="public" virt="non-virtual"><scope>BackedUpBaseApps</scope><name>stopEntityBackup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
