<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="script__bigworld_8cpp" kind="file" language="C++">
    <compoundname>script_bigworld.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="script__bigworld_8hpp" local="yes">script_bigworld.hpp</includes>
    <includes refid="base_8hpp" local="yes">base.hpp</includes>
    <includes refid="baseapp_8hpp" local="yes">baseapp.hpp</includes>
    <includes refid="baseapp__config_8hpp" local="yes">baseapp_config.hpp</includes>
    <includes refid="baseapp_2entity__creator_8hpp" local="yes">entity_creator.hpp</includes>
    <includes refid="baseapp_2mailbox_8hpp" local="yes">mailbox.hpp</includes>
    <includes refid="proxy_8hpp" local="yes">proxy.hpp</includes>
    <includes refid="py__bases_8hpp" local="yes">py_bases.hpp</includes>
    <includes refid="py__replay__data__file__reader_8hpp" local="yes">py_replay_data_file_reader.hpp</includes>
    <includes refid="py__replay__data__file__writer_8hpp" local="yes">py_replay_data_file_writer.hpp</includes>
    <includes refid="service_8hpp" local="yes">service.hpp</includes>
    <includes refid="baseappmgr__interface_8hpp" local="yes">baseappmgr/baseappmgr_interface.hpp</includes>
    <includes refid="cellappmgr__interface_8hpp" local="yes">cellappmgr/cellappmgr_interface.hpp</includes>
    <includes local="yes">db/dbapp_interface.hpp</includes>
    <includes local="yes">db/dbapp_interface_utils.hpp</includes>
    <includes local="yes">db_storage/entity_key.hpp</includes>
    <includes local="yes">connection/log_on_status.hpp</includes>
    <includes local="yes">connection/replay_metadata.hpp</includes>
    <includes local="yes">chunk/user_data_object.hpp</includes>
    <includes local="yes">entitydef/constants.hpp</includes>
    <includes local="yes">entitydef/mailbox_base.hpp</includes>
    <includes local="yes">entitydef/py_deferred.hpp</includes>
    <includes local="yes">network/compression_type.hpp</includes>
    <includes local="yes">network/nub_exception.hpp</includes>
    <includes local="yes">network/bundle.hpp</includes>
    <includes local="yes">pyscript/keyword_parser.hpp</includes>
    <includes local="yes">pyscript/pyobject_plus.hpp</includes>
    <includes local="yes">pyscript/script.hpp</includes>
    <includes local="yes">resmgr/resource_file_path.hpp</includes>
    <includes local="yes">server/look_up_entities.hpp</includes>
    <includes local="yes">server/shared_data.hpp</includes>
    <includes local="yes">server/watcher_forwarding.hpp</includes>
    <incdepgraph>
      <node id="5132">
        <label>baseappmgr/baseappmgr_interface.hpp</label>
        <link refid="baseappmgr__interface_8hpp_source"/>
        <childnode refid="5050" relation="include">
        </childnode>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5130" relation="include">
        </childnode>
        <childnode refid="5133" relation="include">
        </childnode>
        <childnode refid="5065" relation="include">
        </childnode>
        <childnode refid="5060" relation="include">
        </childnode>
        <childnode refid="5134" relation="include">
        </childnode>
      </node>
      <node id="5136">
        <label>py_replay_data_file_reader.hpp</label>
        <link refid="py__replay__data__file__reader_8hpp_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5072" relation="include">
        </childnode>
        <childnode refid="5073" relation="include">
        </childnode>
        <childnode refid="5137" relation="include">
        </childnode>
        <childnode refid="5138" relation="include">
        </childnode>
      </node>
      <node id="5061">
        <label>connection/common_baseapp_interface.hpp</label>
      </node>
      <node id="5120">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="5101">
        <label>bwtracer.hpp</label>
        <link refid="bwtracer_8hpp_source"/>
        <childnode refid="5050" relation="include">
        </childnode>
      </node>
      <node id="5117">
        <label>queue</label>
      </node>
      <node id="5161">
        <label>server/watcher_forwarding.hpp</label>
      </node>
      <node id="5121">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="5051">
        <label>base.hpp</label>
        <link refid="base_8hpp_source"/>
        <childnode refid="5052" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
        <childnode refid="5054" relation="include">
        </childnode>
        <childnode refid="5057" relation="include">
        </childnode>
        <childnode refid="5068" relation="include">
        </childnode>
        <childnode refid="5074" relation="include">
        </childnode>
        <childnode refid="5081" relation="include">
        </childnode>
        <childnode refid="5085" relation="include">
        </childnode>
        <childnode refid="5086" relation="include">
        </childnode>
        <childnode refid="5069" relation="include">
        </childnode>
        <childnode refid="5087" relation="include">
        </childnode>
        <childnode refid="5075" relation="include">
        </childnode>
        <childnode refid="5071" relation="include">
        </childnode>
        <childnode refid="5072" relation="include">
        </childnode>
        <childnode refid="5073" relation="include">
        </childnode>
        <childnode refid="5088" relation="include">
        </childnode>
        <childnode refid="5089" relation="include">
        </childnode>
        <childnode refid="5090" relation="include">
        </childnode>
        <childnode refid="5091" relation="include">
        </childnode>
      </node>
      <node id="5087">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="5141">
        <label>connection/replay_checksum_scheme.hpp</label>
      </node>
      <node id="5104">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="5053">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="5049">
        <label>script_bigworld.hpp</label>
        <link refid="script__bigworld_8hpp_source"/>
        <childnode refid="5050" relation="include">
        </childnode>
      </node>
      <node id="5063">
        <label>baseapp_int_interface_stream_helpers.hpp</label>
        <link refid="baseapp__int__interface__stream__helpers_8hpp_source"/>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5064" relation="include">
        </childnode>
      </node>
      <node id="5094">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="5048">
        <label>script/first_include.hpp</label>
      </node>
      <node id="5062">
        <label>buffered_input_message_handler.hpp</label>
        <link refid="baseapp_2buffered__input__message__handler_8hpp_source"/>
      </node>
      <node id="5155">
        <label>network/nub_exception.hpp</label>
      </node>
      <node id="5125">
        <label>script/script_object.hpp</label>
      </node>
      <node id="5137">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="5156">
        <label>network/bundle.hpp</label>
      </node>
      <node id="5114">
        <label>network/message_filter.hpp</label>
      </node>
      <node id="5108">
        <label>connection/client_interface.hpp</label>
      </node>
      <node id="5059">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="5145">
        <label>cellappmgr/cellappmgr_interface.hpp</label>
        <link refid="cellappmgr__interface_8hpp_source"/>
        <childnode refid="5146" relation="include">
        </childnode>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5133" relation="include">
        </childnode>
        <childnode refid="5060" relation="include">
        </childnode>
        <childnode refid="5065" relation="include">
        </childnode>
        <childnode refid="5134" relation="include">
        </childnode>
      </node>
      <node id="5128">
        <label>entity_creator.hpp</label>
        <link refid="baseapp_2entity__creator_8hpp_source"/>
        <childnode refid="5129" relation="include">
        </childnode>
        <childnode refid="5120" relation="include">
        </childnode>
        <childnode refid="5082" relation="include">
        </childnode>
        <childnode refid="5125" relation="include">
        </childnode>
        <childnode refid="5131" relation="include">
        </childnode>
        <childnode refid="5132" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
      </node>
      <node id="5084">
        <label>pyscript/pyobject_pointer.hpp</label>
      </node>
      <node id="5077">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="5130">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="5147">
        <label>db/dbapp_interface.hpp</label>
      </node>
      <node id="5055">
        <label>server/entity_app_config.hpp</label>
      </node>
      <node id="5079">
        <label>math/stat_watcher_creator.hpp</label>
      </node>
      <node id="5148">
        <label>db/dbapp_interface_utils.hpp</label>
      </node>
      <node id="5109">
        <label>cstdmf/concurrency.hpp</label>
      </node>
      <node id="5065">
        <label>server/common.hpp</label>
      </node>
      <node id="5076">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="5088">
        <label>server/auto_backup_and_archive.hpp</label>
      </node>
      <node id="5140">
        <label>replay_data_file_writer.hpp</label>
        <link refid="replay__data__file__writer_8hpp_source"/>
        <childnode refid="5141" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5096" relation="include">
        </childnode>
        <childnode refid="5076" relation="include">
        </childnode>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5142" relation="include">
        </childnode>
        <childnode refid="5143" relation="include">
        </childnode>
      </node>
      <node id="5082">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="5095">
        <label>server/backup_hash_chain.hpp</label>
      </node>
      <node id="5073">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="5047">
        <label>baseapp/script_bigworld.cpp</label>
        <link refid="script_bigworld.cpp"/>
        <childnode refid="5048" relation="include">
        </childnode>
        <childnode refid="5049" relation="include">
        </childnode>
        <childnode refid="5051" relation="include">
        </childnode>
        <childnode refid="5092" relation="include">
        </childnode>
        <childnode refid="5054" relation="include">
        </childnode>
        <childnode refid="5128" relation="include">
        </childnode>
        <childnode refid="5068" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5135" relation="include">
        </childnode>
        <childnode refid="5136" relation="include">
        </childnode>
        <childnode refid="5139" relation="include">
        </childnode>
        <childnode refid="5144" relation="include">
        </childnode>
        <childnode refid="5132" relation="include">
        </childnode>
        <childnode refid="5145" relation="include">
        </childnode>
        <childnode refid="5147" relation="include">
        </childnode>
        <childnode refid="5148" relation="include">
        </childnode>
        <childnode refid="5149" relation="include">
        </childnode>
        <childnode refid="5150" relation="include">
        </childnode>
        <childnode refid="5151" relation="include">
        </childnode>
        <childnode refid="5152" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5070" relation="include">
        </childnode>
        <childnode refid="5154" relation="include">
        </childnode>
        <childnode refid="5142" relation="include">
        </childnode>
        <childnode refid="5155" relation="include">
        </childnode>
        <childnode refid="5156" relation="include">
        </childnode>
        <childnode refid="5157" relation="include">
        </childnode>
        <childnode refid="5072" relation="include">
        </childnode>
        <childnode refid="5073" relation="include">
        </childnode>
        <childnode refid="5158" relation="include">
        </childnode>
        <childnode refid="5159" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5161" relation="include">
        </childnode>
      </node>
      <node id="5119">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="5081">
        <label>write_to_db_request.hpp</label>
        <link refid="write__to__db__request_8hpp_source"/>
        <childnode refid="5082" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5084" relation="include">
        </childnode>
        <childnode refid="5073" relation="include">
        </childnode>
      </node>
      <node id="5064">
        <label>network/stream_helpers.hpp</label>
      </node>
      <node id="5071">
        <label>network/udp_channel.hpp</label>
      </node>
      <node id="5126">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="5149">
        <label>db_storage/entity_key.hpp</label>
      </node>
      <node id="5086">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="5090">
        <label>server/writedb.hpp</label>
      </node>
      <node id="5152">
        <label>chunk/user_data_object.hpp</label>
      </node>
      <node id="5139">
        <label>py_replay_data_file_writer.hpp</label>
        <link refid="py__replay__data__file__writer_8hpp_source"/>
        <childnode refid="5076" relation="include">
        </childnode>
        <childnode refid="5072" relation="include">
        </childnode>
        <childnode refid="5140" relation="include">
        </childnode>
      </node>
      <node id="5160">
        <label>server/shared_data.hpp</label>
      </node>
      <node id="5102">
        <label>proxy.hpp</label>
        <link refid="proxy_8hpp_source"/>
        <childnode refid="5051" relation="include">
        </childnode>
        <childnode refid="5057" relation="include">
        </childnode>
        <childnode refid="5103" relation="include">
        </childnode>
        <childnode refid="5107" relation="include">
        </childnode>
        <childnode refid="5108" relation="include">
        </childnode>
        <childnode refid="5104" relation="include">
        </childnode>
        <childnode refid="5109" relation="include">
        </childnode>
        <childnode refid="5110" relation="include">
        </childnode>
        <childnode refid="5111" relation="include">
        </childnode>
        <childnode refid="5112" relation="include">
        </childnode>
        <childnode refid="5068" relation="include">
        </childnode>
        <childnode refid="5067" relation="include">
        </childnode>
      </node>
      <node id="5096">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="5129">
        <label>address_load_pair.hpp</label>
        <link refid="address__load__pair_8hpp_source"/>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5130" relation="include">
        </childnode>
      </node>
      <node id="5157">
        <label>pyscript/keyword_parser.hpp</label>
      </node>
      <node id="5106">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="5111">
        <label>network/channel.hpp</label>
      </node>
      <node id="5072">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="5097">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="5113">
        <label>rate_limit_message_filter.hpp</label>
        <link refid="rate__limit__message__filter_8hpp_source"/>
        <childnode refid="5114" relation="include">
        </childnode>
        <childnode refid="5115" relation="include">
        </childnode>
        <childnode refid="5104" relation="include">
        </childnode>
        <childnode refid="5082" relation="include">
        </childnode>
        <childnode refid="5116" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5117" relation="include">
        </childnode>
      </node>
      <node id="5158">
        <label>resmgr/resource_file_path.hpp</label>
      </node>
      <node id="5057">
        <label>baseapp_int_interface.hpp</label>
        <link refid="baseapp__int__interface_8hpp_source"/>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5059" relation="include">
        </childnode>
        <childnode refid="5060" relation="include">
        </childnode>
        <childnode refid="5061" relation="include">
        </childnode>
        <childnode refid="5062" relation="include">
        </childnode>
        <childnode refid="5063" relation="include">
        </childnode>
        <childnode refid="5065" relation="include">
        </childnode>
        <childnode refid="5066" relation="include">
        </childnode>
        <childnode refid="5067" relation="include">
        </childnode>
      </node>
      <node id="5103">
        <label>data_downloads.hpp</label>
        <link refid="data__downloads_8hpp_source"/>
        <childnode refid="5104" relation="include">
        </childnode>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5073" relation="include">
        </childnode>
        <childnode refid="5105" relation="include">
        </childnode>
        <childnode refid="5106" relation="include">
        </childnode>
      </node>
      <node id="5135">
        <label>py_bases.hpp</label>
        <link refid="py__bases_8hpp_source"/>
        <childnode refid="5072" relation="include">
        </childnode>
      </node>
      <node id="5093">
        <label>backed_up_base_app.hpp</label>
        <link refid="backed__up__base__app_8hpp_source"/>
        <childnode refid="5094" relation="include">
        </childnode>
        <childnode refid="5095" relation="include">
        </childnode>
        <childnode refid="5096" relation="include">
        </childnode>
        <childnode refid="5097" relation="include">
        </childnode>
      </node>
      <node id="5089">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="5143">
        <label>recording_recovery_data.hpp</label>
        <link refid="recording__recovery__data_8hpp_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5142" relation="include">
        </childnode>
      </node>
      <node id="5052">
        <label>Python.h</label>
      </node>
      <node id="5107">
        <label>connection/baseapp_ext_interface.hpp</label>
      </node>
      <node id="5124">
        <label>network/tcp_server.hpp</label>
      </node>
      <node id="5150">
        <label>connection/log_on_status.hpp</label>
      </node>
      <node id="5142">
        <label>network/compression_type.hpp</label>
      </node>
      <node id="5144">
        <label>service.hpp</label>
        <link refid="service_8hpp_source"/>
        <childnode refid="5051" relation="include">
        </childnode>
      </node>
      <node id="5099">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="5134">
        <label>server/reviver_subject.hpp</label>
      </node>
      <node id="5080">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="5112">
        <label>pyscript/stl_to_py.hpp</label>
      </node>
      <node id="5138">
        <label>connection/replay_data_file_reader.hpp</label>
      </node>
      <node id="5075">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="5116">
        <label>cstdmf/timestamp.hpp</label>
      </node>
      <node id="5110">
        <label>math/ema.hpp</label>
      </node>
      <node id="5131">
        <label>server/id_client.hpp</label>
      </node>
      <node id="5078">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="5115">
        <label>network/unpacked_message_header.hpp</label>
      </node>
      <node id="5153">
        <label>entitydef/constants.hpp</label>
      </node>
      <node id="5058">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="5060">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="5118">
        <label>cstdmf/background_file_writer.hpp</label>
      </node>
      <node id="5105">
        <label>deque</label>
      </node>
      <node id="5074">
        <label>entity_type.hpp</label>
        <link refid="baseapp_2entity__type_8hpp_source"/>
        <childnode refid="5052" relation="include">
        </childnode>
        <childnode refid="5075" relation="include">
        </childnode>
        <childnode refid="5076" relation="include">
        </childnode>
        <childnode refid="5077" relation="include">
        </childnode>
        <childnode refid="5069" relation="include">
        </childnode>
        <childnode refid="5078" relation="include">
        </childnode>
        <childnode refid="5079" relation="include">
        </childnode>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5080" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
      </node>
      <node id="5069">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="5092">
        <label>baseapp.hpp</label>
        <link refid="baseapp_8hpp_source"/>
        <childnode refid="5093" relation="include">
        </childnode>
        <childnode refid="5057" relation="include">
        </childnode>
        <childnode refid="5098" relation="include">
        </childnode>
        <childnode refid="5100" relation="include">
        </childnode>
        <childnode refid="5101" relation="include">
        </childnode>
        <childnode refid="5102" relation="include">
        </childnode>
        <childnode refid="5113" relation="include">
        </childnode>
        <childnode refid="5107" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5120" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5083" relation="include">
        </childnode>
        <childnode refid="5122" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5124" relation="include">
        </childnode>
        <childnode refid="5125" relation="include">
        </childnode>
        <childnode refid="5065" relation="include">
        </childnode>
        <childnode refid="5126" relation="include">
        </childnode>
        <childnode refid="5127" relation="include">
        </childnode>
        <childnode refid="5096" relation="include">
        </childnode>
      </node>
      <node id="5066">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="5050">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="5083">
        <label>db/database_gateway.hpp</label>
      </node>
      <node id="5054">
        <label>baseapp_config.hpp</label>
        <link refid="baseapp__config_8hpp_source"/>
        <childnode refid="5055" relation="include">
        </childnode>
        <childnode refid="5056" relation="include">
        </childnode>
      </node>
      <node id="5151">
        <label>connection/replay_metadata.hpp</label>
      </node>
      <node id="5159">
        <label>server/look_up_entities.hpp</label>
      </node>
      <node id="5154">
        <label>entitydef/py_deferred.hpp</label>
      </node>
      <node id="5067">
        <label>connection/common_client_interface.hpp</label>
      </node>
      <node id="5127">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="5133">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="5068">
        <label>mailbox.hpp</label>
        <link refid="baseapp_2mailbox_8hpp_source"/>
        <childnode refid="5069" relation="include">
        </childnode>
        <childnode refid="5070" relation="include">
        </childnode>
        <childnode refid="5071" relation="include">
        </childnode>
        <childnode refid="5072" relation="include">
        </childnode>
        <childnode refid="5073" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
        <childnode refid="5074" relation="include">
        </childnode>
      </node>
      <node id="5056">
        <label>server/external_app_config.hpp</label>
      </node>
      <node id="5100">
        <label>bases.hpp</label>
        <link refid="bases_8hpp_source"/>
        <childnode refid="5058" relation="include">
        </childnode>
        <childnode refid="5096" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
      </node>
      <node id="5123">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="5098">
        <label>baseappmgr_gateway.hpp</label>
        <link refid="baseappmgr__gateway_8hpp_source"/>
        <childnode refid="5099" relation="include">
        </childnode>
      </node>
      <node id="5091">
        <label>memory</label>
      </node>
      <node id="5122">
        <label>network/channel_listener.hpp</label>
      </node>
      <node id="5146">
        <label>cstdmf/unique_id.hpp</label>
      </node>
      <node id="5085">
        <label>common/py_timer.hpp</label>
      </node>
      <node id="5070">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_script_callback_adaptor_helper" prot="public">ScriptCallbackAdaptorHelper</innerclass>
    <innerclass refid="class_script_callback_adaptor" prot="public">ScriptCallbackAdaptor</innerclass>
    <innerclass refid="class_base_creation_script_callback" prot="public">BaseCreationScriptCallback</innerclass>
    <innerclass refid="class_base_creation_from_d_b_script_callback" prot="public">BaseCreationFromDBScriptCallback</innerclass>
    <innernamespace refid="namespace_big_world_base_app_script">BigWorldBaseAppScript</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="script__bigworld_8cpp_1a0163d8eb9ebac8de286d08938b4813f6" prot="public" static="no" mutable="no">
        <type>BW_BEGIN_NAMESPACE int</type>
        <definition>BW_BEGIN_NAMESPACE int PyReplayDataFileReader_token</definition>
        <argsstring></argsstring>
        <name>PyReplayDataFileReader_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1ae4ccc16447b3d36d989edb1fde3576fe" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyURLRequest_token</definition>
        <argsstring></argsstring>
        <name>PyURLRequest_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1ae429ea0a8fda63b1c0946f52ce4b248b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>createBaseFromDBID</definition>
        <argsstring></argsstring>
        <name>createBaseFromDBID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="830" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1a074c5764015cc3bd31eb8fb7b1a455d8" prot="public" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* kwargs</definition>
        <argsstring></argsstring>
        <name>kwargs</name>
        <initializer>{
	char * commandString = NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1969" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1a5d6502e212cbfe7097911a4792fd26fc" prot="public" static="no" mutable="no">
        <type>Py_ssize_t</type>
        <definition>Py_ssize_t commandStringLength</definition>
        <argsstring></argsstring>
        <name>commandStringLength</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1972" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1972" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1a76b1e80f2d48bddb33c85041cb0f7f6f" prot="public" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* pResultHandler</definition>
        <argsstring></argsstring>
        <name>pResultHandler</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1973" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1973" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1a8bc8b609a908430ef1fd4f6b0aaf8f7a" prot="public" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* pPartitionKey</definition>
        <argsstring></argsstring>
        <name>pPartitionKey</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1974" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1974" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1a414565604fa67d57608632afa7b65a87" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* keywords[]</definition>
        <argsstring>[]</argsstring>
        <name>keywords</name>
        <initializer>= {
		&quot;command&quot;,
		&quot;callback&quot;,
		&quot;partitionKey&quot;,
		NULL
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1976" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1a8e301db9e5cd2c192d19d55d105fa025" prot="public" static="no" mutable="no">
        <type>int64</type>
        <definition>int64 partitionKey</definition>
        <argsstring></argsstring>
        <name>partitionKey</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1992" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1992" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1a820a39440313bd75d38816f6218c4a58" prot="public" static="no" mutable="no">
        <type>const StorageShardHash &amp;</type>
        <definition>const StorageShardHash&amp; storageShardHash</definition>
        <argsstring></argsstring>
        <name>storageShardHash</name>
        <initializer>=
		BaseApp::instance().storageShardHash()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2008" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1af186a1e629f6a4e79bb6498d75975ed5" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_storage_shard" kindref="compound">StorageShard</ref> *</type>
        <definition>const StorageShard* storageShard</definition>
        <argsstring></argsstring>
        <name>storageShard</name>
        <initializer>=
		storageShardHash.getStorageShard( partitionKey )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2018" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1af7e34e1805204a56964f6c18f7c1e46f" prot="public" static="no" mutable="no">
        <type>Mercury::Channel &amp;</type>
        <definition>Mercury::Channel&amp; channel</definition>
        <argsstring></argsstring>
        <name>channel</name>
        <initializer>=
		BaseApp::getChannel(storageShard-&gt;getRandomDBApp()-&gt;address())</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2024" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="script__bigworld_8cpp_1ae29a17389e9c4913c54df329a9e3ac5c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Py_RETURN_NONE</definition>
        <argsstring></argsstring>
        <name>Py_RETURN_NONE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2033" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2033" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="script__bigworld_8cpp_1aa5b15f763e0527c971048d6d695e05ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_createBaseAnywhere</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_createBaseAnywhere</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.createBaseAnywhere script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="311" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="311" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a4f530831711c8b52dbbaf90169963bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_createBaseRemotely</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_createBaseRemotely</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.createBaseRemotely script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="400" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="400" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1adc3ead0a693dabfdc1df36ba8e970989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_createBaseLocally</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_createBaseLocally</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.createBaseLocally script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="513" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="513" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a42b0ca45077b962517fa4130f33315d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_createBase</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_createBase</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="592" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="592" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a9b9a0871a9f78059f11d7f342064125a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_createEntity</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_createEntity</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="611" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="611" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1af62fbe47dc820f67b8628b0db856797b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_time</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_time</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.time script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="620" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="620" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1ae46b917bc92959d0e94cc96909d0c81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_MODULE_FUNCTION_WITH_DOC</definition>
        <argsstring>(time, BigWorld,&quot;This method returns the current &quot;&quot;game time in seconds as a floating point number. Game time is &quot;&quot;incremented with each game tick.&quot;) float getLoad()</argsstring>
        <name>PY_MODULE_FUNCTION_WITH_DOC</name>
        <param>
          <type>time</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <param>
          <type>&quot;This method returns the current &quot;&quot;game time in seconds as a floating point number. Game time is &quot;&quot;incremented with each game tick.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.getLoad script method.</para><para><simplesect kind="return"><para>The current <ref refid="class_base_app" kindref="compound">BaseApp</ref> load as a float. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="641" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="641" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1aeafd58a8defc44bf3c63384690df3f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getTotalNumProxies</definition>
        <argsstring>()</argsstring>
        <name>getTotalNumProxies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.getTotalNumProxies script method.</para><para><simplesect kind="return"><para>The current <ref refid="class_base_app" kindref="compound">BaseApp</ref> load as a float. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="668" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="668" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a36df16c87131dce8061ec0401cab2c41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_hasStarted</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_hasStarted</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.hasStarted script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="683" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="683" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a1e4525edfefa55bcec1cdfd176069382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_MODULE_FUNCTION</definition>
        <argsstring>(hasStarted, BigWorld)</argsstring>
        <name>PY_MODULE_FUNCTION</name>
        <param>
          <type>hasStarted</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a25be45ac1c05f81625b249ac577244e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_isShuttingDown</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_isShuttingDown</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.isShuttingDown script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="705" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="705" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a65476f183c68ab409a97dd1340bbdef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_MODULE_FUNCTION</definition>
        <argsstring>(isShuttingDown, BigWorld)</argsstring>
        <name>PY_MODULE_FUNCTION</name>
        <param>
          <type>isShuttingDown</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="722" column="1"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1aa3e502bb8fcc000cc9b4e740043a9e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool createBaseLocallyFromDB</definition>
        <argsstring>(const BW::string &amp;entityType, const BW::string &amp;identifier, const ScriptObject &amp;callback)</argsstring>
        <name>createBaseLocallyFromDB</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>entityType</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const ScriptObject &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="754" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="754" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1ad5018375e02a49118f357183dfc313c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, createBaseLocallyFromDB, ARG(BW::string, ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END))), BigWorld)   bool createBaseLocallyFromDBID(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>createBaseLocallyFromDB</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="769" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="769" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1aea77a22c28e812e4538343387ac4c58e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, createBaseLocallyFromDBID, ARG(BW::string, ARG(DatabaseID, OPTARG(ScriptObject, ScriptObject::none(), END))), BigWorld) PY_MODULE_FUNCTION_ALIAS(createBaseLocallyFromDBID</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>createBaseLocallyFromDBID</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(DatabaseID, OPTARG(ScriptObject, ScriptObject::none(), END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="821" column="1"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1ab5584e5f43c2225af3715df053c87cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BigWorld PyObject *</type>
        <definition>BigWorld PyObject* createBaseAnywhereFromDB</definition>
        <argsstring>(const BW::string &amp;entityType, const BW::string &amp;identifier, const ScriptObject &amp;callback)</argsstring>
        <name>createBaseAnywhereFromDB</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>entityType</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const ScriptObject &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="861" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="861" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1ae52838678b09dd411b923325dd2a4c26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createBaseAnywhereFromDB, ARG(BW::string, ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END))), BigWorld) PyObject *createBaseAnywhereFromDBID(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createBaseAnywhereFromDB</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="877" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="877" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a2bd7af7dd6245608e131de86c9025699" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createBaseAnywhereFromDBID, ARG(BW::string, ARG(DatabaseID, OPTARG(ScriptObject, ScriptObject::none(), END))), BigWorld) PyObject *createBaseRemotelyFromDB(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createBaseAnywhereFromDBID</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(DatabaseID, OPTARG(ScriptObject, ScriptObject::none(), END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="932" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="932" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a6e4a0484a3226e21bf577df4e31e0d51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createBaseRemotelyFromDB, ARG(BW::string, ARG(BW::string, ARG(EntityMailBoxRef, OPTARG(ScriptObject, ScriptObject::none(), END)))), BigWorld) PyObject *createBaseRemotelyFromDBID(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createBaseRemotelyFromDB</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, ARG(EntityMailBoxRef, OPTARG(ScriptObject, ScriptObject::none(), END))))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="996" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="996" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1aa2e83c8d47be720abbd9d6d1b1f23121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createBaseRemotelyFromDBID, ARG(BW::string, ARG(DatabaseID, ARG(EntityMailBoxRef, OPTARG(ScriptObject, ScriptObject::none(), END)))), BigWorld) PyObject *createBaseAnywhereFromTemplate(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createBaseRemotelyFromDBID</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(DatabaseID, ARG(EntityMailBoxRef, OPTARG(ScriptObject, ScriptObject::none(), END))))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1065" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1065" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a4bb819345d958e3f8089e20204ed92a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createBaseAnywhereFromTemplate, ARG(BW::string, ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END))), BigWorld) PyObject *createBaseLocallyFromTemplate(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createBaseAnywhereFromTemplate</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1103" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1103" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1afb2f9814f63befe193837d34caef6d3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createBaseLocallyFromTemplate, ARG(BW::string, ARG(BW::string, END)), BigWorld) PyObject *createBaseRemotelyFromTemplate(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createBaseLocallyFromTemplate</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, END))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1134" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1134" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a989c1006f0c2b92bdae1222dc467bb7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createBaseRemotelyFromTemplate, ARG(BW::string, ARG(BW::string, ARG(EntityMailBoxRef, OPTARG(ScriptObject, ScriptObject::none(), END)))), BigWorld) template&lt;&gt; struct ScriptCallbackAdaptorHelper&lt; StreamHelpers</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createBaseRemotelyFromTemplate</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, ARG(EntityMailBoxRef, OPTARG(ScriptObject, ScriptObject::none(), END))))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1185" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1185" bodyend="1217"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a1f8fdae8c03e9fdd1c83eed8b381917f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool deleteBaseByDBID</definition>
        <argsstring>(const BW::string &amp;entityType, DatabaseID dbID, PyObjectPtr pResultHandler)</argsstring>
        <name>deleteBaseByDBID</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>entityType</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pResultHandler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1237" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1237" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a0f35fa2608abd33500ba1725267126d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, deleteBaseByDBID, ARG(BW::string, ARG(DatabaseID, OPTARG(PyObjectPtr, NULL, END))), BigWorld) template&lt;&gt; struct ScriptCallbackAdaptorHelper&lt; StreamHelpers</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>deleteBaseByDBID</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(DatabaseID, OPTARG(<ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>, NULL, END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1280" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1280" bodyend="1324"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a4aa7195695f27a62ec52fbd2614d5a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lookUpBaseByDBID</definition>
        <argsstring>(const BW::string &amp;entityType, DatabaseID dbID, PyObjectPtr pResultHandler)</argsstring>
        <name>lookUpBaseByDBID</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>entityType</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pResultHandler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1341" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1341" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a4343b47b2434d9f0d2ddfca772327af7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, lookUpBaseByDBID, ARG(BW::string, ARG(DatabaseID, ARG(PyObjectPtr, END))), BigWorld) bool lookUpBaseByName(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>lookUpBaseByDBID</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(DatabaseID, ARG(<ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>, END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1384" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1384" bodyend="1445"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a47dfde87a211fc0f0732ffb0cb2321f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, lookUpBaseByName, ARG(BW::string, ARG(BW::string, ARG(PyObjectPtr, END))), BigWorld) template&lt;&gt; struct ScriptCallbackAdaptorHelper&lt; StreamHelpers</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>lookUpBaseByName</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, ARG(<ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>, END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1446" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1446" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a92ae20e76587bbff16b28ca00c3336a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lookUpDBIDByName</definition>
        <argsstring>(const BW::string &amp;entityType, const BW::string &amp;name, PyObjectPtr pResultHandler)</argsstring>
        <name>lookUpDBIDByName</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>entityType</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pResultHandler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1479" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1479" bodyend="1507"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a5bd021a45919b6b63444352e3a3e9523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_lookUpBasesByIndex</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_lookUpBasesByIndex</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1828" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1828" bodyend="1942"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1abbfa7f3bb96daa1dbd6c38fd481180d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_MODULE_FUNCTION_WITH_KEYWORDS_WITH_DOC</definition>
        <argsstring>(lookUpBasesByIndex, BigWorld,&quot;Perform an asynchronous look-up persistent base entities stored in the&quot;&quot;primary database based on matching some of its properties specified as &quot;&quot;keyword arguments (propertyName=propertyValue). For efficiency, the &quot;&quot;properties should be indexed properties as defined in the entity &quot;&quot;definitions for the given entity type.\n&quot;&quot;If successful, the callback argument is called with a list of pairs for &quot;&quot;each matching persistent entity:\n&quot;&quot;\n&quot;&quot;[ (databaseID0, baseMailBox0), (databaseID1, baseMailBox1), ... ]&quot;&quot;\n&quot;&quot;If the entity is currently checked out, the base mailbox is returned as &quot;&quot;the second element of the pair. If the entity is not current checked out, &quot;&quot;the second element of the pair will be None.&quot;&quot;\n&quot;&quot;If the request resulted in a database error of some kind (this does not &quot;&quot;include the case where zero entities are matched), the callback argument &quot;&quot;will be called with None instead. Examples include if the property is of an &quot;&quot;inappropriate type to compare with a string (e.g. sequence and structured &quot;&quot;data types, PYTHON types, FLOAT* types).&quot;) PyObject *py_executeRawDatabaseCommand(PyObject *args</argsstring>
        <name>PY_MODULE_FUNCTION_WITH_KEYWORDS_WITH_DOC</name>
        <param>
          <type>lookUpBasesByIndex</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <param>
          <type>&quot;Perform an asynchronous look-up persistent base entities stored in the&quot;&quot;primary database based on matching some of its properties specified as &quot;&quot;keyword arguments (propertyName=propertyValue). For</type>
          <declname>efficiency</declname>
        </param>
        <param>
          <type>the&quot;&quot;properties should be indexed properties as defined in the entity&quot;&quot;definitions for the given entity type.\n&quot;&quot;If</type>
          <declname>successful</declname>
        </param>
        <param>
          <type>the callback argument is called with a list of pairs for&quot;&quot;each matching persistent entity:\n&quot;&quot;\n&quot;&quot;&quot;&quot;\n&quot;&quot;If the entity is currently checked</type>
          <declname>out</declname>
          <array>[(databaseID0, baseMailBox0),(databaseID1, baseMailBox1),...]</array>
        </param>
        <param>
          <type>the base mailbox is returned as&quot;&quot;the second element of the pair.If the entity is not current checked</type>
          <declname>out</declname>
        </param>
        <param>
          <type>&quot;&quot;the second element of the pair will be None.&quot;&quot;\n&quot;&quot;If the request resulted in a database error of some </type>
          <declname>kind</declname>
          <array>this does not&quot;&quot;include the case where zero entities are matched</array>
        </param>
        <param>
          <type>the callback argument&quot;&quot;will be called with None instead.Examples include if the property is of an&quot;&quot;inappropriate type to compare with a string(e.g.sequence and structured&quot;&quot;data types, PYTHON types, FLOAT *types).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method implements the BigWorld.executeRawDatabaseCommand function. See DBAppInterfaceUtils::executeRawDatabaseCommand for more details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1943" column="1"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a291b93aed936935668309eaf2e41953c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(!PyArg_ParseTupleAndKeywords(args, kwargs,&quot;s#O|O:BigWorld.executeRawDatabaseCommand&quot;, const_cast&lt; char ** &gt;(keywords),&amp;commandString,&amp;commandStringLength,&amp;pResultHandler,&amp;pPartitionKey))</argsstring>
        <name>if</name>
        <param>
          <type>!</type>
          <declname>PyArg_ParseTupleAndKeywords</declname>
          <array>args, kwargs,&quot;s#O|O:BigWorld.executeRawDatabaseCommand&quot;, const_cast&lt; char ** &gt;(keywords),&amp;commandString,&amp;commandStringLength,&amp;pResultHandler,&amp;pPartitionKey</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1983" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1983" bodyend="1990"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a3d448d6ce573ccb0af4ab48ea69acc4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(pPartitionKey &amp;&amp;pPartitionKey!=Py_None)</argsstring>
        <name>if</name>
        <param>
          <type>pPartitionKey &amp;&amp;pPartitionKey!</type>
          <defval>Py_None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="1995" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="1995" bodyend="2005"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1ae522840883027db02613ce96afeb0c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(partitionKey!=0 &amp;&amp;storageShardHash.hasTransitioningShards())</argsstring>
        <name>if</name>
        <param>
          <type>partitionKey!</type>
          <defval>0 &amp;&amp;storageShardHash.hasTransitioningShards()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2010" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2010" bodyend="2016"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a7289dde68ae8b9daf31b42510def77f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MF_ASSERT</definition>
        <argsstring>(storageShard)</argsstring>
        <name>MF_ASSERT</name>
        <param>
          <type>storageShard</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2021" column="1"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1ac9d244144a55d7210263808eada40506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string command</definition>
        <argsstring>(commandString, commandStringLength)</argsstring>
        <name>command</name>
        <param>
          <type>commandString</type>
        </param>
        <param>
          <type>commandStringLength</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2023" column="1"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a2b3b1579df6d3ae805bc092a85ad74ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(!DBAppInterfaceUtils::executeRawDatabaseCommand(command, pResultHandler, channel))</argsstring>
        <name>if</name>
        <param>
          <type>!</type>
          <declname>DBAppInterfaceUtils::executeRawDatabaseCommand</declname>
          <array>command, pResultHandler, channel</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2027" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2027" bodyend="2031"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a46920d46b175cb4c00c47c013989bf1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool reloadScript</definition>
        <argsstring>(bool isFullReload)</argsstring>
        <name>reloadScript</name>
        <param>
          <type>bool</type>
          <declname>isFullReload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2038" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2038" bodyend="2109"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a8eaa76dbad051c8a30756eca6279a14f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETDATA, reloadScript, OPTARG(bool, true, END), BigWorld) PyObject *startService(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETDATA</type>
        </param>
        <param>
          <type>reloadScript</type>
        </param>
        <param>
          <type>OPTARG(bool, true, END)</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2147" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2147" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1afd7a9aaaf6c32fb9c568aeaec3df8c49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, startService, ARG(BW::string, END), BigWorld) bool stopService(const BW</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>startService</type>
        </param>
        <param>
          <type>ARG(BW::string, END)</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2201" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2201" bodyend="2237"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a367d2362eecbacd09f3a3e0b91025cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PY_AUTO_MODULE_FUNCTION(RETOK, stopService, ARG(BW::string, END), BigWorld) class <ref refid="class_authenticate_account_handler" kindref="compound">AuthenticateAccountHandler</ref> PyObject *</type>
        <definition>PY_AUTO_MODULE_FUNCTION ( RETOK, stopService, ARG( BW::string, END ), BigWorld ) class AuthenticateAccountHandler PyObject* authenticateAccount</definition>
        <argsstring>(BW::string username, BW::string password)</argsstring>
        <name>authenticateAccount</name>
        <param>
          <type>BW::string</type>
          <declname>username</declname>
        </param>
        <param>
          <type>BW::string</type>
          <declname>password</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2364" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2364" bodyend="2390"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a952b794801c97b1d08ddf67571f142ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, authenticateAccount, ARG(BW::string, ARG(BW::string, END)), BigWorld) void shutDownApp()</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>authenticateAccount</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(BW::string, END))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2391" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2391" bodyend="2403"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a03bba7f8d7c5ec38e404958cd3b68fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void controlledShutDown</definition>
        <argsstring>()</argsstring>
        <name>controlledShutDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2412" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2412" bodyend="2415"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1a0c74e3b392e46d0d96827025fa26c28b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_createReplayDataFileWriter</definition>
        <argsstring>(PyObject *args, PyObject *kwargs)</argsstring>
        <name>py_createReplayDataFileWriter</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2456" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2456" bodyend="2646"/>
      </memberdef>
      <memberdef kind="function" id="script__bigworld_8cpp_1af200eb45f3ad5cc8c486c9a5b19f4c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void addToModule</definition>
        <argsstring>(PyObject *pModule, T value, const char *pName)</argsstring>
        <name>addToModule</name>
        <param>
          <type>PyObject *</type>
          <declname>pModule</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/script_bigworld.cpp" line="2693" column="1" bodyfile="baseapp/script_bigworld.cpp" bodystart="2693" bodyend="2705"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;script_bigworld.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;base.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_creator.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mailbox.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;proxy.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_bases.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_replay_data_file_reader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_replay_data_file_writer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;service.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseappmgr/baseappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr/cellappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db/dbapp_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db/dbapp_interface_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db_storage/entity_key.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection/log_on_status.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection/replay_metadata.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/user_data_object.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/mailbox_base.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/py_deferred.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/compression_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/nub_exception.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/keyword_parser.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/pyobject_plus.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/script.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resmgr/resource_file_path.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/look_up_entities.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/shared_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/watcher_forwarding.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyReplayDataFileReader_token;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyURLRequest_token;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="comment">//<sp/>(anonymous)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tokenSet<sp/>=<sp/>PyReplayDataFileReader_token<sp/>|<sp/>PyURLRequest_token;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>(anonymous)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Script<sp/>related</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STREAM_HELPER<sp/>&gt;</highlight></codeline>
<codeline lineno="68" refid="struct_script_callback_adaptor_helper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_script_callback_adaptor_helper" kindref="compound">ScriptCallbackAdaptorHelper</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>static<sp/>ScriptObject<sp/>replyAsScriptCallbackValue(</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>typename<sp/>STREAM_HELPER::Reply<sp/>&amp;<sp/>reply<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>...</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>STREAM_HELPER<sp/>&gt;</highlight></codeline>
<codeline lineno="85" refid="class_script_callback_adaptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_script_callback_adaptor" kindref="compound">ScriptCallbackAdaptor</ref><sp/>:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IDatabaseReplyWaiter&lt;<sp/>STREAM_HELPER<sp/>&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>STREAM_HELPER<sp/>StreamHelper;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>IDatabaseReplyWaiter&lt;<sp/>StreamHelper<sp/>&gt;<sp/>ReplyWaiter;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_script_callback_adaptor_helper" kindref="compound">ScriptCallbackAdaptorHelper&lt; StreamHelper &gt;</ref><sp/><ref refid="struct_script_callback_adaptor_helper" kindref="compound">AdaptorHelper</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ReplyWaiter<sp/>&amp;<sp/>wrap(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>callback.isCallable()<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_script_callback_adaptor" kindref="compound">ScriptCallbackAdaptor</ref>(<sp/>callback<sp/>));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StreamHelper::Request<sp/>Request;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StreamHelper::Reply<sp/>Reply;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_script_callback_adaptor" kindref="compound">ScriptCallbackAdaptor</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_(<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Override<sp/>from<sp/>IDatabaseReplyWaiter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onReply(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;<sp/>request,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Reply<sp/>&amp;<sp/>reply<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>override<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>callbackValue<sp/>=</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AdaptorHelper::replyAsScriptCallbackValue(<sp/>reply<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(<sp/>ScriptArgs::create(<sp/>callbackValue<sp/>),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Override<sp/>from<sp/>IDatabaseReplyWaiter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onShutDown(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;<sp/>request<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>override<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptArgs::create(<sp/>ScriptObject::createFrom(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Override<sp/>from<sp/>IDatabaseReplyWaiter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onNetworkFailure(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Request<sp/>&amp;<sp/>request<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>override<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptArgs::create(<sp/>ScriptObject::createFrom(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback_;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_base_creation_script_callback" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_base_creation_script_callback" kindref="compound">BaseCreationScriptCallback</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_creation_callback" kindref="compound">BaseCreationCallback</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_base_creation_script_callback" kindref="compound">BaseCreationScriptCallback</ref><sp/>*<sp/>create(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.exists()<sp/>||<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_base_creation_script_callback" kindref="compound">BaseCreationScriptCallback</ref>(<sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_creation_script_callback" kindref="compound">BaseCreationScriptCallback</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_(<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>callback_.exists()<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>callback_.isCallable()<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BaseCreationCallback<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onBaseCreated(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMailBoxRef<sp/>&amp;<sp/>mailbox<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>return<sp/>a<sp/>Base<sp/>when<sp/>possible<sp/>because<sp/>the<sp/>API<sp/>documentation<sp/>says</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>might<sp/>return<sp/>a<sp/>Base,<sp/>and<sp/>the<sp/>auto-tests<sp/>assume<sp/>we<sp/>return<sp/>a<sp/>Base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>possible,<sp/>and<sp/>we&apos;ve<sp/>always<sp/>returned<sp/>a<sp/>Base<sp/>when<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>BWT-27034<sp/>would<sp/>mean<sp/>we<sp/>can<sp/>always<sp/>simply<sp/>use<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>PyEntityMailBox::constructFromRef(<sp/>mailbox<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mailbox.addr<sp/>==<sp/>baseApp.intInterface().address())</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">BasePtr</ref><sp/>pBase<sp/>=<sp/>baseApp.bases().findEntity(<sp/>mailbox.id<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pBase<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(<sp/>ScriptArgs::create(<sp/>ScriptObject(<sp/>pBase<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pyMailbox(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyEntityMailBox::constructFromRef(<sp/>mailbox<sp/>),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(<sp/>ScriptArgs::create(<sp/>pyMailbox<sp/>),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onFailure()</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(<sp/>ScriptArgs::create(<sp/>ScriptObject::none()<sp/>),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onAborted()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback_;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="class_base_creation_from_d_b_script_callback" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_base_creation_from_d_b_script_callback" kindref="compound">BaseCreationFromDBScriptCallback</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_creation_from_d_b_callback" kindref="compound">BaseCreationFromDBCallback</ref></highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_base_creation_from_d_b_script_callback" kindref="compound">BaseCreationFromDBScriptCallback</ref><sp/>*<sp/>create(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.exists()<sp/>||<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_base_creation_from_d_b_script_callback" kindref="compound">BaseCreationFromDBScriptCallback</ref>(<sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_creation_from_d_b_script_callback" kindref="compound">BaseCreationFromDBScriptCallback</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_(<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>callback_.exists()<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>callback_.isCallable()<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BaseCreationFromDBCallback<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onBaseCreated(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMailBoxRef<sp/>&amp;<sp/>mailbox,<sp/>DatabaseID<sp/>dbID,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasActive<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>return<sp/>a<sp/>Base<sp/>when<sp/>possible<sp/>because<sp/>the<sp/>API<sp/>documentation<sp/>says</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>might<sp/>return<sp/>a<sp/>Base,<sp/>and<sp/>the<sp/>auto-tests<sp/>assume<sp/>we<sp/>return<sp/>a<sp/>Base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>possible,<sp/>and<sp/>we&apos;ve<sp/>always<sp/>returned<sp/>a<sp/>Base<sp/>when<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>BWT-27034<sp/>would<sp/>mean<sp/>we<sp/>can<sp/>always<sp/>simply<sp/>use<sp/>the<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>PyEntityMailBox::constructFromRef(<sp/>mailbox<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wasActive<sp/>&amp;&amp;<sp/>mailbox.addr<sp/>==<sp/>baseApp.intInterface().address())</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">BasePtr</ref><sp/>pBase<sp/>=<sp/>baseApp.bases().findEntity(<sp/>mailbox.id<sp/>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pBase<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptArgs::create(<sp/>ScriptObject(<sp/>pBase<sp/>),<sp/>dbID,<sp/>wasActive<sp/>),</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pyMailbox(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyEntityMailBox::constructFromRef(<sp/>mailbox<sp/>),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptArgs::create(<sp/>pyMailbox,<sp/>dbID,<sp/>wasActive<sp/>),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onFailure()</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(<sp/>ScriptArgs::create(<sp/>ScriptObject::none(),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOT_PERSISTED_DATABASE_ID,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>),<sp/>ScriptErrorPrint()<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onAborted()</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback_;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">};</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">PyObject<sp/>*<sp/>py_createBaseAnywhere(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptTuple<sp/>argsObj(<sp/>args,<sp/>ScriptTuple::FROM_BORROWED_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>kwargsObj(<sp/>kwargs,<sp/>ScriptDict::FROM_BORROWED_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argsObj.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>at<sp/>least<sp/>1<sp/>argument&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>arg<sp/>must<sp/>be<sp/>a<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptString<sp/>entityTypeNameObj<sp/>=</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString::create(<sp/>argsObj.getItem(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entityTypeNameObj.exists())</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>a<sp/>string<sp/>as<sp/>first<sp/>argument&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>entityTypeName;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>entityTypeNameObj.getString(<sp/>entityTypeName<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>last<sp/>argument<sp/>is<sp/>a<sp/>callable,<sp/>it&apos;s<sp/>a<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>possibleCallback<sp/>=<sp/>argsObj.getItem(<sp/>argsObj.size()<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;BaseCreationScriptCallback&gt;<sp/>pCallback(</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationScriptCallback::create(<sp/>possibleCallback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tailUsed<sp/>=<sp/>(pCallback.get()<sp/>==<sp/>NULL)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>remaining<sp/>args<sp/>are<sp/>containers<sp/>of<sp/>entity<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>argsObj<sp/>=</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsObj.getSlice(<sp/>1,<sp/>argsObj.size()<sp/>-<sp/>tailUsed,<sp/>ScriptErrorRetain()<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Script::hasError())</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseAnywhere(</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTypeName,<sp/>argsObj,<sp/>kwargsObj,<sp/>pCallback.release()<sp/>).newRef();</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseAnywhere</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>createBaseAnywhere<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>in<sp/>the<sp/>BigWorld</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/><sp/>server<sp/>system.<sp/>The<sp/>server<sp/>may<sp/>choose<sp/>to<sp/>create<sp/>the<sp/>Base<sp/>entity<sp/>on<sp/>any</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/><sp/>BaseApp.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>should<sp/>be<sp/>preferred<sp/>to<sp/>BigWorld.createBaseLocally<sp/>and</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.createBaseRemotely<sp/>as<sp/>the<sp/>server<sp/>has<sp/>the<sp/>flexibility<sp/>to<sp/>create</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>entity<sp/>on<sp/>an<sp/>appropriately<sp/>loaded<sp/>BaseApp.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>takes<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type<sp/>to<sp/>be<sp/>created<sp/>and<sp/>optionally</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>Python<sp/>dictionary<sp/>or<sp/>keyword<sp/>arguments<sp/>to<sp/>be<sp/>used<sp/>to<sp/>provide<sp/>initial</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/><sp/>values<sp/>for<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/><sp/>Any<sp/>values<sp/>not<sp/>provided<sp/>will<sp/>default<sp/>to<sp/>the<sp/>entity&apos;s<sp/>default<sp/>value<sp/>provided</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>the<sp/>&quot;.def&quot;<sp/>file.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>Specifies<sp/>the<sp/>type<sp/>of<sp/>base<sp/>entity<sp/>to<sp/>be<sp/><sp/><sp/>created.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type.<sp/>Valid<sp/>entity<sp/>types<sp/>are</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/><sp/>those<sp/>listed<sp/>in<sp/>scripts/entities.xml<sp/>that<sp/>have<sp/>a<sp/>base<sp/>entity<sp/>component.</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>the<sp/>entity<sp/>has<sp/>been<sp/>created.<sp/>It<sp/>is<sp/>called<sp/>with<sp/>one<sp/>argument<sp/>that<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/><sp/>mailbox<sp/>or<sp/>direct<sp/>reference<sp/>to<sp/>the<sp/>new<sp/>base<sp/>entity<sp/>on<sp/>success,<sp/>and<sp/>None<sp/>on</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/><sp/>failure.<sp/>Note:<sp/>the<sp/>callback<sp/>argument<sp/>should<sp/>be<sp/>the<sp/>last<sp/>unnamed<sp/>argument<sp/>for</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>*params<sp/>The<sp/>remaining,<sp/>optional<sp/>arguments.<sp/>These<sp/>arguments<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/><sp/>Python<sp/>dictionaries,<sp/>keyword<sp/>arguments,<sp/>or<sp/>a<sp/>DataSection.<sp/>If<sp/>a<sp/>specified</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/><sp/>key<sp/>is<sp/>a<sp/>Base<sp/>property,<sp/>its<sp/>value<sp/>will<sp/>be<sp/>used<sp/>to<sp/>initialise<sp/>the<sp/>Base<sp/>entity</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/><sp/>property.<sp/>If<sp/>the<sp/>key<sp/>is<sp/>a<sp/>Cell<sp/>property,<sp/>it<sp/>will<sp/>be<sp/>added<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/><sp/>&apos;cellData&apos;<sp/>attribute<sp/>on<sp/>the<sp/>base<sp/>entity,<sp/>which<sp/>is<sp/>a<sp/>Python<sp/>dictionary,<sp/>and</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/><sp/>later<sp/>be<sp/>sent<sp/>to<sp/>initialise<sp/>the<sp/>cell<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>same<sp/>properties<sp/>are<sp/>provided<sp/>multiple<sp/>times<sp/>via<sp/>a<sp/>DataSection,</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/><sp/>dictionary<sp/>or<sp/>keyword<sp/>argument,<sp/>the<sp/>keyword<sp/>argument<sp/>has<sp/>precedence<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>other<sp/>arguments<sp/>from<sp/>left<sp/>to<sp/>right.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>mailbox<sp/>to<sp/>the<sp/>new<sp/>Base<sp/>entity.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS(<sp/>createBaseAnywhere,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">PyObject<sp/>*<sp/>py_createBaseRemotely(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptTuple<sp/>argsObj(<sp/>args,<sp/>ScriptTuple::FROM_BORROWED_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>kwargsObj(<sp/>kwargs,<sp/>ScriptDict::FROM_BORROWED_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argsObj.size()<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>at<sp/>least<sp/>2<sp/>arguments&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>arg<sp/>must<sp/>be<sp/>a<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptString<sp/>entityTypeNameObj<sp/>=</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString::create(<sp/>argsObj.getItem(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entityTypeNameObj.exists())</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>a<sp/>string<sp/>as<sp/>first<sp/>argument&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>entityTypeName;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>entityTypeNameObj.getString(<sp/>entityTypeName<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>arg<sp/>must<sp/>be<sp/>a<sp/>BaseMailBox<sp/>or<sp/>Base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>targetObj<sp/>=<sp/>argsObj.getItem(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>targetObj.exists()<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>remoteAddress;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BaseEntityMailBox::Check(<sp/>targetObj<sp/>))</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remoteAddress<sp/>=</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_base_entity_mail_box" kindref="compound">BaseEntityMailBox</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>targetObj.get()<sp/>)-&gt;address();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Base::Check(<sp/>targetObj<sp/>))</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remoteAddress<sp/>=<sp/>BaseApp::instance().intInterface().address();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>2<sp/>must<sp/>be<sp/>a<sp/>mailbox<sp/>or<sp/>an<sp/>entity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>last<sp/>argument<sp/>is<sp/>a<sp/>callable,<sp/>it&apos;s<sp/>a<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>possibleCallback<sp/>=<sp/>argsObj.getItem(<sp/>argsObj.size()<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;BaseCreationScriptCallback&gt;<sp/>pCallback(</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationScriptCallback::create(<sp/>possibleCallback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tailUsed<sp/>=<sp/>(pCallback.get()<sp/>==<sp/>NULL)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>remaining<sp/>args<sp/>are<sp/>containers<sp/>of<sp/>entity<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>argsObj<sp/>=</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsObj.getSlice(<sp/>2,<sp/>argsObj.size()<sp/>-<sp/>tailUsed,<sp/>ScriptErrorRetain()<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Script::hasError())</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseRemotely(</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTypeName,<sp/>remoteAddress,<sp/>argsObj,<sp/>kwargsObj,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCallback.release()<sp/>).newRef();</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseRemotely</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>createBaseRemotely<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>in<sp/>the<sp/>BigWorld</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/><sp/>server<sp/>system<sp/>on<sp/>the<sp/>BaseApp<sp/>specified<sp/>by<sp/>the<sp/>baseMB<sp/>argument.<sp/>The<sp/>function</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/><sp/>takes<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type<sp/>to<sp/>be<sp/>created<sp/>and<sp/>optionally<sp/>a<sp/>Python</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/><sp/>dictionary<sp/>or<sp/>keyword<sp/>arguments<sp/>to<sp/>be<sp/>used<sp/>to<sp/>provide<sp/>initial<sp/>values<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/><sp/>entity.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.createBaseAnywhere<sp/>should<sp/>be<sp/>preferred<sp/>to<sp/>this<sp/>method<sp/>and</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.createBaseLocally<sp/>as<sp/>the<sp/>server<sp/>has<sp/>the<sp/>flexibility<sp/>to<sp/>create<sp/>the</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>on<sp/>an<sp/>appropriately<sp/>loaded<sp/>BaseApp.</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/><sp/>Any<sp/>values<sp/>not<sp/>provided<sp/>will<sp/>default<sp/>to<sp/>the<sp/>entity&apos;s<sp/>default<sp/>value<sp/>provided</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>the<sp/>&quot;.def&quot;<sp/>file.</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>Specifies<sp/>the<sp/>type<sp/>of<sp/>base<sp/>entity<sp/>to<sp/>be<sp/><sp/><sp/>created.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type.<sp/>Valid<sp/>entity<sp/>types<sp/>are</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/><sp/>those<sp/>listed<sp/>in<sp/>scripts/entities.xml<sp/>that<sp/>have<sp/>a<sp/>base<sp/>entity<sp/>component.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>baseMB<sp/>This<sp/>is<sp/>a<sp/>Base<sp/>entity<sp/>mailbox.<sp/>The<sp/>new<sp/>base<sp/>entity<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/><sp/>created<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>this<sp/>base<sp/>entity.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>the<sp/>entity<sp/>has<sp/>been<sp/>created.<sp/>It<sp/>is<sp/>called<sp/>with<sp/>one<sp/>argument<sp/>that<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/><sp/>mailbox<sp/>or<sp/>direct<sp/>reference<sp/>to<sp/>the<sp/>new<sp/>base<sp/>entity<sp/>on<sp/>success<sp/>and<sp/>None<sp/>on</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/><sp/>failure.<sp/>Note:<sp/>the<sp/>callback<sp/>argument<sp/>should<sp/>be<sp/>the<sp/>last<sp/>unnamed<sp/>argument<sp/>for</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>*params<sp/>The<sp/>remaining,<sp/>optional<sp/>arguments.<sp/>These<sp/>arguments<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/><sp/>Python<sp/>dictionaries,<sp/>keyword<sp/>arguments,<sp/>or<sp/>a<sp/>DataSection.<sp/>If<sp/>a<sp/>specified</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/><sp/>key<sp/>is<sp/>a<sp/>Base<sp/>property,<sp/>its<sp/>value<sp/>will<sp/>be<sp/>used<sp/>to<sp/>initialise<sp/>the<sp/>Base<sp/>entity</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/><sp/>property.<sp/>If<sp/>the<sp/>key<sp/>is<sp/>a<sp/>Cell<sp/>property,<sp/>it<sp/>will<sp/>be<sp/>added<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/><sp/>&apos;cellData&apos;<sp/>attribute<sp/>on<sp/>the<sp/>base<sp/>entity,<sp/>which<sp/>is<sp/>a<sp/>Python<sp/>dictionary,<sp/>and</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/><sp/>later<sp/>be<sp/>sent<sp/>to<sp/>initialise<sp/>the<sp/>cell<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>same<sp/>properties<sp/>are<sp/>provided<sp/>multiple<sp/>times<sp/>via<sp/>a<sp/>DataSection,</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/><sp/>dictionary<sp/>or<sp/>keyword<sp/>argument,<sp/>the<sp/>keyword<sp/>argument<sp/>has<sp/>precedence<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>other<sp/>arguments<sp/>from<sp/>left<sp/>to<sp/>right.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>mailbox<sp/>to<sp/>the<sp/>new<sp/>Base<sp/>entity.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS(<sp/>createBaseRemotely,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">PyObject<sp/>*<sp/>py_createBaseLocally(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptTuple<sp/>argsObj(<sp/>args,<sp/>ScriptTuple::FROM_BORROWED_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>kwargsObj(<sp/>kwargs,<sp/>ScriptDict::FROM_BORROWED_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argsObj.size()<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>at<sp/>least<sp/>1<sp/>argument&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>arg<sp/>must<sp/>be<sp/>a<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptString<sp/>entityTypeNameObj<sp/>=</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString::create(<sp/>argsObj.getItem(<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entityTypeNameObj.exists())</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>a<sp/>string<sp/>as<sp/>first<sp/>argument&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>entityTypeName;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>entityTypeNameObj.getString(<sp/>entityTypeName<sp/>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>remaining<sp/>args<sp/>are<sp/>containers<sp/>of<sp/>entity<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>argsObj<sp/>=<sp/>argsObj.getSlice(<sp/>1,<sp/>argsObj.size(),<sp/>ScriptErrorRetain()<sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Script::hasError())</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseLocally(</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTypeName,<sp/>argsObj,<sp/>kwargsObj<sp/>).newRef();</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseLocally</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>createBaseLocally<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>in<sp/>the<sp/>BigWorld</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/><sp/>server<sp/>system.<sp/>The<sp/>function<sp/>takes<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type<sp/>to<sp/>be<sp/>created</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>optionally<sp/>Python<sp/>dictionaries,<sp/>PyDataSections<sp/>and<sp/>keyword<sp/>arguments<sp/>to</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>used<sp/>to<sp/>provide<sp/>initial<sp/>values<sp/>for<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/><sp/>Any<sp/>values<sp/>not<sp/>provided<sp/>will<sp/>default<sp/>to<sp/>the<sp/>entity&apos;s<sp/>default<sp/>value<sp/>provided</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>the<sp/>&quot;.def&quot;<sp/>file.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.createBaseAnywhere<sp/>should<sp/>be<sp/>preferred<sp/>to<sp/>this<sp/>method<sp/>and</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.createBaseRemotely<sp/>as<sp/>the<sp/>server<sp/>has<sp/>the<sp/>flexibility<sp/>to<sp/>create<sp/>the</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>on<sp/>an<sp/>appropriately<sp/>loaded<sp/>BaseApp.</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>Specifies<sp/>the<sp/>type<sp/>of<sp/>base<sp/>entity<sp/>to<sp/>be<sp/>created.<sp/>It</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*<sp/><sp/>must<sp/>be<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type.<sp/>Valid<sp/>entity<sp/>types</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>those<sp/>listed<sp/>in<sp/>scripts/entities.xml<sp/>that<sp/>have<sp/>a<sp/>base<sp/>entity<sp/>component.</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>*params<sp/>The<sp/>remaining,<sp/>optional<sp/>arguments.<sp/>These<sp/>arguments<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*<sp/><sp/>Python<sp/>dictionaries,<sp/>keyword<sp/>arguments,<sp/>or<sp/>a<sp/>DataSection.<sp/>If<sp/>a<sp/>specified</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/><sp/>key<sp/>is<sp/>a<sp/>Base<sp/>property,<sp/>its<sp/>value<sp/>will<sp/>be<sp/>used<sp/>to<sp/>initialise<sp/>the<sp/>Base<sp/>entity</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*<sp/><sp/>property.<sp/>If<sp/>the<sp/>key<sp/>is<sp/>a<sp/>Cell<sp/>property,<sp/>it<sp/>will<sp/>be<sp/>added<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*<sp/><sp/>&apos;cellData&apos;<sp/>attribute<sp/>on<sp/>the<sp/>base<sp/>entity,<sp/>which<sp/>is<sp/>a<sp/>Python<sp/>dictionary,<sp/>and</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*<sp/><sp/>later<sp/>be<sp/>sent<sp/>to<sp/>initialise<sp/>the<sp/>cell<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>not<sp/>specified<sp/>in<sp/>the<sp/>&quot;.def&quot;<sp/>file,<sp/>the<sp/>property<sp/>will<sp/>be<sp/>added<sp/>to<sp/>the<sp/>base</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>as<sp/>a<sp/>normal<sp/>attribute.<sp/>This<sp/>behaviour<sp/>is<sp/>deprecated.<sp/>You<sp/>should<sp/>look</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>add<sp/>these<sp/>values<sp/>to<sp/>the<sp/>&quot;.def&quot;<sp/>file.</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>same<sp/>properties<sp/>are<sp/>provided<sp/>multiple<sp/>times<sp/>via<sp/>a<sp/>DataSection,</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/><sp/>dictionary<sp/>or<sp/>keyword<sp/>argument,<sp/>the<sp/>keyword<sp/>argument<sp/>has<sp/>precedence<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>other<sp/>arguments<sp/>from<sp/>left<sp/>to<sp/>right.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>The<sp/>newly<sp/>created<sp/>base<sp/>entity<sp/>(see<sp/>Base<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/><sp/>base<sp/>entity<sp/>returned).</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS(<sp/>createBaseLocally,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBase</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/><sp/>Alias<sp/>for<sp/>BigWorld.createBaseLocally.</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal">PyObject<sp/>*<sp/>py_createBase(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFirst)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isFirst<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;py_createBase:<sp/>BigWorld.createBase<sp/>is<sp/>deprecated<sp/>as<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BW<sp/>1.9.<sp/>BigWorld.createBaseLocally<sp/>has<sp/>the<sp/>same<sp/>functionality<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;and<sp/>BigWorld.createBaseAnywhere<sp/>is<sp/>the<sp/>preferred<sp/>method.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>py_createBaseLocally(<sp/>args,<sp/>kwargs<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS(<sp/>createBase,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createEntity</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/><sp/>Alias<sp/>for<sp/>BigWorld.createBaseLocally.</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal">PyObject<sp/>*<sp/>py_createEntity(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="612"><highlight class="normal">{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>py_createBaseLocally(<sp/>args,<sp/>kwargs<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS(<sp/>createEntity,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal">PyObject<sp/>*<sp/>py_time(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_Size(<sp/>args<sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Accepts<sp/>no<sp/>arguments&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyFloat_FromDouble(<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)BaseApp::instance().time()/</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppConfig::updateHertz()<sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.time</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>returns<sp/>the<sp/>current<sp/>game<sp/>time<sp/>in<sp/>seconds<sp/>as<sp/>a<sp/>floating</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*<sp/><sp/>point<sp/>number.</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/><sp/>Game<sp/>time<sp/>is<sp/>incremented<sp/>with<sp/>each<sp/>game<sp/>tick.</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>The<sp/>current<sp/>game<sp/>time<sp/>in<sp/>seconds<sp/>as<sp/>a<sp/>float.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal">PY_MODULE_FUNCTION_WITH_DOC(<sp/>time,<sp/>BigWorld,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>returns<sp/>the<sp/>current<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;game<sp/>time<sp/>in<sp/>seconds<sp/>as<sp/>a<sp/>floating<sp/>point<sp/>number.<sp/>Game<sp/>time<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;incremented<sp/>with<sp/>each<sp/>game<sp/>tick.&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getLoad()</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().getLoad();</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getLoad</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>getLoad<sp/>returns<sp/>the<sp/>current<sp/>BaseApp<sp/>load.</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>getLoad,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getTotalNumProxies()</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().totalNumProxies();</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getTotalNumProxies</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>getTotalNumProxies<sp/>returns<sp/>the<sp/>estimated<sp/>total<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>*<sp/><sp/>proxies<sp/>connected<sp/>to<sp/>the<sp/>server.</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>getTotalNumProxies,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal">PyObject<sp/>*<sp/>py_hasStarted(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_Size(<sp/>args<sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Accepts<sp/>no<sp/>arguments&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>BaseApp::instance().hasStarted()<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.hasStarted</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>hasStarted<sp/>returns<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>server<sp/>has<sp/>started.<sp/>This</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*<sp/><sp/>can<sp/>be<sp/>useful<sp/>for<sp/>identifying<sp/>entities<sp/>that<sp/>are<sp/>being<sp/>created<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*<sp/><sp/>database<sp/>during<sp/>a<sp/>controlled<sp/>start-up.</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal">PY_MODULE_FUNCTION(<sp/>hasStarted,<sp/>BigWorld<sp/>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal">PyObject<sp/>*<sp/>py_isShuttingDown(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_Size(<sp/>args<sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Accepts<sp/>no<sp/>arguments&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>BaseApp::instance().isShuttingDown()<sp/>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.isShuttingDown</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>isShuttingDown<sp/>returns<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>server<sp/>is<sp/>shutting</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/>*<sp/><sp/>down.<sp/>This<sp/>return<sp/>True<sp/>after<sp/>the<sp/>onBaseAppShuttingDown<sp/>personality<sp/>callback</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/>*<sp/><sp/>has<sp/>been<sp/>called.<sp/>It<sp/>can<sp/>be<sp/>useful<sp/>for<sp/>not<sp/>allowing<sp/>operations<sp/>to<sp/>start<sp/>when</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>the<sp/>process<sp/>of<sp/>shutting<sp/>down.</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal">PY_MODULE_FUNCTION(<sp/>isShuttingDown,<sp/>BigWorld<sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseLocallyFromDB</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>attempts<sp/>to<sp/>create<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>from<sp/>data<sp/>loaded<sp/>from</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>database.<sp/>The<sp/>new<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>created<sp/>on<sp/>the<sp/>BaseApp<sp/>where</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>function<sp/>was<sp/>called.<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>already<sp/>active<sp/>then<sp/>a<sp/>reference</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>existing<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>returned.</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>type<sp/>of<sp/>Base<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/>*<sp/><sp/>load.<sp/>Entity<sp/>types<sp/>are<sp/>listed<sp/>in<sp/>&lt;res&gt;/scripts/entities.xml.</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>identifier<sp/><sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>unique<sp/>identifier<sp/>of</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>entity<sp/>to<sp/>load.<sp/>The<sp/>identifier<sp/>property<sp/>of<sp/>an<sp/>entity</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>specified<sp/>by<sp/>using<sp/>the<sp/>&lt;Identifier&gt;<sp/>tag<sp/>in<sp/>the<sp/>entity</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definition<sp/>file.</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>This<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>operation<sp/>completes.<sp/>The<sp/>callable<sp/>object<sp/>will<sp/>be<sp/>called<sp/>with<sp/>three</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/>*<sp/><sp/>arguments:<sp/>baseRef,<sp/>databaseID<sp/>and<sp/>wasActive.<sp/>If<sp/>the<sp/>operation<sp/>was</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*<sp/><sp/>successful<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>newly<sp/>created<sp/>Base</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/>*<sp/><sp/>entity,<sp/>databaseID<sp/>will<sp/>be<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>and<sp/>wasActive<sp/>will</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/><sp/>indicate<sp/>whether<sp/>the<sp/>entity<sp/>was<sp/>already<sp/>active.<sp/>If<sp/>wasExisting<sp/>is<sp/>true,</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*<sp/><sp/>then<sp/>baseRef<sp/>is<sp/>referring<sp/>to<sp/>a<sp/>pre-existing<sp/>Base<sp/>entity<sp/>and<sp/>will<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/>*<sp/><sp/>mailbox<sp/>rather<sp/>than<sp/>a<sp/>direct<sp/>reference<sp/>to<sp/>a<sp/>base<sp/>entity.<sp/>If<sp/>the<sp/>operation</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/>*<sp/><sp/>failed,<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>None,<sp/>databaseID<sp/>will<sp/>be<sp/>0<sp/>and<sp/>wasActive<sp/>will</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>false.<sp/>The<sp/>most<sp/>common<sp/>reason<sp/>for<sp/>failure<sp/>is<sp/>the<sp/>that<sp/>entity<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/>*<sp/><sp/>exist<sp/>in<sp/>the<sp/>database<sp/>but<sp/>intermittent<sp/>failures<sp/>like<sp/>timeouts<sp/>or<sp/>unable<sp/>to</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/>*<sp/><sp/>allocate<sp/>IDs<sp/>may<sp/>also<sp/>occur.</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createBaseLocallyFromDB(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>identifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isNone()<sp/>&amp;&amp;<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>3<sp/>must<sp/>be<sp/>a<sp/>callable<sp/>or<sp/>None&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseFromDB(</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType,<sp/>identifier,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationFromDBScriptCallback::create(<sp/>callback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>OPTCALLABLE_ARG<sp/>for<sp/>callback,<sp/>see<sp/>BWT-29916</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>createBaseLocallyFromDB,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>BW::string,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseFromDB</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*<sp/><sp/>Alias<sp/>for<sp/>BigWorld.createBaseLocallyFromDB.</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal">PY_MODULE_FUNCTION_ALIAS(<sp/>createBaseLocallyFromDB,<sp/>createBaseFromDB,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseLocallyFromDBID</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>attempts<sp/>to<sp/>create<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>from<sp/>data<sp/>loaded<sp/>from</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>database.<sp/>The<sp/>new<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>created<sp/>on<sp/>the<sp/>BaseApp<sp/>where</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>function<sp/>was<sp/>called.<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>already<sp/>active<sp/>then<sp/>a<sp/>reference</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>existing<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>returned.</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>type<sp/>of<sp/>Base<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*<sp/><sp/>load.<sp/>Entity<sp/>types<sp/>are<sp/>listed<sp/>in<sp/>&lt;res&gt;/scripts/entities.xml.</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>id<sp/>This<sp/>is<sp/>a<sp/>number<sp/>specifying<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*<sp/><sp/>create.<sp/>The<sp/>database<sp/>ID<sp/>of<sp/>an<sp/>entity<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>databaseID<sp/>property</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>This<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>operation<sp/>completes.<sp/>The<sp/>callable<sp/>object<sp/>will<sp/>be<sp/>called<sp/>with<sp/>three</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*<sp/><sp/>arguments:<sp/>baseRef,<sp/>databaseID<sp/>and<sp/>wasActive.<sp/>If<sp/>the<sp/>operation<sp/>was</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*<sp/><sp/>successful<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>newly<sp/>created<sp/>Base</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*<sp/><sp/>entity,<sp/>databaseID<sp/>will<sp/>be<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>and<sp/>wasActive<sp/>will</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*<sp/><sp/>indicate<sp/>whether<sp/>the<sp/>entity<sp/>was<sp/>already<sp/>active.<sp/>If<sp/>wasExisting<sp/>is<sp/>true,</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*<sp/><sp/>then<sp/>baseRef<sp/>is<sp/>referring<sp/>to<sp/>a<sp/>pre-existing<sp/>Base<sp/>entity<sp/>and<sp/>will<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/>*<sp/><sp/>mailbox<sp/>rather<sp/>than<sp/>a<sp/>direct<sp/>reference<sp/>to<sp/>a<sp/>base<sp/>entity.<sp/>If<sp/>the<sp/>operation</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*<sp/><sp/>failed,<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>None,<sp/>databaseID<sp/>will<sp/>be<sp/>0<sp/>and<sp/>wasActive<sp/>will</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>false.<sp/>The<sp/>most<sp/>common<sp/>reason<sp/>for<sp/>failure<sp/>is<sp/>the<sp/>that<sp/>entity<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*<sp/><sp/>exist<sp/>in<sp/>the<sp/>database<sp/>but<sp/>intermittent<sp/>failures<sp/>like<sp/>timeouts<sp/>or<sp/>unable<sp/>to</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/>*<sp/><sp/>allocate<sp/>IDs<sp/>may<sp/>also<sp/>occur.</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createBaseLocallyFromDBID(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string&amp;<sp/>entityType,<sp/>DatabaseID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isNone()<sp/>&amp;&amp;<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>3<sp/>must<sp/>be<sp/>a<sp/>callable<sp/>or<sp/>None&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseFromDB(<sp/>entityType,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>BaseCreationFromDBScriptCallback::create(<sp/>callback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>OPTCALLABLE_ARG<sp/>for<sp/>callback,<sp/>see<sp/>BWT-29916</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>createBaseLocallyFromDBID,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>DatabaseID,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseFromDBID</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/>*<sp/><sp/>Alias<sp/>for<sp/>BigWorld.createBaseLocallyFromDBID.</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal">PY_MODULE_FUNCTION_ALIAS(<sp/>createBaseLocallyFromDBID,<sp/>createBaseFromDBID,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseAnywhereFromDB</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>from<sp/>data<sp/>loaded<sp/>from<sp/>the<sp/>database.</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld<sp/>can<sp/>choose<sp/>any<sp/>BaseApp<sp/>on<sp/>which<sp/>to<sp/>create<sp/>the<sp/>Base<sp/>entity,<sp/>with</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>aim<sp/>of<sp/>balancing<sp/>the<sp/>load<sp/>between<sp/>all<sp/>the<sp/>BaseApps.<sp/><sp/>If<sp/>the<sp/>entity<sp/>is</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/>*<sp/><sp/>already<sp/>active<sp/>then<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>existing<sp/>Base<sp/>entity<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/>*<sp/><sp/>returned.</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>type<sp/>of<sp/>Base<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/>*<sp/><sp/>load.<sp/>Entity<sp/>types<sp/>are<sp/>listed<sp/>in<sp/>&lt;res&gt;/scripts/entities.xml.</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>identifier<sp/><sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>unique<sp/>identifier<sp/>of</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>entity<sp/>to<sp/>load.<sp/>The<sp/>identifier<sp/>property<sp/>of<sp/>an<sp/>entity</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>specified<sp/>by<sp/>using<sp/>the<sp/>&lt;Identifier&gt;<sp/>tag<sp/>in<sp/>the<sp/>entity</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definition<sp/>file.</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>This<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>operation<sp/>completes.<sp/>The<sp/>callable<sp/>object<sp/>will<sp/>be<sp/>called<sp/>with<sp/>three</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/>*<sp/><sp/>arguments:<sp/>baseRef,<sp/>databaseID<sp/>and<sp/>wasActive.<sp/>If<sp/>the<sp/>operation<sp/>was</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/>*<sp/><sp/>successful<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>a<sp/>mailbox<sp/>or<sp/>direct<sp/>reference</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>newly<sp/>created<sp/>base<sp/>entity,<sp/>databaseID<sp/>will<sp/>be<sp/>the<sp/>database<sp/>ID<sp/>of</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>entity<sp/>and<sp/>wasActive<sp/>will<sp/>indicate<sp/>whether<sp/>the<sp/>entity<sp/>was<sp/>already</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/>*<sp/><sp/>active.<sp/>If<sp/>wasActive<sp/>is<sp/>true<sp/>then<sp/>baseRef<sp/>is<sp/>a<sp/>reference<sp/>to<sp/>a<sp/>pre-existing</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/>*<sp/><sp/>entity.<sp/>If<sp/>the<sp/>operation<sp/>failed,<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>None,<sp/>databaseID<sp/>will</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>0<sp/>and<sp/>wasActive<sp/>will<sp/>be<sp/>false.<sp/>The<sp/>most<sp/>common<sp/>reason<sp/>for<sp/>failure<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>entity<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>the<sp/>database<sp/>but<sp/>intermittent<sp/>failures<sp/>like</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/>*<sp/><sp/>timeouts<sp/>or<sp/>unable<sp/>to<sp/>allocate<sp/>IDs<sp/>may<sp/>also<sp/>occur.</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal">PyObject<sp/>*<sp/>createBaseAnywhereFromDB(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>identifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isNone()<sp/>&amp;&amp;<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>3<sp/>must<sp/>be<sp/>a<sp/>callable<sp/>or<sp/>None&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createRemoteBaseFromDB(</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str(),<sp/>0,<sp/>identifier.c_str(),<sp/>NULL,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationFromDBScriptCallback::create(<sp/>callback<sp/>),</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;createBaseAnywhereFromDB&quot;</highlight><highlight class="normal"><sp/>).newRef();</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>OPTCALLABLE_ARG<sp/>for<sp/>callback,<sp/>see<sp/>BWT-29916</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createBaseAnywhereFromDB,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>BW::string,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseAnywhereFromDBID</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>from<sp/>data<sp/>loaded<sp/>from<sp/>the<sp/>database.</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld<sp/>can<sp/>choose<sp/>any<sp/>BaseApp<sp/>on<sp/>which<sp/>to<sp/>create<sp/>the<sp/>Base<sp/>entity,<sp/>with</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>aim<sp/>of<sp/>balancing<sp/>the<sp/>load<sp/>between<sp/>all<sp/>the<sp/>BaseApps.<sp/>If<sp/>the<sp/>entity<sp/>is</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*<sp/><sp/>already<sp/>active<sp/>then<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>existing<sp/>Base<sp/>entity<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/>*<sp/><sp/>returned.</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>type<sp/>of<sp/>Base<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/>*<sp/><sp/>load.<sp/>Entity<sp/>types<sp/>are<sp/>listed<sp/>in<sp/>&lt;res&gt;/scripts/entities.xml.</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>dbID<sp/>This<sp/>is<sp/>a<sp/>number<sp/>specifying<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/>*<sp/><sp/>create.<sp/>The<sp/>database<sp/>ID<sp/>of<sp/>an<sp/>entity<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>databaseID<sp/>property</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="898"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>This<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>operation<sp/>completes.<sp/>The<sp/>callable<sp/>object<sp/>will<sp/>be<sp/>called<sp/>with<sp/>three</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/>*<sp/><sp/>arguments:<sp/>baseRef,<sp/>databaseID<sp/>and<sp/>wasActive.<sp/>If<sp/>the<sp/>operation<sp/>was</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/>*<sp/><sp/>successful<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>a<sp/>mailbox<sp/>or<sp/>direct<sp/>reference</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>newly<sp/>created<sp/>base<sp/>entity,<sp/>databaseID<sp/>will<sp/>be<sp/>the<sp/>database<sp/>ID<sp/>of</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>entity<sp/>and<sp/>wasActive<sp/>will<sp/>indicate<sp/>whether<sp/>the<sp/>entity<sp/>was<sp/>already</highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/>*<sp/><sp/>active.<sp/>If<sp/>wasActive<sp/>is<sp/>true<sp/>then<sp/>baseRef<sp/>is<sp/>a<sp/>reference<sp/>to<sp/>a<sp/>pre-existing</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/>*<sp/><sp/>entity.<sp/>If<sp/>the<sp/>operation<sp/>failed,<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>None,<sp/>databaseID<sp/>will</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>0<sp/>and<sp/>wasActive<sp/>will<sp/>be<sp/>false.<sp/>The<sp/>most<sp/>common<sp/>reason<sp/>for<sp/>failure<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>entity<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>the<sp/>database<sp/>but<sp/>intermittent<sp/>failures<sp/>like</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/>*<sp/><sp/>timeouts<sp/>or<sp/>unable<sp/>to<sp/>allocate<sp/>IDs<sp/>may<sp/>also<sp/>occur.</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal">PyObject<sp/>*<sp/>createBaseAnywhereFromDBID(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DatabaseID<sp/>dbID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbID<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;DatabaseID<sp/>must<sp/>be<sp/>non-zero&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isNone()<sp/>&amp;&amp;<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>3<sp/>must<sp/>be<sp/>a<sp/>callable<sp/>or<sp/>None&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createRemoteBaseFromDB(</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str(),<sp/>dbID,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationFromDBScriptCallback::create(<sp/>callback<sp/>),</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;createBaseAnywhereFromDBID&quot;</highlight><highlight class="normal"><sp/>).newRef();</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>OPTCALLABLE_ARG<sp/>for<sp/>callback,<sp/>see<sp/>BWT-29916</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createBaseAnywhereFromDBID,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>DatabaseID,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseRemotelyFromDB</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>from<sp/>data<sp/>loaded<sp/>from<sp/>the<sp/>database.</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>new<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>created<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>an<sp/>existing</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/>*<sp/><sp/>Base<sp/>entity<sp/>specified<sp/>by<sp/>the<sp/>caller.<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>already<sp/>active<sp/>then<sp/>a</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/>*<sp/><sp/>reference<sp/>to<sp/>the<sp/>active<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>returned<sp/>and<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/>*<sp/><sp/>guarantee<sp/>that<sp/>the<sp/>active<sp/>is<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>the<sp/>Base<sp/>entity<sp/>passed</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>type<sp/>of<sp/>Base<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/><sp/>load.<sp/>Entity<sp/>types<sp/>are<sp/>listed<sp/>in<sp/>&lt;res&gt;/scripts/entities.xml.</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>identifier<sp/><sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>unique<sp/>identifier<sp/>of</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>entity<sp/>to<sp/>load.<sp/>The<sp/>identifier<sp/>property<sp/>of<sp/>an<sp/>entity</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>specified<sp/>by<sp/>using<sp/>the<sp/>&lt;Identifier&gt;<sp/>tag<sp/>in<sp/>the<sp/>entity</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definition<sp/>file.</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>baseMB<sp/>This<sp/>is<sp/>a<sp/>Base<sp/>entity<sp/>mailbox.<sp/>The<sp/>new<sp/>base<sp/>entity<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/>*<sp/><sp/>created<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>this<sp/>base<sp/>entity</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>This<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>operation<sp/>completes.<sp/>The<sp/>callable<sp/>object<sp/>will<sp/>be<sp/>called<sp/>with<sp/>three</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/>*<sp/><sp/>arguments:<sp/>baseRef,<sp/>databaseID<sp/>and<sp/>wasActive.<sp/>If<sp/>the<sp/>operation<sp/>was</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/>*<sp/><sp/>successful<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>a<sp/>mailbox<sp/>or<sp/>direct<sp/>reference</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>newly<sp/>created<sp/>base<sp/>entity,<sp/>databaseID<sp/>will<sp/>be<sp/>the<sp/>database<sp/>ID<sp/>of</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>entity<sp/>and<sp/>wasActive<sp/>will<sp/>indicate<sp/>whether<sp/>the<sp/>entity<sp/>was<sp/>already</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/>*<sp/><sp/>active.<sp/>If<sp/>wasActive<sp/>is<sp/>true<sp/>then<sp/>baseRef<sp/>is<sp/>a<sp/>reference<sp/>to<sp/>a<sp/>pre-existing</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/>*<sp/><sp/>entity.<sp/>If<sp/>the<sp/>operation<sp/>failed,<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>None,<sp/>databaseID<sp/>will</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>0<sp/>and<sp/>wasActive<sp/>will<sp/>be<sp/>false.<sp/>The<sp/>most<sp/>common<sp/>reason<sp/>for<sp/>failure<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>entity<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>the<sp/>database<sp/>but<sp/>intermittent<sp/>failures<sp/>like</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/>*<sp/><sp/>timeouts<sp/>or<sp/>unable<sp/>to<sp/>allocate<sp/>IDs<sp/>may<sp/>also<sp/>occur.</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal">PyObject<sp/>*<sp/>createBaseRemotelyFromDB(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>identifier,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMailBoxRef<sp/>&amp;<sp/>baseMB,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="972"><highlight class="normal">{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EntityMailBoxRef::BASE<sp/>!=<sp/>baseMB.component()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef::CELL_VIA_BASE<sp/>!=<sp/>baseMB.component()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef::CLIENT_VIA_BASE<sp/>!=<sp/>baseMB.component())</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createBaseRemotelyFromTemplate:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>3<sp/>must<sp/>be<sp/>a<sp/>&apos;base&apos;,<sp/>&apos;cell<sp/>via<sp/>base&apos;<sp/>or<sp/>&apos;client<sp/>via<sp/>base&apos;<sp/>mailbox&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isNone()<sp/>&amp;&amp;<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>4<sp/>must<sp/>be<sp/>a<sp/>callable<sp/>or<sp/>None&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createRemoteBaseFromDB(</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str(),<sp/>0,<sp/>identifier.c_str(),<sp/>&amp;baseMB.addr,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationFromDBScriptCallback::create(<sp/>callback<sp/>),</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;createBaseRemotelyFromDB&quot;</highlight><highlight class="normal"><sp/>).newRef();</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>OPTCALLABLE_ARG<sp/>for<sp/>callback,<sp/>see<sp/>BWT-29916</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createBaseRemotelyFromDB,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>EntityMailBoxRef,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseRemotelyFromDBID</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity<sp/>from<sp/>data<sp/>loaded<sp/>from<sp/>the<sp/>database.</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>new<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>created<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>an<sp/>existing</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/>*<sp/><sp/>Base<sp/>entity<sp/>specified<sp/>by<sp/>the<sp/>caller.<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>already<sp/>active<sp/>then<sp/>a</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/>*<sp/><sp/>reference<sp/>to<sp/>the<sp/>active<sp/>Base<sp/>entity<sp/>will<sp/>be<sp/>returned<sp/>and<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/>*<sp/><sp/>guarantee<sp/>that<sp/>the<sp/>active<sp/>is<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>the<sp/>Base<sp/>entity<sp/>passed</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>This<sp/>is<sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>type<sp/>of<sp/>Base<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*<sp/><sp/>load.<sp/>Entity<sp/>types<sp/>are<sp/>listed<sp/>in<sp/>&lt;res&gt;/scripts/entities.xml.</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>dbID<sp/>This<sp/>is<sp/>a<sp/>number<sp/>specifying<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>to</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/>*<sp/><sp/>create.<sp/>The<sp/>database<sp/>ID<sp/>of<sp/>an<sp/>entity<sp/>is<sp/>stored<sp/>in<sp/>the<sp/>databaseID<sp/>property</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>baseMB<sp/>This<sp/>is<sp/>a<sp/>Base<sp/>entity<sp/>mailbox.<sp/>The<sp/>new<sp/>base<sp/>entity<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/>*<sp/><sp/>created<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>this<sp/>base<sp/>entity</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>This<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>operation<sp/>completes.<sp/>The<sp/>callable<sp/>object<sp/>will<sp/>be<sp/>called<sp/>with<sp/>three</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/>*<sp/><sp/>arguments:<sp/>baseRef,<sp/>databaseID<sp/>and<sp/>wasActive.<sp/>If<sp/>the<sp/>operation<sp/>was</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/>*<sp/><sp/>successful<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>a<sp/>mailbox<sp/>or<sp/>direct<sp/>reference</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>newly<sp/>created<sp/>base<sp/>entity,<sp/>databaseID<sp/>will<sp/>be<sp/>the<sp/>database<sp/>ID<sp/>of</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>entity<sp/>and<sp/>wasActive<sp/>will<sp/>indicate<sp/>whether<sp/>the<sp/>entity<sp/>was<sp/>already</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/>*<sp/><sp/>active.<sp/>If<sp/>wasActive<sp/>is<sp/>true<sp/>then<sp/>baseRef<sp/>is<sp/>a<sp/>reference<sp/>to<sp/>a<sp/>pre-existing</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/>*<sp/><sp/>entity.<sp/>If<sp/>the<sp/>operation<sp/>failed,<sp/>then<sp/>baseRef<sp/>will<sp/>be<sp/>None,<sp/>databaseID<sp/>will</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>0<sp/>and<sp/>wasActive<sp/>will<sp/>be<sp/>false.<sp/>The<sp/>most<sp/>common<sp/>reason<sp/>for<sp/>failure<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>entity<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>the<sp/>database<sp/>but<sp/>intermittent<sp/>failures<sp/>like</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/>*<sp/><sp/>timeouts<sp/>or<sp/>unable<sp/>to<sp/>allocate<sp/>IDs<sp/>may<sp/>also<sp/>occur.</highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal">PyObject<sp/>*<sp/>createBaseRemotelyFromDBID(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DatabaseID<sp/>dbID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMailBoxRef<sp/>&amp;<sp/>baseMB,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbID<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;DatabaseID<sp/>must<sp/>be<sp/>non-zero&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EntityMailBoxRef::BASE<sp/>!=<sp/>baseMB.component()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef::CELL_VIA_BASE<sp/>!=<sp/>baseMB.component()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef::CLIENT_VIA_BASE<sp/>!=<sp/>baseMB.component())</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>3<sp/>must<sp/>be<sp/>a<sp/>&apos;base&apos;,<sp/>&apos;cell<sp/>via<sp/>base&apos;<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;client<sp/>via<sp/>base&apos;<sp/>mailbox&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!callback.isNone()<sp/>&amp;&amp;<sp/>!callback.isCallable())</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>4<sp/>must<sp/>be<sp/>a<sp/>callable<sp/>or<sp/>None&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createRemoteBaseFromDB(</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str(),<sp/>dbID,<sp/>NULL,<sp/>&amp;baseMB.addr,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationFromDBScriptCallback::create(<sp/>callback<sp/>),</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;createBaseRemotelyFromDBID&quot;</highlight><highlight class="normal"><sp/>).newRef();</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>OPTCALLABLE_ARG<sp/>for<sp/>callback,<sp/>see<sp/>BWT-29916</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createBaseRemotelyFromDBID,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>DatabaseID,<sp/>ARG(<sp/>EntityMailBoxRef,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseAnywhereFromTemplate</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>createBaseAnywhereFromTemplate<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>the<sp/>BigWorld<sp/>server<sp/>system<sp/>using<sp/>a<sp/>template<sp/>to<sp/>populate<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>server<sp/>may<sp/>choose<sp/>to<sp/>create<sp/>the<sp/>Base<sp/>entity<sp/>on<sp/>any<sp/>BaseApp.</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>takes<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type<sp/>to<sp/>be<sp/>created<sp/>and<sp/>id<sp/>of<sp/>template</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>be<sp/>used<sp/>to<sp/>provide<sp/>initial<sp/>values<sp/>for<sp/>the<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>Specifies<sp/>the<sp/>type<sp/>of<sp/>base<sp/>entity<sp/>to<sp/>be<sp/>created.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type.<sp/>Valid<sp/>entity<sp/>types<sp/>are</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/>*<sp/><sp/>those<sp/>listed<sp/>in<sp/>scripts/entities.xml<sp/>that<sp/>have<sp/>a<sp/>base<sp/>entity<sp/>component.</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>templateID<sp/>Specifies<sp/>id<sp/>of<sp/>template<sp/>to<sp/>create<sp/>entity<sp/>from.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>BLOB<sp/>specifying<sp/>the<sp/>template.</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="1087"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>the<sp/>entity<sp/>has<sp/>been<sp/>created.<sp/>It<sp/>is<sp/>called<sp/>with<sp/>one<sp/>argument<sp/>that<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="1088"><highlight class="comment"><sp/>*<sp/><sp/>mailbox<sp/>or<sp/>direct<sp/>reference<sp/>to<sp/>the<sp/>new<sp/>base<sp/>entity<sp/>on<sp/>success,<sp/>and<sp/>None<sp/>on</highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/>*<sp/><sp/>failure.</highlight></codeline>
<codeline lineno="1090"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1091"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>mailbox<sp/>to<sp/>the<sp/>new<sp/>Base<sp/>entity.</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal">PyObject<sp/>*<sp/>createBaseAnywhereFromTemplate(</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>templateID,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseAnywhereFromTemplate(</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType,<sp/>templateID,</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationScriptCallback::create(<sp/>callback<sp/>)<sp/>).newRef();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createBaseAnywhereFromTemplate,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseLocallyFromTemplate</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>createBaseLocallyFromTemplate<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/>*<sp/><sp/>on<sp/>this<sp/>baseapp<sp/>using<sp/>a<sp/>template<sp/>to<sp/>populate<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>takes<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type<sp/>to<sp/>be<sp/>created<sp/>and<sp/>id<sp/>of<sp/>template</highlight></codeline>
<codeline lineno="1116"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>be<sp/>used<sp/>to<sp/>provide<sp/>initial<sp/>values<sp/>for<sp/>the<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="1117"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>Specifies<sp/>the<sp/>type<sp/>of<sp/>base<sp/>entity<sp/>to<sp/>be<sp/>created.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type.<sp/>Valid<sp/>entity<sp/>types<sp/>are</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/>*<sp/><sp/>those<sp/>listed<sp/>in<sp/>scripts/entities.xml<sp/>that<sp/>have<sp/>a<sp/>base<sp/>entity<sp/>component.</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>templateID<sp/>Specifies<sp/>id<sp/>of<sp/>template<sp/>to<sp/>create<sp/>entity<sp/>from.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>BLOB<sp/>specifying<sp/>the<sp/>template.</highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>new<sp/>Base<sp/>entity.</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal">PyObject<sp/>*<sp/>createBaseLocallyFromTemplate(</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>templateID<sp/>)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseLocallyFromTemplate(</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType,<sp/>templateID<sp/>).newRef();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createBaseLocallyFromTemplate,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>END<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createBaseRemotelyFromTemplate</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>createBaseRemotelyFromTemplate<sp/>creates<sp/>a<sp/>new<sp/>Base<sp/>entity</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/>*<sp/><sp/>on<sp/>remote<sp/>baseapp<sp/>using<sp/>a<sp/>template<sp/>to<sp/>populate<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>takes<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type<sp/>to<sp/>be<sp/>created<sp/>and<sp/>id<sp/>of<sp/>template</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>be<sp/>used<sp/>to<sp/>provide<sp/>initial<sp/>values<sp/>for<sp/>the<sp/>entity<sp/>properties.</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>Specifies<sp/>the<sp/>type<sp/>of<sp/>base<sp/>entity<sp/>to<sp/>be<sp/>created.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="1148"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>string<sp/>specifying<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type.<sp/>Valid<sp/>entity<sp/>types<sp/>are</highlight></codeline>
<codeline lineno="1149"><highlight class="comment"><sp/>*<sp/><sp/>those<sp/>listed<sp/>in<sp/>scripts/entities.xml<sp/>that<sp/>have<sp/>a<sp/>base<sp/>entity<sp/>component.</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>templateID<sp/>Specifies<sp/>id<sp/>of<sp/>template<sp/>to<sp/>create<sp/>entity<sp/>from.<sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>BLOB<sp/>specifying<sp/>the<sp/>template.</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>baseMB<sp/>This<sp/>could<sp/>be<sp/>a<sp/>direct<sp/>base<sp/>entity<sp/>reference<sp/>or<sp/>a<sp/>mailbox<sp/>of<sp/>type</highlight></codeline>
<codeline lineno="1155"><highlight class="comment"><sp/>*<sp/><sp/>&apos;base&apos;,<sp/>&apos;cell<sp/>via<sp/>base&apos;<sp/>or<sp/>&apos;client<sp/>via<sp/>base&apos;.</highlight></codeline>
<codeline lineno="1156"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>new<sp/>base<sp/>entity<sp/>will<sp/>be<sp/>created<sp/>on<sp/>the<sp/>same<sp/>BaseApp<sp/>as<sp/>the<sp/>corresponding<sp/>base<sp/>entity.</highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>an<sp/>optional<sp/>callable<sp/>object<sp/>that<sp/>will<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/>*<sp/><sp/>when<sp/>the<sp/>entity<sp/>has<sp/>been<sp/>created.<sp/>It<sp/>is<sp/>called<sp/>with<sp/>one<sp/>argument<sp/>that<sp/>is<sp/>a</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/>*<sp/><sp/>mailbox<sp/>or<sp/>direct<sp/>reference<sp/>to<sp/>the<sp/>new<sp/>base<sp/>entity<sp/>on<sp/>success<sp/>and<sp/>None<sp/>on</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/>*<sp/><sp/>failure.</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>mailbox<sp/>to<sp/>the<sp/>new<sp/>Base<sp/>entity.</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal">PyObject<sp/>*<sp/>createBaseRemotelyFromTemplate(</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>templateID,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMailBoxRef<sp/>&amp;<sp/>baseMB,</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EntityMailBoxRef::BASE<sp/>!=<sp/>baseMB.component()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef::CELL_VIA_BASE<sp/>!=<sp/>baseMB.component()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef::CLIENT_VIA_BASE<sp/>!=<sp/>baseMB.component())</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>3<sp/>must<sp/>be<sp/>a<sp/>&apos;base&apos;,<sp/>&apos;cell<sp/>via<sp/>base&apos;<sp/>or<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;client<sp/>via<sp/>base&apos;<sp/>mailbox&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BaseApp::instance().pEntityCreator()-&gt;createBaseRemotelyFromTemplate(</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseMB.addr,<sp/>entityType,<sp/>templateID,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseCreationScriptCallback::create(<sp/>callback<sp/>)<sp/>).newRef();</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createBaseRemotelyFromTemplate,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG(<sp/>EntityMailBoxRef,</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_script_callback_adaptor_helper" kindref="compound">ScriptCallbackAdaptorHelper</ref>&lt;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamHelpers::DBAppInterface::deleteEntity<sp/>&gt;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ScriptObject<sp/>replyAsScriptCallbackValue(</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StreamHelpers::DBAppInterface::deleteEntity::Reply<sp/>&amp;<sp/>reply<sp/>)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply.hasBaseEntityLocation())</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Figure<sp/>out<sp/>why<sp/>the<sp/>following<sp/>doesn&apos;t<sp/>work.<sp/>Even<sp/>if<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changed<sp/>to<sp/>take<sp/>a<sp/>const<sp/>reference,<sp/>it<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>pick<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Script::getData()<sp/>overload<sp/>for<sp/>const<sp/>EntityMailBoxRef<sp/>&amp;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>ScriptObject::createFrom(<sp/>reply.baseEntityLocation()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pPyMailBox<sp/>=</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::getData(<sp/>reply.baseEntityLocation()<sp/>);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(<sp/>pPyMailBox,<sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject::createFrom(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(<sp/>reply.result()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.deleteBaseByDBID</highlight></codeline>
<codeline lineno="1221"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>script<sp/>function<sp/>deletes<sp/>the<sp/>specified<sp/>entry<sp/>from<sp/>the<sp/>database,</highlight></codeline>
<codeline lineno="1223"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>it<sp/>is<sp/>not<sp/>already<sp/>checked<sp/>out.<sp/>If<sp/>it<sp/>is<sp/>checked<sp/>out,<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/>*<sp/><sp/>result<sp/>handler<sp/>will<sp/>be<sp/>called<sp/>with<sp/>the<sp/>mailbox<sp/>of<sp/>the<sp/>currently</highlight></codeline>
<codeline lineno="1225"><highlight class="comment"><sp/>*<sp/><sp/>checked<sp/>out<sp/>entity.</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1227"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>entityType<sp/>is<sp/>a<sp/>string<sp/>that<sp/>specifies<sp/>the<sp/>type<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1228"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>to<sp/>be<sp/>deleted.</highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>dbID<sp/>Specifies<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>delete.</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>a<sp/>callable<sp/>object<sp/>(e.g.<sp/>a<sp/>function)<sp/>that<sp/>takes</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/>*<sp/><sp/>one<sp/>argument.<sp/>If<sp/>deletion<sp/>is<sp/>successful,<sp/>the<sp/>callback<sp/>is<sp/>called<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="1232"><highlight class="comment"><sp/>*<sp/><sp/>value<sp/>True,<sp/>if<sp/>it<sp/>is<sp/>unsuccessful<sp/>because<sp/>the<sp/>specified<sp/>entry<sp/>is<sp/>currently</highlight></codeline>
<codeline lineno="1233"><highlight class="comment"><sp/>*<sp/><sp/>checked<sp/>out,<sp/>it<sp/>is<sp/>called<sp/>with<sp/>the<sp/>mailbox<sp/>of<sp/>that<sp/>base<sp/>entity,<sp/>and<sp/>if<sp/>it</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>unsuccessful<sp/>for<sp/>any<sp/>other<sp/>reason<sp/>(e.g.<sp/>specified<sp/>entry<sp/>does<sp/>not<sp/>exist)</highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/>*<sp/><sp/>then<sp/>it<sp/>is<sp/>called<sp/>with<sp/>the<sp/>value<sp/>False.</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deleteBaseByDBID(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,<sp/>DatabaseID<sp/>dbID,</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pResultHandler<sp/>)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbID<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;DatabaseID<sp/>must<sp/>be<sp/>non-zero&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>entityType.c_str(),</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*shouldExcludeServices*/</highlight><highlight class="normal">true<sp/>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>entity<sp/>type<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pResultHandler<sp/>&amp;&amp;<sp/>!PyCallable_Check(<sp/>pResultHandler.get()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>must<sp/>be<sp/>callable<sp/>if<sp/>specified&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseApp.<ref refid="class_base_app_1aae4b0ebcf9558fff98e2448e811a8374" kindref="member">storageShardHash</ref>().isUsable())</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Storage-shard<sp/>hash<sp/>is<sp/>not<sp/>usable&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityKey<sp/>key<sp/>(<sp/>pType-&gt;id(),<sp/>dbID<sp/>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback(<sp/>pResultHandler<sp/>);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StreamHelpers::DBAppInterface::deleteEntity<sp/>StreamHelper;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApp.<ref refid="class_base_app_1ab58656118b742540e46e0bdfcf562dd3" kindref="member">databaseGateway</ref>().deleteEntity(<sp/>key,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_script_callback_adaptor" kindref="compound">ScriptCallbackAdaptor&lt; StreamHelper &gt;::wrap</ref>(<sp/>callback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>deleteBaseByDBID,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>DatabaseID,<sp/>OPTARG(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>,<sp/>NULL,<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_script_callback_adaptor_helper" kindref="compound">ScriptCallbackAdaptorHelper</ref>&lt;<sp/>StreamHelpers::DBAppInterface::getEntity<sp/>&gt;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ScriptObject<sp/>replyAsScriptCallbackValue(</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StreamHelpers::DBAppInterface::getEntity::Reply<sp/>&amp;<sp/>reply<sp/>)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply.hasBaseEntityLocation())</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Figure<sp/>out<sp/>why<sp/>the<sp/>following<sp/>doesn&apos;t<sp/>work.<sp/>Even<sp/>if<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>changed<sp/>to<sp/>take<sp/>a<sp/>const<sp/>reference,<sp/>it<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>pick<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Script::getData()<sp/>overload<sp/>for<sp/>const<sp/>EntityMailBoxRef<sp/>&amp;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>ScriptObject::createFrom(<sp/>reply.baseEntityLocation()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pPyMailBox<sp/>=</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::getData(<sp/>reply.baseEntityLocation()<sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(<sp/>pPyMailBox,<sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DatabaseOperationResult::FAILURE_NOT_FOUND<sp/>may<sp/>be<sp/>returned<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shouldGetGameTime<sp/>is<sp/>set<sp/>to<sp/>true<sp/>in<sp/>lookUpBaseByDBID<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lookUpBaseByName.<sp/>But<sp/>we<sp/>do<sp/>not<sp/>care<sp/>about<sp/>GameTime.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>(reply.key().dbID<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reply.result()<sp/>==<sp/>DatabaseOperationResult::FAILURE_NOT_FOUND)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>means<sp/>that<sp/>this<sp/>is<sp/>a<sp/>BigWorld.lookUpBaseByDBID<sp/>and<sp/>it<sp/>can<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>entity<sp/>in<sp/>the<sp/>database.<sp/>BWT-28517<sp/>is<sp/>created<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>behavior<sp/>in<sp/>sync<sp/>with<sp/>BigWorld.lookUpBaseByName.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply.result()<sp/>||<sp/>(reply.key().dbID<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply.result()<sp/>==<sp/>DatabaseOperationResult::FAILURE_NOT_FOUND))</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject::createFrom(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject::createFrom(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.lookUpBaseByDBID</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>script<sp/>function<sp/>looks<sp/>up<sp/>the<sp/>specified<sp/>base<sp/>entry<sp/>in<sp/>the<sp/>database,</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>calls<sp/>the<sp/>result<sp/>handler<sp/>with<sp/>its<sp/>mailbox.</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>entityType<sp/>is<sp/>a<sp/>string<sp/>that<sp/>specifies<sp/>the<sp/>type<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>to<sp/>look<sp/>up.</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>dbID<sp/>Specifies<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>look<sp/>up.</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>a<sp/>callable<sp/>object<sp/>(e.g.<sp/>a<sp/>function)<sp/>that<sp/>takes</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/>*<sp/><sp/>one<sp/>argument.<sp/>If<sp/>the<sp/>lookup<sp/>is<sp/>successful,<sp/>the<sp/>callback<sp/>is<sp/>called<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/>*<sp/><sp/>base<sp/>mailbox;<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>not<sp/>currently<sp/>checked<sp/>out,<sp/>the<sp/>callback<sp/>is</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/>*<sp/><sp/>called<sp/>with<sp/>the<sp/>value<sp/>True,<sp/>regardless<sp/>of<sp/>whether<sp/>the<sp/>entity<sp/>exists<sp/>in</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>database<sp/>or<sp/>not;<sp/>For<sp/>any<sp/>other<sp/>cases,<sp/>it<sp/>is<sp/>called<sp/>with<sp/>the<sp/>value<sp/>False.</highlight></codeline>
<codeline lineno="1340"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lookUpBaseByDBID(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,<sp/>DatabaseID<sp/>dbID,</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pResultHandler<sp/>)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbID<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;DatabaseID<sp/>must<sp/>be<sp/>non-zero&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>entityType.c_str(),</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*shouldExcludeServices*/</highlight><highlight class="normal">true<sp/>);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>entity<sp/>type<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pResultHandler<sp/>||<sp/>!PyCallable_Check(<sp/>pResultHandler.get()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityDBKey<sp/>key(<sp/>pType-&gt;id(),<sp/>dbID<sp/>);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback(<sp/>pResultHandler<sp/>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StreamHelpers::DBAppInterface::getEntity<sp/>StreamHelper;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApp.<ref refid="class_base_app_1ab58656118b742540e46e0bdfcf562dd3" kindref="member">databaseGateway</ref>().getEntity(<sp/>key,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DatabaseGateway::makeGetEntityFlags(</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldGetProperties<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldGetBaseEntityLocation<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldGetGameTime<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_script_callback_adaptor" kindref="compound">ScriptCallbackAdaptor&lt; StreamHelper &gt;::wrap</ref>(<sp/>callback<sp/>),</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldDelaySend<sp/>*/</highlight><highlight class="normal"><sp/>BaseAppConfig::shouldDelayLookUpSend(),</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maxDelay<sp/>*/</highlight><highlight class="normal"><sp/>BWConfig::get(<sp/></highlight><highlight class="stringliteral">&quot;baseApp/lookUpBaseByDBIDMaxDelay&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.f<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>lookUpBaseByDBID,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>DatabaseID,<sp/>ARG(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>,<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">PY_MODULE_FUNCTION_ALIAS(<sp/>lookUpBaseByDBID,<sp/>lookupBaseByDBID,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.lookUpBaseByName</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>script<sp/>function<sp/>looks<sp/>up<sp/>the<sp/>specified<sp/>base<sp/>entry<sp/>in<sp/>the<sp/>database,</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>calls<sp/>the<sp/>result<sp/>handler<sp/>with<sp/>its<sp/>mailbox.</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>entityType<sp/>is<sp/>a<sp/>string<sp/>that<sp/>specifies<sp/>the<sp/>type<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>to<sp/>look<sp/>up.</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>name<sp/>Specifies<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>look<sp/>up.</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>a<sp/>callable<sp/>object<sp/>(e.g.<sp/>a<sp/>function)<sp/>that<sp/>takes</highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/>*<sp/><sp/>one<sp/>argument.<sp/>If<sp/>the<sp/>lookup<sp/>is<sp/>successful,<sp/>the<sp/>callback<sp/>is<sp/>called<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/>*<sp/><sp/>base<sp/>mailbox;<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>not<sp/>currently<sp/>checked<sp/>out,<sp/>but<sp/>exists<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/>*<sp/><sp/>database,<sp/>the<sp/>callback<sp/>is<sp/>called<sp/>with<sp/>the<sp/>value<sp/>True;<sp/>For<sp/>any<sp/>other<sp/>cases,</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>is<sp/>called<sp/>with<sp/>the<sp/>value<sp/>False.</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lookUpBaseByName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name,<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pResultHandler<sp/>)</highlight></codeline>
<codeline lineno="1405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>entityType.c_str(),</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*shouldExcludeServices*/</highlight><highlight class="normal">true<sp/>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType)</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>entity<sp/>type<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pResultHandler<sp/>||<sp/>!PyCallable_Check(<sp/>pResultHandler.get()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pType-&gt;description().pIdentifier()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>type<sp/>\&quot;%s\&quot;<sp/>has<sp/>no<sp/>identifier<sp/>property&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityDBKey<sp/>key(<sp/>pType-&gt;id(),<sp/>0,<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback(<sp/>pResultHandler<sp/>);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StreamHelpers::DBAppInterface::getEntity<sp/>StreamHelper;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApp.<ref refid="class_base_app_1ab58656118b742540e46e0bdfcf562dd3" kindref="member">databaseGateway</ref>().getEntity(<sp/>key,</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DatabaseGateway::makeGetEntityFlags(</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldGetProperties<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldGetBaseEntityLocation<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldGetGameTime<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_script_callback_adaptor" kindref="compound">ScriptCallbackAdaptor&lt; StreamHelper &gt;::wrap</ref>(<sp/>callback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>lookUpBaseByName,</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>,<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">PY_MODULE_FUNCTION_ALIAS(<sp/>lookUpBaseByName,<sp/>lookupBaseByName,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_script_callback_adaptor_helper" kindref="compound">ScriptCallbackAdaptorHelper</ref>&lt;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamHelpers::DBAppInterface::lookUpDBIDByName<sp/>&gt;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StreamHelpers::DBAppInterface::lookUpDBIDByName</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamHelper;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ScriptObject<sp/>replyAsScriptCallbackValue(</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StreamHelper::Reply<sp/>&amp;<sp/>reply<sp/>)</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject::createFrom(<sp/>reply.key().dbID<sp/>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.lookUpDBIDByName</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>script<sp/>function<sp/>looks<sp/>up<sp/>the<sp/>database<sp/>ID<sp/>of<sp/>an<sp/>entity<sp/>based<sp/>on<sp/>its</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/>*<sp/><sp/>name.<sp/>It<sp/>calls<sp/>the<sp/>result<sp/>handler<sp/>with<sp/>the<sp/>database<sp/>ID.</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/>entityType<sp/>is<sp/>a<sp/>string<sp/>that<sp/>specifies<sp/>the<sp/>type<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>to<sp/>look<sp/>up.</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>name<sp/>Specifies<sp/>the<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>look<sp/>up.</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>callback<sp/>is<sp/>a<sp/>callable<sp/>object<sp/>(e.g.<sp/>a<sp/>function)<sp/>that<sp/>takes</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/>*<sp/><sp/>one<sp/>argument:<sp/>the<sp/>database<sp/>ID.<sp/>If<sp/>the<sp/>specified<sp/>entity<sp/>does<sp/>not<sp/>exist<sp/>then</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>database<sp/>ID<sp/>will<sp/>be<sp/>0.</highlight></codeline>
<codeline lineno="1478"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lookUpDBIDByName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name,<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pResultHandler<sp/>)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>entityType.c_str(),</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*shouldExcludeServices*/</highlight><highlight class="normal">true<sp/>);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>entity<sp/>type<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pResultHandler<sp/>&amp;&amp;<sp/>!PyCallable_Check(<sp/>pResultHandler.get()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>must<sp/>be<sp/>callable<sp/>if<sp/>specified&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StreamHelpers::DBAppInterface::lookUpDBIDByName<sp/>StreamHelper;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback(<sp/>pResultHandler<sp/>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>baseApp.<ref refid="class_base_app_1ab58656118b742540e46e0bdfcf562dd3" kindref="member">databaseGateway</ref>().lookUpDBIDByName(<sp/>pType-&gt;id(),<sp/>name,</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_script_callback_adaptor_1aade9d09c71ea0586dae4641cf189c6f6" kindref="member">ScriptCallbackAdaptor&lt; StreamHelper &gt;::wrap</ref>(<sp/>callback<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>lookUpDBIDByName,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>BW::string,<sp/>OPTARG(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>,<sp/>NULL,<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="keyword">class<sp/></highlight><highlight class="normal">LookUpBasesByIndexHandler<sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>Mercury::ReplyMessageHandler</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>newRequest(<sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp,<sp/>EntityTypeID<sp/>entityTypeID,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LookUpEntitiesCriteria<sp/>&amp;<sp/>criteria,<sp/>ScriptObject<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LookUpBasesByIndexHandler<sp/>*<sp/>pHandler<sp/>=</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LookUpBasesByIndexHandler(<sp/>baseApp,<sp/>entityTypeID,<sp/>criteria,</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHandler-&gt;sendRequests();</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pHandler-&gt;numOutstandingRequests()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHandler-&gt;notifyFailure();</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pHandler;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>LookUpBasesByIndexHandler(<sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp,<sp/>EntityTypeID<sp/>entityTypeID,</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LookUpEntitiesCriteria<sp/>&amp;<sp/>criteria,<sp/>ScriptObject<sp/>callback<sp/>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>~LookUpBasesByIndexHandler();</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>numOutstandingRequests()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numOutstandingRequests_;<sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sendRequests();</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overrides<sp/>from<sp/>Mercury::ReplyMessageHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMessage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>source,</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleException(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException<sp/>&amp;<sp/>exception,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>override<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onRequestFinished();</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finaliseWithSuccess();</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notifyFailure();</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Member<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseApp_;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityTypeID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTypeID_;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>LookUpEntitiesCriteria<sp/><sp/>criteria_;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOutstandingRequests_;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;<sp/>DatabaseID,<sp/>EntityMailBoxRef<sp/>&gt;<sp/>Result;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BW::vector&lt;<sp/>Result<sp/>&gt;<sp/>Results;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>Results<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results_;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BW::set&lt;<sp/>ShardGUID<sp/>&gt;<sp/>ShardGUIDSet;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>ShardGUIDSet<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queriedShards_;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal">LookUpBasesByIndexHandler::LookUpBasesByIndexHandler(<sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>baseApp,</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityTypeID<sp/>entityTypeID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LookUpEntitiesCriteria<sp/>&amp;<sp/>criteria,</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>callback<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseApp_(<sp/>baseApp<sp/>),</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityTypeID_(<sp/>entityTypeID<sp/>),</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria_(<sp/>criteria<sp/>),</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_(<sp/>callback<sp/>),</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOutstandingRequests_(),</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results_(),</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queriedShards_()</highlight></codeline>
<codeline lineno="1603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal">LookUpBasesByIndexHandler::~LookUpBasesByIndexHandler()</highlight></codeline>
<codeline lineno="1611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>callback_.get()<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LookUpBasesByIndexHandler::sendRequests()</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseApp_.storageShardHash().isUsable())</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>StorageShardHash::const_iterator<sp/>iter<sp/>=<sp/>baseApp_.storageShardHash().begin();</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>baseApp_.storageShardHash().end())</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queriedShards_.count(<sp/>iter-&gt;first<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DBAppDescriptor<sp/>*<sp/>pDBApp<sp/>=<sp/>iter-&gt;second.getRandomDBApp();</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Channel<sp/>&amp;<sp/>channel<sp/>=</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseApp_.getChannel(<sp/>pDBApp-&gt;address()<sp/>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>channel.bundle();</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>GUID<sp/>in<sp/>the<sp/>shardGUIDs_<sp/>so<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dereference<sp/>it<sp/>in<sp/>handleMessage()<sp/>/<sp/>handleException().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShardGUID<sp/>&amp;<sp/>guid<sp/>=<sp/>*(queriedShards_.insert(<sp/>iter-&gt;first<sp/>).first);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startRequest(<sp/>DBAppInterface::lookUpEntities,</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pHandler<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>*/</highlight><highlight class="normal"><sp/>const_cast&lt;<sp/>ShardGUID<sp/>*<sp/>&gt;(<sp/>&amp;guid<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>entityTypeID_<sp/>&lt;&lt;<sp/>criteria_;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channel.send();</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numOutstandingRequests_;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LookUpBasesByIndexHandler::onRequestFinished()</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>--numOutstandingRequests_;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numOutstandingRequests_<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;finaliseWithSuccess();</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1678"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>Mercury::ReplyMessageHandler.</highlight></codeline>
<codeline lineno="1679"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LookUpBasesByIndexHandler::handleMessage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>source,</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>override<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>have<sp/>called<sp/>back<sp/>with<sp/>an<sp/>error,<sp/>discard<sp/>further<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;onRequestFinished();</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>numEntities<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>numEntities;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numEntities<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;notifyFailure();</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;onRequestFinished();</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int32<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numEntities;<sp/>++i)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>result;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>result.first<sp/>&gt;&gt;<sp/>result.second;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results_.push_back(<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;onRequestFinished();</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LookUpBasesByIndexHandler::finaliseWithSuccess()</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList<sp/>list<sp/>=<sp/>ScriptList::create(<sp/>results_.size()<sp/>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptList::size_type<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>Results::const_iterator<sp/>iter<sp/>=<sp/>results_.begin();</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>results_.end())</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DatabaseID<sp/>&amp;<sp/>dbID<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMailBoxRef<sp/>&amp;<sp/>location<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>mailBox<sp/>=<sp/>(location.id<sp/>==<sp/>0)<sp/>?</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::none()<sp/>:</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>Script::getData(<sp/>location<sp/>),</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptTuple<sp/>result<sp/>=<sp/>ScriptTuple::create(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.setItem(<sp/>0,<sp/>ScriptLong::create(<sp/>dbID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.setItem(<sp/>1,<sp/>mailBox<sp/>);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.setItem(<sp/>i,<sp/>mailBox<sp/>);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>results_.clear();</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>callback_.callFunction(<sp/>ScriptArgs::create(<sp/>list<sp/>),</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint(<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.lookUpBasesByIndex:<sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>callback_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>Mercury::ReplyMessageHandler.</highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LookUpBasesByIndexHandler::handleException(</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException<sp/>&amp;<sp/>exception,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LookUpBasesByIndexHandler::handleException:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::reasonToString(<sp/>exception.reason()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;notifyFailure();</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;onRequestFinished();</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LookUpBasesByIndexHandler::notifyFailure()</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>didn&apos;t<sp/>have<sp/>complete<sp/>results<sp/>because<sp/>a<sp/>DBApp<sp/>we<sp/>were<sp/>querying<sp/>went</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>down,<sp/>then<sp/>notify<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>We<sp/>could<sp/>have<sp/>script<sp/>pass<sp/>an<sp/>argument<sp/>to<sp/>return<sp/>partial<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Or<sp/>we<sp/>could<sp/>retry<sp/>the<sp/>request<sp/>to<sp/>another<sp/>DBApp<sp/>in<sp/>the<sp/>storage-shard<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>callback_.callFunction(<sp/>ScriptArgs::create(<sp/>ScriptObject::none()<sp/>),</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint(<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.lookUpBasesByIndex:<sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>callback_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.lookUpBasesByIndex</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/>*<sp/><sp/>Perform<sp/>an<sp/>asynchronous<sp/>look-up<sp/>of<sp/>persistent<sp/>base<sp/>entities<sp/>stored<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/>*<sp/><sp/>primary<sp/>database<sp/>based<sp/>on<sp/>matching<sp/>some<sp/>of<sp/>its<sp/>properties.<sp/>For<sp/>efficiency,</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/>*<sp/><sp/>query<sp/>properties<sp/>should<sp/>be<sp/>an<sp/>indexed<sp/>property<sp/>as<sp/>defined<sp/>in<sp/>the<sp/>entity</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/>*<sp/><sp/>definitions<sp/>for<sp/>the<sp/>given<sp/>entity<sp/>type.<sp/>They<sp/>are<sp/>specified<sp/>in<sp/>the<sp/>search</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>keyword<sp/>arguments<sp/>to<sp/>this<sp/>method.<sp/>The<sp/>property<sp/>matches<sp/>are<sp/>combined<sp/>using</highlight></codeline>
<codeline lineno="1793"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>AND<sp/>operator.</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>successful,<sp/>the<sp/>callback<sp/>argument<sp/>is<sp/>called<sp/>with<sp/>a<sp/>list<sp/>of<sp/>pairs<sp/>for</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/>*<sp/><sp/>each<sp/>matching<sp/>persistent<sp/>entity:</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/>*<sp/><sp/>[<sp/>(databaseID0,<sp/>baseMailBox0),<sp/>(databaseID1,<sp/>baseMailBox1),<sp/>...<sp/>]</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>entity<sp/>is<sp/>currently<sp/>checked<sp/>out,<sp/>the<sp/>base<sp/>mailbox<sp/>is<sp/>returned<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/>*<sp/><sp/>second<sp/>element<sp/>of<sp/>the<sp/>pair.<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>not<sp/>current<sp/>checked<sp/>out,<sp/>the</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/>*<sp/><sp/>second<sp/>element<sp/>of<sp/>the<sp/>pair<sp/>will<sp/>be<sp/>None.</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>request<sp/>resulted<sp/>in<sp/>a<sp/>database<sp/>error<sp/>of<sp/>some<sp/>kind<sp/>(this<sp/>does<sp/>not</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/>*<sp/><sp/>include<sp/>the<sp/>case<sp/>where<sp/>zero<sp/>entities<sp/>are<sp/>matched),<sp/>the<sp/>callback<sp/>argument</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>be<sp/>called<sp/>with<sp/>None<sp/>instead.<sp/>Examples<sp/>include<sp/>if<sp/>the<sp/>property<sp/>is<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/>*<sp/><sp/>inappropriate<sp/>type<sp/>to<sp/>compare<sp/>with<sp/>a<sp/>string<sp/>(e.g.<sp/>sequence<sp/>and<sp/>structured</highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/>*<sp/><sp/>data<sp/>types,<sp/>PYTHON<sp/>types,<sp/>FLOAT*<sp/>types).</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>this<sp/>method<sp/>queries<sp/>the<sp/>primary<sp/>database.<sp/>If<sp/>secondary<sp/>databases</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>used,<sp/>the<sp/>data<sp/>may<sp/>be<sp/>out-of-date<sp/>with<sp/>respect<sp/>to<sp/>what<sp/>is<sp/>contained<sp/>in</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>secondary<sp/>databases.</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityType<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>name<sp/>of<sp/>the<sp/>entity<sp/>type<sp/>to<sp/>query<sp/>for.</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>callable<sp/>object<sp/>that<sp/>is<sp/>called<sp/>back<sp/>when<sp/>matched</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results<sp/>are<sp/>received.</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>filter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Optional)<sp/>One<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld.LOOK_UP_ENTITIES_FILTER_constants.</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(default<sp/>is<sp/>BigWorld.LOOK_UP_ENTITIES_FILTER_ALL).</highlight></codeline>
<codeline lineno="1820"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>sortProperty<sp/><sp/><sp/><sp/><sp/>(Optional)<sp/>The<sp/>property<sp/>name<sp/>to<sp/>sort<sp/>on.</highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>sortAscending<sp/><sp/><sp/><sp/>(Optional)<sp/>If<sp/>True,<sp/>sort<sp/>in<sp/>ascending<sp/>or<sp/>descending</highlight></codeline>
<codeline lineno="1822"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order.<sp/>Default<sp/>True.</highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>limit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Optional)<sp/>Limit<sp/>for<sp/>the<sp/>number<sp/>of<sp/>results</highlight></codeline>
<codeline lineno="1824"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned,<sp/>defaults<sp/>to<sp/>-1,<sp/>indicating<sp/>no<sp/>limit.</highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>offset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Optional)<sp/>Offset<sp/>for<sp/>the<sp/>results<sp/>returned,</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaults<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal">PyObject<sp/>*<sp/>py_lookUpBasesByIndex(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="1829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>entityType;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>callback;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>filter<sp/>=<sp/>LOOK_UP_ENTITIES_FILTER_ALL;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sortPropertyCString<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>ascending<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;sO|HsBii&quot;</highlight><highlight class="normal">,<sp/>&amp;entityType,<sp/>&amp;callback,</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;filter,<sp/>&amp;sortPropertyCString,<sp/>&amp;ascending,<sp/>&amp;limit,<sp/>&amp;offset<sp/>))</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyCallable_Check(<sp/>callback<sp/>))</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Callback<sp/>argument<sp/>must<sp/>be<sp/>callable&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>LookUpEntitiesCriteria<sp/>criteria;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter<sp/>&gt;=<sp/>uint16(<sp/>LOOK_UP_ENTITIES_FILTER_INVALID<sp/>))</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Filter<sp/>argument<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>criteria.filter(<sp/>LookUpEntitiesFilter(<sp/>filter<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sortPropertyCString)</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria.sortProperty(<sp/>sortPropertyCString<sp/>);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria.isAscending(<sp/>ascending<sp/>==<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>criteria.limit(<sp/>limit<sp/>);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>criteria.offset(<sp/>offset<sp/>);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pEntityType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>entityType,</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*shouldExcludeServices*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityType<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>entity<sp/>type<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType<sp/>);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>entityDesc<sp/>=<sp/>pEntityType-&gt;description();</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!criteria.sortProperty().empty())</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataDescription<sp/>*<sp/>pDataDesc<sp/>=<sp/>entityDesc.findProperty(</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria.sortProperty().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDataDesc<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>not<sp/>a<sp/>property<sp/>on<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria.sortProperty().c_str(),<sp/>entityType<sp/>);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>key<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(kwargs<sp/>&amp;&amp;<sp/>PyDict_Next(<sp/>kwargs,<sp/>&amp;pos,<sp/>&amp;key,<sp/>&amp;value<sp/>))</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pValueString(<sp/>PyObject_Str(<sp/>value<sp/>),</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObjectPtr::STEAL_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>propertyName<sp/>=<sp/>PyString_AsString(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataDescription<sp/>*<sp/>pDataDesc<sp/>=</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityDesc.findProperty(<sp/>propertyName<sp/>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDataDesc<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>is<sp/>not<sp/>a<sp/>property<sp/>on<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyName,<sp/>entityType<sp/>);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDataDesc-&gt;dataType()-&gt;isSameType(</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>value,<sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>)<sp/>))</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Search<sp/>value<sp/>for<sp/>%s.%s<sp/>has<sp/>incorrect<sp/>type&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityType,<sp/>propertyName<sp/>);</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criteria.addPropertyQuery(<sp/>propertyName,</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString(<sp/>pValueString.get()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Scalable<sp/>DB:<sp/>We&apos;ll<sp/>need<sp/>to<sp/>ask<sp/>each<sp/>storage-shard<sp/>in<sp/>parallel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BaseApp::instance().storageShardHash().isUsable())</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shard<sp/>hash<sp/>is<sp/>currently<sp/>unusable&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>LookUpBasesByIndexHandler::newRequest(<sp/>BaseApp::instance(),</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityDesc.index(),<sp/>criteria,</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>callback,<sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_RETURN_NONE;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS_WITH_DOC(<sp/>lookUpBasesByIndex,<sp/>BigWorld,</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Perform<sp/>an<sp/>asynchronous<sp/>look-up<sp/>persistent<sp/>base<sp/>entities<sp/>stored<sp/>in<sp/>the&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;primary<sp/>database<sp/>based<sp/>on<sp/>matching<sp/>some<sp/>of<sp/>its<sp/>properties<sp/>specified<sp/>as<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;keyword<sp/>arguments<sp/>(propertyName=propertyValue).<sp/>For<sp/>efficiency,<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;properties<sp/>should<sp/>be<sp/>indexed<sp/>properties<sp/>as<sp/>defined<sp/>in<sp/>the<sp/>entity<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;definitions<sp/>for<sp/>the<sp/>given<sp/>entity<sp/>type.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>successful,<sp/>the<sp/>callback<sp/>argument<sp/>is<sp/>called<sp/>with<sp/>a<sp/>list<sp/>of<sp/>pairs<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;each<sp/>matching<sp/>persistent<sp/>entity:\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[<sp/>(databaseID0,<sp/>baseMailBox0),<sp/>(databaseID1,<sp/>baseMailBox1),<sp/>...<sp/>]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>the<sp/>entity<sp/>is<sp/>currently<sp/>checked<sp/>out,<sp/>the<sp/>base<sp/>mailbox<sp/>is<sp/>returned<sp/>as<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>second<sp/>element<sp/>of<sp/>the<sp/>pair.<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>not<sp/>current<sp/>checked<sp/>out,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>second<sp/>element<sp/>of<sp/>the<sp/>pair<sp/>will<sp/>be<sp/>None.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>the<sp/>request<sp/>resulted<sp/>in<sp/>a<sp/>database<sp/>error<sp/>of<sp/>some<sp/>kind<sp/>(this<sp/>does<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;include<sp/>the<sp/>case<sp/>where<sp/>zero<sp/>entities<sp/>are<sp/>matched),<sp/>the<sp/>callback<sp/>argument<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;will<sp/>be<sp/>called<sp/>with<sp/>None<sp/>instead.<sp/>Examples<sp/>include<sp/>if<sp/>the<sp/>property<sp/>is<sp/>of<sp/>an<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;inappropriate<sp/>type<sp/>to<sp/>compare<sp/>with<sp/>a<sp/>string<sp/>(e.g.<sp/>sequence<sp/>and<sp/>structured<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;data<sp/>types,<sp/>PYTHON<sp/>types,<sp/>FLOAT*<sp/>types).&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal">PyObject<sp/>*<sp/>py_executeRawDatabaseCommand(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="1970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>commandString<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>commandStringLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pResultHandler<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pPartitionKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>keywords[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;command&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;callback&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;partitionKey&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTupleAndKeywords(<sp/>args,<sp/>kwargs,</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;s#O|O:BigWorld.executeRawDatabaseCommand&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;<sp/>char<sp/>**<sp/>&gt;(<sp/>keywords<sp/>),</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;commandString,<sp/>&amp;commandStringLength,<sp/>&amp;pResultHandler,</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pPartitionKey<sp/>))</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>int64<sp/>partitionKey<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>partitionKey<sp/>of<sp/>None<sp/>means<sp/>Shard-Alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPartitionKey<sp/>&amp;&amp;<sp/>pPartitionKey<sp/>!=<sp/>Py_None)</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyInt_Check(<sp/>pPartitionKey<sp/>))</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_RuntimeError,</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>support<sp/>integer<sp/>as<sp/>partitionKey&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitionKey<sp/>=<sp/>PyInt_AsLong(<sp/>pPartitionKey<sp/>);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StorageShardHash<sp/>&amp;<sp/>storageShardHash<sp/>=</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseApp::instance().storageShardHash();</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partitionKey<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>storageShardHash.hasTransitioningShards())</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_RuntimeError,</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;executeRawDatabaseCommand<sp/>cannot<sp/>run<sp/>on<sp/>non-Shard-Alpha<sp/>when<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;there<sp/>are<sp/>shards<sp/>transitioning&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_storage_shard" kindref="compound">StorageShard</ref><sp/>*<sp/>storageShard<sp/>=</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageShardHash.getStorageShard(<sp/>partitionKey<sp/>);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>storageShard<sp/>);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>command(<sp/>commandString,<sp/>commandStringLength<sp/>);</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Channel<sp/>&amp;<sp/>channel<sp/>=</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseApp::getChannel(storageShard-&gt;getRandomDBApp()-&gt;address());</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!DBAppInterfaceUtils::executeRawDatabaseCommand(<sp/>command,</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pResultHandler,<sp/>channel<sp/>))</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_RETURN_NONE;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS(<sp/>executeRawDatabaseCommand,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reloadScript(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFullReload<sp/>)</highlight></codeline>
<codeline lineno="2039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BaseApp::reloadScript:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;reloadScript<sp/>should<sp/>be<sp/>used<sp/>with<sp/>caution,<sp/>and<sp/>never<sp/>in<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;production<sp/>environment.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/>Script::TempSubInterpreter<sp/>tempInterp;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tempInterp.init())</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BaseApp::reloadScript&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>temporary<sp/>sub-interpreter.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>tempInterp.makeCurrent();</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isFullReload)</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOK<sp/>=<sp/><ref refid="class_entity_type_1a8dcd6414a2390bb5758202552c41910f" kindref="member">EntityType::init</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOK<sp/>=<sp/><ref refid="class_entity_type_1a42962bea6ada49ecf50cdec8646364ab" kindref="member">EntityType::reloadScript</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isOK)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;EntityType::reloadScript<sp/>failed.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOK)</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>original<sp/>Python<sp/>interpreter.<sp/>EntityType::init()<sp/>got<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>loaded<sp/>modules.<sp/>And<sp/>EntityType::migrate()<sp/>will<sp/>replace<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modules<sp/>in<sp/>the<sp/>original<sp/>Python<sp/>interpreter<sp/>with<sp/>new<sp/>modules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__kyl__<sp/>(8/2/2006)<sp/>Can&apos;t<sp/>simply<sp/>throw<sp/>away<sp/>old<sp/>interpreter<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>new<sp/>interpreter<sp/>since<sp/>we<sp/>are<sp/>currently<sp/>inside<sp/>a<sp/>Python<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>old<sp/>interpreter<sp/>is<sp/>still<sp/>on<sp/>the<sp/>callstack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInterp.restoreSuper();</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a9f5ca134f5521f075cf6ed2153848a87" kindref="member">EntityType::migrate</ref>(<sp/>isFullReload<sp/>);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerEntityMailBox::migrateMailBoxes();</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>all<sp/>the<sp/>bases<sp/>and<sp/>proxies<sp/>and<sp/>change<sp/>their<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bases" kindref="compound">Bases</ref><sp/>&amp;<sp/>b<sp/>=<sp/>BaseApp::instance().bases();</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Bases::const_iterator<sp/>it<sp/>=<sp/>b.begin();<sp/>it<sp/>!=<sp/>b.end();<sp/>it++)</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;migrate();</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a751f38d7ea8c5e0943688ad0d272c024" kindref="member">EntityType::cleanupAfterReload</ref>(<sp/>isFullReload<sp/>);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>original<sp/>Python<sp/>interpreter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInterp.restoreSuper();</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isFullReload)</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>using<sp/>the<sp/>old<sp/>scripts<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>works<sp/>(mostly)<sp/>because<sp/>when<sp/>we<sp/>try<sp/>to<sp/>import<sp/>a<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that&apos;s<sp/>already<sp/>imported,<sp/>it<sp/>doesn&apos;t<sp/>try<sp/>to<sp/>read<sp/>it<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/><ref refid="class_entity_type_1a42962bea6ada49ecf50cdec8646364ab" kindref="member">EntityType::reloadScript</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a751f38d7ea8c5e0943688ad0d272c024" kindref="member">EntityType::cleanupAfterReload</ref>(<sp/>isFullReload<sp/>);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.reloadScript</highlight></codeline>
<codeline lineno="2112"><highlight class="comment"><sp/>*<sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2114"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>reloads<sp/>Python<sp/>modules<sp/>related<sp/>to<sp/>entities<sp/>and<sp/>custom</highlight></codeline>
<codeline lineno="2115"><highlight class="comment"><sp/>*<sp/><sp/>data<sp/>types.<sp/>The<sp/>class<sp/>of<sp/>current<sp/>entities<sp/>are<sp/>set<sp/>to<sp/>the<sp/>newly<sp/>loaded</highlight></codeline>
<codeline lineno="2116"><highlight class="comment"><sp/>*<sp/><sp/>classes.<sp/>This<sp/>method<sp/>should<sp/>be<sp/>used<sp/>for<sp/>development<sp/>only<sp/>and<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2117"><highlight class="comment"><sp/>*<sp/><sp/>suitable<sp/>for<sp/>production<sp/>use.<sp/>The<sp/>following<sp/>points<sp/>should<sp/>be<sp/>noted:</highlight></codeline>
<codeline lineno="2118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2119"><highlight class="comment"><sp/>*<sp/><sp/>1)<sp/>Scripts<sp/>are<sp/>only<sp/>reloaded<sp/>on<sp/>the<sp/>component<sp/>baseapp<sp/>that</highlight></codeline>
<codeline lineno="2120"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>method<sp/>is<sp/>called<sp/>on.<sp/>The<sp/>user<sp/>is<sp/>responsible<sp/>for<sp/>making<sp/>sure<sp/>that</highlight></codeline>
<codeline lineno="2121"><highlight class="comment"><sp/>*<sp/><sp/>reloadScript<sp/>is<sp/>called<sp/>on<sp/>all<sp/>server<sp/>components.</highlight></codeline>
<codeline lineno="2122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/>*<sp/><sp/>2)<sp/>The<sp/>client<sp/>doesn&apos;t<sp/>have<sp/>equivalent<sp/>functionality<sp/>in<sp/>Python.<sp/>Each</highlight></codeline>
<codeline lineno="2124"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld<sp/>client<sp/>needs<sp/>to<sp/>use<sp/>CapsLock<sp/>+<sp/>F11<sp/>in<sp/>order<sp/>to<sp/>reload<sp/>the<sp/>scripts.</highlight></codeline>
<codeline lineno="2125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/>*<sp/><sp/>3)<sp/>Doesn&apos;t<sp/>handle<sp/>custom<sp/>data<sp/>types<sp/>transparently.<sp/>Instances<sp/>of<sp/>custom</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/>*<sp/><sp/>data<sp/>types<sp/>must<sp/>have<sp/>their<sp/>__class__<sp/>reassigned<sp/>to<sp/>the<sp/>proper<sp/>class<sp/>type</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/>*<sp/><sp/>after<sp/>reloadScript()<sp/>completes.<sp/>For<sp/>example,<sp/>if<sp/>we<sp/>have<sp/>a<sp/>custom<sp/>data<sp/>type</highlight></codeline>
<codeline lineno="2129"><highlight class="comment"><sp/>*<sp/><sp/>named<sp/>&quot;CustomClass&quot;:</highlight></codeline>
<codeline lineno="2130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2131"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="2132"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>e<sp/>in<sp/>BigWorld.entities.values():</highlight></codeline>
<codeline lineno="2133"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>type(<sp/>e<sp/>)<sp/>is<sp/>Avatar.Avatar:</highlight></codeline>
<codeline lineno="2134"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.customData.__class__<sp/>=<sp/>CustomClass</highlight></codeline>
<codeline lineno="2135"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="2136"><highlight class="comment"><sp/>*<sp/><sp/>BWPersonality.onInit(<sp/>True<sp/>)<sp/>is<sp/>called<sp/>when<sp/>this<sp/>method<sp/>completes<sp/>(where</highlight></codeline>
<codeline lineno="2137"><highlight class="comment"><sp/>*<sp/><sp/>BWPersonality<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>personality<sp/>module<sp/>specified<sp/>in</highlight></codeline>
<codeline lineno="2138"><highlight class="comment"><sp/>*<sp/><sp/>&amp;lt;root&amp;gt;/&amp;lt;personality&amp;gt;<sp/>in<sp/>bw.xml).</highlight></codeline>
<codeline lineno="2139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2140"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>fullReload<sp/>Optional<sp/>boolean<sp/>parameter<sp/>that<sp/>specifies<sp/>whether<sp/>to</highlight></codeline>
<codeline lineno="2141"><highlight class="comment"><sp/>*<sp/><sp/>reload<sp/>entity<sp/>definitions<sp/>as<sp/>well.<sp/>If<sp/>this<sp/>parameter<sp/>is<sp/>False,<sp/>then</highlight></codeline>
<codeline lineno="2142"><highlight class="comment"><sp/>*<sp/><sp/>entities<sp/>definitions<sp/>are<sp/>not<sp/>reloaded.<sp/>Default<sp/>is<sp/>True.</highlight></codeline>
<codeline lineno="2143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2144"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>True<sp/>if<sp/>reload<sp/>successful,<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="2145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>reloadScript,<sp/>OPTARG(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>END<sp/>),</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.startService</highlight></codeline>
<codeline lineno="2152"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2154"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>starts<sp/>a<sp/>service<sp/>with<sp/>the<sp/>given<sp/>name.<sp/>If<sp/>the<sp/>service<sp/>is<sp/>already</highlight></codeline>
<codeline lineno="2155"><highlight class="comment"><sp/>*<sp/><sp/>running,<sp/>an<sp/>exception<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="2156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2157"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>serviceName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>service<sp/>to<sp/>start.</highlight></codeline>
<codeline lineno="2158"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal">PyObject<sp/>*<sp/>startService(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>serviceName<sp/>)</highlight></codeline>
<codeline lineno="2160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>app<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!app.isServiceApp())</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>is<sp/>only<sp/>available<sp/>on<sp/>ServiceApps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base" kindref="compound">Base</ref><sp/>*<sp/>pBase<sp/>=<sp/>app.localServiceFragments().<ref refid="class_bases_1a2bac2cbead90547cc46579469d6fea62" kindref="member">findInstanceWithType</ref>(</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serviceName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBase)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>is<sp/>already<sp/>running&quot;</highlight><highlight class="normal">,<sp/>serviceName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>serviceName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType<sp/>||<sp/>!pType-&gt;isService())</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>service<sp/>type<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,<sp/>serviceName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>result<sp/>=<sp/>app.pEntityCreator()-&gt;createBase(<sp/>pType.get(),</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptDict()<sp/>);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.exists())</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>start<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>serviceName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.newRef();</highlight></codeline>
<codeline lineno="2200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>startService,<sp/>ARG(<sp/>BW::string,<sp/>END<sp/>),</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.stopService</highlight></codeline>
<codeline lineno="2205"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2207"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>stops<sp/>a<sp/>service<sp/>with<sp/>the<sp/>given<sp/>name.<sp/>If<sp/>the<sp/>service<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2208"><highlight class="comment"><sp/>*<sp/><sp/>already<sp/>running,<sp/>an<sp/>exception<sp/>is<sp/>raised.</highlight></codeline>
<codeline lineno="2209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2210"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>serviceName<sp/>The<sp/>name<sp/>of<sp/>the<sp/>service<sp/>to<sp/>stop.</highlight></codeline>
<codeline lineno="2211"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stopService(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>serviceName<sp/>)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_app" kindref="compound">BaseApp</ref><sp/>&amp;<sp/>app<sp/>=<sp/>BaseApp::instance();</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!app.isServiceApp())</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>is<sp/>only<sp/>available<sp/>on<sp/>ServiceApps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base" kindref="compound">Base</ref><sp/>*<sp/>pBase<sp/>=<sp/>app.localServiceFragments().<ref refid="class_bases_1a2bac2cbead90547cc46579469d6fea62" kindref="member">findInstanceWithType</ref>(</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serviceName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pBase)</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>service<sp/>&apos;%s&apos;<sp/>running&quot;</highlight><highlight class="normal">,<sp/>serviceName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>pBase-&gt;destroy(<sp/></highlight><highlight class="comment">/*deleteFromDB*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*writeToDB*/</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2238"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>stopService,<sp/>ARG(<sp/>BW::string,<sp/>END<sp/>),</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2243"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>class<sp/>is<sp/>used<sp/>to<sp/>handle<sp/>the<sp/>response<sp/>in<sp/>BigWorld.authenticateAccount.</highlight></codeline>
<codeline lineno="2244"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_authenticate_account_handler" kindref="compound">AuthenticateAccountHandler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Mercury::ReplyMessageHandler</highlight></codeline>
<codeline lineno="2246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_authenticate_account_handler" kindref="compound">AuthenticateAccountHandler</ref>()<sp/>:<sp/>deferred_()<sp/>{}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>getDeferredForReturn()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2251"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pObject<sp/>=<sp/>deferred_.get();</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObject)</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pObject<sp/>);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_SystemError,</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>twisted.internet.defer.Deferred.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pObject;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMessage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>statusByte;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>statusByte;</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogOnStatus::Status<sp/>status<sp/>=<sp/>(LogOnStatus::Status)statusByte;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOkay<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>LogOnStatus::LOGGED_ON)</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityTypeID<sp/>typeID;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DatabaseID<sp/>dbID;</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>typeID<sp/>&gt;&gt;<sp/>dbID;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>typeID<sp/>);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pType<sp/>);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>name<sp/>=<sp/>ScriptObject::createFrom(<sp/>pType-&gt;description().name()<sp/>);</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>dbIDObject<sp/>=<sp/>ScriptObject::createFrom(<sp/>dbID<sp/>);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptArgs<sp/>arg<sp/>=<sp/>ScriptArgs::create(<sp/>name,<sp/>dbIDObject<sp/>);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOkay<sp/>=<sp/>deferred_.callback(<sp/>arg<sp/>);</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>errorMsg;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>errorMsg;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(status)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LogOnStatus::LOGIN_REJECTED_NO_SUCH_USER:</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMsg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>user&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LogOnStatus::LOGIN_REJECTED_INVALID_PASSWORD:</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMsg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>password&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorMsg.empty())</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::stringstream<sp/>stream;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>status:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>int(<sp/>status<sp/>);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMsg<sp/>=<sp/>stream.str();</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOkay<sp/>=<sp/>deferred_.errback(<sp/></highlight><highlight class="stringliteral">&quot;BWAuthenticateError&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMsg.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isOkay)</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;AuthenticateAccountHandler::handleMessage:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Handler<sp/>failed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleException(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException<sp/>&amp;<sp/>exception,</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!deferred_.mercuryErrback(<sp/>exception<sp/>))</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;AuthenticateAccountHandler::handleException:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Handler<sp/>failed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/>PyDeferred<sp/>deferred_;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.authenticateAccount</highlight></codeline>
<codeline lineno="2350"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2352"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>validates<sp/>whether<sp/>a<sp/>username<sp/>and<sp/>password<sp/>pair<sp/>are<sp/>valid.<sp/>On</highlight></codeline>
<codeline lineno="2353"><highlight class="comment"><sp/>*<sp/><sp/>success,<sp/>the<sp/>entity<sp/>type<sp/>and<sp/>database<sp/>id<sp/>of<sp/>the<sp/>associated<sp/>entity<sp/>are</highlight></codeline>
<codeline lineno="2354"><highlight class="comment"><sp/>*<sp/><sp/>returned<sp/>to<sp/>the<sp/>Twisted<sp/>Deferred.</highlight></codeline>
<codeline lineno="2355"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2356"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>username<sp/>The<sp/>username<sp/>to<sp/>test.</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>password<sp/>The<sp/>password<sp/>to<sp/>test.</highlight></codeline>
<codeline lineno="2358"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2359"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>A<sp/>Twisted<sp/>Deferred.<sp/>On<sp/>success,<sp/>callback<sp/>will<sp/>be<sp/>called<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="2360"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>2-tuple<sp/>containing<sp/>the<sp/>entity<sp/>type<sp/>and<sp/>database<sp/>id<sp/>of<sp/>the<sp/>entity</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>associated<sp/>with<sp/>this<sp/>account.<sp/>On<sp/>failure,<sp/>errback<sp/>is<sp/>called<sp/>with<sp/>a</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Failure<sp/>object<sp/>indicating<sp/>the<sp/>reason<sp/>for<sp/>failure.</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal">PyObject<sp/>*<sp/>authenticateAccount(<sp/>BW::string<sp/>username,<sp/>BW::string<sp/>password<sp/>)</highlight></codeline>
<codeline lineno="2365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StorageShardHash<sp/>&amp;<sp/>storageShardHash<sp/>=</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseApp::instance().storageShardHash();</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DBAppDescriptor<sp/>*<sp/>pDBApp<sp/>=</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageShardHash.pShardAlpha()-&gt;getRandomDBApp();</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDBApp)</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Shard-Alpha<sp/>has<sp/>no<sp/>DBApps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Channel<sp/>&amp;<sp/>channel<sp/>=</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseApp::instance().getChannel(<sp/>pDBApp-&gt;address()<sp/>);</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>channel.bundle();</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_authenticate_account_handler" kindref="compound">AuthenticateAccountHandler</ref><sp/>*<sp/>pHandler<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_authenticate_account_handler" kindref="compound">AuthenticateAccountHandler</ref>();</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startRequest(<sp/>DBAppInterface::authenticateAccount,<sp/>pHandler<sp/>);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>username<sp/>&lt;&lt;<sp/>password;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/>channel.send();</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pHandler-&gt;getDeferredForReturn();</highlight></codeline>
<codeline lineno="2390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>authenticateAccount,</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>BW::string,<sp/>END<sp/>)<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.shutDownApp</highlight></codeline>
<codeline lineno="2396"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2397"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2398"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>induce<sp/>a<sp/>shutdown<sp/>of<sp/>this<sp/>BaseApp.</highlight></codeline>
<codeline lineno="2399"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shutDownApp()</highlight></codeline>
<codeline lineno="2401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseApp::instance().shutDown();</highlight></codeline>
<codeline lineno="2403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2404"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>shutDownApp,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.controlledShutDown</highlight></codeline>
<codeline lineno="2408"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2410"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>induces<sp/>a<sp/>controlled<sp/>shutdown<sp/>of<sp/>the<sp/>cluster.</highlight></codeline>
<codeline lineno="2411"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>controlledShutDown()</highlight></codeline>
<codeline lineno="2413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseApp::instance().triggerControlledShutDown();</highlight></codeline>
<codeline lineno="2415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>controlledShutDown,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createReplayDataFileWriter</highlight></codeline>
<codeline lineno="2420"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2421"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2422"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>creates<sp/>a<sp/>new<sp/>PyReplayDataFileWriter<sp/>object.<sp/>A<sp/>writer<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="2423"><highlight class="comment"><sp/>*<sp/><sp/>created<sp/>in<sp/>creation<sp/>mode<sp/>or<sp/>in<sp/>recovery<sp/>mode.</highlight></codeline>
<codeline lineno="2424"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2425"><highlight class="comment"><sp/>*<sp/><sp/>In<sp/>recovery<sp/>mode,<sp/>the<sp/>recoveryData<sp/>keyword-only<sp/>argument<sp/>is<sp/>specified,<sp/>and</highlight></codeline>
<codeline lineno="2426"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>mutually<sp/>exclusive<sp/>with<sp/>the<sp/>other<sp/>keyword-only<sp/>arguments<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="2427"><highlight class="comment"><sp/>*<sp/><sp/>creation<sp/>mode.</highlight></codeline>
<codeline lineno="2428"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2429"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>resPath<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>resource<sp/>path<sp/>to<sp/>write<sp/>out<sp/>to.</highlight></codeline>
<codeline lineno="2430"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>privateKey<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>private<sp/>key<sp/>to<sp/>use,<sp/>in<sp/>PEM<sp/>string<sp/>form.<sp/>Should</highlight></codeline>
<codeline lineno="2431"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>be<sp/>specified<sp/>for<sp/>new<sp/>files,<sp/>should<sp/>be<sp/>omitted</highlight></codeline>
<codeline lineno="2432"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>recovery.</highlight></codeline>
<codeline lineno="2433"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>recoveryData<sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>keyword-only<sp/>argument,<sp/>to<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="2434"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recovery<sp/>mode.<sp/>This<sp/>parameter<sp/>is<sp/>used<sp/>to<sp/>supply<sp/>the</highlight></codeline>
<codeline lineno="2435"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serialised<sp/>recovery<sp/>data.</highlight></codeline>
<codeline lineno="2436"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>shouldOverwrite<sp/><sp/>This<sp/>is<sp/>an<sp/>optional<sp/>keyword-only<sp/>argument,<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="2437"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>in<sp/>creation<sp/>mode.<sp/>If<sp/>set<sp/>to<sp/>True,<sp/>then<sp/>any</highlight></codeline>
<codeline lineno="2438"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existing<sp/>data<sp/>will<sp/>be<sp/>lost.<sp/>If<sp/>False<sp/>(the<sp/>default),</highlight></codeline>
<codeline lineno="2439"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>error<sp/>is<sp/>raised<sp/>(via<sp/>the<sp/>callback)<sp/>when<sp/>the</highlight></codeline>
<codeline lineno="2440"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existing<sp/>file<sp/>is<sp/>attempted<sp/>to<sp/>be<sp/>opened.</highlight></codeline>
<codeline lineno="2441"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>compressionType<sp/><sp/>This<sp/>is<sp/>an<sp/>optional<sp/>keyword-only<sp/>argument,<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="2442"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>in<sp/>creation<sp/>mode,<sp/>and<sp/>specifies<sp/>the</highlight></codeline>
<codeline lineno="2443"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compression<sp/>level.<sp/>Defaults<sp/>to</highlight></codeline>
<codeline lineno="2444"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld.BW_COMPRESSION_ZIP_BEST_SPEED.</highlight></codeline>
<codeline lineno="2445"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>numTicksToSign<sp/><sp/><sp/>This<sp/>is<sp/>an<sp/>optional<sp/>keyword-only<sp/>argument,<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="2446"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>in<sp/>creation<sp/>mode<sp/>and<sp/>specifies<sp/>the<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="2447"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ticks<sp/>to<sp/>sign<sp/>in<sp/>each<sp/>signing<sp/>chunk.<sp/>Defaults<sp/>to</highlight></codeline>
<codeline lineno="2448"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10.</highlight></codeline>
<codeline lineno="2449"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>metaData<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>an<sp/>optional<sp/>keyword-only<sp/>argument,<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="2450"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>in<sp/>creation<sp/>mode,<sp/>and<sp/>specifies<sp/>a<sp/>list<sp/>of</highlight></codeline>
<codeline lineno="2451"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-value<sp/>string<sp/>tuples<sp/>to<sp/>be<sp/>used<sp/>as<sp/>meta-data.</highlight></codeline>
<codeline lineno="2452"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>empty<sp/>by<sp/>default.</highlight></codeline>
<codeline lineno="2453"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2454"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/>The<sp/>new<sp/>writer<sp/>object.</highlight></codeline>
<codeline lineno="2455"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal">PyObject<sp/>*<sp/>py_createReplayDataFileWriter(<sp/>PyObject<sp/>*<sp/>args,<sp/>PyObject<sp/>*<sp/>kwargs<sp/>)</highlight></codeline>
<codeline lineno="2457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>resPathString<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>resPathStringLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>privateKeyString<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>privateKeyStringLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;s#s#:BigWorld.createReplayDataFileWriter&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;resPathString,<sp/>&amp;resPathStringLength,</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;privateKeyString,<sp/>&amp;privateKeyStringLength<sp/>))</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BaseApp::instance().isShuttingDown())</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;App<sp/>is<sp/>shutting<sp/>down,<sp/>can&apos;t<sp/>create<sp/>writer<sp/>at<sp/>this<sp/>time&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>path(<sp/>resPathString,<sp/>resPathStringLength<sp/>);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_replay_data_file_writer_1ad2b03f910a904ed063f6cc2da744d585" kindref="member">ReplayDataFileWriter::existsForPath</ref>(<sp/>path<sp/>))</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>writing<sp/>to<sp/>path:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>keyword-only<sp/>parameters.<sp/>Two<sp/>sets<sp/>of<sp/>keyword<sp/>arguments,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mutually<sp/>exclusive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_recording_recovery_data" kindref="compound">RecordingRecoveryData</ref><sp/>recoveryData;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>recoveryDataString;</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>haveRecoveryData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>KeywordParser<sp/>recoverArgs;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>recoverArgs.add(<sp/></highlight><highlight class="stringliteral">&quot;recoveryData&quot;</highlight><highlight class="normal">,<sp/>recoveryDataString<sp/>);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>KeywordParser::ParseResult<sp/>parseResult<sp/>=<sp/>recoverArgs.parse(<sp/>kwargs<sp/>);</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parseResult<sp/>==<sp/>KeywordParser::EXCEPTION_RAISED)</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((haveRecoveryData<sp/>=<sp/>(parseResult<sp/>==<sp/>KeywordParser::ALL_FOUND)))</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryIStream<sp/>recoveryDataStream(<sp/>recoveryDataString.data(),</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(recoveryDataString.size())<sp/>);</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!recoveryData.<ref refid="class_recording_recovery_data_1a752a7a7fe683d330043394cec5648128" kindref="member">initFromStream</ref>(<sp/>recoveryDataStream<sp/>))</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryDataStream.finish();</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>recovery<sp/>data&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint<sp/>DEFAULT_REPLAY_NUM_TICKS_TO_SIGN<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldOverwrite<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compressionType<sp/>=<sp/>BW_COMPRESSION_ZIP_BEST_SPEED;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>numTicksToSign<sp/>=<sp/>DEFAULT_REPLAY_NUM_TICKS_TO_SIGN;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pMetaDataDict<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/>KeywordParser<sp/>creationArgs;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>creationArgs.add(<sp/></highlight><highlight class="stringliteral">&quot;shouldOverwrite&quot;</highlight><highlight class="normal">,<sp/>shouldOverwrite<sp/>);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/>creationArgs.add(<sp/></highlight><highlight class="stringliteral">&quot;compressionType&quot;</highlight><highlight class="normal">,<sp/>compressionType<sp/>);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>creationArgs.add(<sp/></highlight><highlight class="stringliteral">&quot;numTicksToSign&quot;</highlight><highlight class="normal">,<sp/>numTicksToSign<sp/>);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>creationArgs.add(<sp/></highlight><highlight class="stringliteral">&quot;metaData&quot;</highlight><highlight class="normal">,<sp/>pMetaDataDict<sp/>);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((parseResult<sp/>=<sp/>creationArgs.parse(<sp/>kwargs<sp/>))<sp/>==</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KeywordParser::EXCEPTION_RAISED)</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haveRecoveryData<sp/>&amp;&amp;<sp/>(parseResult<sp/>!=<sp/>KeywordParser::NONE_FOUND))</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>specify<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;shouldOverwrite,<sp/>compressionType,<sp/>numTicksToSign<sp/>or<sp/>metaData<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;with<sp/>recoveryData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMetaDataDict<sp/>&amp;&amp;<sp/>!PyDict_Check(<sp/>pMetaDataDict<sp/>))</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;metaData<sp/>must<sp/>be<sp/>a<sp/>dict&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Argument<sp/>parsing<sp/>will<sp/>consume<sp/>the<sp/>arguments<sp/>it<sp/>finds,<sp/>those<sp/>left<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kwargs<sp/>&amp;&amp;<sp/>PyDict_Size(<sp/>kwargs<sp/>))</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>get<sp/>the<sp/>first<sp/>key<sp/>to<sp/>complain<sp/>about.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>key<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyDict_Next(<sp/>kwargs,<sp/>&amp;i,<sp/>&amp;key,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>keyword<sp/>argument:<sp/>\&quot;%s\&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_AsString(<sp/>key<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(privateKeyStringLength<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Empty<sp/>private<sp/>key&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>ChecksumSchemePtr<sp/>pChecksumScheme<sp/>=<sp/>ReplayChecksumScheme::create(</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string(<sp/>privateKeyString,<sp/>privateKeyStringLength<sp/>),</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isPrivate<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChecksumScheme<sp/>||<sp/>!pChecksumScheme-&gt;isGood())</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>EC<sp/>private<sp/>key<sp/>string%s%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pChecksumScheme<sp/>&amp;&amp;<sp/>!pChecksumScheme-&gt;errorString().empty())<sp/>?</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pChecksumScheme<sp/>&amp;&amp;<sp/>!pChecksumScheme-&gt;errorString().empty())<sp/>?</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChecksumScheme-&gt;errorString().c_str()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>meta-data<sp/>from<sp/>Python<sp/>dict.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>ReplayMetaData<sp/>metaData;</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>metaData.init(<sp/>pChecksumScheme<sp/>);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pValue<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pMetaDataDict<sp/>&amp;&amp;<sp/>PyDict_Next(<sp/>pMetaDataDict,<sp/>&amp;pos,<sp/>&amp;pKey,<sp/>&amp;pValue<sp/>))</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>keyString;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>valueString;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString<sp/>pKeyStringObj(<sp/>PyObject_Str(<sp/>pKey<sp/>),</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pKeyStringObj.exists())</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pKeyStringObj.getString(<sp/>keyString<sp/>);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString<sp/>pValueStringObj(<sp/>PyObject_Str(<sp/>pValue<sp/>),</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pValueStringObj.exists())</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pValueStringObj.getString(<sp/>valueString<sp/>);</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaData.add(<sp/>keyString,<sp/>valueString<sp/>);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>BackgroundFileWriter<sp/>*<sp/>pBackgroundFileWriter<sp/>=</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BackgroundFileWriter(<sp/>BaseApp::instance().bgTaskManager()<sp/>);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>BackgroundFilePathPtr<sp/>pPath<sp/>=<sp/>ResourceFilePath::create(<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!pBackgroundFileWriter-&gt;initWithPath(<sp/>pPath,</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldOverwrite<sp/>*/</highlight><highlight class="normal"><sp/>(shouldOverwrite<sp/>||<sp/>haveRecoveryData),</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldTruncate<sp/>*/</highlight><highlight class="normal"><sp/>shouldOverwrite<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Path<sp/>already<sp/>being<sp/>written<sp/>to:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!haveRecoveryData)</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_replay_data_file_writer" kindref="compound">PyReplayDataFileWriter</ref>(<sp/>path,<sp/>pBackgroundFileWriter,</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChecksumScheme,</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numTicksToSign,</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BWCompressionType(<sp/>compressionType<sp/>),</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityType::digest(),</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaData<sp/>);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_replay_data_file_writer" kindref="compound">PyReplayDataFileWriter</ref>(<sp/>path,<sp/>pBackgroundFileWriter,</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChecksumScheme,<sp/>recoveryData<sp/>);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2647"><highlight class="normal">PY_MODULE_FUNCTION_WITH_KEYWORDS(<sp/>createReplayDataFileWriter,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>LOG_ON_REJECT</highlight></codeline>
<codeline lineno="2655"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>should<sp/>be<sp/>returned<sp/>by<sp/>onLogOnAttempt<sp/>to<sp/>reject<sp/>a<sp/>log<sp/>on</highlight></codeline>
<codeline lineno="2657"><highlight class="comment"><sp/>*<sp/><sp/>attempt.</highlight></codeline>
<codeline lineno="2658"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>LOG_ON_ACCEPT</highlight></codeline>
<codeline lineno="2660"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>should<sp/>be<sp/>returned<sp/>by<sp/>onLogOnAttempt<sp/>to<sp/>allow<sp/>the<sp/>new<sp/>client</highlight></codeline>
<codeline lineno="2662"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>connect<sp/>to<sp/>the<sp/>Proxy.</highlight></codeline>
<codeline lineno="2663"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>LOG_ON_WAIT_FOR_DESTROY</highlight></codeline>
<codeline lineno="2665"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2666"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>should<sp/>be<sp/>returned<sp/>by<sp/>Proxy.onLogOnAttempt<sp/>if<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="2667"><highlight class="comment"><sp/>*<sp/><sp/>attempt<sp/>to<sp/>log<sp/>on<sp/>should<sp/>wait<sp/>until<sp/>the<sp/>current<sp/>Proxy<sp/>has<sp/>logged<sp/>off.<sp/>Either</highlight></codeline>
<codeline lineno="2668"><highlight class="comment"><sp/>*<sp/><sp/>Proxy.destroy<sp/>or<sp/>Proxy.destroyCellEntity<sp/>should<sp/>be<sp/>called<sp/>before<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="2669"><highlight class="comment"><sp/>*<sp/><sp/>returned.</highlight></codeline>
<codeline lineno="2670"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>EXPOSE_BASE_SERVICE_APPS</highlight></codeline>
<codeline lineno="2672"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2673"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>callable<sp/>watchers<sp/>to<sp/>indicate<sp/>that<sp/>it<sp/>is<sp/>to<sp/>be<sp/>run<sp/>on</highlight></codeline>
<codeline lineno="2674"><highlight class="comment"><sp/>*<sp/><sp/>all<sp/>BaseApp<sp/>and<sp/>ServiceApp<sp/>components<sp/>owned<sp/>by<sp/>the<sp/>manager.</highlight></codeline>
<codeline lineno="2675"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>EXPOSE_BASE_APPS</highlight></codeline>
<codeline lineno="2677"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2678"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>callable<sp/>watchers<sp/>to<sp/>indicate<sp/>that<sp/>it<sp/>is<sp/>to<sp/>be<sp/>run<sp/>on</highlight></codeline>
<codeline lineno="2679"><highlight class="comment"><sp/>*<sp/><sp/>all<sp/>BaseApp<sp/>components<sp/>owned<sp/>by<sp/>the<sp/>manager.</highlight></codeline>
<codeline lineno="2680"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>EXPOSE_SERVICE_APPS</highlight></codeline>
<codeline lineno="2682"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2683"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>callable<sp/>watchers<sp/>to<sp/>indicate<sp/>that<sp/>it<sp/>is<sp/>to<sp/>be<sp/>run<sp/>on</highlight></codeline>
<codeline lineno="2684"><highlight class="comment"><sp/>*<sp/><sp/>all<sp/>ServiceApp<sp/>components<sp/>owned<sp/>by<sp/>the<sp/>manager.</highlight></codeline>
<codeline lineno="2685"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>EXPOSE_LEAST_LOADED</highlight></codeline>
<codeline lineno="2687"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2688"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>callable<sp/>watchers<sp/>to<sp/>indicate<sp/>that<sp/>it<sp/>is<sp/>to<sp/>be<sp/>run<sp/>on</highlight></codeline>
<codeline lineno="2689"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>least<sp/>loaded<sp/>BaseApp<sp/>component<sp/>owned<sp/>by<sp/>the<sp/>manager.</highlight></codeline>
<codeline lineno="2690"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addToModule(<sp/>PyObject<sp/>*<sp/>pModule,<sp/>T<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pName<sp/>)</highlight></codeline>
<codeline lineno="2694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pObj<sp/>=<sp/>Script::getData(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj)</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_SetAttrString(<sp/>pModule,<sp/>pName,<sp/>pObj<sp/>);</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pObj<sp/>);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_big_world_base_app_script" kindref="compound">BigWorldBaseAppScript</ref></highlight></codeline>
<codeline lineno="2709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>init(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bases" kindref="compound">Bases</ref><sp/>&amp;<sp/>bases,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_bases" kindref="compound">Bases</ref><sp/>*<sp/>pServices,</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>dispatcher,</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::NetworkInterface<sp/>&amp;<sp/>intInterface,</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isServiceApp<sp/>)</highlight></codeline>
<codeline lineno="2715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>BigWorld<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pModule<sp/>=<sp/>PyImport_AddModule(<sp/></highlight><highlight class="stringliteral">&quot;BigWorld&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;Base&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;PyObject<sp/>*&gt;(&amp;Base::s_type_)<sp/>)<sp/>==<sp/>-1<sp/>||</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;Proxy&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;PyObject<sp/>*&gt;(&amp;Proxy::s_type_)<sp/>)<sp/>==<sp/>-1<sp/>||</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;Service&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;PyObject<sp/>*&gt;(&amp;Service::s_type_)<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UserDataObject&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;PyObject<sp/>*&gt;(&amp;UserDataObject::s_type_)<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>LOG_ON_REJECT,<sp/></highlight><highlight class="stringliteral">&quot;LOG_ON_REJECT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>LOG_ON_ACCEPT,<sp/></highlight><highlight class="stringliteral">&quot;LOG_ON_ACCEPT&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>LOG_ON_WAIT_FOR_DESTROY,<sp/></highlight><highlight class="stringliteral">&quot;LOG_ON_WAIT_FOR_DESTROY&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>watcher<sp/>forwarding<sp/>hints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>ForwardingWatcher::BASE_SERVICE_APPS,</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXPOSE_BASE_SERVICE_APPS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>ForwardingWatcher::BASE_APPS,</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXPOSE_BASE_APPS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>ForwardingWatcher::SERVICE_APPS,</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXPOSE_SERVICE_APPS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>ForwardingWatcher::LEAST_LOADED,</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXPOSE_LEAST_LOADED&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>the<sp/>following<sp/>hints<sp/>when<sp/>the<sp/>BaseAppMgr<sp/>support<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>implemented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addToModule(<sp/>pModule,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ForwardingWatcher::WITH_ENTITY,<sp/><sp/>&quot;EXPOSE_WITH_ENTITY&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addToModule(<sp/>pModule,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ForwardingWatcher::WITH_SPACE,<sp/><sp/><sp/>&quot;EXPOSE_WITH_SPACE&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOOK_UP_ENTITIES_FILTER_ALL,<sp/></highlight><highlight class="stringliteral">&quot;LOOK_UP_ENTITIES_FILTER_ALL&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOOK_UP_ENTITIES_FILTER_ONLINE,<sp/></highlight><highlight class="stringliteral">&quot;LOOK_UP_ENTITIES_FILTER_ONLINE&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOOK_UP_ENTITIES_FILTER_OFFLINE,<sp/></highlight><highlight class="stringliteral">&quot;LOOK_UP_ENTITIES_FILTER_OFFLINE&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_NONE,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_NONE&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_1,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_1&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_2,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_2&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_3,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_3&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_4,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_4&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_5,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_5&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_6,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_6&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_7,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_7&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_8,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_8&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_9,<sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_9&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_BEST_SPEED,</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_BEST_SPEED&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>BW_COMPRESSION_ZIP_BEST_COMPRESSION,</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;COMPRESSION_ZIP_BEST_COMPRESSION&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pBases(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_bases" kindref="compound">PyBases</ref>(<sp/>bases<sp/>),<sp/>PyObjectPtr::STEAL_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;entities&quot;</highlight><highlight class="normal">,<sp/>pBases.get()<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pServices)</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pBases(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_bases" kindref="compound">PyBases</ref>(<sp/>*pServices<sp/>),</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObjectPtr::STEAL_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;localServices&quot;</highlight><highlight class="normal">,<sp/>pBases.get()<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!BaseApp::instance().initPersonality(<sp/></highlight><highlight class="comment">/*<sp/>isOptional<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>entity<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_entity_type_1a8dcd6414a2390bb5758202552c41910f" kindref="member">EntityType::init</ref>(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>BigWorldBaseAppScript</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Python<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>comments<sp/>reside<sp/>here<sp/>because<sp/>it<sp/>doesn&apos;t<sp/>seem<sp/>right<sp/>to<sp/>have</highlight></codeline>
<codeline lineno="2820"><highlight class="comment"><sp/>*<sp/>declaration<sp/>comments<sp/>in<sp/>executable<sp/>code.</highlight></codeline>
<codeline lineno="2821"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>entities</highlight></codeline>
<codeline lineno="2823"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2824"><highlight class="comment"><sp/>*<sp/><sp/>entities<sp/>contains<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>entities<sp/>which<sp/>currently<sp/>reside<sp/>on<sp/>the<sp/>base.</highlight></codeline>
<codeline lineno="2825"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>PyBases</highlight></codeline>
<codeline lineno="2826"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>services</highlight></codeline>
<codeline lineno="2828"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2829"><highlight class="comment"><sp/>*<sp/><sp/>services<sp/>is<sp/>a<sp/>map<sp/>that<sp/>keys<sp/>a<sp/>service<sp/>name<sp/>to<sp/>a<sp/>corresponding<sp/>service</highlight></codeline>
<codeline lineno="2830"><highlight class="comment"><sp/>*<sp/><sp/>fragment<sp/>on<sp/>one<sp/>of<sp/>the<sp/>ServiceApps<sp/>that<sp/>offer<sp/>it.</highlight></codeline>
<codeline lineno="2831"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>PyBases</highlight></codeline>
<codeline lineno="2832"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>localServices</highlight></codeline>
<codeline lineno="2834"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2835"><highlight class="comment"><sp/>*<sp/><sp/>localServices<sp/>contains<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>service<sp/>fragments<sp/>which<sp/>currently<sp/>reside<sp/>on<sp/>the<sp/>ServiceApp.</highlight></codeline>
<codeline lineno="2836"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>PyBases</highlight></codeline>
<codeline lineno="2837"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>globalBases</highlight></codeline>
<codeline lineno="2839"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2840"><highlight class="comment"><sp/>*<sp/><sp/>globalBases<sp/>is<sp/>a<sp/>dictionary<sp/>mapping<sp/>strings<sp/>to<sp/>bases<sp/>or<sp/>base<sp/>mailboxes.</highlight></codeline>
<codeline lineno="2841"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>GlobalBases</highlight></codeline>
<codeline lineno="2842"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>isServiceApp</highlight></codeline>
<codeline lineno="2844"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2845"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>value<sp/>indicates<sp/>whether<sp/>this<sp/>process<sp/>is<sp/>running<sp/>as<sp/>a<sp/>ServiceApp<sp/>or<sp/>a</highlight></codeline>
<codeline lineno="2846"><highlight class="comment"><sp/>*<sp/><sp/>BaseApp.<sp/>A<sp/>ServiceApp<sp/>is<sp/>a<sp/>variation<sp/>on<sp/>a<sp/>BaseApp.<sp/>It<sp/>does<sp/>not<sp/>accept<sp/>new</highlight></codeline>
<codeline lineno="2847"><highlight class="comment"><sp/>*<sp/><sp/>player<sp/>logins<sp/>or<sp/>entities<sp/>from<sp/>BigWorld.createBaseAnywhere<sp/>calls.<sp/>It<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="2848"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>run<sp/>fragments<sp/>of<sp/>a<sp/>Service.</highlight></codeline>
<codeline lineno="2849"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>bool</highlight></codeline>
<codeline lineno="2850"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>NEXT_ONLY</highlight></codeline>
<codeline lineno="2852"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="2853"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>is<sp/>used<sp/>with<sp/>the<sp/>Entity.shouldAutoBackup<sp/>and</highlight></codeline>
<codeline lineno="2854"><highlight class="comment"><sp/>*<sp/><sp/>Entity.shouldAutoArchive<sp/>property.<sp/>This<sp/>value<sp/>indicates<sp/>that<sp/>the<sp/>entity</highlight></codeline>
<codeline lineno="2855"><highlight class="comment"><sp/>*<sp/><sp/>should<sp/>be<sp/>backed<sp/>up<sp/>next<sp/>time<sp/>it<sp/>is<sp/>considered<sp/>and<sp/>then<sp/>this<sp/>property<sp/>is</highlight></codeline>
<codeline lineno="2856"><highlight class="comment"><sp/>*<sp/><sp/>automatically<sp/>set<sp/>to<sp/>False<sp/>(0).</highlight></codeline>
<codeline lineno="2857"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>script_bigworld.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="baseapp/script_bigworld.cpp"/>
  </compounddef>
</doxygen>
