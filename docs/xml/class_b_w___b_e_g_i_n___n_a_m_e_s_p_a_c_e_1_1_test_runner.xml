<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner" kind="class" language="C++" prot="public">
    <compoundname>BW_BEGIN_NAMESPACE::TestRunner</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1ae88157297527c017752f298aa1bd017a" prot="private" static="no">
        <type>BW::map&lt; Mercury::Address, int &gt;</type>
        <definition>typedef BW::map&lt; Mercury::Address, int &gt; BW_BEGIN_NAMESPACE::TestRunner::Counts</definition>
        <argsstring></argsstring>
        <name>Counts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="476" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a8dcc839311b1d5b73f74cd3251dcebcb" prot="private" static="no">
        <type>Addresses</type>
        <definition>typedef Addresses BW_BEGIN_NAMESPACE::TestRunner::Lifespan</definition>
        <argsstring></argsstring>
        <name>Lifespan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="641" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a4be1ba2781a7aa8b45efdd1809bd82ec" prot="private" static="no">
        <type>BW::list&lt; Lifespan &gt;</type>
        <definition>typedef BW::list&lt; Lifespan &gt; BW_BEGIN_NAMESPACE::TestRunner::Lifespans</definition>
        <argsstring></argsstring>
        <name>Lifespans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="642" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="642" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1ad24043312be386820ac6ead910d0ad02" prot="private" static="no" mutable="no">
        <type>Lifespans</type>
        <definition>Lifespans BW_BEGIN_NAMESPACE::TestRunner::lifespans_</definition>
        <argsstring></argsstring>
        <name>lifespans_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="644" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a10afdb82de94874de5616993c34ccea1" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int BW_BEGIN_NAMESPACE::TestRunner::numFailures_</definition>
        <argsstring></argsstring>
        <name>numFailures_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="645" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="645" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a905f2cd97a54d411b0d29300949addec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE::TestRunner::TestRunner</definition>
        <argsstring>()</argsstring>
        <name>TestRunner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="448" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="448" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a7eaf6c843a5b857003d66c2e00e0aba5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::startLifespan</definition>
        <argsstring>(const Mercury::Address &amp;addr)</argsstring>
        <name>startLifespan</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="452" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="452" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a0a55715c8fbbb13d797e1d3e4d49a846" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::addToLifespan</definition>
        <argsstring>(const Mercury::Address &amp;addr)</argsstring>
        <name>addToLifespan</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="458" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a5eb0c22dd829f117c4679cbafddab039" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::testAll</definition>
        <argsstring>() const </argsstring>
        <name>testAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="463" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="463" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a3e162293469926c5623420f3ca87153d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BW_BEGIN_NAMESPACE::TestRunner::numFailures</definition>
        <argsstring>() const </argsstring>
        <name>numFailures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="473" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="473" bodyend="473"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a0aba23e68cd5c7749d952f7bfe4c2f9e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::initMessages</definition>
        <argsstring>(Messages &amp;messages, TestApp &amp;app, EntityID id) const </argsstring>
        <name>initMessages</name>
        <param>
          <type><ref refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_messages" kindref="compound">Messages</ref> &amp;</type>
          <declname>messages</declname>
        </param>
        <param>
          <type><ref refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_app" kindref="compound">TestApp</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <param>
          <type>EntityID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="478" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="478" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a397dad2a450685c2009628a5b1ce51de" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::calcCounts</definition>
        <argsstring>(Counts &amp;counts) const </argsstring>
        <name>calcCounts</name>
        <param>
          <type>Counts &amp;</type>
          <declname>counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method populates a map with the counts for the number of messages expected from each address. This map is used to generate the permutations. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="496" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="496" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a83388d95645ed1e99bee744fdbb6daaf" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::visitPermutations</definition>
        <argsstring>(Addresses &amp;receiveOrder, Counts &amp;counts) const </argsstring>
        <name>visitPermutations</name>
        <param>
          <type>Addresses &amp;</type>
          <declname>receiveOrder</declname>
        </param>
        <param>
          <type>Counts &amp;</type>
          <declname>counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is used to test all permutations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>receiveOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of address in the order that the messages will be received. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counts</parametername>
</parameternamelist>
<parameterdescription>
<para>A map containing how more messages there are from each address. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="527" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="527" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a40cf13e4f7bb6e57a601a0551cdc31fd" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::printTest</definition>
        <argsstring>(const Addresses &amp;receiveOrder) const </argsstring>
        <name>printTest</name>
        <param>
          <type>const Addresses &amp;</type>
          <declname>receiveOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="571" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="571" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a008c4d179bb0c82f74862d40febe0550" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::TestRunner::test</definition>
        <argsstring>(const Addresses &amp;receiveOrder) const </argsstring>
        <name>test</name>
        <param>
          <type>const Addresses &amp;</type>
          <declname>receiveOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method tests the senario where the messages are received in the order given. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="593" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="593" bodyend="638"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a7f1664049f5189e53c388071c18f8884" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void BW_BEGIN_NAMESPACE::TestRunner::printAddresses</definition>
        <argsstring>(const Addresses &amp;addrs)</argsstring>
        <name>printAddresses</name>
        <param>
          <type>const Addresses &amp;</type>
          <declname>addrs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="559" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="559" bodyend="569"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is responsible for running tests. It is set up with the ghost lifespans that want to be tested and then all permutations of message delivery are tested. </para>    </detaileddescription>
    <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="446" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="445" bodyend="646"/>
    <listofallmembers>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a0a55715c8fbbb13d797e1d3e4d49a846" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>addToLifespan</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a397dad2a450685c2009628a5b1ce51de" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>calcCounts</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1ae88157297527c017752f298aa1bd017a" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>Counts</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a0aba23e68cd5c7749d952f7bfe4c2f9e" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>initMessages</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a8dcc839311b1d5b73f74cd3251dcebcb" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>Lifespan</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a4be1ba2781a7aa8b45efdd1809bd82ec" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>Lifespans</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1ad24043312be386820ac6ead910d0ad02" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>lifespans_</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a3e162293469926c5623420f3ca87153d" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>numFailures</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a10afdb82de94874de5616993c34ccea1" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>numFailures_</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a7f1664049f5189e53c388071c18f8884" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>printAddresses</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a40cf13e4f7bb6e57a601a0551cdc31fd" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>printTest</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a7eaf6c843a5b857003d66c2e00e0aba5" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>startLifespan</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a008c4d179bb0c82f74862d40febe0550" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>test</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a5eb0c22dd829f117c4679cbafddab039" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>testAll</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a905f2cd97a54d411b0d29300949addec" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>TestRunner</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_runner_1a83388d95645ed1e99bee744fdbb6daaf" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::TestRunner</scope><name>visitPermutations</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
