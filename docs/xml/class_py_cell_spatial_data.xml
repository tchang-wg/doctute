<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_py_cell_spatial_data" kind="class" language="C++" prot="public">
    <compoundname>PyCellSpatialData</compoundname>
    <basecompoundref prot="public" virt="non-virtual">PyObjectPlus</basecompoundref>
    <includes refid="py__cell__spatial__data_8hpp" local="no">py_cell_spatial_data.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_py_cell_spatial_data_1a9abf39d5f0fc0770a21124d5252c1857" prot="private" static="no" mutable="no">
        <type>Position3D</type>
        <definition>Position3D PyCellSpatialData::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="69" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_py_cell_spatial_data_1a74e6dbd921726ac860685a0708c1bd8d" prot="private" static="no" mutable="no">
        <type>Direction3D</type>
        <definition>Direction3D PyCellSpatialData::direction_</definition>
        <argsstring></argsstring>
        <name>direction_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="70" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_py_cell_spatial_data_1a223f890963bec149896d356b47794f04" prot="private" static="no" mutable="no">
        <type>SpaceID</type>
        <definition>SpaceID PyCellSpatialData::spaceID_</definition>
        <argsstring></argsstring>
        <name>spaceID_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="71" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_py_cell_spatial_data_1abe72ab560b800f8207fe8f627c188aa2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PyCellSpatialData::isOnGround_</definition>
        <argsstring></argsstring>
        <name>isOnGround_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="72" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_py_cell_spatial_data_1a37e6d89820b862ec230c4b7452e73b44" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string PyCellSpatialData::templateID_</definition>
        <argsstring></argsstring>
        <name>templateID_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="73" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_py_cell_spatial_data_1a99ae190a929c054d175e38687bf87e08" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PyCellSpatialData::position</definition>
        <argsstring>(const Position3D &amp;pos)</argsstring>
        <name>position</name>
        <param>
          <type>const Position3D &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="26" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1af802c199c72b742f70d8b0feed49c4c2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Direction3D &amp;</type>
        <definition>const Direction3D&amp; PyCellSpatialData::direction</definition>
        <argsstring>() const </argsstring>
        <name>direction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="28" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a868cf3e7cf1a8fe2a37a16add78fa2e3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PyCellSpatialData::direction</definition>
        <argsstring>(const Direction3D &amp;dir)</argsstring>
        <name>direction</name>
        <param>
          <type>const Direction3D &amp;</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="29" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1ad5718ff30bfd7373920c69515bc7a27e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SpaceID</type>
        <definition>SpaceID PyCellSpatialData::spaceID</definition>
        <argsstring>() const </argsstring>
        <name>spaceID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="31" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1ac9711ea13f8208b87527f4fbe4d1db2b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PyCellSpatialData::spaceID</definition>
        <argsstring>(const SpaceID spaceID)</argsstring>
        <name>spaceID</name>
        <param>
          <type>const SpaceID</type>
          <declname>spaceID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="32" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1ae7e617364ec40e879767819c51c88a36" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PyCellSpatialData::isOnGround</definition>
        <argsstring>() const </argsstring>
        <name>isOnGround</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="34" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a428f6d02b381ad657b3600e7c10de36b" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string PyCellSpatialData::templateID</definition>
        <argsstring>() const </argsstring>
        <name>templateID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="36" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a792402232faf70a45615e4091d4ffd9b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void PyCellSpatialData::templateID</definition>
        <argsstring>(const BW::string &amp;templateID)</argsstring>
        <name>templateID</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>templateID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="37" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a527055bc8062b4b8db8393ba174d9dba" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PyCellSpatialData::has_key</definition>
        <argsstring>(const BW::string &amp;propName) const </argsstring>
        <name>has_key</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reports whether a spatial property is present. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>propName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the property. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the key was found, false if it was not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="43" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="150" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a45ba7bb881e5e06f1b1d976996d59b19" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyCellSpatialData::keys</definition>
        <argsstring>() const </argsstring>
        <name>keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a list of the properties listed in this object. <simplesect kind="return"><para>A list containing all of the keys. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="46" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="169" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1aa09dfebb2684dd654f7c2b96b406e40f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyCellSpatialData::values</definition>
        <argsstring>() const </argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a list of all the <ref refid="class_base" kindref="compound">Base</ref> Entities listed in this object. <simplesect kind="return"><para>A list containing all of the properties&apos; values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="49" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="187" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a9fef20e477f92c48353f75795efecb11" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyCellSpatialData::items</definition>
        <argsstring>() const </argsstring>
        <name>items</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a list of the items, as (name, property) pairs, that are listed in this object. <simplesect kind="return"><para>A list containing all of the (name, property) pairs, represented as tuples containing a string name and a property value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="52" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="207" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a5622ea25436fed43bbca4f7ac458192e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject * PyCellSpatialData::get</definition>
        <argsstring>(const BW::string &amp;propName, const ScriptObject &amp;defaultValue) const </argsstring>
        <name>get</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const ScriptObject &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns value of a property with given name or defaultValue if not found. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>propName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the property to find. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defaultValue</parametername>
</parameternamelist>
<parameterdescription>
<para>a value that is returned in case if there is no requested property. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The property with the given name or defaultValue if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="55" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="227" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a19e5e230805b18dfb77c07ef9098cdae" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PyCellSpatialData::PY_AUTO_METHOD_DECLARE</definition>
        <argsstring>(RETOWN, get, ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END))) size_t size() const </argsstring>
        <name>PY_AUTO_METHOD_DECLARE</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>get</type>
        </param>
        <param>
          <type>ARG(BW::string, OPTARG(ScriptObject, ScriptObject::none(), END))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1a6de30646b2e4c01d3980f15036dd0a31" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ScriptObject</type>
        <definition>ScriptObject PyCellSpatialData::get</definition>
        <argsstring>(const BW::string &amp;propName) const </argsstring>
        <name>get</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns value of a property with given name or NULL object if not found. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>propName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the property to find. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The property with the given name or NULL object if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="67" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="243" bodyend="267"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_py_cell_spatial_data_1a3164ee3cc1e2b00f80b7601fba045216" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>BW_BEGIN_NAMESPACE PyObject * PyCellSpatialData::s_subscript</definition>
        <argsstring>(PyObject *self, PyObject *key)</argsstring>
        <name>s_subscript</name>
        <param>
          <type>PyObject *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to implement operator[] for the scripting object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="63" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="15" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_py_cell_spatial_data_1af1d28211f4c2954fae07b9d76f37bf65" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Py_ssize_t</type>
        <definition>Py_ssize_t PyCellSpatialData::s_length</definition>
        <argsstring>(PyObject *self)</argsstring>
        <name>s_length</name>
        <param>
          <type>PyObject *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function returns the number of elements in this dictionary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_cell_spatial_data.hpp" line="64" column="1" bodyfile="baseapp/py_cell_spatial_data.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is used to wrap spatial cell data such as position and direction as well as templateID and spaceID. The class is used if base entity is created from a template. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2234">
        <label>PyObjectPlus</label>
      </node>
      <node id="2233">
        <label>PyCellSpatialData</label>
        <link refid="class_py_cell_spatial_data"/>
        <childnode refid="2234" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2236">
        <label>PyObjectPlus</label>
      </node>
      <node id="2235">
        <label>PyCellSpatialData</label>
        <link refid="class_py_cell_spatial_data"/>
        <childnode refid="2236" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="baseapp/py_cell_spatial_data.hpp" line="16" column="1" bodyfile="baseapp/py_cell_spatial_data.hpp" bodystart="15" bodyend="74"/>
    <listofallmembers>
      <member refid="class_py_cell_spatial_data_1af802c199c72b742f70d8b0feed49c4c2" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>direction</name></member>
      <member refid="class_py_cell_spatial_data_1a868cf3e7cf1a8fe2a37a16add78fa2e3" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>direction</name></member>
      <member refid="class_py_cell_spatial_data_1a74e6dbd921726ac860685a0708c1bd8d" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>direction_</name></member>
      <member refid="class_py_cell_spatial_data_1a5622ea25436fed43bbca4f7ac458192e" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>get</name></member>
      <member refid="class_py_cell_spatial_data_1a6de30646b2e4c01d3980f15036dd0a31" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>get</name></member>
      <member refid="class_py_cell_spatial_data_1a527055bc8062b4b8db8393ba174d9dba" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>has_key</name></member>
      <member refid="class_py_cell_spatial_data_1ae7e617364ec40e879767819c51c88a36" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>isOnGround</name></member>
      <member refid="class_py_cell_spatial_data_1abe72ab560b800f8207fe8f627c188aa2" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>isOnGround_</name></member>
      <member refid="class_py_cell_spatial_data_1a9fef20e477f92c48353f75795efecb11" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>items</name></member>
      <member refid="class_py_cell_spatial_data_1a45ba7bb881e5e06f1b1d976996d59b19" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>keys</name></member>
      <member refid="class_py_cell_spatial_data_1a99ae190a929c054d175e38687bf87e08" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>position</name></member>
      <member refid="class_py_cell_spatial_data_1a9abf39d5f0fc0770a21124d5252c1857" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>position_</name></member>
      <member refid="class_py_cell_spatial_data_1a19e5e230805b18dfb77c07ef9098cdae" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>PY_AUTO_METHOD_DECLARE</name></member>
      <member refid="class_py_cell_spatial_data_1af1d28211f4c2954fae07b9d76f37bf65" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>s_length</name></member>
      <member refid="class_py_cell_spatial_data_1a3164ee3cc1e2b00f80b7601fba045216" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>s_subscript</name></member>
      <member refid="class_py_cell_spatial_data_1ad5718ff30bfd7373920c69515bc7a27e" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>spaceID</name></member>
      <member refid="class_py_cell_spatial_data_1ac9711ea13f8208b87527f4fbe4d1db2b" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>spaceID</name></member>
      <member refid="class_py_cell_spatial_data_1a223f890963bec149896d356b47794f04" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>spaceID_</name></member>
      <member refid="class_py_cell_spatial_data_1a428f6d02b381ad657b3600e7c10de36b" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>templateID</name></member>
      <member refid="class_py_cell_spatial_data_1a792402232faf70a45615e4091d4ffd9b" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>templateID</name></member>
      <member refid="class_py_cell_spatial_data_1a37e6d89820b862ec230c4b7452e73b44" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>templateID_</name></member>
      <member refid="class_py_cell_spatial_data_1aa09dfebb2684dd654f7c2b96b406e40f" prot="private" virt="non-virtual"><scope>PyCellSpatialData</scope><name>values</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
