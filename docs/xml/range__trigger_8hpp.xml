<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="range__trigger_8hpp" kind="file" language="C++">
    <compoundname>range_trigger.hpp</compoundname>
    <includes refid="entity__range__list__node_8hpp" local="yes">entity_range_list_node.hpp</includes>
    <includedby refid="range__list__appeal__trigger_8hpp" local="yes">cellapp/range_list_appeal_trigger.hpp</includedby>
    <includedby refid="cellapp_2entity_8cpp" local="yes">cellapp/entity.cpp</includedby>
    <includedby refid="mobile__range__list__node_8cpp" local="yes">cellapp/mobile_range_list_node.cpp</includedby>
    <includedby refid="proximity__controller_8cpp" local="yes">cellapp/proximity_controller.cpp</includedby>
    <includedby refid="range__trigger_8cpp" local="yes">cellapp/range_trigger.cpp</includedby>
    <includedby refid="space_8cpp" local="yes">cellapp/space.cpp</includedby>
    <includedby refid="vision__controller_8cpp" local="yes">cellapp/vision_controller.cpp</includedby>
    <includedby refid="witness_8cpp" local="yes">cellapp/witness.cpp</includedby>
    <incdepgraph>
      <node id="11656">
        <label>float.h</label>
      </node>
      <node id="11655">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="11654">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="11652">
        <label>entity_range_list_node.hpp</label>
        <link refid="entity__range__list__node_8hpp_source"/>
        <childnode refid="11653" relation="include">
        </childnode>
      </node>
      <node id="11657">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="11653">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="11654" relation="include">
        </childnode>
        <childnode refid="11655" relation="include">
        </childnode>
        <childnode refid="11656" relation="include">
        </childnode>
        <childnode refid="11657" relation="include">
        </childnode>
        <childnode refid="11658" relation="include">
        </childnode>
      </node>
      <node id="11651">
        <label>cellapp/range_trigger.hpp</label>
        <link refid="range_trigger.hpp"/>
        <childnode refid="11652" relation="include">
        </childnode>
      </node>
      <node id="11658">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11660">
        <label>cellapp/range_list_appeal_trigger.hpp</label>
        <link refid="range__list__appeal__trigger_8hpp_source"/>
      </node>
      <node id="11659">
        <label>cellapp/range_trigger.hpp</label>
        <link refid="range_trigger.hpp"/>
        <childnode refid="11660" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_range_trigger_node" prot="public">RangeTriggerNode</innerclass>
    <innerclass refid="class_range_trigger" prot="public">RangeTrigger</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RANGE_TRIGGER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANGE_TRIGGER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_range_list_node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_range_trigger_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node_1a5bc47e3b0b77b5b66d0e8e4f0ee68a27" kindref="member">RangeTriggerNode</ref>(<sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>*<sp/>pRangeTrigger,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListFlags<sp/>wantsFlags,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListFlags<sp/>makesFlags<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">x</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a3113a63a17fb1ae1d4856d7c53795340" kindref="member">z</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1aa0adc8162aeb9e96b7f7cb88fc27271a" kindref="member">oldX</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a62132a618da5247a95e58bffdba5085d" kindref="member">oldZ</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>BW::string<sp/><ref refid="class_range_trigger_node_1a4ccd72991aca5193ac777303d9a2841a" kindref="member">debugString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range_;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>range(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>range_<sp/>=<sp/>r;<sp/>}<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>call<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a2c651870dbb5fcd28cd876e15338850e" kindref="member">setRange</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>this<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldRange()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldRange_;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oldRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>)<sp/><sp/><sp/><sp/>{<sp/>oldRange_<sp/>=<sp/>r;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateOldRange()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>oldRange_<sp/>=<sp/>range_;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a869fbe58da10d6bbb41ec2fe90195b0a" kindref="member">crossedX</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1acab23e8d8ce325d5d7216ac820bd7b54" kindref="member">crossedZ</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>&amp;<sp/>rangeTrigger()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pRange_;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a6446ffa9eab859f16a37f4cd7c6de1bc" kindref="member">crossedXEntity</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a9247704ea49f96e6450ad8012eb7029b" kindref="member">crossedZEntity</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldOthZ<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a8e3e315f5f342fe4d6e5ee4419e14753" kindref="member">crossedXEntityRange</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1ac75731dc04f07a2784de498ed35a2c8a" kindref="member">crossedZEntityRange</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>node,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveCrossing<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>*<sp/>pRange_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range_;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldRange_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_range_trigger" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref>(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pCentralNode,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>wantsFlagsLower,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>wantsFlagsUpper,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>makesFlagsLower,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::RangeListFlags<sp/>makesFlagsUpper<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeWithoutContracting();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_list_node_1a71f3fea44c51ea217658cb2341653bd5" kindref="member">shuffleXThenZ</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1aa0adc8162aeb9e96b7f7cb88fc27271a" kindref="member">oldX</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a62132a618da5247a95e58bffdba5085d" kindref="member">oldZ</ref><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shuffleXThenZExpand(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xInc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zInc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldZ<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>shuffleXThenZContract(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xInc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>zInc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldX,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>oldZ<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a2c651870dbb5fcd28cd876e15338850e" kindref="member">setRange</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>BW::string<sp/><ref refid="class_range_trigger_node_1a4ccd72991aca5193ac777303d9a2841a" kindref="member">debugString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triggerEnter(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>entity<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triggerLeave(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>entity<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pQuery<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>containsInZ(<sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pQuery<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/>pCentralNode()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCentralNode_;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/>*<sp/>pUpperTrigger()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;upperBound_;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/>*<sp/>pLowerTrigger()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;lowerBound_;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInXRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subX<sp/>=<sp/>oldEntityX_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subX<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subX<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;<sp/>x)<sp/>&amp;&amp;<sp/>(x<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInXRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subX<sp/>=<sp/>pCentralNode_-&gt;<ref refid="class_range_trigger_node_1a164d9b80828ca9090285d4982191eefc" kindref="member">x</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subX<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subX<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;<sp/>x)<sp/>&amp;&amp;<sp/>(x<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInZRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_range_trigger_node_1a3113a63a17fb1ae1d4856d7c53795340" kindref="member">z</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="125"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subZ<sp/>=<sp/>oldEntityZ_;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subZ<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subZ<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;<sp/>z)<sp/>&amp;&amp;<sp/>(z<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInZRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subZ<sp/>=<sp/>pCentralNode_-&gt;z();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subZ<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subZ<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;<sp/>z)<sp/>&amp;&amp;<sp/>(z<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----<sp/>Range<sp/>-----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInXRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityLower,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityUpper,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="155"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subX<sp/>=<sp/>oldEntityX_;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subX<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subX<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;=<sp/>entityUpper)<sp/>&amp;&amp;<sp/>(entityLower<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInXRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityLower,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityUpper,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subX<sp/>=<sp/>pCentralNode_-&gt;x();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subX<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subX<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;=<sp/>entityUpper)<sp/>&amp;&amp;<sp/>(entityLower<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wasInZRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityLower,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityUpper,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subZ<sp/>=<sp/>oldEntityZ_;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subZ<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subZ<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;=<sp/>entityUpper)<sp/>&amp;&amp;<sp/>(entityLower<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInZRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityLower,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityUpper,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="196"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subZ<sp/>=<sp/>pCentralNode_-&gt;z();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>volatile<sp/>values<sp/>are<sp/>important.<sp/>If<sp/>this<sp/>is<sp/>not<sp/>done,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculation<sp/>may<sp/>be<sp/>done<sp/>with<sp/>greater<sp/>precision<sp/>than<sp/>what<sp/>was<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculating<sp/>the<sp/>nodes<sp/>position<sp/>in<sp/>the<sp/>range<sp/>list.<sp/>This<sp/>may<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>triggers<sp/>to<sp/>be<sp/>missed<sp/>or<sp/>to<sp/>occur<sp/>when<sp/>they<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lowerBound<sp/>=<sp/>subZ<sp/>-<sp/>range;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>subZ<sp/>+<sp/>range;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lowerBound<sp/>&lt;=<sp/>entityUpper)<sp/>&amp;&amp;<sp/>(entityLower<sp/>&lt;=<sp/>upperBound);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>upperBound_.range();<sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="212"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>this-&gt;range();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;isInXRange(<sp/>x,<sp/>range<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;isInZRange(<sp/>z,<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>protected:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCentralNode_;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperBound_;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_trigger_node" kindref="compound">RangeTriggerNode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lowerBound_;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Old<sp/>location<sp/>of<sp/>the<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldEntityX_;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldEntityZ_;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RANGE_TRIGGER_HPP</highlight></codeline>
    </programlisting>
    <location file="cellapp/range_trigger.hpp"/>
  </compounddef>
</doxygen>
