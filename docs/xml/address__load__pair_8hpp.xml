<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="address__load__pair_8hpp" kind="file" language="C++">
    <compoundname>address_load_pair.hpp</compoundname>
    <includes local="yes">network/basictypes.hpp</includes>
    <includes local="yes">cstdmf/binary_stream.hpp</includes>
    <includedby refid="baseapp_2entity__creator_8hpp" local="yes">baseapp/entity_creator.hpp</includedby>
    <includedby refid="baseappmgr_8cpp" local="yes">baseappmgr/baseappmgr.cpp</includedby>
    <incdepgraph>
      <node id="87">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="85">
        <label>baseapp/address_load_pair.hpp</label>
        <link refid="address_load_pair.hpp"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>network/basictypes.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="89">
        <label>baseapp/entity_creator.hpp</label>
        <link refid="baseapp_2entity__creator_8hpp_source"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>baseapp/load_entity_handler.hpp</label>
        <link refid="baseapp_2load__entity__handler_8hpp_source"/>
      </node>
      <node id="88">
        <label>baseapp/address_load_pair.hpp</label>
        <link refid="address_load_pair.hpp"/>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_base_app_addr_load_pair" prot="public">BaseAppAddrLoadPair</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="address__load__pair_8hpp_1a57a5b00d3eb8afe7398210b615c1d291" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BinaryIStream &amp;</type>
        <definition>BinaryIStream&amp; operator&gt;&gt;</definition>
        <argsstring>(BinaryIStream &amp;in, BaseAppAddrLoadPair &amp;v)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="struct_base_app_addr_load_pair" kindref="compound">BaseAppAddrLoadPair</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/address_load_pair.hpp" line="33" column="1" bodyfile="baseapp/address_load_pair.hpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="address__load__pair_8hpp_1a706f89456c863c597f08edcb73f659b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BinaryOStream &amp;</type>
        <definition>BinaryOStream&amp; operator&lt;&lt;</definition>
        <argsstring>(BinaryOStream &amp;out, const BaseAppAddrLoadPair &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_base_app_addr_load_pair" kindref="compound">BaseAppAddrLoadPair</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/address_load_pair.hpp" line="38" column="1" bodyfile="baseapp/address_load_pair.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ADDRESS_LOAD_PAIR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADDRESS_LOAD_PAIR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/basictypes.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/binary_stream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(<sp/>push,<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="struct_base_app_addr_load_pair" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_base_app_addr_load_pair" kindref="compound">BaseAppAddrLoadPair</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_base_app_addr_load_pair" kindref="compound">BaseAppAddrLoadPair</ref>()<sp/>:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>load_(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_base_app_addr_load_pair" kindref="compound">BaseAppAddrLoadPair</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>load<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr_(<sp/>addr<sp/>),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>load_(<sp/>load<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>load()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>load_;<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addr_;<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>addr_;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>load_;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(<sp/>pop<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>BinaryIStream&amp;<sp/>operator&gt;&gt;(<sp/>BinaryIStream<sp/>&amp;<sp/>in,<sp/><ref refid="struct_base_app_addr_load_pair" kindref="compound">BaseAppAddrLoadPair</ref><sp/>&amp;<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in<sp/>&gt;&gt;<sp/>v.addr_<sp/>&gt;&gt;<sp/>v.load_;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>BinaryOStream&amp;<sp/>operator&lt;&lt;(<sp/>BinaryOStream<sp/>&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_base_app_addr_load_pair" kindref="compound">BaseAppAddrLoadPair</ref><sp/>&amp;<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/>v.addr_<sp/>&lt;&lt;<sp/>v.load_;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ADDRESS_LOAD_PAIR_HPP</highlight></codeline>
    </programlisting>
    <location file="baseapp/address_load_pair.hpp"/>
  </compounddef>
</doxygen>
