<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="connection__wrapper__mgr_8cpp" kind="file" language="C++">
    <compoundname>connection_wrapper_mgr.cpp</compoundname>
    <includes refid="connection__wrapper__mgr_8hpp" local="yes">connection_wrapper_mgr.hpp</includes>
    <includes refid="connection__wrapper_8hpp" local="yes">connection_wrapper.hpp</includes>
    <includes refid="tcp__connection__wrapper_8hpp" local="yes">tcp_connection_wrapper.hpp</includes>
    <includes refid="udp__connection__wrapper_8hpp" local="yes">udp_connection_wrapper.hpp</includes>
    <includes local="yes">network/endpoint.hpp</includes>
    <includes local="yes">network/network_utils.hpp</includes>
    <includes local="yes">cstdmf/bw_set.hpp</includes>
    <incdepgraph>
      <node id="17420">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="17423">
        <label>tcp_connection_wrapper.hpp</label>
        <link refid="tcp__connection__wrapper_8hpp_source"/>
        <childnode refid="17417" relation="include">
        </childnode>
        <childnode refid="17418" relation="include">
        </childnode>
        <childnode refid="17424" relation="include">
        </childnode>
        <childnode refid="17425" relation="include">
        </childnode>
        <childnode refid="17419" relation="include">
        </childnode>
        <childnode refid="17420" relation="include">
        </childnode>
      </node>
      <node id="17415">
        <label>tools/bwmachined/connection_wrapper_mgr.cpp</label>
        <link refid="connection_wrapper_mgr.cpp"/>
        <childnode refid="17416" relation="include">
        </childnode>
        <childnode refid="17417" relation="include">
        </childnode>
        <childnode refid="17423" relation="include">
        </childnode>
        <childnode refid="17422" relation="include">
        </childnode>
        <childnode refid="17418" relation="include">
        </childnode>
        <childnode refid="17426" relation="include">
        </childnode>
        <childnode refid="17427" relation="include">
        </childnode>
      </node>
      <node id="17418">
        <label>network/endpoint.hpp</label>
      </node>
      <node id="17419">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="17426">
        <label>network/network_utils.hpp</label>
      </node>
      <node id="17422">
        <label>udp_connection_wrapper.hpp</label>
        <link refid="udp__connection__wrapper_8hpp_source"/>
        <childnode refid="17417" relation="include">
        </childnode>
        <childnode refid="17418" relation="include">
        </childnode>
        <childnode refid="17419" relation="include">
        </childnode>
        <childnode refid="17420" relation="include">
        </childnode>
      </node>
      <node id="17421">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="17416">
        <label>connection_wrapper_mgr.hpp</label>
        <link refid="connection__wrapper__mgr_8hpp_source"/>
        <childnode refid="17417" relation="include">
        </childnode>
        <childnode refid="17422" relation="include">
        </childnode>
        <childnode refid="17423" relation="include">
        </childnode>
        <childnode refid="17418" relation="include">
        </childnode>
        <childnode refid="17424" relation="include">
        </childnode>
        <childnode refid="17425" relation="include">
        </childnode>
      </node>
      <node id="17427">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="17417">
        <label>connection_wrapper.hpp</label>
        <link refid="connection__wrapper_8hpp_source"/>
        <childnode refid="17418" relation="include">
        </childnode>
        <childnode refid="17419" relation="include">
        </childnode>
        <childnode refid="17420" relation="include">
        </childnode>
        <childnode refid="17421" relation="include">
        </childnode>
      </node>
      <node id="17425">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="17424">
        <label>network/event_dispatcher.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;connection_wrapper_mgr.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection_wrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tcp_connection_wrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;udp_connection_wrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/endpoint.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/network_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/bw_set.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="class_connection_wrapper_mgr_1aec2185c9174a7a5475e774a6e13d9673" kindref="member">ConnectionWrapperMgr::ConnectionWrapperMgr</ref>(</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>dispatcher,<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ConnectionWrapper::ReadHandler</ref><sp/>*<sp/>pConnectionReadHandler<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatcher_(<sp/>dispatcher<sp/>),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>pConnectionReadHandler_(<sp/>pConnectionReadHandler<sp/>),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>tcpListenerHandlers_(),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>udpListenerHandlers_(),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>udpWriteHandlers_()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_connection_wrapper_mgr_1a8c2b9af525da3188ff9900f491e0f610" kindref="member">ConnectionWrapperMgr::closeEndpoints</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TCPListenerMap::iterator<sp/>iter<sp/>=<sp/>tcpListenerHandlers_.begin();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>tcpListenerHandlers_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;closeTemporaryEndpoints();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Connection<sp/>setup<sp/>and<sp/>maintenance<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_connection_wrapper_mgr_1a8a7571b419d67ed0406719ac40e0916e" kindref="member">ConnectionWrapperMgr::registerUDPForListen</ref>(<sp/>Endpoint<sp/>&amp;<sp/>ep<sp/>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;registerUDPForListen(<sp/>ep,<sp/>ep<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_connection_wrapper_mgr_1a8a7571b419d67ed0406719ac40e0916e" kindref="member">ConnectionWrapperMgr::registerUDPForListen</ref>(<sp/>Endpoint<sp/>&amp;<sp/>epListen,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Endpoint<sp/>&amp;<sp/>epResponse<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>infd<sp/>=<sp/>epListen.fileno();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>UDPSocketHandler<sp/>is<sp/>both<sp/>a<sp/>listen<sp/>and<sp/>read<sp/>handler.<sp/>The<sp/>handler<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stay<sp/>registered<sp/>with<sp/>the<sp/>dispatcher<sp/>for<sp/>the<sp/>life<sp/>of<sp/>the<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>UDPSocketHandler<sp/>*<sp/>pUDPSocketHandler<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UDPSocketHandler(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epListen,<sp/>epResponse,<sp/>pConnectionReadHandler_<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>udpListenerHandlers_[<sp/>infd<sp/>]<sp/>=<sp/>pUDPSocketHandler<sp/>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dispatcher_.registerFileDescriptor(<sp/>infd,<sp/>pUDPSocketHandler,<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UDP<sp/>Listener&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_connection_wrapper_mgr_1a45d753677867733aa7f24d5fd666ea5f" kindref="member">ConnectionWrapperMgr::registerTCPForListen</ref>(<sp/>Endpoint<sp/>&amp;<sp/>epListenTCP,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>connectionsAreTemporary<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>epListenTCP.fileno();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>handler<sp/>and<sp/>registration<sp/>will<sp/>persist<sp/>for<sp/>the<sp/>life<sp/>of<sp/>the<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>TCPSocketListenHandler<sp/>*<sp/>pHandler<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCPSocketListenHandler(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epListenTCP,<sp/>connectionsAreTemporary<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>tcpListenerHandlers_[<sp/>fd<sp/>]<sp/>=<sp/>pHandler<sp/>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dispatcher_.registerFileDescriptor(<sp/>fd,<sp/>pHandler,<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TCP<sp/>Listener&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_connection_wrapper_mgr_1a64fd23bfeb1d17e7741eb65b767aaa9a" kindref="member">ConnectionWrapperMgr::registerUDPConnectionForWrite</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UDPConnectionWrapperPtr</ref><sp/>pConnection<sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>create<sp/>a<sp/>write<sp/>handler<sp/>for<sp/>the<sp/>endpoint.<sp/>This<sp/>will<sp/>not<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>registered<sp/>to<sp/>write<sp/>yet,<sp/>not<sp/>until<sp/>there<sp/>is<sp/>actually<sp/>something<sp/>to<sp/>write.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;<sp/>UDPSocketWriteHandlerMap::iterator,<sp/>bool<sp/>&gt;<sp/>insertPoint<sp/>=</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udpWriteHandlers_.insert(<sp/>std::pair&lt;<sp/>int,<sp/>UDPSocketWriteHandler<sp/>*<sp/>&gt;(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pConnection-&gt;sendfd(),<sp/>NULL<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!insertPoint.second)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertPoint.first-&gt;second-&gt;addConnection(<sp/>pConnection<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insertPoint.first-&gt;second<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UDPSocketWriteHandler(<sp/>dispatcher_,<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pConnection<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_connection_wrapper_mgr_1ad5f4236fb01df32e0a7ee718edcbfb66" kindref="member">ConnectionWrapperMgr::cleanupConnectionHandlers</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeAll<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>the<sp/>TCP<sp/>listeners<sp/>and<sp/>any<sp/>connections<sp/>spawned<sp/>from<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TCPListenerMap::iterator<sp/>iter<sp/>=<sp/>tcpListenerHandlers_.begin();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>tcpListenerHandlers_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;cleanupConnections(<sp/>freeAll<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freeAll)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatcher_.deregisterFileDescriptor(<sp/>iter-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freeAll)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tcpListenerHandlers_.clear();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup<sp/>UDP<sp/>socket<sp/>listen<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freeAll)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UDPHandlerMap::iterator<sp/>iter<sp/>=<sp/>udpListenerHandlers_.begin();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>udpListenerHandlers_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatcher_.deregisterFileDescriptor(<sp/>iter-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udpListenerHandlers_.clear();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deregister<sp/>and<sp/>free<sp/>all<sp/>the<sp/>registered<sp/>UDP<sp/>write<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::set&lt;<sp/>int<sp/>&gt;<sp/>complete;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(UDPSocketWriteHandlerMap::iterator<sp/>iter<sp/>=<sp/>udpWriteHandlers_.begin();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>udpWriteHandlers_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freeAll<sp/>||<sp/>iter-&gt;second-&gt;empty())</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;second-&gt;empty())</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>empty,<sp/>would<sp/>have<sp/>deregistered<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatcher_.deregisterWriteFileDescriptor(<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>we<sp/>are<sp/>mid<sp/>iteration,<sp/>do<sp/>not<sp/>remove<sp/>from<sp/>the<sp/>map<sp/>yet.<sp/>Flag<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>deletion<sp/>by<sp/>moving<sp/>to<sp/>the<sp/>&quot;completed&quot;<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complete.insert(<sp/>iter-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>iteration<sp/>through<sp/>the<sp/>map<sp/>is<sp/>finished,<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>remove<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expired<sp/>write<sp/>handlers<sp/>from<sp/>the<sp/>udpWriteHandlers_<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BW::set&lt;<sp/>int<sp/>&gt;::const_iterator<sp/>iter<sp/>=<sp/>complete.begin();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>complete.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>udpWriteHandlers_.erase(<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>completed<sp/>handlers<sp/>erased,<sp/>the<sp/>set<sp/>can<sp/>now<sp/>be<sp/>wiped<sp/>clean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>complete.clear();</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_connection_wrapper_mgr_1a4d36ddb29dad28352bf187b2d11eacf1" kindref="member">ConnectionWrapperMgr::visitTCPConnectionsAcceptedFromEndpoint</ref>(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>Endpoint<sp/>&amp;<sp/>endpoint,<sp/><ref refid="class_t_c_p_connection_wrapper_visitor" kindref="compound">TCPConnectionWrapperVisitor</ref><sp/>&amp;<sp/>visitor<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>TCPListenerMap::iterator<sp/>it<sp/>=<sp/>tcpListenerHandlers_.find(<sp/>endpoint.fileno()<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>tcpListenerHandlers_.end())</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;ConnectionWrapperMgr::visitTCPConnectionsFromEP:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>find<sp/>a<sp/>listener<sp/>handler<sp/>for<sp/>the<sp/>specified<sp/>endpoint&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;second-&gt;visitConnectionsWith(<sp/>visitor<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::UDPSocketHandler::handleInputNotification(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>traffic<sp/>has<sp/>come<sp/>in<sp/>on<sp/>this<sp/>fd,<sp/>so<sp/>encapsulate<sp/>it<sp/>in<sp/>a<sp/>wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>pass<sp/>on<sp/>to<sp/>the<sp/>main<sp/>processing<sp/>code,<sp/>but<sp/>does<sp/>NOT<sp/>need<sp/>its<sp/>own</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ConnectionWrapperPtr<sp/>will<sp/>persist<sp/>until<sp/>any<sp/>replies<sp/>have<sp/>been<sp/>dealt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UDPConnectionWrapperPtr</ref><sp/>pConnection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_u_d_p_connection_wrapper" kindref="compound">UDPConnectionWrapper</ref>(<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionWrapperMgr_,<sp/>inEndpoint_,<sp/>outEndpoint_,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pConnectionReadHandler_<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>pConnection-&gt;recv();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::UDPSocketHandler::handleErrorNotification(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>needs<sp/>cleaning<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::TCPSocketListenHandler::visitConnectionsWith(</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_c_p_connection_wrapper_visitor" kindref="compound">TCPConnectionWrapperVisitor</ref><sp/>&amp;<sp/>visitor<sp/>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TCPConnectionWrappers::iterator<sp/>iter<sp/>=<sp/>tcpConnections_.begin();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>tcpConnections_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*iter)-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>attempt<sp/>to<sp/>send<sp/>to<sp/>destroyed<sp/>connections<sp/>that<sp/>are<sp/>pending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!visitor.<ref refid="class_t_c_p_connection_wrapper_visitor_1a656fa48474fdb3678a40f50a4eb2d97f" kindref="member">onTCPConnection</ref>(<sp/>(*iter)<sp/>))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>false<sp/>return<sp/>value<sp/>from<sp/>the<sp/>visitor<sp/>informs<sp/>us<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::TCPSocketListenHandler::cleanupConnections(</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeAll<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>destroyed<sp/>TCPConnectionWrappers<sp/>(which<sp/>double<sp/>as<sp/>TCP<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>notification<sp/>handlers<sp/>for<sp/>both<sp/>reading<sp/>and<sp/>writing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TCPConnectionWrappers::iterator<sp/>iter<sp/>=<sp/>tcpConnections_.begin();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>tcpConnections_.end();<sp/>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freeAll<sp/>&amp;&amp;<sp/>!((*iter)-&gt;isDestroyed()))</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>BWT-32585<sp/>-<sp/>consider<sp/>allowing<sp/>TCP<sp/>connections<sp/>to<sp/>flush<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shutting<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter)-&gt;destroy();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*iter)-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>tcpConnections_.erase(<sp/>iter<sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::TCPSocketListenHandler::handleInputNotification(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>traffic<sp/>has<sp/>come<sp/>in<sp/>on<sp/>this<sp/>fd,<sp/>so<sp/>encapsulate<sp/>it<sp/>in<sp/>a<sp/>wrapper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>generated<sp/>ConnectionWrapper<sp/>takes<sp/>ownership<sp/>of<sp/>pointer<sp/>and<sp/>handles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>input/output<sp/>notifications<sp/>from<sp/>the<sp/>dispatcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">TCPConnectionWrapperPtr</ref><sp/>pConnection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_c_p_connection_wrapper" kindref="compound">TCPConnectionWrapper</ref>(<sp/>ep_.accept(),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionWrapperMgr_.dispatcher_,<sp/>connectionsAreTemporary_,<sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*shouldOwnEndpoint*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionWrapperMgr_.pConnectionReadHandler_<sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!connectionsAreTemporary_)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>networkAddr<sp/>=<sp/>pConnection-&gt;networkAddr();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>permanent<sp/>connection,<sp/>this<sp/>is<sp/>noteworthy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>new<sp/>connection<sp/>from<sp/>%s:%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inet_ntoa(<sp/>(in_addr&amp;)networkAddr<sp/>),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntohs(<sp/>pConnection-&gt;networkPort()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>tcpConnections_.push_back(<sp/>pConnection<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::TCPSocketListenHandler::handleErrorNotification(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Don&apos;t<sp/>think<sp/>this<sp/>should<sp/>happen;<sp/>if<sp/>does,<sp/>maybe<sp/>clean<sp/>up<sp/>listener?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Or<sp/>rebind<sp/>it?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::TCPSocketListenHandler::closeTemporaryEndpoints()</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(TCPConnectionWrappers::iterator<sp/>iter<sp/>=<sp/>tcpConnections_.begin();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>tcpConnections_.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter)-&gt;closeTemporaryEndpoint();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">ConnectionWrapperMgr::UDPSocketWriteHandler::UDPSocketWriteHandler(</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>dispatcher,<sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UDPConnectionWrapperPtr</ref><sp/>pConnection<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatcher_(<sp/>dispatcher<sp/>),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>udpConnections_()</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>udpConnections_.push_back(<sp/>pConnection<sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatcher_.registerWriteFileDescriptor(<sp/>pConnection-&gt;sendfd(),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UDP<sp/>Write<sp/>Handler&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::UDPSocketWriteHandler::handleInputNotification(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udpConnections_.empty())</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;ConnectionWrapperMgr::&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UDPSocketWriteHandler::handleInputNotification:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>input<sp/>notification<sp/>on<sp/>registered<sp/>write<sp/>file<sp/>descriptor<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;without<sp/>any<sp/>ConnectionWrappers<sp/>queued<sp/>for<sp/>sending\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shouldn&apos;t<sp/>be<sp/>calling<sp/>this<sp/>anyway,<sp/>make<sp/>sure<sp/>it<sp/>doesn&apos;t<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatcher_.deregisterWriteFileDescriptor(<sp/>fd<sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>potentially<sp/>have<sp/>multiple<sp/>&quot;connections&quot;<sp/>waiting<sp/>to<sp/>write<sp/>to<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>descriptor,<sp/>so<sp/>process<sp/>the<sp/>first<sp/>one,<sp/>and<sp/>let<sp/>the<sp/>dispatcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>again<sp/>if<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>UDPConnectionWrappers::iterator<sp/>iter<sp/>=<sp/>udpConnections_.begin();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UDPConnectionWrapperPtr</ref><sp/>pConnection<sp/>=<sp/>(*iter);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>ConnectionWrapper::SendStatus<sp/>status<sp/>=<sp/>pConnection-&gt;sendBufferedData();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>ConnectionWrapper::SEND_FAILURE)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>networkError<sp/>=<sp/>lastNetworkError();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UDPSocketWriteHandler::handleInputNotification:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>writing<sp/>to<sp/>endpoint:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>networkError<sp/>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;removeConnection(<sp/>pConnection,<sp/>iter<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>ConnectionWrapper::SEND_IN_PROGRESS)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;removeConnection(<sp/>pConnection,<sp/>iter<sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::UDPSocketWriteHandler::handleErrorNotification(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>all<sp/>the<sp/>connections,<sp/>then<sp/>deregister</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>udpConnections_.clear();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatcher_.deregisterWriteFileDescriptor(<sp/>fd<sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entire<sp/>handler<sp/>will<sp/>be<sp/>deleted<sp/>if<sp/>still<sp/>empty<sp/>by<sp/>next<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::UDPSocketWriteHandler::addConnection(</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UDPConnectionWrapperPtr</ref><sp/>pConnection<sp/>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udpConnections_.empty())</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deregisters<sp/>when<sp/>last<sp/>connection<sp/>removed,<sp/>so<sp/>need<sp/>to<sp/>re-register<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>handler<sp/>is<sp/>currently<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatcher_.registerWriteFileDescriptor(<sp/>pConnection-&gt;sendfd(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UDP<sp/>Write<sp/>Handler&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>udpConnections_.push_back(<sp/>pConnection<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConnectionWrapperMgr::UDPSocketWriteHandler::removeConnection(</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UDPConnectionWrapperPtr</ref><sp/>pConnection,<sp/>UDPConnectionWrappers::iterator<sp/>iter<sp/>)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>udpConnections_.erase(<sp/>iter<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>no<sp/>more<sp/>connections<sp/>waiting<sp/>after<sp/>this<sp/>one<sp/>was<sp/>removed,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>deregister<sp/>the<sp/>write<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(udpConnections_.empty())</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatcher_.deregisterWriteFileDescriptor(<sp/>pConnection-&gt;sendfd()<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>connection_wrapper_mgr.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/bwmachined/connection_wrapper_mgr.cpp"/>
  </compounddef>
</doxygen>
