<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_replay_data_file_writer" kind="class" language="C++" prot="public">
    <compoundname>ReplayDataFileWriter</compoundname>
    <basecompoundref prot="private" virt="non-virtual">BackgroundFileWriterListener</basecompoundref>
    <includes refid="replay__data__file__writer_8hpp" local="no">replay_data_file_writer.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_replay_data_file_writer_1a4757e83c64081f81466d7ce8c481c2c7" prot="private" static="no">
        <type>BW::map&lt; GameTime, <ref refid="class_tick_replay_data" kindref="compound">TickReplayData</ref> &gt;</type>
        <definition>typedef BW::map&lt; GameTime, TickReplayData &gt; ReplayDataFileWriter::TickData</definition>
        <argsstring></argsstring>
        <name>TickData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="174" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_replay_data_file_writer_1a0df5d62e17c0cc5c755de7c29b34cfcb" prot="private" static="no">
        <type>BW::vector&lt; <ref refid="class_replay_data_file_writer_listener" kindref="compound">ReplayDataFileWriterListener</ref> * &gt;</type>
        <definition>typedef BW::vector&lt; ReplayDataFileWriterListener * &gt; ReplayDataFileWriter::Listeners</definition>
        <argsstring></argsstring>
        <name>Listeners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="182" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_replay_data_file_writer_1a0ede460917f2c753b8a64bdd62bd1934" prot="private" static="no">
        <type>BW::map&lt; BW::string, <ref refid="class_replay_data_file_writer" kindref="compound">ReplayDataFileWriter</ref> * &gt;</type>
        <definition>typedef BW::map&lt; BW::string, ReplayDataFileWriter * &gt; ReplayDataFileWriter::Writers</definition>
        <argsstring></argsstring>
        <name>Writers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="185" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_replay_data_file_writer_1a63814ed81787261cad90e2cb985ef230" prot="private" static="no" mutable="no">
        <type>BWCompressionType</type>
        <definition>BWCompressionType ReplayDataFileWriter::compressionType_</definition>
        <argsstring></argsstring>
        <name>compressionType_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="162" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a3c0a64deece97e2dd771a75836a450aa" prot="private" static="no" mutable="no">
        <type>GameTime</type>
        <definition>GameTime ReplayDataFileWriter::currentTick_</definition>
        <argsstring></argsstring>
        <name>currentTick_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="164" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a679deef5643c59638b79fe85c5db4078" prot="private" static="no" mutable="no">
        <type>GameTime</type>
        <definition>GameTime ReplayDataFileWriter::lastTickPendingWrite_</definition>
        <argsstring></argsstring>
        <name>lastTickPendingWrite_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="165" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1acddacba6f791f0f0caeed9f9ef5bf7d1" prot="private" static="no" mutable="no">
        <type>GameTime</type>
        <definition>GameTime ReplayDataFileWriter::lastTickWritten_</definition>
        <argsstring></argsstring>
        <name>lastTickWritten_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="166" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1ad8a34079ba13d6c5043d8dd5b2acb4d9" prot="private" static="no" mutable="no">
        <type>off_t</type>
        <definition>off_t ReplayDataFileWriter::lastChunkPosition_</definition>
        <argsstring></argsstring>
        <name>lastChunkPosition_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="167" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1ac351c7fa19330c743972d29cfa6431df" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint ReplayDataFileWriter::lastChunkLength_</definition>
        <argsstring></argsstring>
        <name>lastChunkLength_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="168" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a1e4a701ea444f23ae2d1d567de782642" prot="private" static="no" mutable="no">
        <type>MemoryOStream</type>
        <definition>MemoryOStream ReplayDataFileWriter::lastSignature_</definition>
        <argsstring></argsstring>
        <name>lastSignature_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="169" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a0f1d71d9385b897587b62b00daf74f2d" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint ReplayDataFileWriter::numTicksToSign_</definition>
        <argsstring></argsstring>
        <name>numTicksToSign_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="170" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a3bb7d8d8561d35058a9b770d42968e51" prot="private" static="no" mutable="no">
        <type>ChecksumSchemePtr</type>
        <definition>ChecksumSchemePtr ReplayDataFileWriter::pChecksumScheme_</definition>
        <argsstring></argsstring>
        <name>pChecksumScheme_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="172" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a5c79717096e6d84fe03e7b4997c0cd02" prot="private" static="no" mutable="no">
        <type>TickData</type>
        <definition>TickData ReplayDataFileWriter::bufferedTickData_</definition>
        <argsstring></argsstring>
        <name>bufferedTickData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="175" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1ae85615573f3584c90b116c6bf517b845" prot="private" static="no" mutable="no">
        <type>GameTime</type>
        <definition>GameTime ReplayDataFileWriter::numTicksWritten_</definition>
        <argsstring></argsstring>
        <name>numTicksWritten_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="176" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1acc4ade424b5b8e06f6a8a9cf368b8d8e" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string ReplayDataFileWriter::path_</definition>
        <argsstring></argsstring>
        <name>path_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="178" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a654d28a4653c7cb2c3f48e17f94baa9f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ReplayDataFileWriter::isFinalising_</definition>
        <argsstring></argsstring>
        <name>isFinalising_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="179" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1a4114587541003199fdbb20628817ddeb" prot="private" static="no" mutable="no">
        <type>IBackgroundFileWriterPtr</type>
        <definition>IBackgroundFileWriterPtr ReplayDataFileWriter::pWriter_</definition>
        <argsstring></argsstring>
        <name>pWriter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="180" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_replay_data_file_writer_1aa72e5239b9ce5e403f1c78854a438433" prot="private" static="no" mutable="no">
        <type><ref refid="class_listeners" kindref="compound">Listeners</ref></type>
        <definition>Listeners ReplayDataFileWriter::listeners_</definition>
        <argsstring></argsstring>
        <name>listeners_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="183" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_replay_data_file_writer_1a4cb4a1d7adab11474b0a6ebd704d19b9" prot="private" static="yes" mutable="no">
        <type>Writers</type>
        <definition>BW_BEGIN_NAMESPACE ReplayDataFileWriter::Writers ReplayDataFileWriter::s_activeWriters_</definition>
        <argsstring></argsstring>
        <name>s_activeWriters_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="186" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_replay_data_file_writer_1ae6c08aa54e12c1fde1ca4a94583f4d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ReplayDataFileWriter::ReplayDataFileWriter</definition>
        <argsstring>(IBackgroundFileWriter *pWriter, ChecksumSchemePtr pChecksumScheme, BWCompressionType compressionType, const MD5::Digest &amp;digest, uint numTicksToSign, const ReplayMetaData &amp;metaData, const BW::string &amp;nonce=BW::string(&quot;&quot;))</argsstring>
        <name>ReplayDataFileWriter</name>
        <param>
          <type>IBackgroundFileWriter *</type>
          <declname>pWriter</declname>
        </param>
        <param>
          <type>ChecksumSchemePtr</type>
          <declname>pChecksumScheme</declname>
        </param>
        <param>
          <type>BWCompressionType</type>
          <declname>compressionType</declname>
        </param>
        <param>
          <type>const MD5::Digest &amp;</type>
          <declname>digest</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>numTicksToSign</declname>
        </param>
        <param>
          <type>const ReplayMetaData &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>nonce</declname>
          <defval>BW::string(&quot;&quot;)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for new replay data files.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pWriter</parametername>
</parameternamelist>
<parameterdescription>
<para>The background file writer instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pChecksumScheme</parametername>
</parameternamelist>
<parameterdescription>
<para>The checksum scheme used for signing. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compressionType</parametername>
</parameternamelist>
<parameterdescription>
<para>The compression level to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>The defs digest. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numTicksToSign</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of ticks to sign together. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metaData</parametername>
</parameternamelist>
<parameterdescription>
<para>The meta-data to write. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>The nonce to use when writing the header. This should only be used for unit tests, normally this should be empty so a suitable nonce can be generated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="94" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="40" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a4795eabdec802a35600994c209e4eed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ReplayDataFileWriter::ReplayDataFileWriter</definition>
        <argsstring>(IBackgroundFileWriter *pWriter, ChecksumSchemePtr pChecksumScheme, const RecordingRecoveryData &amp;recoveryData)</argsstring>
        <name>ReplayDataFileWriter</name>
        <param>
          <type>IBackgroundFileWriter *</type>
          <declname>pWriter</declname>
        </param>
        <param>
          <type>ChecksumSchemePtr</type>
          <declname>pChecksumScheme</declname>
        </param>
        <param>
          <type>const <ref refid="class_recording_recovery_data" kindref="compound">RecordingRecoveryData</ref> &amp;</type>
          <declname>recoveryData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for recovering from existing partial replay files.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pWriter</parametername>
</parameternamelist>
<parameterdescription>
<para>The background file writer instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pChecksumScheme</parametername>
</parameternamelist>
<parameterdescription>
<para>The checksum scheme for signing. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recoveryData</parametername>
</parameternamelist>
<parameterdescription>
<para>The recovery data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="102" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="98" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a7f9746970ef4a39168acba9d0f1c909a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ReplayDataFileWriter::~ReplayDataFileWriter</definition>
        <argsstring>()</argsstring>
        <name>~ReplayDataFileWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="106" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="153" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a99c406b9b001b2b541a1c63386cbf062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::addTickData</definition>
        <argsstring>(GameTime tick, uint numCells, BinaryIStream &amp;blob)</argsstring>
        <name>addTickData</name>
        <param>
          <type>GameTime</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>numCells</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds the tick data from a cell for a particular tick.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tick</parametername>
</parameternamelist>
<parameterdescription>
<para>The game tick. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numCells</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of cell tick data to expect for this tick, including this one. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blob</parametername>
</parameternamelist>
<parameterdescription>
<para>The tick data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="109" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="179" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ab3bf846c3570874b669247a91ae9b5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::addListener</definition>
        <argsstring>(ReplayDataFileWriterListener *pListener)</argsstring>
        <name>addListener</name>
        <param>
          <type><ref refid="class_replay_data_file_writer_listener" kindref="compound">ReplayDataFileWriterListener</ref> *</type>
          <declname>pListener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the listener callback object.</para><para><ref refid="class_listeners" kindref="compound">Listeners</ref> should have longer lifetimes than the writer they are listening to; that is, they should not be destructed before any writers they listen to are destructed, otherwise this will cause dangling pointers that will cause issues when writers are destructed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pListener</parametername>
</parameternamelist>
<parameterdescription>
<para>The listener object to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="111" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="439" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ac114ac6310622f3a11564db6ace0b09f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; ReplayDataFileWriter::path</definition>
        <argsstring>() const </argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="113" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a75987bbe93d9f5a50353a47e5abe7616" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReplayDataFileWriter::isFinalising</definition>
        <argsstring>() const </argsstring>
        <name>isFinalising</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="115" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a233c2af04daccad4a0ac51d65fbebf34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReplayDataFileWriter::isClosed</definition>
        <argsstring>() const </argsstring>
        <name>isClosed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="116" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ad1c065b03485ed2f8e646fe29e322006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::close</definition>
        <argsstring>(bool shouldFinalise=true)</argsstring>
        <name>close</name>
        <param>
          <type>bool</type>
          <declname>shouldFinalise</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method closes the writer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shouldFinalise</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, the file will be closed for writing without being set read-only or its numTicks field updated. If true, this is equivalent to calling <ref refid="class_replay_data_file_writer_1afa910660ae80020f4366c1478efd9243" kindref="member">finalise()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="118" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="518" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1afa910660ae80020f4366c1478efd9243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::finalise</definition>
        <argsstring>()</argsstring>
        <name>finalise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts finalising the replay data file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="120" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="534" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a938f9febdee2af24285a062016d5acc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReplayDataFileWriter::hasError</definition>
        <argsstring>() const </argsstring>
        <name>hasError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns true if the underlying file writer is in error.</para><para><simplesect kind="return"><para>true if an error has occurred, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="122" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="586" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ae06eac54608e811275b3259be539eba2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string ReplayDataFileWriter::errorString</definition>
        <argsstring>() const </argsstring>
        <name>errorString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the error string from the file writer.</para><para><simplesect kind="return"><para>an error string. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="123" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="597" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a8b3eee8adb8f80c8cbfb9be0ac03a675" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BWCompressionType</type>
        <definition>BWCompressionType ReplayDataFileWriter::compressionType</definition>
        <argsstring>() const </argsstring>
        <name>compressionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="125" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a5e7548d50361990fc57ff48f47a6459a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint ReplayDataFileWriter::numTicksToSign</definition>
        <argsstring>()</argsstring>
        <name>numTicksToSign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="126" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ab24a6f2384e7e104d6847faf50a267e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GameTime</type>
        <definition>GameTime ReplayDataFileWriter::numTicksWritten</definition>
        <argsstring>() const </argsstring>
        <name>numTicksWritten</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="128" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a13a1ed1ba3440e88fa04fc68ca15c1fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GameTime</type>
        <definition>GameTime ReplayDataFileWriter::lastTickWritten</definition>
        <argsstring>() const </argsstring>
        <name>lastTickWritten</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="129" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a0ce076b60afcad7ddeab976a3e0ba9b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GameTime</type>
        <definition>GameTime ReplayDataFileWriter::lastTickPendingWrite</definition>
        <argsstring>() const </argsstring>
        <name>lastTickPendingWrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="130" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a9c2797bacbed6ee3c4ce8760b6b90ba3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>off_t</type>
        <definition>off_t ReplayDataFileWriter::lastChunkPosition</definition>
        <argsstring>() const </argsstring>
        <name>lastChunkPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="131" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a2111aa0a31c4f4b173a946c94b363b1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint</type>
        <definition>uint ReplayDataFileWriter::lastChunkLength</definition>
        <argsstring>() const </argsstring>
        <name>lastChunkLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="132" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a5390000c80e75e83b066240cc784cebb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_recording_recovery_data" kindref="compound">RecordingRecoveryData</ref></type>
        <definition>const RecordingRecoveryData ReplayDataFileWriter::recoveryData</definition>
        <argsstring>() const </argsstring>
        <name>recoveryData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the recovery data for this writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="134" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="728" bodyend="741"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_replay_data_file_writer_1ad2b03f910a904ed063f6cc2da744d585" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReplayDataFileWriter::existsForPath</definition>
        <argsstring>(const BW::string &amp;path)</argsstring>
        <name>existsForPath</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether a replay data file writer already exists for the given path.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if there is existing writer with that path, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="136" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="617" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a2cafbd11c037f627568776e9f804aa28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::closeAll</definition>
        <argsstring>(ReplayDataFileWriterListener *pListener, bool shouldFinalise=true)</argsstring>
        <name>closeAll</name>
        <param>
          <type><ref refid="class_replay_data_file_writer_listener" kindref="compound">ReplayDataFileWriterListener</ref> *</type>
          <declname>pListener</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldFinalise</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method closes active writer instances that are not already finalising.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shouldFinalise</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the writers that are not already finalising should be finalised or closed immediately. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pListener</parametername>
</parameternamelist>
<parameterdescription>
<para>This listener is added to each of the writer instances that are finalising (even those that were already finalising) to receive notification when they are each finalised. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="137" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="634" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1af7954973143c90db80e4fd676d3409fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReplayDataFileWriter::haveAllClosed</definition>
        <argsstring>()</argsstring>
        <name>haveAllClosed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether there are unfinalised writers.</para><para><simplesect kind="return"><para>true if all active writers have been finalised, otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="139" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="669" bodyend="672"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_replay_data_file_writer_1a76450b0df7d482904fbaeae6609ddd63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::commonInit</definition>
        <argsstring>()</argsstring>
        <name>commonInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs initialisation common to new files and recovered files. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="143" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="137" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a2a57f4f0c822a9e87e6ee2ffc095c075" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::finaliseCompletedTickData</definition>
        <argsstring>(TickReplayData &amp;pTickData)</argsstring>
        <name>finaliseCompletedTickData</name>
        <param>
          <type><ref refid="class_tick_replay_data" kindref="compound">TickReplayData</ref> &amp;</type>
          <declname>pTickData</declname>
          <defname>completedTickReplayData</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method finalises any complete tick data from the current tick onwards, and potentially writes a new chunk of signed ticks to disk if there have accumulated enough ticks to sign.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>completedTickReplayData</parametername>
</parameternamelist>
<parameterdescription>
<para>The latest completed tick data. This tick and all earlier received tick data will be written out, even if the earlier tick data is not complete. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="145" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="275" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ad354e7d4d99b97bc233a4f20f1a2159d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::signAndWriteCompletedTickData</definition>
        <argsstring>(bool isLastChunk=false)</argsstring>
        <name>signAndWriteCompletedTickData</name>
        <param>
          <type>bool</type>
          <declname>isLastChunk</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method signs and writes a chunk of completed tick data chunks.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isLastChunk</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether this is the last chunk for the file, and should be signed even if there are not enough ticks to meet the usual numTicksToSign_ threshold. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="146" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="314" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1af90eec275e7f1ae3f9ce6d94c26a420f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::setReadOnly</definition>
        <argsstring>()</argsstring>
        <name>setReadOnly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ad12423f60159dee2a543e1575cd54d1b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::closeWriter</definition>
        <argsstring>()</argsstring>
        <name>closeWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method releases the writer and removes this writer from the active writing set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="148" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="560" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a92fe86532d54dcc28fdb37c5b7b0f66e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::notifyListenersOfError</definition>
        <argsstring>()</argsstring>
        <name>notifyListenersOfError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method notifies registered listeners of an error condition on this writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="150" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="679" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a160af169d8cdeca722980f0fca006461" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::notifyListenersOfCompletion</definition>
        <argsstring>()</argsstring>
        <name>notifyListenersOfCompletion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method notifies registered listeners of writing completion on this writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="151" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="696" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a353eeb9ae61ca360e7798a23fbb986a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::notifyListenersOfDestruction</definition>
        <argsstring>()</argsstring>
        <name>notifyListenersOfDestruction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method notifies registered listeners of this writer&apos;s destruction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="152" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="712" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1a0b4a32a20fe04c55f8f8335df9dc15a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::onBackgroundFileWritingError</definition>
        <argsstring>(IBackgroundFileWriter &amp;fileWriter)</argsstring>
        <name>onBackgroundFileWritingError</name>
        <param>
          <type>IBackgroundFileWriter &amp;</type>
          <declname>fileWriter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="155" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="449" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="class_replay_data_file_writer_1ac1e0d123e1a27fdc7997acfd12473123" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ReplayDataFileWriter::onBackgroundFileWritingComplete</definition>
        <argsstring>(IBackgroundFileWriter &amp;fileWriter, long filePosition, int userArg)</argsstring>
        <name>onBackgroundFileWritingComplete</name>
        <param>
          <type>IBackgroundFileWriter &amp;</type>
          <declname>fileWriter</declname>
        </param>
        <param>
          <type>long</type>
          <declname>filePosition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>userArg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/replay_data_file_writer.hpp" line="158" column="1" bodyfile="baseapp/replay_data_file_writer.cpp" bodystart="460" bodyend="507"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements writing to a replay data file. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2410">
        <label>BackgroundFileWriterListener</label>
      </node>
      <node id="2409">
        <label>ReplayDataFileWriter</label>
        <link refid="class_replay_data_file_writer"/>
        <childnode refid="2410" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2412">
        <label>BackgroundFileWriterListener</label>
      </node>
      <node id="2411">
        <label>ReplayDataFileWriter</label>
        <link refid="class_replay_data_file_writer"/>
        <childnode refid="2412" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="baseapp/replay_data_file_writer.hpp" line="92" column="1" bodyfile="baseapp/replay_data_file_writer.hpp" bodystart="91" bodyend="187"/>
    <listofallmembers>
      <member refid="class_replay_data_file_writer_1ab3bf846c3570874b669247a91ae9b5d0" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>addListener</name></member>
      <member refid="class_replay_data_file_writer_1a99c406b9b001b2b541a1c63386cbf062" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>addTickData</name></member>
      <member refid="class_replay_data_file_writer_1a5c79717096e6d84fe03e7b4997c0cd02" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>bufferedTickData_</name></member>
      <member refid="class_replay_data_file_writer_1ad1c065b03485ed2f8e646fe29e322006" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>close</name></member>
      <member refid="class_replay_data_file_writer_1a2cafbd11c037f627568776e9f804aa28" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>closeAll</name></member>
      <member refid="class_replay_data_file_writer_1ad12423f60159dee2a543e1575cd54d1b" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>closeWriter</name></member>
      <member refid="class_replay_data_file_writer_1a76450b0df7d482904fbaeae6609ddd63" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>commonInit</name></member>
      <member refid="class_replay_data_file_writer_1a8b3eee8adb8f80c8cbfb9be0ac03a675" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>compressionType</name></member>
      <member refid="class_replay_data_file_writer_1a63814ed81787261cad90e2cb985ef230" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>compressionType_</name></member>
      <member refid="class_replay_data_file_writer_1a3c0a64deece97e2dd771a75836a450aa" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>currentTick_</name></member>
      <member refid="class_replay_data_file_writer_1ae06eac54608e811275b3259be539eba2" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>errorString</name></member>
      <member refid="class_replay_data_file_writer_1ad2b03f910a904ed063f6cc2da744d585" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>existsForPath</name></member>
      <member refid="class_replay_data_file_writer_1afa910660ae80020f4366c1478efd9243" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>finalise</name></member>
      <member refid="class_replay_data_file_writer_1a2a57f4f0c822a9e87e6ee2ffc095c075" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>finaliseCompletedTickData</name></member>
      <member refid="class_replay_data_file_writer_1a938f9febdee2af24285a062016d5acc1" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>hasError</name></member>
      <member refid="class_replay_data_file_writer_1af7954973143c90db80e4fd676d3409fe" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>haveAllClosed</name></member>
      <member refid="class_replay_data_file_writer_1a233c2af04daccad4a0ac51d65fbebf34" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>isClosed</name></member>
      <member refid="class_replay_data_file_writer_1a75987bbe93d9f5a50353a47e5abe7616" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>isFinalising</name></member>
      <member refid="class_replay_data_file_writer_1a654d28a4653c7cb2c3f48e17f94baa9f" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>isFinalising_</name></member>
      <member refid="class_replay_data_file_writer_1a2111aa0a31c4f4b173a946c94b363b1f" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastChunkLength</name></member>
      <member refid="class_replay_data_file_writer_1ac351c7fa19330c743972d29cfa6431df" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastChunkLength_</name></member>
      <member refid="class_replay_data_file_writer_1a9c2797bacbed6ee3c4ce8760b6b90ba3" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastChunkPosition</name></member>
      <member refid="class_replay_data_file_writer_1ad8a34079ba13d6c5043d8dd5b2acb4d9" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastChunkPosition_</name></member>
      <member refid="class_replay_data_file_writer_1a1e4a701ea444f23ae2d1d567de782642" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastSignature_</name></member>
      <member refid="class_replay_data_file_writer_1a0ce076b60afcad7ddeab976a3e0ba9b0" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastTickPendingWrite</name></member>
      <member refid="class_replay_data_file_writer_1a679deef5643c59638b79fe85c5db4078" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastTickPendingWrite_</name></member>
      <member refid="class_replay_data_file_writer_1a13a1ed1ba3440e88fa04fc68ca15c1fd" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastTickWritten</name></member>
      <member refid="class_replay_data_file_writer_1acddacba6f791f0f0caeed9f9ef5bf7d1" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>lastTickWritten_</name></member>
      <member refid="class_replay_data_file_writer_1a0df5d62e17c0cc5c755de7c29b34cfcb" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>Listeners</name></member>
      <member refid="class_replay_data_file_writer_1aa72e5239b9ce5e403f1c78854a438433" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>listeners_</name></member>
      <member refid="class_replay_data_file_writer_1a160af169d8cdeca722980f0fca006461" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>notifyListenersOfCompletion</name></member>
      <member refid="class_replay_data_file_writer_1a353eeb9ae61ca360e7798a23fbb986a4" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>notifyListenersOfDestruction</name></member>
      <member refid="class_replay_data_file_writer_1a92fe86532d54dcc28fdb37c5b7b0f66e" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>notifyListenersOfError</name></member>
      <member refid="class_replay_data_file_writer_1a5e7548d50361990fc57ff48f47a6459a" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>numTicksToSign</name></member>
      <member refid="class_replay_data_file_writer_1a0f1d71d9385b897587b62b00daf74f2d" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>numTicksToSign_</name></member>
      <member refid="class_replay_data_file_writer_1ab24a6f2384e7e104d6847faf50a267e4" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>numTicksWritten</name></member>
      <member refid="class_replay_data_file_writer_1ae85615573f3584c90b116c6bf517b845" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>numTicksWritten_</name></member>
      <member refid="class_replay_data_file_writer_1ac1e0d123e1a27fdc7997acfd12473123" prot="private" virt="virtual"><scope>ReplayDataFileWriter</scope><name>onBackgroundFileWritingComplete</name></member>
      <member refid="class_replay_data_file_writer_1a0b4a32a20fe04c55f8f8335df9dc15a3" prot="private" virt="virtual"><scope>ReplayDataFileWriter</scope><name>onBackgroundFileWritingError</name></member>
      <member refid="class_replay_data_file_writer_1ac114ac6310622f3a11564db6ace0b09f" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>path</name></member>
      <member refid="class_replay_data_file_writer_1acc4ade424b5b8e06f6a8a9cf368b8d8e" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>path_</name></member>
      <member refid="class_replay_data_file_writer_1a3bb7d8d8561d35058a9b770d42968e51" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>pChecksumScheme_</name></member>
      <member refid="class_replay_data_file_writer_1a4114587541003199fdbb20628817ddeb" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>pWriter_</name></member>
      <member refid="class_replay_data_file_writer_1a5390000c80e75e83b066240cc784cebb" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>recoveryData</name></member>
      <member refid="class_replay_data_file_writer_1ae6c08aa54e12c1fde1ca4a94583f4d95" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>ReplayDataFileWriter</name></member>
      <member refid="class_replay_data_file_writer_1a4795eabdec802a35600994c209e4eed9" prot="public" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>ReplayDataFileWriter</name></member>
      <member refid="class_replay_data_file_writer_1a4cb4a1d7adab11474b0a6ebd704d19b9" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>s_activeWriters_</name></member>
      <member refid="class_replay_data_file_writer_1af90eec275e7f1ae3f9ce6d94c26a420f" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>setReadOnly</name></member>
      <member refid="class_replay_data_file_writer_1ad354e7d4d99b97bc233a4f20f1a2159d" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>signAndWriteCompletedTickData</name></member>
      <member refid="class_replay_data_file_writer_1a4757e83c64081f81466d7ce8c481c2c7" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>TickData</name></member>
      <member refid="class_replay_data_file_writer_1a0ede460917f2c753b8a64bdd62bd1934" prot="private" virt="non-virtual"><scope>ReplayDataFileWriter</scope><name>Writers</name></member>
      <member refid="class_replay_data_file_writer_1a7f9746970ef4a39168acba9d0f1c909a" prot="public" virt="virtual"><scope>ReplayDataFileWriter</scope><name>~ReplayDataFileWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
