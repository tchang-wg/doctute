<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cellapp_8cpp" kind="file" language="C++">
    <compoundname>cellapp.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <includes refid="ack__cell__app__death__helper_8hpp" local="yes">ack_cell_app_death_helper.hpp</includes>
    <includes refid="add__to__cellappmgr__helper_8hpp" local="yes">add_to_cellappmgr_helper.hpp</includes>
    <includes refid="buffered__entity__messages_8hpp" local="yes">buffered_entity_messages.hpp</includes>
    <includes refid="buffered__ghost__messages_8hpp" local="yes">buffered_ghost_messages.hpp</includes>
    <includes refid="cell_8hpp" local="yes">cell.hpp</includes>
    <includes refid="cellapp__config_8hpp" local="yes">cellapp_config.hpp</includes>
    <includes refid="cell__app__channels_8hpp" local="yes">cell_app_channels.hpp</includes>
    <includes refid="cell__chunk_8hpp" local="yes">cell_chunk.hpp</includes>
    <includes refid="cell__viewer__server_8hpp" local="yes">cell_viewer_server.hpp</includes>
    <includes refid="cellapp__interface_8hpp" local="yes">cellapp_interface.hpp</includes>
    <includes refid="cellapp_2entity_8hpp" local="yes">entity.hpp</includes>
    <includes refid="cellapp_2entity__creator_8hpp" local="yes">entity_creator.hpp</includes>
    <includes refid="entity__population_8hpp" local="yes">entity_population.hpp</includes>
    <includes refid="cellapp_2entity__type_8hpp" local="yes">entity_type.hpp</includes>
    <includes refid="cellapp_2id__config_8hpp" local="yes">id_config.hpp</includes>
    <includes refid="cellapp_2py__entities_8hpp" local="yes">py_entities.hpp</includes>
    <includes refid="real__entity_8hpp" local="yes">real_entity.hpp</includes>
    <includes refid="replay__data__collector_8hpp" local="yes">replay_data_collector.hpp</includes>
    <includes refid="space_8hpp" local="yes">space.hpp</includes>
    <includes refid="spaces_8hpp" local="yes">spaces.hpp</includes>
    <includes refid="cellapp_2py__space_8hpp" local="yes">py_space.hpp</includes>
    <includes refid="cellapp_2py__spaces_8hpp" local="yes">py_spaces.hpp</includes>
    <includes refid="witness_8hpp" local="yes">witness.hpp</includes>
    <includes refid="space__data__object_8hpp" local="yes">space_data_object.hpp</includes>
    <includes refid="baseapp__int__interface_8hpp" local="yes">baseapp/baseapp_int_interface.hpp</includes>
    <includes refid="baseapp__int__interface__stream__helpers_8hpp" local="yes">baseapp/baseapp_int_interface_stream_helpers.hpp</includes>
    <includes refid="cellappmgr__interface_8hpp" local="yes">cellappmgr/cellappmgr_interface.hpp</includes>
    <includes local="yes">db/dbapp_interface.hpp</includes>
    <includes local="yes">db/dbapp_interface_utils.hpp</includes>
    <includes local="yes">common/py_network.hpp</includes>
    <includes local="yes">delegate_interface/entity_delegate_cell.hpp</includes>
    <includes local="yes">chunk/chunk_space.hpp</includes>
    <includes local="yes">chunk/user_data_object.hpp</includes>
    <includes local="yes">chunk/user_data_object_type.hpp</includes>
    <includes local="yes">chunk_loading/edge_geometry_mapping.hpp</includes>
    <includes local="yes">cstdmf/bgtask_manager.hpp</includes>
    <includes local="yes">cstdmf/cstdmf_init.hpp</includes>
    <includes local="yes">cstdmf/md5.hpp</includes>
    <includes local="yes">cstdmf/memory_stream.hpp</includes>
    <includes local="yes">delegate_interface/game_delegate.hpp</includes>
    <includes local="yes">entitydef/constants.hpp</includes>
    <includes local="yes">math/boundbox.hpp</includes>
    <includes local="yes">network/blocking_reply_handler.hpp</includes>
    <includes local="yes">network/bundle_sending_map.hpp</includes>
    <includes local="yes">network/channel_finder.hpp</includes>
    <includes local="yes">network/channel_sender.hpp</includes>
    <includes local="yes">network/condemned_channels.hpp</includes>
    <includes local="yes">network/interface_table.hpp</includes>
    <includes local="yes">network/logger_message_forwarder.hpp</includes>
    <includes local="yes">network/machined_utils.hpp</includes>
    <includes local="yes">network/portmap.hpp</includes>
    <includes local="yes">network/udp_bundle.hpp</includes>
    <includes local="yes">network/watcher_nub.hpp</includes>
    <includes local="yes">physics2/worldtri.hpp</includes>
    <includes local="yes">pyscript/personality.hpp</includes>
    <includes local="yes">pyscript/py_traceback.hpp</includes>
    <includes local="yes">pyscript/script_math.hpp</includes>
    <includes local="yes">pyscript/pywatcher.hpp</includes>
    <includes local="yes">resmgr/auto_config.hpp</includes>
    <includes local="yes">resmgr/bwresource.hpp</includes>
    <includes local="yes">server/add_to_manager_helper.hpp</includes>
    <includes local="yes">server/balance_config.hpp</includes>
    <includes local="yes">server/cell_app_init_data.hpp</includes>
    <includes local="yes">server/cell_properties_names.hpp</includes>
    <includes local="yes">server/common.hpp</includes>
    <includes local="yes">server/plugin_library.hpp</includes>
    <includes local="yes">server/python_server.hpp</includes>
    <includes local="yes">server/server_app_config.hpp</includes>
    <includes local="yes">server/shared_data.hpp</includes>
    <includes local="yes">server/shared_data_type.hpp</includes>
    <includes local="yes">server/real_entity_stream_helper.hpp</includes>
    <includes local="yes">server/time_keeper.hpp</includes>
    <includes local="yes">server/watcher_forwarding.hpp</includes>
    <includes local="yes">terrain/manager.hpp</includes>
    <includes local="yes">waypoint/chunk_navigator.hpp</includes>
    <includes local="yes">waypoint/waypoint_stats.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">sys/types.h</includes>
    <includes refid="cellapp_8ipp" local="yes">cellapp.ipp</includes>
    <incdepgraph>
      <node id="7586">
        <label>pyscript/py_traceback.hpp</label>
      </node>
      <node id="7555">
        <label>connection/common_baseapp_interface.hpp</label>
      </node>
      <node id="7491">
        <label>buffered_ghost_messages.hpp</label>
        <link refid="buffered__ghost__messages_8hpp_source"/>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
      </node>
      <node id="7597">
        <label>server/real_entity_stream_helper.hpp</label>
      </node>
      <node id="7445">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="7519">
        <label>real_entity.hpp</label>
        <link refid="real__entity_8hpp_source"/>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7461" relation="include">
        </childnode>
        <childnode refid="7521" relation="include">
        </childnode>
        <childnode refid="7463" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7524" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7460" relation="include">
        </childnode>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7527" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7529" relation="include">
        </childnode>
      </node>
      <node id="7544">
        <label>chunk_loading/edge_geometry_mappings.hpp</label>
      </node>
      <node id="7497">
        <label>math/rectt.hpp</label>
      </node>
      <node id="7504">
        <label>functional</label>
      </node>
      <node id="7542">
        <label>scene/collision_scene_view.hpp</label>
      </node>
      <node id="7599">
        <label>server/watcher_forwarding.hpp</label>
      </node>
      <node id="7446">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="7480">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="7455">
        <label>py_spaces.hpp</label>
        <link refid="cellapp_2py__spaces_8hpp_source"/>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
        <childnode refid="7458" relation="include">
        </childnode>
      </node>
      <node id="7585">
        <label>pyscript/personality.hpp</label>
      </node>
      <node id="7433">
        <label>network/misc.hpp</label>
      </node>
      <node id="7587">
        <label>pyscript/pywatcher.hpp</label>
      </node>
      <node id="7444">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="7490">
        <label>buffered_entity_messages.hpp</label>
        <link refid="buffered__entity__messages_8hpp_source"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
      </node>
      <node id="7535">
        <label>float.h</label>
      </node>
      <node id="7579">
        <label>network/interface_table.hpp</label>
      </node>
      <node id="7511">
        <label>chunk/chunk_cache.hpp</label>
      </node>
      <node id="7418">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="7442">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="7424">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="7557">
        <label>baseapp_int_interface_stream_helpers.hpp</label>
        <link refid="baseapp__int__interface__stream__helpers_8hpp_source"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7558" relation="include">
        </childnode>
      </node>
      <node id="7534">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="7430">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="7415">
        <label>script/first_include.hpp</label>
      </node>
      <node id="7556">
        <label>buffered_input_message_handler.hpp</label>
        <link refid="baseapp_2buffered__input__message__handler_8hpp_source"/>
      </node>
      <node id="7601">
        <label>waypoint/chunk_navigator.hpp</label>
      </node>
      <node id="7593">
        <label>server/python_server.hpp</label>
      </node>
      <node id="7492">
        <label>buffered_ghost_messages_for_entity.hpp</label>
        <link refid="buffered__ghost__messages__for__entity_8hpp_source"/>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
      </node>
      <node id="7513">
        <label>network/endpoint.hpp</label>
      </node>
      <node id="7454">
        <label>type_system/context.hpp</label>
      </node>
      <node id="7453">
        <label>script/script_object.hpp</label>
      </node>
      <node id="7457">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="7551">
        <label>network/bundle.hpp</label>
      </node>
      <node id="7494">
        <label>cell.hpp</label>
        <link refid="cell_8hpp_source"/>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7495" relation="include">
        </childnode>
        <childnode refid="7498" relation="include">
        </childnode>
        <childnode refid="7464" relation="include">
        </childnode>
        <childnode refid="7474" relation="include">
        </childnode>
        <childnode refid="7444" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7499" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7501" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7502" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7504" relation="include">
        </childnode>
      </node>
      <node id="7531">
        <label>space.hpp</label>
        <link refid="space_8hpp_source"/>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
        <childnode refid="7536" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7442" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7499" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7474" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
      </node>
      <node id="7423">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="7424" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
      </node>
      <node id="7554">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="7560">
        <label>cellappmgr/cellappmgr_interface.hpp</label>
        <link refid="cellappmgr__interface_8hpp_source"/>
        <childnode refid="7561" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7562" relation="include">
        </childnode>
      </node>
      <node id="7541">
        <label>chunk/chunk_space.hpp</label>
      </node>
      <node id="7602">
        <label>waypoint/waypoint_stats.hpp</label>
      </node>
      <node id="7512">
        <label>cell_viewer_server.hpp</label>
        <link refid="cell__viewer__server_8hpp_source"/>
        <childnode refid="7513" relation="include">
        </childnode>
        <childnode refid="7486" relation="include">
        </childnode>
      </node>
      <node id="7447">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="7462">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="7495">
        <label>cell_info.hpp</label>
        <link refid="cell__info_8hpp_source"/>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
      </node>
      <node id="7563">
        <label>db/dbapp_interface.hpp</label>
      </node>
      <node id="7506">
        <label>server/entity_app_config.hpp</label>
      </node>
      <node id="7524">
        <label>mailbox.hpp</label>
        <link refid="cellapp_2mailbox_8hpp_source"/>
        <childnode refid="7465" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7463" relation="include">
        </childnode>
      </node>
      <node id="7564">
        <label>db/dbapp_interface_utils.hpp</label>
      </node>
      <node id="7532">
        <label>cell_range_list.hpp</label>
        <link refid="cell__range__list_8hpp_source"/>
        <childnode refid="7533" relation="include">
        </childnode>
      </node>
      <node id="7427">
        <label>server/common.hpp</label>
      </node>
      <node id="7514">
        <label>entity_creator.hpp</label>
        <link refid="cellapp_2entity__creator_8hpp_source"/>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7473" relation="include">
        </childnode>
        <childnode refid="7445" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
      </node>
      <node id="7540">
        <label>chunk_space_collision_provider.hpp</label>
        <link refid="chunk__space__collision__provider_8hpp_source"/>
        <childnode refid="7473" relation="include">
        </childnode>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
      </node>
      <node id="7435">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="7527">
        <label>server/auto_backup_and_archive.hpp</label>
      </node>
      <node id="7588">
        <label>resmgr/auto_config.hpp</label>
      </node>
      <node id="7449">
        <label>pyscript/pickler.hpp</label>
      </node>
      <node id="7479">
        <label>entitydef/py_volatile_info.hpp</label>
      </node>
      <node id="7472">
        <label>entity_callback_buffer.hpp</label>
        <link refid="entity__callback__buffer_8hpp_source"/>
        <childnode refid="7473" relation="include">
        </childnode>
        <childnode refid="7474" relation="include">
        </childnode>
        <childnode refid="7453" relation="include">
        </childnode>
      </node>
      <node id="7539">
        <label>pyscript/script_math.hpp</label>
      </node>
      <node id="7498">
        <label>cell_profiler.hpp</label>
        <link refid="cell__profiler_8hpp_source"/>
        <childnode refid="7484" relation="include">
        </childnode>
      </node>
      <node id="7528">
        <label>server/util.hpp</label>
      </node>
      <node id="7581">
        <label>network/machined_utils.hpp</label>
      </node>
      <node id="7439">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="7482">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="7470">
        <label>entitydef/data_description.hpp</label>
      </node>
      <node id="7464">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="7500">
        <label>math/vector2.hpp</label>
      </node>
      <node id="7570">
        <label>cstdmf/bgtask_manager.hpp</label>
      </node>
      <node id="7576">
        <label>network/channel_finder.hpp</label>
      </node>
      <node id="7463">
        <label>entity_type.hpp</label>
        <link refid="cellapp_2entity__type_8hpp_source"/>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7464" relation="include">
        </childnode>
        <childnode refid="7447" relation="include">
        </childnode>
        <childnode refid="7465" relation="include">
        </childnode>
        <childnode refid="7466" relation="include">
        </childnode>
        <childnode refid="7467" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7468" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
      </node>
      <node id="7600">
        <label>terrain/manager.hpp</label>
      </node>
      <node id="7558">
        <label>network/stream_helpers.hpp</label>
      </node>
      <node id="7525">
        <label>network/udp_channel.hpp</label>
      </node>
      <node id="7521">
        <label>entity_cache.hpp</label>
        <link refid="entity__cache_8hpp_source"/>
        <childnode refid="7522" relation="include">
        </childnode>
        <childnode refid="7462" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7460" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
        <childnode refid="7523" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
      </node>
      <node id="7450">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="7583">
        <label>network/udp_bundle.hpp</label>
      </node>
      <node id="7526">
        <label>server/updatable.hpp</label>
      </node>
      <node id="7475">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="7477">
        <label>entitydef/property_event_stamps.hpp</label>
      </node>
      <node id="7584">
        <label>network/watcher_nub.hpp</label>
      </node>
      <node id="7523">
        <label>limits.h</label>
      </node>
      <node id="7538">
        <label>math/boundbox.hpp</label>
      </node>
      <node id="7567">
        <label>chunk/user_data_object.hpp</label>
      </node>
      <node id="7501">
        <label>math/vector3.hpp</label>
      </node>
      <node id="7481">
        <label>physics2/worldtri.hpp</label>
      </node>
      <node id="7595">
        <label>server/shared_data.hpp</label>
      </node>
      <node id="7437">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="7572">
        <label>delegate_interface/game_delegate.hpp</label>
      </node>
      <node id="7537">
        <label>physical_space.hpp</label>
        <link refid="physical__space_8hpp_source"/>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7538" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
      </node>
      <node id="7485">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="7533">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="7430" relation="include">
        </childnode>
        <childnode refid="7534" relation="include">
        </childnode>
        <childnode refid="7535" relation="include">
        </childnode>
        <childnode refid="7464" relation="include">
        </childnode>
        <childnode refid="7474" relation="include">
        </childnode>
      </node>
      <node id="7552">
        <label>entitydef_script/script_data_properties.hpp</label>
      </node>
      <node id="7456">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="7550">
        <label>space_data_object.hpp</label>
        <link refid="space__data__object_8hpp_source"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
        <childnode refid="7552" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
      </node>
      <node id="7548">
        <label>witness.hpp</label>
        <link refid="witness_8hpp_source"/>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7521" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7549" relation="include">
        </childnode>
      </node>
      <node id="7431">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="7553">
        <label>baseapp/baseapp_int_interface.hpp</label>
        <link refid="baseapp__int__interface_8hpp_source"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7554" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
        <childnode refid="7555" relation="include">
        </childnode>
        <childnode refid="7556" relation="include">
        </childnode>
        <childnode refid="7557" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7559" relation="include">
        </childnode>
      </node>
      <node id="7603">
        <label>sys/types.h</label>
      </node>
      <node id="7598">
        <label>server/time_keeper.hpp</label>
      </node>
      <node id="7594">
        <label>server/server_app_config.hpp</label>
      </node>
      <node id="7592">
        <label>server/plugin_library.hpp</label>
      </node>
      <node id="7422">
        <label>cstdmf/safe_static.hpp</label>
      </node>
      <node id="7493">
        <label>buffered_ghost_message_queue.hpp</label>
        <link refid="buffered__ghost__message__queue_8hpp_source"/>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
      </node>
      <node id="7438">
        <label>emergency_throttle.hpp</label>
        <link refid="emergency__throttle_8hpp_source"/>
        <childnode refid="7439" relation="include">
        </childnode>
      </node>
      <node id="7568">
        <label>chunk/user_data_object_type.hpp</label>
      </node>
      <node id="7484">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="7571">
        <label>cstdmf/cstdmf_init.hpp</label>
      </node>
      <node id="7488">
        <label>server/add_to_manager_helper.hpp</label>
      </node>
      <node id="7591">
        <label>server/cell_properties_names.hpp</label>
      </node>
      <node id="7417">
        <label>Python.h</label>
      </node>
      <node id="7469">
        <label>history_event.hpp</label>
        <link refid="history__event_8hpp_source"/>
        <childnode refid="7470" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7471" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7462" relation="include">
        </childnode>
      </node>
      <node id="7421">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="7416">
        <label>cellapp.hpp</label>
        <link refid="cellapp_8hpp_source"/>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7419" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7429" relation="include">
        </childnode>
        <childnode refid="7436" relation="include">
        </childnode>
        <childnode refid="7438" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7442" relation="include">
        </childnode>
        <childnode refid="7443" relation="include">
        </childnode>
        <childnode refid="7444" relation="include">
        </childnode>
        <childnode refid="7445" relation="include">
        </childnode>
        <childnode refid="7446" relation="include">
        </childnode>
        <childnode refid="7447" relation="include">
        </childnode>
        <childnode refid="7448" relation="include">
        </childnode>
        <childnode refid="7449" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7450" relation="include">
        </childnode>
        <childnode refid="7451" relation="include">
        </childnode>
        <childnode refid="7452" relation="include">
        </childnode>
        <childnode refid="7453" relation="include">
        </childnode>
        <childnode refid="7454" relation="include">
        </childnode>
        <childnode refid="7455" relation="include">
        </childnode>
      </node>
      <node id="7478">
        <label>entitydef/property_owner.hpp</label>
      </node>
      <node id="7546">
        <label>spaces.hpp</label>
        <link refid="spaces_8hpp_source"/>
        <childnode refid="7431" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
      </node>
      <node id="7577">
        <label>network/channel_sender.hpp</label>
      </node>
      <node id="7448">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="7461">
        <label>controller.hpp</label>
        <link refid="controller_8hpp_source"/>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7462" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7453" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
      </node>
      <node id="7434">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="7562">
        <label>server/reviver_subject.hpp</label>
      </node>
      <node id="7468">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="7582">
        <label>network/portmap.hpp</label>
      </node>
      <node id="7467">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="7509">
        <label>cell_chunk.hpp</label>
        <link refid="cell__chunk_8hpp_source"/>
        <childnode refid="7510" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
      </node>
      <node id="7419">
        <label>cellapp_death_listener.hpp</label>
        <link refid="cellapp__death__listener_8hpp_source"/>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7422" relation="include">
        </childnode>
      </node>
      <node id="7510">
        <label>chunk/chunk.hpp</label>
      </node>
      <node id="7487">
        <label>add_to_cellappmgr_helper.hpp</label>
        <link refid="add__to__cellappmgr__helper_8hpp_source"/>
        <childnode refid="7430" relation="include">
        </childnode>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7489" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
      </node>
      <node id="7459">
        <label>ack_cell_app_death_helper.hpp</label>
        <link refid="ack__cell__app__death__helper_8hpp_source"/>
        <childnode refid="7460" relation="include">
        </childnode>
        <childnode refid="7486" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
      </node>
      <node id="7596">
        <label>server/shared_data_type.hpp</label>
      </node>
      <node id="7543">
        <label>scene/scene_provider.hpp</label>
      </node>
      <node id="7574">
        <label>network/blocking_reply_handler.hpp</label>
      </node>
      <node id="7451">
        <label>server/id_client.hpp</label>
      </node>
      <node id="7466">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="7499">
        <label>math/math_extra.hpp</label>
      </node>
      <node id="7530">
        <label>replay_data_collector.hpp</label>
        <link refid="replay__data__collector_8hpp_source"/>
        <childnode refid="7437" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
        <childnode refid="7464" relation="include">
        </childnode>
        <childnode refid="7444" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
      </node>
      <node id="7529">
        <label>math.h</label>
      </node>
      <node id="7573">
        <label>entitydef/constants.hpp</label>
      </node>
      <node id="7420">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="7443">
        <label>chunk_loading/preloaded_chunk_space.hpp</label>
      </node>
      <node id="7516">
        <label>id_config.hpp</label>
        <link refid="cellapp_2id__config_8hpp_source"/>
        <childnode refid="7517" relation="include">
        </childnode>
      </node>
      <node id="7428">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="7522">
        <label>aoi_update_schemes.hpp</label>
        <link refid="aoi__update__schemes_8hpp_source"/>
        <childnode refid="7430" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
        <childnode refid="7464" relation="include">
        </childnode>
      </node>
      <node id="7486">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="7503">
        <label>deque</label>
      </node>
      <node id="7520">
        <label>cell_app_channel.hpp</label>
        <link refid="cell__app__channel_8hpp_source"/>
        <childnode refid="7432" relation="include">
        </childnode>
      </node>
      <node id="7465">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="7426">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="7518">
        <label>py_entities.hpp</label>
        <link refid="cellapp_2py__entities_8hpp_source"/>
        <childnode refid="7456" relation="include">
        </childnode>
      </node>
      <node id="7517">
        <label>server/server_app_option.hpp</label>
      </node>
      <node id="7589">
        <label>resmgr/bwresource.hpp</label>
      </node>
      <node id="7580">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="7473">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="7547">
        <label>py_space.hpp</label>
        <link refid="cellapp_2py__space_8hpp_source"/>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7458" relation="include">
        </childnode>
      </node>
      <node id="7569">
        <label>chunk_loading/edge_geometry_mapping.hpp</label>
      </node>
      <node id="7429">
        <label>cellappmgr_gateway.hpp</label>
        <link refid="cellappmgr__gateway_8hpp_source"/>
        <childnode refid="7430" relation="include">
        </childnode>
        <childnode refid="7431" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7434" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
      </node>
      <node id="7505">
        <label>cellapp_config.hpp</label>
        <link refid="cellapp__config_8hpp_source"/>
        <childnode refid="7506" relation="include">
        </childnode>
      </node>
      <node id="7489">
        <label>server/cell_app_init_data.hpp</label>
      </node>
      <node id="7483">
        <label>server/backup_hash.hpp</label>
      </node>
      <node id="7559">
        <label>connection/common_client_interface.hpp</label>
      </node>
      <node id="7414">
        <label>cellapp/cellapp.cpp</label>
        <link refid="cellapp.cpp"/>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7459" relation="include">
        </childnode>
        <childnode refid="7487" relation="include">
        </childnode>
        <childnode refid="7490" relation="include">
        </childnode>
        <childnode refid="7491" relation="include">
        </childnode>
        <childnode refid="7494" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
        <childnode refid="7507" relation="include">
        </childnode>
        <childnode refid="7509" relation="include">
        </childnode>
        <childnode refid="7512" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7460" relation="include">
        </childnode>
        <childnode refid="7514" relation="include">
        </childnode>
        <childnode refid="7515" relation="include">
        </childnode>
        <childnode refid="7463" relation="include">
        </childnode>
        <childnode refid="7516" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7530" relation="include">
        </childnode>
        <childnode refid="7531" relation="include">
        </childnode>
        <childnode refid="7546" relation="include">
        </childnode>
        <childnode refid="7547" relation="include">
        </childnode>
        <childnode refid="7455" relation="include">
        </childnode>
        <childnode refid="7548" relation="include">
        </childnode>
        <childnode refid="7550" relation="include">
        </childnode>
        <childnode refid="7553" relation="include">
        </childnode>
        <childnode refid="7557" relation="include">
        </childnode>
        <childnode refid="7560" relation="include">
        </childnode>
        <childnode refid="7563" relation="include">
        </childnode>
        <childnode refid="7564" relation="include">
        </childnode>
        <childnode refid="7565" relation="include">
        </childnode>
        <childnode refid="7566" relation="include">
        </childnode>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7567" relation="include">
        </childnode>
        <childnode refid="7568" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
        <childnode refid="7570" relation="include">
        </childnode>
        <childnode refid="7571" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
        <childnode refid="7444" relation="include">
        </childnode>
        <childnode refid="7572" relation="include">
        </childnode>
        <childnode refid="7573" relation="include">
        </childnode>
        <childnode refid="7538" relation="include">
        </childnode>
        <childnode refid="7574" relation="include">
        </childnode>
        <childnode refid="7575" relation="include">
        </childnode>
        <childnode refid="7576" relation="include">
        </childnode>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7578" relation="include">
        </childnode>
        <childnode refid="7579" relation="include">
        </childnode>
        <childnode refid="7580" relation="include">
        </childnode>
        <childnode refid="7581" relation="include">
        </childnode>
        <childnode refid="7582" relation="include">
        </childnode>
        <childnode refid="7583" relation="include">
        </childnode>
        <childnode refid="7584" relation="include">
        </childnode>
        <childnode refid="7481" relation="include">
        </childnode>
        <childnode refid="7585" relation="include">
        </childnode>
        <childnode refid="7586" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
        <childnode refid="7587" relation="include">
        </childnode>
        <childnode refid="7588" relation="include">
        </childnode>
        <childnode refid="7589" relation="include">
        </childnode>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7590" relation="include">
        </childnode>
        <childnode refid="7489" relation="include">
        </childnode>
        <childnode refid="7591" relation="include">
        </childnode>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7592" relation="include">
        </childnode>
        <childnode refid="7593" relation="include">
        </childnode>
        <childnode refid="7594" relation="include">
        </childnode>
        <childnode refid="7595" relation="include">
        </childnode>
        <childnode refid="7596" relation="include">
        </childnode>
        <childnode refid="7597" relation="include">
        </childnode>
        <childnode refid="7598" relation="include">
        </childnode>
        <childnode refid="7599" relation="include">
        </childnode>
        <childnode refid="7600" relation="include">
        </childnode>
        <childnode refid="7601" relation="include">
        </childnode>
        <childnode refid="7602" relation="include">
        </childnode>
        <childnode refid="7502" relation="include">
        </childnode>
        <childnode refid="7603" relation="include">
        </childnode>
      </node>
      <node id="7578">
        <label>network/condemned_channels.hpp</label>
      </node>
      <node id="7436">
        <label>cells.hpp</label>
        <link refid="cells_8hpp_source"/>
        <childnode refid="7431" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
      </node>
      <node id="7452">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="7474">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="7425">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="7440">
        <label>profile.hpp</label>
        <link refid="profile_8hpp_source"/>
        <childnode refid="7441" relation="include">
        </childnode>
      </node>
      <node id="7565">
        <label>common/py_network.hpp</label>
      </node>
      <node id="7515">
        <label>entity_population.hpp</label>
        <link refid="entity__population_8hpp_source"/>
        <childnode refid="7459" relation="include">
        </childnode>
        <childnode refid="7419" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
      </node>
      <node id="7502">
        <label>algorithm</label>
      </node>
      <node id="7549">
        <label>common/space_geometry_mappings.hpp</label>
      </node>
      <node id="7460">
        <label>entity.hpp</label>
        <link refid="cellapp_2entity_8hpp_source"/>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7461" relation="include">
        </childnode>
        <childnode refid="7463" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
        <childnode refid="7444" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7477" relation="include">
        </childnode>
        <childnode refid="7478" relation="include">
        </childnode>
        <childnode refid="7479" relation="include">
        </childnode>
        <childnode refid="7480" relation="include">
        </childnode>
        <childnode refid="7467" relation="include">
        </childnode>
        <childnode refid="7481" relation="include">
        </childnode>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7484" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
        <childnode refid="7474" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
      </node>
      <node id="7536">
        <label>physical_chunk_space.hpp</label>
        <link refid="physical__chunk__space_8hpp_source"/>
        <childnode refid="7537" relation="include">
        </childnode>
        <childnode refid="7540" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7473" relation="include">
        </childnode>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7442" relation="include">
        </childnode>
        <childnode refid="7545" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
      </node>
      <node id="7590">
        <label>server/balance_config.hpp</label>
      </node>
      <node id="7441">
        <label>cstdmf/profile.hpp</label>
      </node>
      <node id="7575">
        <label>network/bundle_sending_map.hpp</label>
      </node>
      <node id="7508">
        <label>cstdmf/timer_handler.hpp</label>
      </node>
      <node id="7496">
        <label>space_node.hpp</label>
        <link refid="space__node_8hpp_source"/>
        <childnode refid="7462" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
      </node>
      <node id="7471">
        <label>network/interface_element.hpp</label>
      </node>
      <node id="7432">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="7566">
        <label>delegate_interface/entity_delegate_cell.hpp</label>
      </node>
      <node id="7561">
        <label>cstdmf/unique_id.hpp</label>
      </node>
      <node id="7545">
        <label>scene/scene.hpp</label>
      </node>
      <node id="7476">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
      <node id="7458">
        <label>space/forward_declarations.hpp</label>
      </node>
      <node id="7507">
        <label>cell_app_channels.hpp</label>
        <link refid="cell__app__channels_8hpp_source"/>
        <childnode refid="7446" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_create_base_reply_handler" prot="public">CreateBaseReplyHandler</innerclass>
    <innernamespace refid="namespace_util">Util</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cellapp_8cpp_1adc4931dccca1439538b1df473a86edd8" prot="public" static="no" mutable="no">
        <type>BW_BEGIN_NAMESPACE int</type>
        <definition>BW_BEGIN_NAMESPACE int Math_token</definition>
        <argsstring></argsstring>
        <name>Math_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1a291411712ad7fe5fdf11fe4f8576732e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ResMgr_token</definition>
        <argsstring></argsstring>
        <name>ResMgr_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1a686450e3b38f5659aacf461bcaf61bca" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyScript_token</definition>
        <argsstring></argsstring>
        <name>PyScript_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="120" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1acce7b2e7f069efa0ccb04c0b0ab6be3e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyChunk_token</definition>
        <argsstring></argsstring>
        <name>PyChunk_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1ad8bbdf8cd95aadf83b6e1423893723bc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyPhysics2_token</definition>
        <argsstring></argsstring>
        <name>PyPhysics2_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1ae4ccc16447b3d36d989edb1fde3576fe" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyURLRequest_token</definition>
        <argsstring></argsstring>
        <name>PyURLRequest_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1a8e058c3b8acbcff8139be8d56cd59be1" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int s_moduleTokens</definition>
        <argsstring></argsstring>
        <name>s_moduleTokens</name>
        <initializer>=
	Math_token | ResMgr_token | PyScript_token |
	PyChunk_token | PyPhysics2_token | PyURLRequest_token</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="124" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1aec6bec64b5bea9253a3d4989ae45448f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyUserDataObject_token</definition>
        <argsstring></argsstring>
        <name>PyUserDataObject_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1a250b7b8a9b78d9e67598ca678370dc8a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int UserDataObjectDescriptionMap_Token</definition>
        <argsstring></argsstring>
        <name>UserDataObjectDescriptionMap_Token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="129" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1a61825fb9a7049f6966982c9698099fad" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int AppScriptTimers_token</definition>
        <argsstring></argsstring>
        <name>AppScriptTimers_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="130" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_8cpp_1a92fa1b10022aea024bd9ddcd37b60cc1" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int s_tokenSet</definition>
        <argsstring></argsstring>
        <name>s_tokenSet</name>
        <initializer>=
	PyUserDataObject_token |
	UserDataObjectDescriptionMap_Token |
	AppScriptTimers_token</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="132" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cellapp_8cpp_1aa189bd057711915b2d5ac37820f04d13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isNextTickPending</definition>
        <argsstring>()</argsstring>
        <name>isNextTickPending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2533" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2533" bodyend="2536"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a1fd59188a6b2a061fcfbb17dcfd16f6a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool createEntityOnBaseApp</definition>
        <argsstring>(const BW::string &amp;entityType, PyObjectPtr pDict, PyObjectPtr pCallbackFunc)</argsstring>
        <name>createEntityOnBaseApp</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>entityType</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pDict</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pCallbackFunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates an entity on a base application.</para><para><simplesect kind="return"><para>True on success, false otherwise. If false is returned, the Python error state is set. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2630" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2630" bodyend="2718"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a4381c0a09af35bc5dc6d97821c5485da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, createEntityOnBaseApp, ARG(BW::string, ARG(PyObjectPtr, OPTARG(PyObjectPtr, NULL, END))), BigWorld) typedef SmartPointer&lt; PyObject &gt; PyObjectPtr</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>createEntityOnBaseApp</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(<ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>, OPTARG(<ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>, NULL, END)))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1acd55f371e1f3300feb5996253cf2e24f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* createEntity</definition>
        <argsstring>(const BW::string &amp;typeName, SpaceID spaceID, const Vector3 &amp;position, const Vector3 &amp;direction, const ScriptObject &amp;state)</argsstring>
        <name>createEntity</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>SpaceID</type>
          <declname>spaceID</declname>
        </param>
        <param>
          <type>const Vector3 &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const Vector3 &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const ScriptObject &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates a new entity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2763" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2763" bodyend="2853"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1aa7c550dd257b45a5c189ee7b908a3990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOWN, createEntity, ARG(BW::string, ARG(SpaceID, ARG(Vector3, ARG(Vector3, OPTARG(ScriptObject, ScriptObject::none(), END))))), BigWorld)   static double time()</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOWN</type>
        </param>
        <param>
          <type>createEntity</type>
        </param>
        <param>
          <type>ARG(BW::string, ARG(SpaceID, ARG(Vector3, ARG(Vector3, OPTARG(ScriptObject, ScriptObject::none(), END)))))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the current game time in seconds as a floating point number. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2854" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2854" bodyend="2881"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a30218ab686d5ab4c85744211446741e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double timeInTicks</definition>
        <argsstring>()</argsstring>
        <name>timeInTicks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the current game time ticks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2894" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2894" bodyend="2897"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1aaf6fbdb33fe1f7af447f6c445614536d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float getLoad</definition>
        <argsstring>()</argsstring>
        <name>getLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the current <ref refid="class_cell_app" kindref="compound">CellApp</ref> load as a floating point number. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2912" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2912" bodyend="2915"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1ad1ae09b3b3f6c016970b04c3b416883b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool executeRawDatabaseCommand</definition>
        <argsstring>(const BW::string &amp;command, PyObjectPtr pResultHandler)</argsstring>
        <name>executeRawDatabaseCommand</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>command</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref></type>
          <declname>pResultHandler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method implements the BigWorld.executeRawDatabaseCommand function. See DBAppInterfaceUtils::executeRawDatabaseCommand for more details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2923" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2923" bodyend="2933"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a83aaf5e55925b365c643966d45bd535a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETOK, executeRawDatabaseCommand, ARG(BW::string, OPTARG(PyObjectPtr, NULL, END)), BigWorld)   static void debugDump()</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETOK</type>
        </param>
        <param>
          <type>executeRawDatabaseCommand</type>
        </param>
        <param>
          <type>ARG(BW::string, OPTARG(<ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>, NULL, END))</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is for debugging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="2934" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="2934" bodyend="2950"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a75228d69734925344823464f3bcbb669" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool reloadScript</definition>
        <argsstring>(bool isFullReload)</argsstring>
        <name>reloadScript</name>
        <param>
          <type>bool</type>
          <declname>isFullReload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method implements the Python function that reloads the scripts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3004" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3004" bodyend="3007"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a718db53d8ab33e1778ba3b92cd70d660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_AUTO_MODULE_FUNCTION</definition>
        <argsstring>(RETDATA, reloadScript, OPTARG(bool, true, END), BigWorld) static PyObject *py_hasStarted(PyObject *args)</argsstring>
        <name>PY_AUTO_MODULE_FUNCTION</name>
        <param>
          <type>RETDATA</type>
        </param>
        <param>
          <type>reloadScript</type>
        </param>
        <param>
          <type>OPTARG(bool, true, END)</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.hasStarted script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3008" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3008" bodyend="3025"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a1e4525edfefa55bcec1cdfd176069382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_MODULE_FUNCTION</definition>
        <argsstring>(hasStarted, BigWorld)</argsstring>
        <name>PY_MODULE_FUNCTION</name>
        <param>
          <type>hasStarted</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3032" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a722d0f5c39fb74865eb37c644c3a548d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* py_isShuttingDown</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_isShuttingDown</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function implements the BigWorld.isShuttingDown script method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3038" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3038" bodyend="3048"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a65476f183c68ab409a97dd1340bbdef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PY_MODULE_FUNCTION</definition>
        <argsstring>(isShuttingDown, BigWorld)</argsstring>
        <name>PY_MODULE_FUNCTION</name>
        <param>
          <type>isShuttingDown</type>
        </param>
        <param>
          <type>BigWorld</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3056" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1abef2223b970348fe44cfde9ef482208b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_setBaseAppData</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_setBaseAppData</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3142" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3142" bodyend="3179"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1abfe723b775628a5918088d6d32097008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* py_delBaseAppData</definition>
        <argsstring>(PyObject *args)</argsstring>
        <name>py_delBaseAppData</name>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3197" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3197" bodyend="3218"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1abb62cef7370643aed7d1602fb9781a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float maxCellAppLoad</definition>
        <argsstring>()</argsstring>
        <name>maxCellAppLoad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3229" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3229" bodyend="3232"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1aaf233af743cfd6e3d5da48acdde30d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float load</definition>
        <argsstring>()</argsstring>
        <name>load</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3242" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3242" bodyend="3245"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1ac45da22492c4271a3cc16b292c2dbdb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shutDownApp</definition>
        <argsstring>()</argsstring>
        <name>shutDownApp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3254" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3254" bodyend="3257"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1a03bba7f8d7c5ec38e404958cd3b68fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void controlledShutDown</definition>
        <argsstring>()</argsstring>
        <name>controlledShutDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3266" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3266" bodyend="3269"/>
      </memberdef>
      <memberdef kind="function" id="cellapp_8cpp_1af200eb45f3ad5cc8c486c9a5b19f4c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void addToModule</definition>
        <argsstring>(PyObject *pModule, T value, const char *pName)</argsstring>
        <name>addToModule</name>
        <param>
          <type>PyObject *</type>
          <declname>pModule</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/cellapp.cpp" line="3416" column="1" bodyfile="cellapp/cellapp.cpp" bodystart="3416" bodyend="3428"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ack_cell_app_death_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;add_to_cellappmgr_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffered_entity_messages.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffered_ghost_messages.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_app_channels.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_chunk.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_viewer_server.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_creator.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_population.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;id_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_entities.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;replay_data_collector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spaces.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_spaces.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;witness.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space_data_object.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp/baseapp_int_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp/baseapp_int_interface_stream_helpers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr/cellappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db/dbapp_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db/dbapp_interface_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/py_network.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BUILD_PY_URLREQUEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;urlrequest/manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;delegate_interface/entity_delegate_cell.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/user_data_object.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/user_data_object_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk_loading/edge_geometry_mapping.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/bgtask_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/cstdmf_init.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/md5.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/memory_stream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;delegate_interface/game_delegate.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math/boundbox.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/blocking_reply_handler.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle_sending_map.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/channel_finder.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/channel_sender.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/condemned_channels.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/interface_table.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/logger_message_forwarder.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/machined_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/portmap.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/udp_bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/watcher_nub.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;physics2/worldtri.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/personality.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/py_traceback.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/script_math.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/pywatcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resmgr/auto_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resmgr/bwresource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/add_to_manager_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/balance_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/cell_app_init_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/cell_properties_names.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/common.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/plugin_library.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/python_server.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/server_app_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/shared_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/shared_data_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/real_entity_stream_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/time_keeper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/watcher_forwarding.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;terrain/manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;waypoint/chunk_navigator.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;waypoint/waypoint_stats.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>MF_USE_VALGRIND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MF_USE_VALGRIND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;valgrind/memcheck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">DECLARE_DEBUG_COMPONENT(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Math_token;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResMgr_token;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyScript_token;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyChunk_token;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyPhysics2_token;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyURLRequest_token;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_moduleTokens<sp/>=</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>Math_token<sp/>|<sp/>ResMgr_token<sp/>|<sp/>PyScript_token<sp/>|</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>PyChunk_token<sp/>|<sp/>PyPhysics2_token<sp/>|<sp/>PyURLRequest_token;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyUserDataObject_token;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UserDataObjectDescriptionMap_Token;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AppScriptTimers_token;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_tokenSet<sp/>=</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>PyUserDataObject_token<sp/>|</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>UserDataObjectDescriptionMap_Token<sp/>|</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>AppScriptTimers_token;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CODE_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.ipp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">BW_SINGLETON_STORAGE_SPECIALIZED(<sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">namespace<sp/></highlight><highlight class="comment">//<sp/>(anonymous)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>asString(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;True&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;False&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MAX_ENTITY_MESSAGE_BUFFER_TIME<sp/>=<sp/>5.0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DEFAULT_PRELOADED_SPACE_ID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>EntityChannelFinder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_entity_channel_finder" kindref="compound">EntityChannelFinder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Mercury::ChannelFinder</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Mercury::UDPChannel<sp/>*<sp/><ref refid="class_entity_channel_finder_1a437d1261761419da1c8869ed96913915" kindref="member">find</ref>(<sp/>Mercury::ChannelID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Packet<sp/>*<sp/>pPacket,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>rHasBeenHandled<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">Mercury::UDPChannel<sp/>*<sp/><ref refid="class_entity_channel_finder_1a437d1261761419da1c8869ed96913915" kindref="member">EntityChannelFinder::find</ref>(<sp/>Mercury::ChannelID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Packet<sp/>*<sp/>pPacket,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/>rHasBeenHandled<sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*pEntity<sp/>=<sp/>CellApp::instance().findEntity(<sp/>(EntityID)</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;pReal()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UDPChannel<sp/>*<sp/>pChannel<sp/>=<sp/>&amp;pEntity-&gt;pReal()-&gt;channel();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChannel-&gt;addr()<sp/>==<sp/>srcAddr)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pChannel;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;EntityChannelFinder::find:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Found<sp/>entity<sp/>(%d)<sp/>but<sp/>from<sp/>%s,<sp/>not<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>srcAddr.c_str(),<sp/>pChannel-&gt;addr().c_str()<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rHasBeenHandled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>a<sp/>ghost,<sp/>then<sp/>we<sp/>forward<sp/>the<sp/>packet<sp/>to<sp/>the<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>CellAppChannel<sp/>to<sp/>ensure<sp/>that<sp/>it<sp/>doesn&apos;t<sp/>arrive<sp/>before<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offload<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>pEntity-&gt;pRealChannel()-&gt;channel()<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::forwardedBaseEntityPacket<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>pEntity-&gt;id();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>srcAddr;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.addBlob(<sp/>pPacket-&gt;data(),<sp/>pPacket-&gt;totalSize()<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rHasBeenHandled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abandonEntityTimeout<sp/>=<sp/>60000000;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>BaseRestoreConfirmHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="keyword">class<sp/></highlight><highlight class="normal">BaseRestoreConfirmHandler<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TimerHandler</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseRestoreConfirmHandler();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>~BaseRestoreConfirmHandler();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleTimeout(<sp/>TimerHandle<sp/>handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>TimerHandle<sp/>abandonEntitiesTimer_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BaseRestoreConfirmHandler<sp/>*<sp/>s_pInstance_;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">BaseRestoreConfirmHandler::BaseRestoreConfirmHandler()</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>s_pInstance_;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>s_pInstance_<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>abandonEntitiesTimer_<sp/>=</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().mainDispatcher().addTimer(<sp/>abandonEntityTimeout,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;BaseRestoreConfirmHandler&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">BaseRestoreConfirmHandler::~BaseRestoreConfirmHandler()</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>abandonEntitiesTimer_.cancel();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>s_pInstance_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BaseRestoreConfirmHandler::handleTimeout(<sp/>TimerHandle<sp/>handle,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>Entity::population().end();<sp/>iter++)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>entity<sp/>=<sp/>*iter-&gt;second;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entity.isReal()<sp/>&amp;&amp;<sp/>!entity.isDestroyed()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.pReal()-&gt;channel().version()<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.pReal()-&gt;channel().wantsFirstPacket())</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;BaseRestoreConfirmHandler::handleTimeout:<sp/>entity<sp/>%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>assumed<sp/>to<sp/>have<sp/>not<sp/>been<sp/>restored<sp/>on<sp/>its<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;baseapp.\n&quot;</highlight><highlight class="normal">,<sp/>iter-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity.destroy();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">BaseRestoreConfirmHandler<sp/>*<sp/>BaseRestoreConfirmHandler::s_pInstance_;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>set<sp/>stores<sp/>the<sp/>id<sp/>of<sp/>the<sp/>entity<sp/>channels<sp/>that<sp/>are<sp/>in<sp/>danger<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overflowing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BW::set&lt;<sp/>Mercury::ChannelID<sp/>&gt;<sp/>OverflowIDs;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">OverflowIDs<sp/>s_overflowIDs;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>callback<sp/>function<sp/>is<sp/>called<sp/>when<sp/>an<sp/>entity<sp/>channel<sp/>is<sp/>in<sp/>danger<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overflowing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onSendWindowOverflow(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UDPChannel<sp/>&amp;<sp/>channel<sp/>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>channel.isIndexed()<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>s_overflowIDs.insert(<sp/>channel.id()<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>//<sp/>(anonymous)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>CellApp<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><ref refid="class_cell_app_1afa8e7d14099c54fb8ca5b0bab6a2c785" kindref="member">CellApp::CellApp</ref>(<sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>mainDispatcher,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::NetworkInterface<sp/>&amp;<sp/>networkInterface<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityApp(<sp/>mainDispatcher,<sp/>networkInterface<sp/>),</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>context_(),</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>cells_(),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaces_(<sp/>new<sp/><ref refid="class_spaces" kindref="compound">Spaces</ref>(<sp/>context_<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>preloadedSpaces_(),</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>idClient_(),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr_(<sp/>interface_<sp/>),</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_(<sp/>interface_<sp/>),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>shutDownTime_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>pTimeKeeper_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>pPickler_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>isBootstrap_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>timeoutPeriod_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>lastGameTickTime_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppData_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>pGlobalData_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppAddr_(<sp/>0,<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>backupIndex_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>loadingTimer_(),</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>trimHistoryTimer_(),</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>pViewerServer_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>id_(<sp/>-1<sp/>),</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>persistentLoad_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>transientLoad_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>totalLoad_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>totalEntityLoad_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>totalAddedLoad_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>perEntityLoadShare_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>maxCellAppLoad_(<sp/>0.f<sp/>),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>shouldOffload_(<sp/>true<sp/>),</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>hasAckedCellAppMgrShutDown_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>hasCalledWitnesses_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>waitingFor_(<sp/>READY_CELL_APP_MGR<sp/>|<sp/>READY_CELL_APP_FINISH_INIT<sp/>),</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>pBufferedEntityMessages_(<sp/>new<sp/><ref refid="class_buffered_entity_messages" kindref="compound">BufferedEntityMessages</ref>()<sp/>),</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>pBufferedGhostMessages_(<sp/>new<sp/><ref refid="class_buffered_ghost_messages" kindref="compound">BufferedGhostMessages</ref>()<sp/>),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>witnesses_(),</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>pPyServicesMap_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>pPySpaces_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>nextSpaceEntryIDSalt_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntityCreator_(<sp/><ref refid="class_entity_creator" kindref="compound">EntityCreator</ref>::create(<sp/>networkInterface<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_entity_channel_finder" kindref="compound">EntityChannelFinder</ref><sp/>channelFinder;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>indexed<sp/>channel<sp/>finder<sp/>for<sp/>the<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>interface_.registerChannelFinder(<sp/>&amp;channelFinder<sp/>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_.channel().isLocalRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_.channel().isRemoteRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="class_cell_app_1a1008ef1eeedfa90537b0fa1ee169865e" kindref="member">CellApp::~CellApp</ref>()</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pPyServicesMap_<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>pPyServicesMap_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>gameTimer_.cancel();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>loadingTimer_.cancel();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>trimHistoryTimer_.cancel();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>loading<sp/>thread<sp/>so<sp/>that<sp/>we<sp/>can<sp/>clean<sp/>up<sp/>without<sp/>fear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::~CellApp:<sp/>Stopping<sp/>background<sp/>threads.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>bgTaskManager_.stopAll();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>fileIOTaskManager_.stopAll();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::~CellApp:<sp/>Stopped<sp/>background<sp/>threads.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>lots<sp/>of<sp/>chunks<sp/>loaded,<sp/>this<sp/>can<sp/>take<sp/>a<sp/>long<sp/>*LONG*<sp/>time.<sp/><sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>long<sp/>enough<sp/>in<sp/>some<sp/>cases<sp/>that<sp/>the<sp/>tools<sp/>will<sp/>stop<sp/>waiting<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>controlled<sp/>shutdown<sp/>to<sp/>complete<sp/>and<sp/>start<sp/>sending<sp/>SIGQUITs,<sp/>which<sp/>means</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coredumps,<sp/>which<sp/>is<sp/>bad,<sp/>so<sp/>we<sp/>make<sp/>cleaning<sp/>up<sp/>all<sp/>the<sp/>chunks<sp/>optional.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>&quot;fastShutdown&quot;<sp/>mode<sp/>we<sp/>still<sp/>need<sp/>to<sp/>correctly<sp/>fre<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>delegate-related<sp/>resources.<sp/>More<sp/>specifically,<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>call<sp/>pPhysicalSpace_-&gt;clear()<sp/>(from<sp/>within<sp/>~Space),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>will<sp/>remove<sp/>all<sp/>the<sp/>worlds<sp/>that<sp/>have<sp/>been<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config::fastShutdown()<sp/>||<sp/>IGameDelegate::instance()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>spaces<sp/>to<sp/>mark<sp/>loaded<sp/>chunks<sp/>as<sp/>loaded,<sp/>otherwise<sp/>they<sp/>won&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>cleaned<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaces_-&gt;prepareNewlyLoadedChunksForDelete();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreloadedChunkSpaces::iterator<sp/>it<sp/>=<sp/>preloadedSpaces_.begin();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>preloadedSpaces_.end())</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;prepareNewlyLoadedChunksForDelete();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pTimeKeeper_;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Move<sp/>this<sp/>to<sp/>the<sp/>destructor<sp/>of<sp/>Cells.<sp/>Presently,<sp/>we<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>cells<sp/>here<sp/>before<sp/>we<sp/>delete<sp/>spaces<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells_.destroyAll();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;timeQueue().clear();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pSpaces_<sp/>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>preloadedSpaces_.begin();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>preloadedSpaces_.end())</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>it-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>only<sp/>be<sp/>done<sp/>when<sp/>retiring<sp/>this<sp/>app<sp/>but<sp/>not<sp/>killing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>server.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Should<sp/>this<sp/>be<sp/>done<sp/>outside<sp/>the<sp/>fastShutdown_<sp/>block?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isShuttingDown())</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idClient_.returnIDs();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pBufferedEntityMessages_<sp/>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pBufferedGhostMessages_<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pCellAppChannels_<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pPickler_<sp/>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pCellAppData_<sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellAppData_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XDECREF(<sp/>pGlobalData_<sp/>);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGlobalData_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IGameDelegate::instance())</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameDelegate::instance()-&gt;shutDown();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a782744e48fbf11b254a014641f73c512" kindref="member">EntityType::clearStatics</ref>();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType::clearStaticsForReload();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>UserDataObjectType::clearStatics();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;checkPython();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pViewerServer_;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CellApp::secondsToTicks(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>seconds,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowerBound<sp/>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::max(<sp/>lowerBound,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>floorf(<sp/>seconds<sp/>*<sp/>Config::updateHertz()<sp/>+<sp/>0.5f<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CellApp::init(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv[]<sp/>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EntityApp::init(<sp/>argc,<sp/>argv<sp/>))</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interface_.isGood())</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>NetworkInterface<sp/>on<sp/>internal<sp/>interface.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntityCreator_)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>Failed<sp/>to<sp/>create<sp/>EntityCreator.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config::shouldResolveMailBoxes()<sp/>&amp;&amp;<sp/>!Config::isProduction())</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>shouldResolveMailBoxes<sp/>is<sp/>enabled.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>can<sp/>lead<sp/>to<sp/>writing<sp/>script<sp/>that<sp/>makes<sp/>bad<sp/>assumptions<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;as<sp/>to<sp/>locality<sp/>of<sp/>mailboxes.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BalanceConfig::demo()<sp/>&amp;&amp;<sp/>Config::isProduction())</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Production<sp/>Mode:<sp/>Demo<sp/>load<sp/>balancing<sp/>enabled!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config::excludeOwnClientTrafficFromBandwidthLimit())</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;excludeOwnClientTrafficFromBandwidthLimit<sp/>is<sp/>enabled.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>note<sp/>that<sp/>this<sp/>option<sp/>will<sp/>default<sp/>to<sp/>false<sp/>starting<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;with<sp/>BWT16.1<sp/>and<sp/>be<sp/>deprecated<sp/>later<sp/>on.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Consider<sp/>re-assessing<sp/>bandwidth<sp/>requirements<sp/>to<sp/>client<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;this<sp/>option<sp/>off.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>entity<sp/>specific<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::s_init();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!AutoConfig::configureAllFrom(<sp/></highlight><highlight class="stringliteral">&quot;resources.xml&quot;</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>Failed<sp/>to<sp/>load<sp/>resources.xml\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logInternalAddress();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>cell<sp/>app<sp/>manager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cellAppMgr_.init(<sp/>this-&gt;pBWMachineD(),<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgrInterface&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::numStartupRetries(),<sp/>Config::startupRetryPeriod(),</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::maxMgrRegisterStagger()<sp/>))</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>Failed<sp/>to<sp/>find<sp/>the<sp/>CellAppMgr.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>fixed<sp/>portion<sp/>of<sp/>our<sp/>interface<sp/>with<sp/>the<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppInterface::registerWithInterface(<sp/>interface_<sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>pViewerServer_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_cell_viewer_server_1a940b5edf1d42a948fb6ef9d124c00cc9" kindref="member">CellViewerServer</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>pViewerServer_-&gt;startup(<sp/>this-&gt;mainDispatcher(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>any<sp/>extensions<sp/>(in<sp/>DLLs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initExtensions())</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>Failed<sp/>to<sp/>load<sp/>plugins.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IGameDelegate::instance()<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>resPaths;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>BWResource::getPathNum();<sp/>++i)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i!=0)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resPaths<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resPaths<sp/>+=<sp/>BWResource::getPath(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>Initializing<sp/>IGameDelegate<sp/>with<sp/>resource<sp/>paths:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>resPaths.c_str()<sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IGameDelegate::instance()-&gt;initialize(<sp/>resPaths.c_str()<sp/>))</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>Failed<sp/>to<sp/>initialize<sp/>IGameDelegate.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>fileIOTaskManager_.initWatchers(<sp/></highlight><highlight class="stringliteral">&quot;FileIO&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>fileIOTaskManager_.startThreads(<sp/></highlight><highlight class="stringliteral">&quot;FileIO&quot;</highlight><highlight class="normal">,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>bgTaskManager_.initWatchers(<sp/></highlight><highlight class="stringliteral">&quot;CellApp&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>bgTaskManager_.startThreads(<sp/></highlight><highlight class="stringliteral">&quot;BGTask<sp/>Manager&quot;</highlight><highlight class="normal">,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addWatchers();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>up<sp/>the<sp/>scripting<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initScript())</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>ProfileVal::setWarningPeriod(<sp/>stampsPerSecond()<sp/>/<sp/>Config::updateHertz()<sp/>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>CellProfileGroup::init();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_entity_type_1a8dcd6414a2390bb5758202552c41910f" kindref="member">EntityType::init</ref>())</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;EntityType::init:<sp/>Failed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!UserDataObjectType::init())</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;EntityType::init:<sp/>Failed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>pTerrainManager_<sp/>=<sp/>TerrainManagerPtr(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Terrain::Manager()<sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTerrainManager_-&gt;isValid())</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Terrain::Manager::init:<sp/>Failed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>is<sp/>a<sp/>bit<sp/>dodgy.<sp/>We<sp/>do<sp/>not<sp/>want<sp/>to<sp/>trim<sp/>all<sp/>histories<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>trimHistoryTimer_<sp/>=</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mainDispatcher().addTimer(<sp/>4<sp/>*<sp/>60<sp/>*<sp/>1000000,<sp/></highlight><highlight class="comment">//<sp/>4<sp/>minutes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;void<sp/>*&gt;(TIMEOUT_TRIM_HISTORIES),</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TrimHistory&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loadingTickMicroseconds<sp/>=</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>1000000<sp/>*<sp/>Config::chunkLoadingPeriod()<sp/>),<sp/>5000<sp/>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>loadingTimer_<sp/>=</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().mainDispatcher().addTimer(<sp/>loadingTickMicroseconds,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;void<sp/>*&gt;(TIMEOUT_LOADING_TICK),</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LoadingTick&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>mainDispatcher_.clearSpareTime();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_channels" kindref="compound">CellAppChannels</ref>(</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>1000000<sp/>/<sp/>Config::ghostUpdateHertz()<sp/>),<sp/>mainDispatcher_<sp/>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>DataSectionPtr<sp/>pWatcherValues<sp/>=</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BWConfig::getSection(<sp/></highlight><highlight class="stringliteral">&quot;cellApp/watcherValues&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pWatcherValues)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcherValues-&gt;setWatcherValues();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>MD5<sp/>cellappHash;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_controller_1a5c08d1a7974edb523c97f03c843b7a2a" kindref="member">Controller::addControllerDigest</ref>(<sp/>cellappHash<sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>MD5::Digest<sp/>cellappDigest(<sp/>cellappHash<sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>ourselves<sp/>with<sp/>the<sp/>CellAppMgr.<sp/><sp/>This<sp/>post-registration<sp/>init<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>implemented<sp/>as<sp/>a<sp/>reply<sp/>handler<sp/>so<sp/>that<sp/>it<sp/>will<sp/>be<sp/>done<sp/>as<sp/>soon<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reply<sp/>is<sp/>received<sp/>from<sp/>the<sp/>CellAppMgr.<sp/><sp/>This<sp/>was<sp/>formerly<sp/>done<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BlockingReplyHandler,<sp/>however,<sp/>doing<sp/>it<sp/>that<sp/>way<sp/>means<sp/>that<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out-of-order<sp/>packets<sp/>received<sp/>before<sp/>the<sp/>reply<sp/>would<sp/>be<sp/>processed<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>init<sp/>code<sp/>had<sp/>been<sp/>executed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_add_to_cell_app_mgr_helper" kindref="compound">AddToCellAppMgrHelper</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pViewerServer_-&gt;port(),<sp/>cellappDigest<sp/>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::UDPChannel::sendWindowCallbackThreshold(</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::sendWindowCallbackThreshold()<sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::UDPChannel::setSendWindowCallback(<sp/>onSendWindowOverflow<sp/>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>WaypointStats::addWatchers();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;preloadSpaces();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ae767883fc182f2c522c9822684cd2b1e" kindref="member">CellApp::finishInit</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInitData<sp/>&amp;<sp/>initData<sp/>)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>nothing<sp/>else<sp/>is<sp/>read<sp/>in<sp/>the<sp/>main<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>BWResource::watchAccessFromCallingThread(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int32(<sp/>initData.id<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::finishInit:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr<sp/>refused<sp/>to<sp/>let<sp/>us<sp/>join.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>id_<sp/>=<sp/>initData.id;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setStartTime(<sp/>initData.time<sp/>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppAddr_<sp/>=<sp/>initData.baseAppAddr;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_.addr(<sp/>initData.dbAppAlphaAddr<sp/>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>isBootstrap_<sp/>=<sp/>initData.isBootstrap;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;clusterID(<sp/>initData.clusterID<sp/>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attach<sp/>ourselves<sp/>to<sp/>an<sp/>ID<sp/>server<sp/>(in<sp/>this<sp/>case,<sp/>the<sp/>Alpha<sp/>DBApp).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!idClient_.init(<sp/>&amp;this-&gt;dbAppAlpha(),</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBAppInterface::getIDs,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBAppInterface::putIDs,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDConfig::criticallyLowSize(),</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDConfig::lowSize(),</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDConfig::desiredSize(),</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDConfig::highSize()<sp/>))</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::finishInit:<sp/>Failed<sp/>to<sp/>get<sp/>IDs\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>timeoutPeriod_<sp/>=<sp/>initData.timeoutPeriod;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>app<sp/>id<sp/>to<sp/>loggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>LoggerMessageForwarder::pInstance()-&gt;registerAppID(<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initData.isReady)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitingFor_<sp/>&amp;=<sp/>~READY_CELL_APP_MGR;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitingFor_<sp/>==<sp/>READY_CELL_APP_FINISH_INIT)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startGameTime();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;\tCluster<sp/>ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;clusterID()<sp/>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;\tCellApp<sp/>ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;\tstarting<sp/>time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%.1f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;gameTimeInSeconds()<sp/>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppInterface::registerWithMachined(</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pBWMachineD(),<sp/>this-&gt;networkInterface(),<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>safely<sp/>register<sp/>a<sp/>birth<sp/>listener<sp/>now<sp/>since<sp/>we<sp/>have<sp/>mapped<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interfaces<sp/>we<sp/>are<sp/>serving.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pBWMachineD()-&gt;registerBirthListener(</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;networkInterface().address(),</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::handleCellAppMgrBirth,<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgrInterface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>the<sp/>watcher<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>abrv[32];</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_snprintf(<sp/>abrv,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(abrv),<sp/></highlight><highlight class="stringliteral">&quot;cellapp%02d&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>BW_REGISTER_WATCHER(<sp/>id_,<sp/>abrv,<sp/>this-&gt;pBWMachineD(),<sp/></highlight><highlight class="stringliteral">&quot;cellApp&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainDispatcher_,<sp/>this-&gt;networkInterface().address()<sp/>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pythonPort<sp/>=<sp/>BWConfig::get(<sp/></highlight><highlight class="stringliteral">&quot;cellApp/pythonPort&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORT_PYTHON_CELLAPP<sp/>+<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;startPythonServer(<sp/>pythonPort,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::finishInit:<sp/>CellAppMgr<sp/>acknowledged<sp/>our<sp/>existence.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ready(<sp/>READY_CELL_APP_FINISH_INIT<sp/>);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1af617e7d30739b3cf8f4f0bff259dc4c7" kindref="member">CellApp::preloadSpaces</ref>()</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>DataSectionPtr<sp/>pTopSection<sp/>=</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BWConfig::getSection(<sp/></highlight><highlight class="stringliteral">&quot;cellApp/preloadedGeometryMappings&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pTopSection)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;cellApp/preloadedGeometryMappings<sp/>(from<sp/>bw.xml)<sp/>are:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Matrix<sp/>m;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>DataSectionIterator<sp/>iter<sp/>=<sp/>pTopSection-&gt;begin();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>pTopSection-&gt;end())</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataSectionPtr<sp/>pSection<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSection-&gt;sectionName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;preload&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>path<sp/>=<sp/>pSection-&gt;asString();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreloadedChunkSpaces::iterator<sp/>it<sp/>=<sp/>preloadedSpaces_.find(<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>preloadedSpaces_.end())</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::preloadSpaces:<sp/>%s<sp/>already<sp/>created\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.c_str()<sp/>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>preload:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path.c_str()<sp/>);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.setIdentity();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreloadedChunkSpace<sp/>*<sp/>pSpace<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PreloadedChunkSpace(</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m,<sp/>path,<sp/>this-&gt;nextSpaceEntryID(),</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEFAULT_PRELOADED_SPACE_ID,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preloadedSpaces_[<sp/>path<sp/>]<sp/>=<sp/>pSpace;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ac15b741ec3df0f9b95c45869143bb6ec" kindref="member">CellApp::onSpaceGeometryLoaded</ref>(<sp/>SpaceID<sp/>spaceID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().triggerEvent(</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryLoaded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal">,<sp/>spaceID,<sp/>name.c_str()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::startGameTime()</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp<sp/>is<sp/>starting\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!gameTimer_.isSet()<sp/>&amp;&amp;<sp/>(pTimeKeeper_<sp/>==<sp/>NULL)<sp/>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>cellAppMgr_.isInitialised()<sp/>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>the<sp/>game<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>gameTimer_<sp/>=<sp/>this-&gt;mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000000/Config::updateHertz(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;<sp/>void<sp/>*<sp/>&gt;(<sp/>TIMEOUT_GAME_TICK<sp/>),</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GameTick&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>lastGameTickTime_<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>BWUtil::getTimeOfDay(<sp/>&amp;oldTimeval_<sp/>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>mainDispatcher_.clearSpareTime();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;calcTransientLoadTime();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>pTimeKeeper_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TimeKeeper(<sp/>interface_,<sp/>gameTimer_,<sp/>time_,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::updateHertz(),<sp/>cellAppMgr_.addr(),</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CellAppMgrInterface::gameTimeReading,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>Config::maxTickStagger()<sp/>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we&apos;re<sp/>sending<sp/>load<sp/>updates<sp/>to<sp/>the<sp/>CellAppMgr<sp/>regularly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr_.isRegular(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCells()</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CellApp::instance().cells().size());</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal">uint64<sp/>runningTime()</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProfileGroup::defaultGroup().runningTime();</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g_maxTickPeriod;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g_allTimeMaxTickPeriod;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getAndResetMaxTickPeriod()</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>g_maxTickPeriod;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>g_allTimeMaxTickPeriod<sp/>=<sp/>std::max(<sp/>g_allTimeMaxTickPeriod,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_maxTickPeriod<sp/>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>g_maxTickPeriod<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::addWatchers()</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>Watcher<sp/>&amp;<sp/>watcher<sp/>=<sp/>Watcher::rootWatcher();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/stampsPerSecond&quot;</highlight><highlight class="normal">,<sp/>&amp;stampsPerSecond<sp/>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/runningTime&quot;</highlight><highlight class="normal">,<sp/>&amp;runningTime<sp/>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;resetOnRead/maxTickPeriod&quot;</highlight><highlight class="normal">,<sp/>&amp;getAndResetMaxTickPeriod<sp/>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;maxTickPeriod&quot;</highlight><highlight class="normal">,<sp/>g_allTimeMaxTickPeriod<sp/>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;timeoutPeriod&quot;</highlight><highlight class="normal">,<sp/>timeoutPeriod_,<sp/>Watcher::WT_READ_ONLY<sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>cells<sp/>(profiles<sp/>should<sp/>possibly<sp/>go<sp/>in<sp/>cells<sp/>too).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;persistentLoad&quot;</highlight><highlight class="normal">,<sp/>persistentLoad_<sp/>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;transientLoad&quot;</highlight><highlight class="normal">,<sp/>transientLoad_<sp/>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;load&quot;</highlight><highlight class="normal">,<sp/>totalLoad_<sp/>);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;entityLoad&quot;</highlight><highlight class="normal">,<sp/>totalEntityLoad_<sp/>);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;perEntityLoadShare&quot;</highlight><highlight class="normal">,<sp/>perEntityLoadShare_<sp/>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;addedArtificialLoad&quot;</highlight><highlight class="normal">,<sp/>totalAddedLoad_<sp/>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numCells&quot;</highlight><highlight class="normal">,<sp/>&amp;numCells<sp/>);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numSpaces&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;CellApp::numSpaces<sp/>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>we<sp/>want<sp/>to<sp/>make<sp/>a<sp/>watcher<sp/>for<sp/>the<sp/>type<sp/>&apos;EntityPopulation&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>EntityPopulation<sp/>is<sp/>a<sp/>Map<sp/>of<sp/>Entity<sp/>*,<sp/>not<sp/>of<sp/>Entity.<sp/>So</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>do<sp/>this<sp/>we<sp/>first<sp/>make<sp/>a<sp/>map<sp/>watcher...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>MapWatcher&lt;EntityPopulation&gt;<sp/>*<sp/>pWatchEntities<sp/>=</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MapWatcher&lt;EntityPopulation&gt;();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>add<sp/>a<sp/>&apos;BaseDereference&apos;<sp/>watcher<sp/>to<sp/>it<sp/>which<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>all<sp/>its<sp/>functions<sp/>to<sp/>its<sp/>child<sp/>watcher,<sp/>after<sp/>dereferencing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>base<sp/>address.<sp/>Easy!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>pWatchEntities-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BaseDereferenceWatcher(</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::pWatcher()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;entities&quot;</highlight><highlight class="normal">,<sp/>pWatchEntities,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;Entity::population()<sp/>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;cells&quot;</highlight><highlight class="normal">,<sp/>Cells::pWatcher(),<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;cells_<sp/>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;spaces&quot;</highlight><highlight class="normal">,<sp/>pSpaces_-&gt;pWatcher()<sp/>);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;entityTypes&quot;</highlight><highlight class="normal">,<sp/>EntityType::pWatcher()<sp/>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;EntityApp::addWatchers(<sp/>watcher<sp/>);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::addWatchers();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;throttle&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_emergency_throttle_1aa8748f9f6edbd51db291455a755871ca" kindref="member">EmergencyThrottle::pWatcher</ref>(),<sp/>&amp;throttle_<sp/>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr_.addWatchers(<sp/></highlight><highlight class="stringliteral">&quot;cellAppMgr&quot;</highlight><highlight class="normal">,<sp/>Watcher::rootWatcher()<sp/>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>watcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;dbAppAlpha&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Mercury::ChannelOwner::addr<sp/>),</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dbAppAlpha_<sp/>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a272091284682c20f8fbbeeb09e4ab656" kindref="member">CellApp::ready</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>component<sp/>)</highlight></codeline>
<codeline lineno="949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>component<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>waitingFor_<sp/>&amp;=<sp/>~component;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitingFor_<sp/>==<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>the<sp/>last<sp/>component<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>registerTimer<sp/>should<sp/>be<sp/>done<sp/>as<sp/>soon<sp/>as<sp/>possible<sp/>so<sp/>that<sp/>it<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>out-of-sync<sp/>with<sp/>the<sp/>game<sp/>time<sp/>that<sp/>the<sp/>CellAppMgr<sp/>has<sp/>told<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!gameTimer_.isSet())</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startGameTime();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::ready:<sp/>Starting<sp/>game<sp/>time<sp/>from<sp/>%u<sp/>(%.1fs)\n&quot;</highlight><highlight class="normal">,<sp/>time_,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;gameTimeInSeconds()<sp/>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().triggerTwoEvents(<sp/></highlight><highlight class="stringliteral">&quot;onAppReady&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;onCellAppReady&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(i)&quot;</highlight><highlight class="normal">,<sp/>isBootstrap_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>CellApp::numSpaces()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="976"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpaces_-&gt;size();</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::handleTimeout(<sp/>TimerHandle<sp/></highlight><highlight class="comment">/*handle*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(reinterpret_cast&lt;uintptr&gt;(<sp/>arg<sp/>))</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_GAME_TICK:</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;handleGameTickTimeSlice();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_TRIM_HISTORIES:</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;handleTrimHistoriesTimeSlice();</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_LOADING_TICK:</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Could<sp/>do<sp/>this<sp/>in<sp/>an<sp/>OpportunisticPoller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgTaskManager_.tick();</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileIOTaskManager_.tick();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>TRANSIENT_LOAD_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PreloadedChunkSpaces::iterator<sp/>it<sp/>=<sp/>preloadedSpaces_.begin();</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>preloadedSpaces_.end())</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;chunkTick();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpaces_-&gt;tickChunks();</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::tickShutdown()</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasAckedCellAppMgrShutDown_)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sendShutdownAck(<sp/>SHUTDOWN_INFORM<sp/>);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>longer<sp/>regularly<sp/>sending<sp/>the<sp/>load<sp/>from<sp/>now<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellAppMgr_.isRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasAckedCellAppMgrShutDown_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal">uint64<sp/>CellApp::calcTickPeriod()</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>newTime<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>deltaTime<sp/>=<sp/>newTime<sp/>-<sp/>lastGameTickTime_;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>lastGameTickTime_<sp/>=<sp/>newTime;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deltaTime;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CellApp::calcTransientLoadTime()</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64<sp/>lastSumTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>sumTime<sp/>=<sp/>TRANSIENT_LOAD_PROFILE.sumTime_;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>stampsToSeconds(<sp/>sumTime<sp/>-<sp/>lastSumTime<sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSumTime<sp/>=<sp/>sumTime;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CellApp::calcSpareTime()</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spareTime<sp/>=<sp/>stampsToSeconds(<sp/>mainDispatcher_.getSpareTime()<sp/>);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>mainDispatcher_.clearSpareTime();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spareTime;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>CellApp::calcThrottledLoadTime()</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64<sp/>lastSumTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>sumTime<sp/>=<sp/>CLIENT_UPDATE_PROFILE.sumTime_;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>stampsToSeconds(<sp/>sumTime<sp/>-<sp/>lastSumTime<sp/>);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSumTime<sp/>=<sp/>sumTime;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::checkTickWarnings(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>persistentLoadTime,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastTickPeriod,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spareTime<sp/>)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Did<sp/>the<sp/>last<sp/>tick<sp/>take<sp/>more<sp/>than<sp/>2<sp/>ticks<sp/>amount<sp/>of<sp/>time?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastTickPeriod<sp/>*<sp/>Config::updateHertz()<sp/>&gt;<sp/>2.f)</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::checkTickWarnings:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Last<sp/>game<sp/>tick<sp/>took<sp/>%.2f<sp/>seconds.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Persistent<sp/>load<sp/>time<sp/>=<sp/>%.2f.<sp/>Spare<sp/>time<sp/>%.2f.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTickPeriod,<sp/>persistentLoadTime,<sp/>spareTime<sp/>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Config::allowInteractiveDebugging()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTickPeriod<sp/>&gt;<sp/>timeoutPeriod_)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::checkTickWarnings:<sp/>Last<sp/>game<sp/>tick<sp/>took<sp/>%.2f<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;seconds.<sp/>cellAppMgr/cellAppTimeout<sp/>is<sp/>%.2f.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>process<sp/>should<sp/>have<sp/>been<sp/>stopped<sp/>by<sp/>CellAppMgr.<sp/>This<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;process<sp/>will<sp/>now<sp/>be<sp/>terminated.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTickPeriod,</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeoutPeriod_<sp/>);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64<sp/>scriptTime<sp/>=<sp/>SCRIPT_CALL_PROFILE.sumTime_;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/>newScriptTime<sp/>=<sp/>SCRIPT_CALL_PROFILE.sumTime_;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/>deltaScriptTime<sp/>=<sp/>newScriptTime<sp/>-<sp/>scriptTime;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptTime<sp/>=<sp/>newScriptTime;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaScriptTime<sp/>*<sp/>Config::updateHertz()<sp/>/<sp/>2<sp/>&gt;<sp/>stampsPerSecond())</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::checkTickWarnings:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Last<sp/>game<sp/>tick,<sp/>script<sp/>took<sp/>%.2f<sp/>seconds\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stampsToSeconds(<sp/>deltaScriptTime<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((persistentLoadTime<sp/>&lt;<sp/>0.f)<sp/>||<sp/>(lastTickPeriod<sp/>&lt;<sp/>persistentLoadTime))</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BW_USE_RDTSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_timingMethod<sp/>==<sp/>RDTSC_TIMING_METHOD)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::checkTickWarnings:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>timing<sp/>result<sp/>%.3f.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>likely<sp/>due<sp/>to<sp/>running<sp/>on<sp/>a<sp/>multicore<sp/>system<sp/>that<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;does<sp/>not<sp/>have<sp/>synchronised<sp/>Time<sp/>Stamp<sp/>Counters.<sp/>Refer<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;server_installation_guide.html<sp/>regarding<sp/>TimingMethod.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastTickPeriod<sp/>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::checkTickWarnings:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>timing<sp/>result<sp/>%.3f.\n&quot;</highlight><highlight class="normal">,<sp/>lastTickPeriod<sp/>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellApp::numSecondsBehind()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1162"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>now<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>next<sp/>=<sp/>mainDispatcher_.timerDeliveryTime(<sp/>gameTimer_<sp/>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>toNext<sp/>=<sp/>next<sp/>-<sp/>now;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>toNext<sp/>is<sp/>&apos;negative&apos;<sp/>(unsigned<sp/>arthimetic).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((2<sp/>*<sp/>toNext<sp/>&lt;<sp/>toNext)<sp/>?</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::expectedTickPeriod()<sp/>+<sp/>stampsToSeconds(<sp/>now<sp/>-<sp/>next<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::expectedTickPeriod()<sp/>-<sp/>stampsToSeconds(<sp/>toNext<sp/>));</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::addToLoad(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeSpent,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;<sp/>result<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1181"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bias<sp/>=<sp/>Config::loadSmoothingBias();</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(1-bias)<sp/>*<sp/>result<sp/>+<sp/>bias<sp/>*<sp/>timeSpent<sp/>*<sp/>Config::updateHertz();</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::updateLoad()</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>lastTickTimeInStamps<sp/>=<sp/>this-&gt;calcTickPeriod();</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tickTime<sp/>=<sp/>stampsToSeconds(<sp/>lastTickTimeInStamps<sp/>);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tickProfilers(<sp/>lastTickTimeInStamps<sp/>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>spareTime<sp/>=<sp/>this-&gt;calcSpareTime();</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>transientLoadTime<sp/>=<sp/>this-&gt;calcTransientLoadTime();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>persistentLoadTime<sp/>=<sp/>tickTime<sp/>-<sp/>spareTime<sp/>-<sp/>transientLoadTime;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>estimatedPersistentLoadTime<sp/>=<sp/>throttle_.estimatePersistentLoadTime(</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(persistentLoadTime),</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(this-&gt;calcThrottledLoadTime())<sp/>);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>throttle_.update(<sp/>this-&gt;numSecondsBehind(),</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(spareTime),<sp/>Config::expectedTickPeriod()<sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;checkTickWarnings(<sp/>persistentLoadTime,<sp/>tickTime,<sp/>spareTime<sp/>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Factor<sp/>these<sp/>times<sp/>into<sp/>the<sp/>load<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>artificialTime<sp/>=<sp/>totalAddedLoad_<sp/>/<sp/>Config::updateHertz();</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addToLoad(<sp/>static_cast&lt;float&gt;(estimatedPersistentLoadTime<sp/>+<sp/>artificialTime),</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>persistentLoad_<sp/>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addToLoad(<sp/>static_cast&lt;float&gt;(transientLoadTime),<sp/>transientLoad_<sp/>);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addToLoad(<sp/>static_cast&lt;float&gt;(tickTime<sp/>-<sp/>spareTime),<sp/>totalLoad_<sp/>);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRealEntities<sp/>=<sp/>this-&gt;numRealEntities();</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BalanceConfig::demo())</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>oldstyle<sp/>demo<sp/>load<sp/>balancing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>persistentLoad_<sp/>=</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)numRealEntities<sp/>/<sp/>BalanceConfig::demoNumEntitiesPerCell();</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(persistentLoad_<sp/>&gt;<sp/>totalEntityLoad_)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perEntityLoadShare_<sp/>=<sp/>(persistentLoad_<sp/>-<sp/>totalEntityLoad_)<sp/>/<sp/>numRealEntities;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perEntityLoadShare_<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::tickProfilers(<sp/>uint64<sp/>lastTickInStamps<sp/>)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>cells_.tickProfilers(<sp/>lastTickInStamps,<sp/>Config::loadSmoothingBias()<sp/>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1abfe47ffd727c987b7f79f5c7b593e4f4" kindref="member">EntityType::tickProfilers</ref>(<sp/>totalEntityLoad_,<sp/>totalAddedLoad_<sp/>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::updateBoundary()</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;calcBoundary&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>We<sp/>could<sp/>probably<sp/>only<sp/>send<sp/>this<sp/>at<sp/>the<sp/>load<sp/>balancing<sp/>rate<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>it<sp/>could<sp/>be<sp/>part<sp/>of<sp/>informOfLoad?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr_.updateBounds(<sp/>cells_<sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::tickBackup()</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backupPeriod<sp/>=<sp/>Config::backupPeriodInTicks();</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backupPeriod<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;backup&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells_.backup(<sp/>backupIndex_,<sp/>backupPeriod<sp/>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backupIndex_<sp/>=<sp/>(backupIndex_<sp/>+<sp/>1)<sp/>%<sp/>backupPeriod;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::checkOffloads()</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((time_<sp/>%<sp/>Config::checkOffloadsPeriodInTicks())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells_.checkOffloads();</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::syncTime()</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Move<sp/>this<sp/>to<sp/>ServerApp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((time_<sp/>%<sp/>Config::timeSyncPeriodInTicks())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTimeKeeper_)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>a<sp/>reading<sp/>of<sp/>our<sp/>time<sp/>to<sp/>the<sp/>cell<sp/>app<sp/>manager...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>get<sp/>a<sp/>better<sp/>one<sp/>back<sp/>to<sp/>sync<sp/>our<sp/>tick<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeKeeper_-&gt;synchroniseWithMaster();</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::handleGameTickTimeSlice()</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;gameTick&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;inShutDownPause())</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;tickShutdown();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateLoad();</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr_.informOfLoad(<sp/>persistentLoad_<sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateBoundary();</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>time<sp/>-<sp/>we<sp/>are<sp/>now<sp/>into<sp/>the<sp/>quantum<sp/>of<sp/>the<sp/>next<sp/>tick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;advanceTime();</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tickBackup();</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;checkSendWindowOverflows();</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>----<sp/>Jobs<sp/>that<sp/>can<sp/>just<sp/>take<sp/>up<sp/>remaining<sp/>time<sp/>should<sp/>go<sp/>last<sp/>----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;checkOffloads();</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaces_-&gt;deleteOldSpaces();</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;syncTime();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tickStats();</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;bufferedEntityMessages().playBufferedMessages(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;bufferedInputMessages().playBufferedMessages(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>cells_.tickRecordings();</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::onStartOfTick()</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;EntityApp::onStartOfTick();</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IGameDelegate::instance()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;IGameDelegate::update&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IGameDelegate::instance()-&gt;update();</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::onEndOfTick()</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_-&gt;stopTimer();</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_-&gt;sendAll();</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callWitnesses(<sp/></highlight><highlight class="comment">/*<sp/>checkReceivedTime<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::onTickProcessingComplete()</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;EntityApp::onTickProcessingComplete();</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_-&gt;sendTickCompleteToAll(<sp/>this-&gt;time()<sp/>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_-&gt;startTimer(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>1000000<sp/>/<sp/>Config::ghostUpdateHertz()<sp/>),</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainDispatcher_<sp/>);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>hasCalledWitnesses_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callWitnesses(<sp/></highlight><highlight class="comment">/*<sp/>checkReceivedTime<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::handleTrimHistoriesTimeSlice()</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>iterator<sp/>in<sp/>tact.<sp/>This<sp/>is<sp/>necessary<sp/>as<sp/>trimEventHistory<sp/>can<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>onWitnessed<sp/>(which<sp/>it<sp/>probably<sp/>should<sp/>not<sp/>do).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>Entity::population().end())</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Could<sp/>skip<sp/>dead<sp/>entities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;trimEventHistory(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::population().expireRealChannels();</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trim<sp/>the<sp/>event<sp/>history<sp/>for<sp/>space<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>it<sp/>=<sp/>this-&gt;spaces().begin();</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>this-&gt;spaces().end())</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;second-&gt;pSpaceDataObject())</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;pSpaceDataObject()-&gt;trimEventHistory();</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second-&gt;trimGeometryMappingEventHistory();</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it++;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a67be738a7ae87086b286b91a58834ba4" kindref="member">CellApp::destroyCell</ref>(<sp/><ref refid="class_cell" kindref="compound">Cell</ref><sp/>*<sp/>pCell<sp/>)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>cells_.destroy(<sp/>pCell<sp/>);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ac545d4dde0fbe97c5c8b2b48668cebb7" kindref="member">CellApp::shutDown</ref>()</highlight></codeline>
<codeline lineno="1455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ServerApp::shutDown();</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Mercury<sp/>Message<sp/>Handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ac545d4dde0fbe97c5c8b2b48668cebb7" kindref="member">CellApp::shutDown</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::shutDownArgs<sp/>&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>TRACE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::shutDown:<sp/>Told<sp/>to<sp/>shut<sp/>down\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_viewer_server_1a93e9f54e50bcbb6c19b4b70d9aeedc23" kindref="member">shutDown</ref>();</highlight></codeline>
<codeline lineno="1471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a49cd7d062a4c29cff5d00221fe975a73" kindref="member">CellApp::controlledShutDown</ref>(</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::controlledShutDownArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(args.stage)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_INFORM:</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutDownTime_<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::controlledShutDown:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>shutDownTime_<sp/>to<sp/>%u<sp/>when<sp/>already<sp/>set<sp/>to<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.shutDownTime,<sp/>shutDownTime_<sp/>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutDownTime_<sp/>=<sp/>args.shutDownTime;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasAckedCellAppMgrShutDown_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;hasStarted())</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().triggerTwoEvents(</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onAppShuttingDown&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;onCellAppShuttingDown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)shutDownTime_/Config::updateHertz()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>send<sp/>ack<sp/>immediately<sp/>to<sp/>allow<sp/>scripts<sp/>to<sp/>do<sp/>stuff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sendShutdownAck(<sp/>SHUTDOWN_INFORM<sp/>);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_PERFORM:</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::controlledShutDown:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CellApp<sp/>does<sp/>not<sp/>do<sp/>SHUTDOWN_PERFORM<sp/>stage.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>It<sp/>could<sp/>be<sp/>good<sp/>to<sp/>call<sp/>this<sp/>so<sp/>that<sp/>we<sp/>can<sp/>call<sp/>a<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_NONE:</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_REQUEST:</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_DISCONNECT_PROXIES:</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_TRIGGER:</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::sendShutdownAck(<sp/>ShutDownStage<sp/>stage<sp/>)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr_.ackShutdown(<sp/>stage<sp/>);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1afb3c3cd6e8998e9c5ff945c1f8993015" kindref="member">CellApp::addCell</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.replyID<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcAddr<sp/>==<sp/>cellAppMgr_.addr())</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellAppMgr_.bundle().startReply(<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellAppMgr_.send();</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::addCell:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Request<sp/>came<sp/>from<sp/>%s<sp/>instead<sp/>of<sp/>CellAppMgr<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAddr.c_str(),<sp/>cellAppMgr_.addr().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UDPBundle<sp/>bundle;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;networkInterface().send(<sp/>srcAddr,<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>spaceDataDef;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceDataDef;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;findSpace(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::addCell:<sp/>Re-using<sp/>space<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace-&gt;propertyDefinitionsName()<sp/>==<sp/>spaceDataDef<sp/>);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1aaef7474c767c724ec134ef2322293138" kindref="member">reuse</ref>();</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace<sp/>=<sp/>pSpaces_-&gt;create(<sp/>spaceID,<sp/>spaceDataDef<sp/>);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::addCell:<sp/>Space<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1aaf1bd1aa1d569f38b48d09ac01506264" kindref="member">updateGeometry</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_info" kindref="compound">CellInfo</ref><sp/>*<sp/>pCellInfo<sp/>=<sp/>pSpace-&gt;<ref refid="class_space_1a16f6fbe81d9d05cad788bde3976bfec1" kindref="member">findCell</ref>(<sp/>interface_.address()<sp/>);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellInfo)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell" kindref="compound">Cell</ref><sp/>*<sp/>pNewCell<sp/>=<sp/>pSpace-&gt;pCell();</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewCell)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::addCell:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cell<sp/>did<sp/>not<sp/>fully<sp/>remove;<sp/>reusing.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pCellInfo<sp/>==<sp/>&amp;pNewCell-&gt;cellInfo()<sp/>);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewCell-&gt;<ref refid="class_cell_1a6f6ccf566b8978b45912e181ccd023ae" kindref="member">reuse</ref>();</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewCell<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_cell" kindref="compound">Cell</ref>(<sp/>*pSpace,<sp/>*pCellInfo<sp/>);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells_.add(<sp/>pNewCell<sp/>);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFirstCell;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>isFirstCell;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFromDB;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>isFromDB;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Space<sp/>geometry<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1ad4a9d3eef2098cbee6957695a959a39c" kindref="member">readAllGeometryMappings</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>artificialMinLoad;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>artificialMinLoad;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a944cbd48768f72398d54542ef65baef1" kindref="member">updateArtificialMinLoad</ref>(<sp/>artificialMinLoad,</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>notifyMgr<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Space<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSpaceData;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>hasSpaceData;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasSpaceData)</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1abff3865ea3b56808710f94f1e14e14d4" kindref="member">readAllProperties</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Space<sp/>recording</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a253e0c5c3fddecc29f860c154bcca01a" kindref="member">startRecording</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::addCell:<sp/>Failed<sp/>to<sp/>add<sp/>a<sp/>cell<sp/>for<sp/>space<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ab8074454db3dc481616ebde779ab2ba8" kindref="member">CellApp::setGameTime</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::setGameTimeArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!gameTimer_.isSet()<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>started<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>time_<sp/>=<sp/>args.gameTime;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::setGameTime:<sp/>gametime<sp/>=<sp/>%.1f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;gameTimeInSeconds()<sp/>);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ac5c3838184ae92bdc9ba06b2ddb71e3e" kindref="member">CellApp::startup</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::startupArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppAddr_<sp/>=<sp/>args.baseAppAddr;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ready(<sp/>READY_CELL_APP_MGR<sp/>);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a7d1c1d983819ffbe6053d9f371c1b534" kindref="member">CellApp::handleCellAppMgrBirth</ref>(</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::handleCellAppMgrBirthArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleCellAppMgrBirth:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>args.addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutDownTime_<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleCellAppMgrBirth:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Ignored<sp/>while<sp/>shutting<sp/>down\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr_.onManagerRebirth(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTimeKeeper_)</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pTimeKeeper_-&gt;masterAddress(<sp/>cellAppMgr_.addr()<sp/>);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::addCellAppMgrRebirthData(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>interface_.address();</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>pViewerServer_-&gt;port();</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>id_<sp/>&lt;&lt;<sp/>time_;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(<sp/>waitingFor_<sp/>==<sp/>0<sp/>);<sp/></highlight><highlight class="comment">//<sp/>hasStarted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppData_-&gt;addToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>pGlobalData_-&gt;addToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpaces_-&gt;writeRecoveryData(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a770d3eb87cff3c90a94f7f5577f8f66f" kindref="member">CellApp::handleCellAppDeath</ref>(</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::handleCellAppDeathArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleCellAppDeath:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>args.addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>args.addr.port<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>cells_.handleCellAppDeath(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>helper<sp/>object<sp/>decides<sp/>when<sp/>it&apos;s<sp/>safe<sp/>to<sp/>send<sp/>the<sp/>ACK<sp/>back<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CellAppMgr.<sp/><sp/>See<sp/>the<sp/>header<sp/>comment<sp/>for<sp/>this<sp/>class<sp/>for<sp/>more<sp/>details<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>ins<sp/>and<sp/>outs<sp/>of<sp/>this<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ack_cell_app_death_helper" kindref="compound">AckCellAppDeathHelper</ref><sp/>*<sp/>pAckHelper<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_ack_cell_app_death_helper" kindref="compound">AckCellAppDeathHelper</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>the<sp/>ghosts<sp/>that<sp/>are<sp/>associated<sp/>with<sp/>real<sp/>entities<sp/>that<sp/>are<sp/>lost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Probably<sp/>don&apos;t<sp/>want<sp/>to<sp/>do<sp/>this.<sp/>We<sp/>should<sp/>bring<sp/>the<sp/>reals<sp/>back<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>these<sp/>ghosts<sp/>do<sp/>not<sp/>disappear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>More<sp/>of<sp/>a<sp/>reason<sp/>not<sp/>to<sp/>do<sp/>this<sp/>is<sp/>that<sp/>we<sp/>cannot<sp/>be<sp/>sure<sp/>that<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>information<sp/>is<sp/>correct.<sp/>We<sp/>may<sp/>not<sp/>delete<sp/>a<sp/>ghost<sp/>when<sp/>we<sp/>should,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>worse,<sp/>delete<sp/>a<sp/>ghost<sp/>when<sp/>we<sp/>should<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BW::vector&lt;<sp/>EntityPtr<sp/>&gt;<sp/>EntityPtrs;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPtrs<sp/>zombies;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>Entity::population().end())</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>clear<sp/>haunts<sp/>on<sp/>the<sp/>dead<sp/>app<sp/>for<sp/>each<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;isReal())</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealEntity::Haunts::iterator<sp/>iter<sp/>=<sp/>pEntity-&gt;pReal()-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>pEntity-&gt;pReal()-&gt;hauntsEnd())</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealEntity::Haunt<sp/>&amp;<sp/>haunt<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(haunt.addr()<sp/>==<sp/>args.addr)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>pEntity-&gt;pReal()-&gt;delHaunt(<sp/>iter<sp/>);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;checkIfZombied(<sp/>args.addr<sp/>))</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zombies.push_back(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>real<sp/>whose<sp/>base<sp/>channel<sp/>is<sp/>in<sp/>a<sp/>critical<sp/>state<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>considered<sp/>to<sp/>be<sp/>a<sp/>recent<sp/>onload.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;isReal()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;pReal()-&gt;channel().hasUnackedCriticals())</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAckHelper-&gt;<ref refid="class_ack_cell_app_death_helper_1ae73c14412263bd278b155dcd64cd3b13" kindref="member">addCriticalEntity</ref>(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>a<sp/>message<sp/>to<sp/>the<sp/>base<sp/>entities<sp/>just<sp/>in<sp/>case<sp/>they<sp/>still<sp/>think</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>we<sp/>have<sp/>the<sp/>real<sp/>entity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::BundleSendingMap<sp/>bundles(<sp/>interface_<sp/>);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPtrs::iterator<sp/>ghostIter<sp/>=<sp/>zombies.begin();</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ghostIter<sp/>!=<sp/>zombies.end())</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pEntity<sp/>=<sp/>*ghostIter;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntity-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;hasBase())</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>bundles[<sp/>pEntity-&gt;baseAddr()<sp/>];</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>be<sp/>smarter<sp/>about<sp/>sending<sp/>this.<sp/>We<sp/>only<sp/>really</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>do<sp/>it<sp/>if<sp/>we<sp/>were<sp/>the<sp/>last<sp/>ones<sp/>to<sp/>have<sp/>the<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entity.<sp/><sp/>For<sp/>simplicity,<sp/>always<sp/>sending<sp/>it.<sp/>Probably</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>save<sp/>us<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::setClientArgs<sp/>setClientArgs<sp/>=</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>pEntity-&gt;id()<sp/>};</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>setClientArgs;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startRequest(</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::emergencySetCurrentCell,</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAckHelper,</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;<sp/>void<sp/>*<sp/>&gt;(<sp/>pEntity-&gt;id()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>pEntity-&gt;space().id();</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>pEntity-&gt;realAddr();</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>that<sp/>we&apos;re<sp/>expecting<sp/>another<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pAckHelper-&gt;<ref refid="class_ack_cell_app_death_helper_1a78acf78354f8e1167837deea98203468" kindref="member">addBadGhost</ref>();</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffered<sp/>lifespans<sp/>may<sp/>revive<sp/>a<sp/>ghost,<sp/>real,<sp/>or<sp/>zombie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;destroy();</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pEntity-&gt;checkIfZombied(<sp/>args.addr<sp/>));</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ghostIter;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::population().notifyBasesOfCellAppDeath(<sp/>args.addr,<sp/>bundles,<sp/>pAckHelper<sp/>);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>all<sp/>the<sp/>zombie<sp/>info<sp/>to<sp/>the<sp/>baseapps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>bundles.sendAll();</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>pAckHelper-&gt;<ref refid="class_ack_cell_app_death_helper_1a2053f05b3d8c7bcc64c28135f50d52a9" kindref="member">startTimer</ref>();</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>any<sp/>listeners<sp/>that<sp/>the<sp/>CellAppChannel<sp/>is<sp/>about<sp/>to<sp/>disappear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_death_listeners_1abe8288386afb74fd0746b737cfe67c63" kindref="member">CellAppDeathListeners::instance</ref>().<ref refid="class_cell_app_death_listeners_1af54abaa473805da824af53182b4f13df" kindref="member">handleCellAppDeath</ref>(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>it&apos;s<sp/>safe<sp/>to<sp/>delete<sp/>the<sp/>CellAppChannel<sp/>to<sp/>the<sp/>dead<sp/>app.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_-&gt;remoteFailure(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a32431c98dbb8446d63c6a52e52e80483" kindref="member">CellApp::handleBaseAppDeath</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>deadAddr;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>BackupHash<sp/>backupHash;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>isService<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>deadAddr<sp/>&gt;&gt;<sp/>isService<sp/>&gt;&gt;<sp/>backupHash;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isService)</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleBaseAppDeath:<sp/>ServiceApp<sp/>%s<sp/>has<sp/>died\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deadAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPyServicesMap_-&gt;map().removeFragmentsForAddress(<sp/>deadAddr<sp/>);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleBaseAppDeath:<sp/>BaseApp<sp/>%s<sp/>has<sp/>died.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u<sp/>backups\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deadAddr.c_str(),<sp/></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backupHash.size()<sp/>);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backupHash.empty())</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleBaseAppDeath:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>recover<sp/>from<sp/>BaseApp<sp/>death.<sp/>Shutting<sp/>down.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_viewer_server_1a93e9f54e50bcbb6c19b4b70d9aeedc23" kindref="member">shutDown</ref>();</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_entity_population" kindref="compound">EntityPopulation</ref><sp/>&amp;<sp/>pop<sp/>=<sp/>Entity::population();</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>pop.begin();</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>object<sp/>will<sp/>free<sp/>itself<sp/>when<sp/>it<sp/>times<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BaseRestoreConfirmHandler();</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>pop.end())</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;second-&gt;baseAddr()<sp/>==<sp/>deadAddr)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;adjustForDeadBaseApp(<sp/>backupHash<sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>ServerEntityMailBox::adjustForDeadBaseApp(<sp/>deadAddr,<sp/>backupHash<sp/>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().triggerEvent(<sp/></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(isService<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;onServiceAppDeath&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;onBaseAppDeath&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;((sH))&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deadAddr.ipAsString(),</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntohs(<sp/>deadAddr.port<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ae0a643877202859baef7ba98774a3b44" kindref="member">CellApp::callWatcher</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data)</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>path;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>path;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>DeferrableWatcherPathRequest<sp/>*<sp/>pPathRequest<sp/>=<sp/></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DeferrableWatcherPathRequest(<sp/>path,<sp/>interface_,<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>pPathRequest-&gt;setPacketData(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>pPathRequest-&gt;setWatcherValue();</highlight></codeline>
<codeline lineno="1925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1aa30202068128b53ab7e856c6b277139e" kindref="member">CellApp::setSharedData</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>nearly<sp/>identical<sp/>to<sp/>the<sp/>code<sp/>in<sp/>BaseApp::setSharedData.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>look<sp/>at<sp/>sharing<sp/>the<sp/>code<sp/>somehow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>SharedDataType<sp/>dataType;</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>key;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>value;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>dataType<sp/>&gt;&gt;<sp/>key<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>originalSrcAddr<sp/>=<sp/>Mercury::Address::NONE;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>Mercury::Address<sp/>))</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>originalSrcAddr;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>(data.remainingLength()<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!data.error()<sp/>)</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::setSharedData:<sp/>Invalid<sp/>data!!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>original<sp/>change<sp/>was<sp/>made<sp/>by<sp/>this<sp/>CellApp.<sp/>Therefore,<sp/>treat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>message<sp/>as<sp/>an<sp/>ack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAck<sp/>=</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(originalSrcAddr<sp/>==<sp/>this-&gt;networkInterface().address());</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dataType)</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHARED_DATA_TYPE_CELL_APP:</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellAppData_-&gt;setValue(<sp/>key,<sp/>value,<sp/>isAck<sp/>);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHARED_DATA_TYPE_GLOBAL:</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGlobalData_-&gt;setValue(<sp/>key,<sp/>value,<sp/>isAck<sp/>);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::setValue:<sp/>Invalid<sp/>dataType<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dataType<sp/>);</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ae66d7ec4c10f984141edfd871a9839fd" kindref="member">CellApp::delSharedData</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>nearly<sp/>identical<sp/>to<sp/>the<sp/>code<sp/>in<sp/>BaseApp::delSharedData.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>look<sp/>at<sp/>sharing<sp/>the<sp/>code<sp/>somehow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/>SharedDataType<sp/>dataType;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>key;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>dataType<sp/>&gt;&gt;<sp/>key;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>originalSrcAddr<sp/>=<sp/>Mercury::Address::NONE;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>Mercury::Address<sp/>))</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>originalSrcAddr;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>(data.remainingLength()<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!data.error()<sp/>)</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::delSharedData:<sp/>Invalid<sp/>data!!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>original<sp/>change<sp/>was<sp/>made<sp/>by<sp/>this<sp/>CellApp.<sp/>Therefore,<sp/>treat<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>as<sp/>an<sp/>ack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAck<sp/>=</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(originalSrcAddr<sp/>==<sp/>this-&gt;networkInterface().address());</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dataType)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHARED_DATA_TYPE_CELL_APP:</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellAppData_-&gt;delValue(<sp/>key,<sp/>isAck<sp/>);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHARED_DATA_TYPE_GLOBAL:</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGlobalData_-&gt;delValue(<sp/>key,<sp/>isAck<sp/>);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::delValue:<sp/>Invalid<sp/>dataType<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dataType<sp/>);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ab9c6bfc6b44420372fdd61c57541c8f4" kindref="member">CellApp::addServiceFragment</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>serviceName;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityMailBoxRef<sp/>fragmentMailBox;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>serviceName<sp/>&gt;&gt;<sp/>fragmentMailBox;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/>pPyServicesMap_-&gt;map().addFragment(<sp/>serviceName,<sp/>fragmentMailBox<sp/>);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ac9da1cefacfdfe83ff945f97a93b587c" kindref="member">CellApp::delServiceFragment</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>serviceName;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>fragmentAddress;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>serviceName<sp/>&gt;&gt;<sp/>fragmentAddress;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>pPyServicesMap_-&gt;map().removeFragment(<sp/>serviceName,<sp/>fragmentAddress<sp/>);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a65bbfeb3f988b6fa264d66aaba26a0a0" kindref="member">CellApp::setBaseApp</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::setBaseAppArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppAddr_<sp/>=<sp/>args.baseAppAddr;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1aec2e1282a70f55d7a1f8046cb29d85fa" kindref="member">CellApp::setDBAppAlpha</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::setDBAppAlphaArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2070"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/>TRACE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::setDBAppAlpha:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>args.addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_.addr(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a7686f82666f665bf7fc436e465ed20a2" kindref="member">CellApp::onloadTeleportedEntity</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>nearbyID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>createGhostDataLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>nearbyID<sp/>&gt;&gt;<sp/>createGhostDataLen;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>teleportingID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pNearbyEntity<sp/>=<sp/>CellApp::instance().findEntity(<sp/>nearbyID<sp/>);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNearbyEntity<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>split<sp/>up<sp/>the<sp/>messages<sp/>because<sp/>createGhost<sp/>looks<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remainingLength<sp/>of<sp/>the<sp/>message<sp/>data<sp/>it<sp/>is<sp/>passed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOStream<sp/>createGhostData(<sp/>createGhostDataLen<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>SpaceID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>teleportingID;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createGhostData<sp/>&lt;&lt;<sp/>pNearbyEntity-&gt;space().id();</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createGhostData<sp/>&lt;&lt;<sp/>teleportingID;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createGhostData.transfer(<sp/>data,<sp/></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createGhostDataLen<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(teleportingID)<sp/>);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ghost<sp/>data<sp/>in<sp/>the<sp/>teleport<sp/>is<sp/>at<sp/>least<sp/>as<sp/>recent<sp/>as<sp/>the<sp/>local<sp/>ghost,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>more<sp/>recent.<sp/>So<sp/>forget<sp/>the<sp/>local<sp/>ghost<sp/>as<sp/>being<sp/>uninteresting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pExistEntity<sp/>=<sp/>this-&gt;findEntity(<sp/>teleportingID<sp/>);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pExistEntity)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pExistEntity-&gt;destroy();</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>dummyHeader<sp/>=<sp/>header;</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyHeader.identifier<sp/>=<sp/>CellAppInterface::createGhost.id();</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyHeader.length<sp/>=<sp/>createGhostData.remainingLength();</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::createGhost.pHandler()-&gt;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleMessage(<sp/>srcAddr,<sp/>dummyHeader,<sp/>createGhostData<sp/>);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyHeader.identifier<sp/>=<sp/>CellAppInterface::onload.id();</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyHeader.length<sp/>=<sp/>data.remainingLength();</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::onload.pHandler()-&gt;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handleMessage(<sp/>srcAddr,<sp/>dummyHeader,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pNewEntity<sp/>=<sp/>this-&gt;findEntity(<sp/>teleportingID<sp/>);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pNewEntity<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewEntity-&gt;onTeleportSuccess(<sp/>pNearbyEntity.get()<sp/>);</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>entity<sp/>is<sp/>non-volatile,<sp/>then<sp/>the<sp/>above<sp/>call<sp/>to<sp/>the<sp/>onload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handler<sp/>will<sp/>have<sp/>added<sp/>the<sp/>detailed<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewEntity-&gt;volatileInfo().hasVolatile(<sp/>0.f<sp/>))</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewEntity-&gt;addDetailedPositionToHistory(</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isLocalOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewEntity-&gt;cell().pReplayData())</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewEntity-&gt;cell().pReplayData()-&gt;<ref refid="class_replay_data_collector_1a7e3444bb76ab2eef13d996644f996452" kindref="member">addEntityState</ref>(<sp/>*pNewEntity<sp/>);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>off<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>createGhost<sp/>message,<sp/>it<sp/>is<sp/>discarded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.retrieve(<sp/>createGhostDataLen<sp/>);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream<sp/>off<sp/>the<sp/>start<sp/>of<sp/>the<sp/>offload<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>teleportFailure;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>discard<sp/>this,<sp/>as<sp/>this<sp/>should<sp/>always<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>false,<sp/>because<sp/>we<sp/>set<sp/>it<sp/>from<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>teleportingID<sp/>&gt;&gt;<sp/>teleportFailure;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::onloadTeleportedEntity:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;nearby<sp/>entity<sp/>(id<sp/>%u)<sp/>does<sp/>not<sp/>exist<sp/>on<sp/>this<sp/>CellApp,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;while<sp/>teleporting<sp/>entity<sp/>%u<sp/>(from<sp/>%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nearbyID,<sp/>teleportingID,<sp/>srcAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Channel<sp/>&amp;<sp/>srcChannel<sp/>=<sp/>CellApp::getChannel(<sp/>srcAddr<sp/>);</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>srcChannel.bundle();</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::onload<sp/>);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>back<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>onload<sp/>message<sp/>to<sp/>the<sp/>originator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>teleportingID<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*teleportFailure*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.transfer(<sp/>data,<sp/>data.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a07c3b066b7bc196bb5391b521e621ac1" kindref="member">CellApp::cellAppMgrInfo</ref>(</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::cellAppMgrInfoArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>maxCellAppLoad_<sp/>=<sp/>args.maxCellAppLoad;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a1be1b3e57ccdefb1fcdd50385e07d112" kindref="member">CellApp::handleOnBaseOffloadedFailure</ref>(<sp/>EntityID<sp/>entityID,</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;oldBaseAddr,</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::onBaseOffloadedArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleOnBaseOffloadedFailure:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>deliver<sp/>onBaseOffloaded<sp/>message<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;non-existing<sp/>entity<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>entityID<sp/>);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::UDPChannel<sp/>*<sp/>pChannel<sp/>=</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface_.condemnedChannels().find(</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelID<sp/>(<sp/>entityID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChannel<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleOnBaseOffloadedFailure:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Switching<sp/>a<sp/>dead<sp/>entity&apos;s<sp/>(%d)<sp/>channel<sp/>from<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;address<sp/>%s<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityID,</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldBaseAddr.c_str(),</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.newBaseAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChannel-&gt;setAddress(<sp/>args.newBaseAddr<sp/>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::handleOnBaseOffloadedFailure:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>a<sp/>dead<sp/>entity&apos;s<sp/>(%d)<sp/>condemned<sp/>channel&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityID<sp/>);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1afd633557eea7c4c9f385aa1aebcb0868" kindref="member">CellApp::onRemoteTickComplete</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::onRemoteTickCompleteArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppChannels_-&gt;onRemoteTickComplete(<sp/>srcAddr,<sp/>args.gameTime<sp/>);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callWitnesses(<sp/></highlight><highlight class="comment">/*<sp/>checkReceivedTime<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Utility<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>CellApp::findEntity(<sp/>EntityID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2240"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;findEntity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().find(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(iter<sp/>!=<sp/>Entity::population().end())<sp/>?<sp/>iter-&gt;second<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>((pEntity<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>!pEntity-&gt;isDestroyed())<sp/>?<sp/>pEntity<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a54b5581b2a44215f9210331d2fda88b7" kindref="member">CellApp::entityKeys</ref>(<sp/>PyObject<sp/>*<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2256"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>Entity::population().end())</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;second-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pInt<sp/>=<sp/>PyInt_FromLong(<sp/>iter-&gt;first<sp/>);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList,<sp/>pInt<sp/>);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pInt<sp/>);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1afdf72915708524d45264708df0f4c51f" kindref="member">CellApp::entityValues</ref>(<sp/>PyObject<sp/>*<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2277"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>Entity::population().end())</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;second-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList,<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a0c8a8166d64729a778aff95881cd99b9" kindref="member">CellApp::entityItems</ref>(<sp/>PyObject<sp/>*<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2296"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>Entity::population().end())</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iter-&gt;second-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pTuple<sp/>=<sp/>PyTuple_New(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SetItem(<sp/>pTuple,<sp/>0,<sp/>PyInt_FromLong(<sp/>iter-&gt;first<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SetItem(<sp/>pTuple,<sp/>1,<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList,<sp/>pTuple<sp/>);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pTuple<sp/>);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><ref refid="class_cell" kindref="compound">Cell</ref><sp/>*<sp/><ref refid="class_cell_app_1ac91046eb6a398e15e68e76c948ccda1c" kindref="member">CellApp::findCell</ref>(<sp/>SpaceID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2324"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;findSpace(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpace<sp/>?<sp/>pSpace-&gt;pCell()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/><ref refid="class_cell_app_1aa0503173e71aa6f6436d93a19567d489" kindref="member">CellApp::findSpace</ref>(<sp/>SpaceID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2339"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpaces_-&gt;find(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a2d9f74db373ae662c4c2627e8b0e3847" kindref="member">CellApp::adjustLoadForOffload</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entityLoad<sp/>)</highlight></codeline>
<codeline lineno="2349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/>persistentLoad_<sp/>-=<sp/>entityLoad;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(persistentLoad_<sp/>&lt;<sp/>0.f)</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>persistentLoad_<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ac78740d79f9ceba066c2ee00f9ed80e8" kindref="member">CellApp::reloadScript</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFullReload<sp/>)</highlight></codeline>
<codeline lineno="2363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/>NOTICE_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Script&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::reloadScript:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;reloadScript<sp/>should<sp/>be<sp/>used<sp/>with<sp/>caution,<sp/>and<sp/>never<sp/>in<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;production<sp/>environment.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/>Script::TempSubInterpreter<sp/>tempInterp;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tempInterp.init())</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>temporary<sp/>sub-interpreter.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/>tempInterp.makeCurrent();</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOK<sp/>=<sp/>(isFullReload)<sp/>?<sp/><ref refid="class_entity_type_1a8dcd6414a2390bb5758202552c41910f" kindref="member">EntityType::init</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="comment">/*isReload*/</highlight><highlight class="normal"><sp/>)<sp/>:</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a42962bea6ada49ecf50cdec8646364ab" kindref="member">EntityType::reloadScript</ref>();</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>UDO<sp/>modules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/>UserDataObjectTypes<sp/>udoTypes;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>UserDataObjectTypesInDifferentDomain<sp/>udoTypesInDifferentDomain;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOK)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOK<sp/>=<sp/>UserDataObjectType::load(<sp/>udoTypes,<sp/>udoTypesInDifferentDomain<sp/>);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOK)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>original<sp/>Python<sp/>interpreter.<sp/>EntityType::init()<sp/>got<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>loaded<sp/>modules.<sp/>And<sp/>EntityType::migrate()<sp/>will<sp/>replace<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>modules<sp/>in<sp/>the<sp/>original<sp/>Python<sp/>interpreter<sp/>with<sp/>new<sp/>modules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__kyl__<sp/>(8/2/2006)<sp/>Can&apos;t<sp/>simply<sp/>throw<sp/>away<sp/>old<sp/>interpreter<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>new<sp/>interpreter<sp/>since<sp/>we<sp/>are<sp/>currently<sp/>inside<sp/>a<sp/>Python<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>old<sp/>interpreter<sp/>is<sp/>still<sp/>on<sp/>the<sp/>callstack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInterp.restoreSuper();</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a9f5ca134f5521f075cf6ed2153848a87" kindref="member">EntityType::migrate</ref>(<sp/>isFullReload<sp/>);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserDataObjectType::migrate(<sp/>udoTypes,<sp/>udoTypesInDifferentDomain<sp/>);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerEntityMailBox::migrateMailBoxes();</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Migrate<sp/>entities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>Entity::population().end();<sp/>++iter)</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>iter-&gt;second-&gt;migrate()<sp/>);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a751f38d7ea8c5e0943688ad0d272c024" kindref="member">EntityType::cleanupAfterReload</ref>(<sp/>isFullReload<sp/>);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>original<sp/>Python<sp/>interpreter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempInterp.restoreSuper();</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isFullReload)</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>using<sp/>the<sp/>old<sp/>scripts<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>This<sp/>works<sp/>(mostly)<sp/>because<sp/>when<sp/>we<sp/>try<sp/>to<sp/>import<sp/>a<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that&apos;s<sp/>already<sp/>imported,<sp/>it<sp/>doesn&apos;t<sp/>try<sp/>to<sp/>read<sp/>it<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/><ref refid="class_entity_type_1a42962bea6ada49ecf50cdec8646364ab" kindref="member">EntityType::reloadScript</ref>(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_type_1a751f38d7ea8c5e0943688ad0d272c024" kindref="member">EntityType::cleanupAfterReload</ref>(<sp/>isFullReload<sp/>);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1aa0ecdab784ec11bd2a6217a978169631" kindref="member">CellApp::detectDeadCellApps</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::vector&lt;Mercury::Address&gt;<sp/>&amp;<sp/>addrs<sp/>)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::vector&lt;Mercury::Address&gt;::const_iterator<sp/>iter<sp/>=<sp/>addrs.begin();</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>addrs.end())</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::detectDeadCellApps:<sp/>%s<sp/>has<sp/>died\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;c_str()<sp/>);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellAppMgr_.handleCellAppDeath(<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a9c299b0f5297b17751f76a6083d2d52b" kindref="member">CellApp::numRealEntities</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2454"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cells_.numRealEntities();</highlight></codeline>
<codeline lineno="2456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::checkSendWindowOverflows()</highlight></codeline>
<codeline lineno="2464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>OverflowIDs::iterator<sp/>iter<sp/>=<sp/>s_overflowIDs.begin();</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>s_overflowIDs.end())</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>this-&gt;findEntity(<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity<sp/>&amp;&amp;<sp/>pEntity-&gt;isReal())</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>Entity::callbacksPermitted()<sp/>);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onWindowOverflow&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onWindowOverflow();</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity)</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::checkSendWindowOverflows:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>%u<sp/>is<sp/>not<sp/>real\n&quot;</highlight><highlight class="normal">,<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::checkSendWindowOverflows:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>entity<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/>s_overflowIDs.clear();</highlight></codeline>
<codeline lineno="2501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1aa4f8eaa52d65e25b54fd956670cb88b5" kindref="member">CellApp::triggerControlledShutDown</ref>()</highlight></codeline>
<codeline lineno="2508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>this-&gt;cellAppMgr();</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppMgrInterface::controlledShutDownArgs<sp/>&amp;args<sp/>=</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::controlledShutDownArgs::start(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/>args.stage<sp/>=<sp/>SHUTDOWN_TRIGGER;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr.send();</highlight></codeline>
<codeline lineno="2518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.isNextTickPending</highlight></codeline>
<codeline lineno="2522"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>isNextTickPending<sp/>returns<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>current<sp/>tick</highlight></codeline>
<codeline lineno="2524"><highlight class="comment"><sp/>*<sp/><sp/>has<sp/>completed.<sp/>This<sp/>allows<sp/>your<sp/>script<sp/>code<sp/>to<sp/>determine<sp/>whether<sp/>it<sp/>should</highlight></codeline>
<codeline lineno="2525"><highlight class="comment"><sp/>*<sp/><sp/>relinquish<sp/>control<sp/>of<sp/>expensive<sp/>computations<sp/>to<sp/>allow<sp/>the<sp/>next<sp/>tick<sp/>to</highlight></codeline>
<codeline lineno="2526"><highlight class="comment"><sp/>*<sp/><sp/>execute.</highlight></codeline>
<codeline lineno="2527"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2528"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>can<sp/>be<sp/>controlled<sp/>by<sp/>the<sp/>cellApp/reservedTickFraction<sp/>setting<sp/>in<sp/>bw.xml.</highlight></codeline>
<codeline lineno="2529"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2530"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>isNextTickPending<sp/>returns<sp/>True<sp/>if<sp/>the<sp/>next<sp/>tick<sp/>is<sp/>pending,<sp/>False</highlight></codeline>
<codeline lineno="2531"><highlight class="comment"><sp/>*<sp/><sp/>otherwise.</highlight></codeline>
<codeline lineno="2532"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNextTickPending()</highlight></codeline>
<codeline lineno="2534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CellApp::instance().nextTickPending();</highlight></codeline>
<codeline lineno="2536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>isNextTickPending,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Script<sp/>related</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal">class<sp/><ref refid="class_create_base_reply_handler" kindref="compound">CreateBaseReplyHandler</ref><sp/>:<sp/>public<sp/><ref refid="namespace_mercury" kindref="compound">Mercury</ref>::ShutdownSafeReplyMessageHandler</highlight></codeline>
<codeline lineno="2549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_create_base_reply_handler" kindref="compound">CreateBaseReplyHandler</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>callback<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_(<sp/>callback<sp/>)</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMessage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address&amp;<sp/></highlight><highlight class="comment">/*srcAddr*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader&amp;<sp/></highlight><highlight class="comment">/*header*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*arg*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StreamHelpers::BaseAppIntInterface::createBaseWithCellData::Reply</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateBaseWithCellDataReply;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateBaseWithCellDataReply<sp/>reply(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reply.isSuccess())</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMailBoxRef<sp/>&amp;<sp/>baseRef<sp/>=<sp/>reply.entityMailBoxRef();</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CreateBaseReplyHandler::handleMessage:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Base<sp/>(%u)<sp/>created<sp/>at<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseRef.id,<sp/>baseRef.addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>BaseEntityMailBox::constructFromRef(<sp/>baseRef<sp/>),</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CreateBaseReplyHandler::handleMessage:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>base\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback();</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleException(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException&amp;<sp/></highlight><highlight class="comment">/*ne*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="comment">/*arg*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CreateBaseReplyHandler::handleException:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>base\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback();</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>callback(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>arg<sp/>=<sp/>ScriptObject::none()<sp/>)</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback_<sp/>&amp;&amp;<sp/>callback_.isCallable())</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback_.callFunction(ScriptArgs::create(<sp/>arg<sp/>),<sp/>ScriptErrorPrint());</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>callback_;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.createEntityOnBaseApp</highlight></codeline>
<codeline lineno="2610"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2611"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2612"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>creates<sp/>an<sp/>entity<sp/>on<sp/>a<sp/>BaseApp.</highlight></codeline>
<codeline lineno="2613"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2614"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>className<sp/>class<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>class<sp/>to<sp/>instantiate.<sp/>Note<sp/>that</highlight></codeline>
<codeline lineno="2615"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>must<sp/>be<sp/>an<sp/>entity<sp/>class,<sp/>as<sp/>declared<sp/>in<sp/>the<sp/>entities.xml<sp/>file.</highlight></codeline>
<codeline lineno="2616"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>state<sp/>state<sp/>is<sp/>a<sp/>dictionary<sp/>describing<sp/>the<sp/>initial<sp/>states<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2617"><highlight class="comment"><sp/>*<sp/><sp/>entity&apos;s<sp/>properties.<sp/>A<sp/>property<sp/>will<sp/>take<sp/>on<sp/>its<sp/>default<sp/>value<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="2618"><highlight class="comment"><sp/>*<sp/><sp/>.def<sp/>file<sp/>if<sp/>it<sp/>is<sp/>not<sp/>listed<sp/>here.</highlight></codeline>
<codeline lineno="2619"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>callback<sp/>(optional)<sp/>callback<sp/>function<sp/>taking<sp/>a<sp/>single<sp/>argument</highlight></codeline>
<codeline lineno="2620"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>the<sp/>newly<sp/>created<sp/>Base<sp/>mailbox<sp/>on<sp/>success,<sp/>or<sp/>None<sp/>on<sp/>error.</highlight></codeline>
<codeline lineno="2621"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2622"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>None</highlight></codeline>
<codeline lineno="2623"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="2630"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>createEntityOnBaseApp(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>entityType,</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pDict,<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref><sp/>pCallbackFunc<sp/>)</highlight></codeline>
<codeline lineno="2632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDict<sp/>||<sp/>pDict<sp/>==<sp/>Py_None)</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntityOnBaseApp:<sp/>Argument<sp/>must<sp/>be<sp/>a<sp/>dictionary&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyDict_Check(<sp/>pDict.get()<sp/>))</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntityOnBaseApp:<sp/>Argument<sp/>must<sp/>be<sp/>a<sp/>dictionary&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pEntityType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntityType)</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntityOnBaseApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>entity<sp/>type<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCallbackFunc<sp/>&amp;&amp;<sp/>!PyCallable_Check(<sp/>pCallbackFunc.get()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntityOnBaseApp()<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;callback<sp/>must<sp/>be<sp/>a<sp/>callable<sp/>object<sp/>if<sp/>specified&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>entityDesc<sp/>=<sp/>pEntityType-&gt;description();</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityTypeID<sp/>entityTypeID<sp/>=<sp/>entityDesc.index();</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entityDesc.canBeOnBase())</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntityOnBaseApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>type<sp/>%s<sp/>has<sp/>no<sp/>base<sp/>entity<sp/>class&quot;</highlight><highlight class="normal">,<sp/>entityType.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;<sp/>CreateBaseReplyHandler<sp/>&gt;<sp/>pHandler(</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_create_base_reply_handler" kindref="compound">CreateBaseReplyHandler</ref>(<sp/>ScriptObject(<sp/>pCallbackFunc<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Channel<sp/>&amp;<sp/>channel<sp/>=<sp/>CellApp::getChannel(<sp/></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().baseAppAddr()<sp/>);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>use<sp/>the<sp/>channel&apos;s<sp/>own<sp/>bundle<sp/>here<sp/>because<sp/>the<sp/>streaming<sp/>might</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fail<sp/>and<sp/>the<sp/>message<sp/>might<sp/>need<sp/>to<sp/>be<sp/>aborted<sp/>halfway<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/>std::auto_ptr&lt;<sp/>Mercury::Bundle<sp/>&gt;<sp/>pBundle(<sp/>channel.newBundle()<sp/>);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StreamHelpers::BaseAppIntInterface::createBaseWithCellData::Request</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateBaseWithCellDataRequest;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/>CreateBaseWithCellDataRequest<sp/>request(<sp/>entityTypeID<sp/>);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/>request.startRequest(<sp/>*pBundle,<sp/>pHandler.get()<sp/>);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entityDesc.addDictionaryToStream(<sp/>ScriptDict(<sp/>pDict<sp/>),<sp/>*pBundle,</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityDescription::BASE_DATA<sp/>|<sp/>EntityDescription::CELL_DATA<sp/>))</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntityOnBaseApp:<sp/>Bad<sp/>dictionary&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entityDesc.canBeOnCell())</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>position(<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>direction(<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Script::getValueFromDict(<sp/>pDict.get(),<sp/>POSITION_PROPERTY_NAME,<sp/>position<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!Script::getValueFromDict(<sp/>pDict.get(),<sp/>DIRECTION_PROPERTY_NAME,<sp/>direction<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!Script::getValueFromDict(<sp/>pDict.get(),<sp/>SPACE_ID_PROPERTY_NAME,<sp/>spaceID<sp/>))</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pBundle<sp/>&lt;&lt;<sp/>position<sp/>&lt;&lt;<sp/>direction<sp/>&lt;&lt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>channel.send(<sp/>pBundle.get()<sp/>);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/>pHandler.release();<sp/></highlight><highlight class="comment">//<sp/>handler<sp/>deletes<sp/>itself<sp/>on<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2719"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>createEntityOnBaseApp,</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>,</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>,<sp/>NULL,<sp/>END<sp/>)<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deprecated<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal">PY_MODULE_FUNCTION_ALIAS(<sp/>createEntityOnBaseApp,<sp/>createEntityOnBase,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal">typedef<sp/><ref refid="class_smart_pointer" kindref="compound">SmartPointer</ref>&lt;PyObject&gt;<sp/><ref refid="class_smart_pointer" kindref="compound">PyObjectPtr</ref>;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld<sp/>createEntity</highlight></codeline>
<codeline lineno="2730"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2731"><highlight class="comment"><sp/>*<sp/><sp/>createEntity<sp/>creates<sp/>a<sp/>new<sp/>entity<sp/>on<sp/>the<sp/>cell<sp/>and<sp/>places<sp/>it<sp/>in<sp/>the<sp/>world.</highlight></codeline>
<codeline lineno="2732"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>also<sp/>sets<sp/>the<sp/>new<sp/>entity&apos;s<sp/>class,<sp/>location<sp/>and<sp/>facing,</highlight></codeline>
<codeline lineno="2733"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>may<sp/>optionally<sp/>set<sp/>any<sp/>of<sp/>the<sp/>entity&apos;s<sp/>properties<sp/>(as<sp/>described<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2734"><highlight class="comment"><sp/>*<sp/><sp/>entity&apos;s<sp/>.def<sp/>file).</highlight></codeline>
<codeline lineno="2735"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2736"><highlight class="comment"><sp/>*<sp/><sp/>Example:</highlight></codeline>
<codeline lineno="2737"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="2738"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>create<sp/>an<sp/>open<sp/>door<sp/>entity<sp/>at<sp/>the<sp/>same<sp/>position<sp/>as<sp/>entity<sp/>&quot;thing&quot;</highlight></codeline>
<codeline lineno="2739"><highlight class="comment"><sp/>*<sp/><sp/>direction<sp/>=<sp/>(<sp/>0,<sp/>0,<sp/>thing.yaw<sp/>)</highlight></codeline>
<codeline lineno="2740"><highlight class="comment"><sp/>*<sp/><sp/>properties<sp/>=<sp/>{<sp/>&quot;open&quot;:1<sp/>}</highlight></codeline>
<codeline lineno="2741"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.createEntity(<sp/>&quot;Door&quot;,<sp/>thing.space,<sp/>thing.position,<sp/>direction,</highlight></codeline>
<codeline lineno="2742"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties<sp/>)</highlight></codeline>
<codeline lineno="2743"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="2744"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>className<sp/>class<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>class<sp/>to<sp/>instantiate.<sp/>Note<sp/>that</highlight></codeline>
<codeline lineno="2745"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>must<sp/>be<sp/>an<sp/>entity<sp/>class,<sp/>as<sp/>declared<sp/>in<sp/>the<sp/>entities.xml<sp/>file.</highlight></codeline>
<codeline lineno="2746"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>spaceID<sp/>spaceID<sp/>is<sp/>the<sp/>id<sp/>of<sp/>the<sp/>space<sp/>in<sp/>which<sp/>to<sp/>place<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>position<sp/>position<sp/>is<sp/>a<sp/>sequence<sp/>of<sp/>3<sp/>floats<sp/>containing<sp/>the<sp/>position</highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/>*<sp/><sp/>at<sp/>which<sp/>the<sp/>new<sp/>entity<sp/>is<sp/>to<sp/>be<sp/>spawned,<sp/>in<sp/>world<sp/>coordinates.</highlight></codeline>
<codeline lineno="2749"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>direction<sp/>direction<sp/>is<sp/>a<sp/>sequence<sp/>of<sp/>3<sp/>floats<sp/>containing<sp/>the<sp/>initial</highlight></codeline>
<codeline lineno="2750"><highlight class="comment"><sp/>*<sp/><sp/>orientation<sp/>of<sp/>the<sp/>new<sp/>entity<sp/>(roll,<sp/>pitch,<sp/>yaw),<sp/>relative<sp/>to<sp/>the<sp/>world</highlight></codeline>
<codeline lineno="2751"><highlight class="comment"><sp/>*<sp/><sp/>frame.</highlight></codeline>
<codeline lineno="2752"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>state<sp/>state<sp/>is<sp/>a<sp/>dictionary<sp/>describing<sp/>the<sp/>initial<sp/>states<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2753"><highlight class="comment"><sp/>*<sp/><sp/>entity&apos;s<sp/>properties.<sp/>A<sp/>property<sp/>will<sp/>take<sp/>on<sp/>its<sp/>default<sp/>value<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/>*<sp/><sp/>.def<sp/>file<sp/>if<sp/>it<sp/>is<sp/>not<sp/>listed<sp/>here.<sp/>It<sp/>can<sp/>also<sp/>be<sp/>a<sp/>string,<sp/>which<sp/>will</highlight></codeline>
<codeline lineno="2755"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>handled<sp/>as<sp/>a<sp/>TemplateID<sp/>by<sp/>an<sp/>EntityDelegate,<sp/>if<sp/>any.</highlight></codeline>
<codeline lineno="2756"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>The<sp/>new<sp/>entity.</highlight></codeline>
<codeline lineno="2757"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Review<sp/>this<sp/>API.<sp/>Should<sp/>be<sp/>args/kwargs<sp/>based,<sp/>like<sp/>equivalent<sp/>Base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight><highlight class="comment">//<sp/>methods.</highlight></codeline>
<codeline lineno="2763"><highlight class="comment"></highlight><highlight class="normal">static<sp/>PyObject<sp/>*<sp/>createEntity(<sp/>const<sp/><ref refid="namespace_b_w" kindref="compound">BW</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>typeName,<sp/>SpaceID<sp/>spaceID,</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>Vector3<sp/>&amp;<sp/>position,<sp/>const<sp/>Vector3<sp/>&amp;<sp/>direction,</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>ScriptObject<sp/>&amp;<sp/>state<sp/>)</highlight></codeline>
<codeline lineno="2766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>space<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>CellApp::instance().findSpace(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntity():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>space<sp/>ID<sp/>%d.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(spaceID)<sp/>);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace-&gt;pCell()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntity():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Space<sp/>ID<sp/>%d<sp/>is<sp/>not<sp/>real.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(spaceID)<sp/>);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>class<sp/>is<sp/>OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>typeName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType<sp/>||<sp/>!pType-&gt;canBeOnCell())</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntity():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>&apos;%s&apos;<sp/>is<sp/>not<sp/>a<sp/>cell<sp/>entity<sp/>class&quot;</highlight><highlight class="normal">,<sp/>typeName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>properties;</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>templateID;</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ScriptString::check(<sp/>state<sp/>))</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString(<sp/>state<sp/>).getString(<sp/>templateID<sp/>);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ScriptDict::check(<sp/>state<sp/>))</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties<sp/>=<sp/>ScriptDict(<sp/>state<sp/>);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.isNone())</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties<sp/>=<sp/>ScriptDict::create();</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntity():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>properties<sp/>argument<sp/>must<sp/>be<sp/>a<sp/>mapping,<sp/>string<sp/>or<sp/>None.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>make<sp/>the<sp/>creation<sp/>stream<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntityStreamHelper::AddEntityData<sp/>entityData(</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL_ENTITY_ID,<sp/></highlight><highlight class="comment">/*<sp/>to<sp/>allocate<sp/>a<sp/>unique<sp/>id<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position,</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isOnGround<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pType-&gt;description().index(),</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Direction3D(<sp/>direction<sp/>),<sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Vector3<sp/>taken<sp/>as<sp/>(Roll,<sp/>Pitch,<sp/>Yaw)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*hasProperties*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>properties<sp/>go<sp/>with<sp/>&apos;properties&apos;<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templateID</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryOStream<sp/>stream(8192);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>Mercury::Address::NONE;<sp/></highlight><highlight class="comment">//<sp/>baseAddr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntityStreamHelper::addEntity(<sp/>stream,<sp/>entityData<sp/>);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>is<sp/>streamed<sp/>off<sp/>by<sp/>RealEntity<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntityStreamHelper::addRealEntity(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>Witness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/>stream.writePackedInt(<sp/>0<sp/>);<sp/></highlight><highlight class="comment">//<sp/>no<sp/>BASE_AND_CLIENT<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>actually<sp/>make<sp/>the<sp/>entity!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pEntity<sp/>=<sp/>pSpace-&gt;pCell()-&gt;createEntityInternal(<sp/></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream,<sp/>properties<sp/>);</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_SystemError,<sp/></highlight><highlight class="stringliteral">&quot;BigWorld.createEntity():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>entity<sp/>of<sp/>type<sp/>%s:<sp/>internal<sp/>error&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pType-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pEntity.get()<sp/>);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pEntity.get();</highlight></codeline>
<codeline lineno="2853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOWN,<sp/>createEntity,</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>ARG(<sp/>SpaceID,<sp/>ARG(<sp/>Vector3,<sp/>ARG(<sp/>Vector3,</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPTARG(<sp/>ScriptObject,<sp/>ScriptObject::none(),<sp/>END<sp/>)<sp/>)<sp/>)<sp/>)<sp/>),<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.time</highlight></codeline>
<codeline lineno="2860"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2861"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2862"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>returns<sp/>the<sp/>current<sp/>game<sp/>time<sp/>in<sp/>seconds<sp/>as<sp/>a<sp/>floating</highlight></codeline>
<codeline lineno="2863"><highlight class="comment"><sp/>*<sp/><sp/>point<sp/>number.<sp/>CellApps<sp/>internally<sp/>maintain<sp/>a<sp/>counter<sp/>which<sp/>will<sp/>be<sp/>increased</highlight></codeline>
<codeline lineno="2864"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>one<sp/>on<sp/>every<sp/>tick.<sp/>The<sp/>game<sp/>time<sp/>is<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="2865"><highlight class="comment"><sp/>*<sp/><sp/>gameTickCounter/updateHertz.<sp/>When<sp/>the<sp/>CellApp<sp/>is<sp/>overloaded,<sp/>the<sp/>length<sp/>of</highlight></codeline>
<codeline lineno="2866"><highlight class="comment"><sp/>*<sp/><sp/>ticks<sp/>will<sp/>be<sp/>longer.<sp/>In<sp/>this<sp/>case<sp/>the<sp/>game<sp/>time<sp/>will<sp/>elapse<sp/>more<sp/>slowly,</highlight></codeline>
<codeline lineno="2867"><highlight class="comment"><sp/>*<sp/><sp/>which<sp/>can<sp/>affect<sp/>gameplay<sp/>functionality<sp/>that<sp/>is<sp/>based<sp/>on<sp/>this<sp/>method.</highlight></codeline>
<codeline lineno="2868"><highlight class="comment"><sp/>*<sp/><sp/>As<sp/>soon<sp/>as<sp/>the<sp/>CellApp<sp/>is<sp/>back<sp/>to<sp/>its<sp/>normal<sp/>load,<sp/>it<sp/>will<sp/>try<sp/>to<sp/>catch<sp/>up</highlight></codeline>
<codeline lineno="2869"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>the<sp/>other<sp/>CellApps<sp/>by<sp/>shortening<sp/>the<sp/>interval<sp/>of<sp/>ticks<sp/>util<sp/>its<sp/>game</highlight></codeline>
<codeline lineno="2870"><highlight class="comment"><sp/>*<sp/><sp/>time<sp/>fully<sp/>synchronises<sp/>with<sp/>other<sp/>CellApps.</highlight></codeline>
<codeline lineno="2871"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2872"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>The<sp/>current<sp/>game<sp/>time<sp/>in<sp/>seconds<sp/>as<sp/>a<sp/>double.</highlight></codeline>
<codeline lineno="2873"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="2878"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time()</highlight></codeline>
<codeline lineno="2879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)CellApp::instance().time()/CellAppConfig::updateHertz();</highlight></codeline>
<codeline lineno="2881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2882"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>time,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.timeInTicks</highlight></codeline>
<codeline lineno="2885"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2887"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>returns<sp/>the<sp/>current<sp/>game<sp/>time<sp/>in<sp/>ticks.</highlight></codeline>
<codeline lineno="2888"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2889"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>The<sp/>current<sp/>game<sp/>time<sp/>in<sp/>ticks.</highlight></codeline>
<codeline lineno="2890"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="2894"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeInTicks()</highlight></codeline>
<codeline lineno="2895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)CellApp::instance().time();</highlight></codeline>
<codeline lineno="2897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2898"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>timeInTicks,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.getLoad</highlight></codeline>
<codeline lineno="2902"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2903"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>returns<sp/>the<sp/>current<sp/>CellApp<sp/>load.</highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2906"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>The<sp/>current<sp/>CellApp<sp/>load<sp/>as<sp/>a<sp/>float.</highlight></codeline>
<codeline lineno="2907"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="2912"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getLoad()</highlight></codeline>
<codeline lineno="2913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CellApp::instance().getLoad();</highlight></codeline>
<codeline lineno="2915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>getLoad,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>executeRawDatabaseCommand(<sp/>const<sp/><ref refid="namespace_b_w" kindref="compound">BW</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<sp/>command,</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObjectPtr<sp/>pResultHandler<sp/>)</highlight></codeline>
<codeline lineno="2925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>&amp;<sp/>app<sp/>=<sp/>CellApp::instance();</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Scalable<sp/>DB:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Propagate<sp/>the<sp/>full<sp/>DBApp<sp/>hash<sp/>so<sp/>we<sp/>can<sp/>use<sp/>a<sp/>partitionKey<sp/>to<sp/>determine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>actual<sp/>DBApp<sp/>instead<sp/>of<sp/>always<sp/>asking<sp/>DBApp<sp/>Alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DBAppInterfaceUtils::executeRawDatabaseCommand(<sp/>command,</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pResultHandler,<sp/>app.dbAppAlpha().channel()<sp/>);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETOK,<sp/>executeRawDatabaseCommand,</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>ARG(<sp/>BW::string,<sp/>OPTARG(<sp/>PyObjectPtr,<sp/>NULL,<sp/>END<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.debugDump</highlight></codeline>
<codeline lineno="2940"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2942"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>for<sp/>debugging<sp/>only.</highlight></codeline>
<codeline lineno="2943"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="2947"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debugDump()</highlight></codeline>
<codeline lineno="2948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().cells().debugDump();</highlight></codeline>
<codeline lineno="2950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>debugDump,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MF_USE_VALGRIND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>valgrindDump()</highlight></codeline>
<codeline lineno="2956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RUNNING_ON_VALGRIND)</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALGRIND_DO_LEAK_CHECK;</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2962"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>valgrindDump,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.reloadScript</highlight></codeline>
<codeline lineno="2967"><highlight class="comment"><sp/>*<sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="2968"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2969"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>reloads<sp/>Python<sp/>modules<sp/>related<sp/>to<sp/>entities<sp/>and<sp/>custom</highlight></codeline>
<codeline lineno="2970"><highlight class="comment"><sp/>*<sp/><sp/>data<sp/>types.<sp/>The<sp/>class<sp/>of<sp/>current<sp/>entities<sp/>are<sp/>set<sp/>to<sp/>the<sp/>newly<sp/>loaded</highlight></codeline>
<codeline lineno="2971"><highlight class="comment"><sp/>*<sp/><sp/>classes.<sp/>This<sp/>method<sp/>should<sp/>be<sp/>used<sp/>for<sp/>development<sp/>only<sp/>and<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2972"><highlight class="comment"><sp/>*<sp/><sp/>suitable<sp/>for<sp/>production<sp/>use.<sp/>The<sp/>following<sp/>points<sp/>should<sp/>be<sp/>noted:</highlight></codeline>
<codeline lineno="2973"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2974"><highlight class="comment"><sp/>*<sp/><sp/>1)<sp/>Scripts<sp/>are<sp/>only<sp/>reloaded<sp/>on<sp/>the<sp/>component<sp/>cellapp<sp/>that</highlight></codeline>
<codeline lineno="2975"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>method<sp/>is<sp/>called<sp/>on.<sp/>The<sp/>user<sp/>is<sp/>responsible<sp/>for<sp/>making<sp/>sure<sp/>that</highlight></codeline>
<codeline lineno="2976"><highlight class="comment"><sp/>*<sp/><sp/>reloadScript<sp/>is<sp/>called<sp/>on<sp/>all<sp/>server<sp/>components.</highlight></codeline>
<codeline lineno="2977"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2978"><highlight class="comment"><sp/>*<sp/><sp/>2)<sp/>The<sp/>client<sp/>doesn&apos;t<sp/>have<sp/>equivalent<sp/>functionality<sp/>in<sp/>Python.<sp/>Each</highlight></codeline>
<codeline lineno="2979"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld<sp/>client<sp/>needs<sp/>to<sp/>use<sp/>CapsLock<sp/>+<sp/>F11<sp/>in<sp/>order<sp/>to<sp/>reload<sp/>the<sp/>scripts.</highlight></codeline>
<codeline lineno="2980"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2981"><highlight class="comment"><sp/>*<sp/><sp/>3)<sp/>Doesn&apos;t<sp/>handle<sp/>custom<sp/>data<sp/>types<sp/>transparently.<sp/>Instances<sp/>of<sp/>custom</highlight></codeline>
<codeline lineno="2982"><highlight class="comment"><sp/>*<sp/><sp/>data<sp/>types<sp/>must<sp/>have<sp/>their<sp/>__class__<sp/>reassigned<sp/>to<sp/>the<sp/>proper<sp/>class<sp/>type</highlight></codeline>
<codeline lineno="2983"><highlight class="comment"><sp/>*<sp/><sp/>after<sp/>reloadScript()<sp/>completes.<sp/>For<sp/>example,<sp/>if<sp/>we<sp/>have<sp/>a<sp/>custom<sp/>data<sp/>type</highlight></codeline>
<codeline lineno="2984"><highlight class="comment"><sp/>*<sp/><sp/>named<sp/>&quot;CustomClass&quot;:</highlight></codeline>
<codeline lineno="2985"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2986"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="2987"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>e<sp/>in<sp/>BigWorld.entities.values():</highlight></codeline>
<codeline lineno="2988"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>type(<sp/>e<sp/>)<sp/>is<sp/>Avatar.Avatar:</highlight></codeline>
<codeline lineno="2989"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e.customData.__class__<sp/>=<sp/>CustomClass</highlight></codeline>
<codeline lineno="2990"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="2991"><highlight class="comment"><sp/>*<sp/><sp/>BWPersonality.onInit(<sp/>True<sp/>)<sp/>is<sp/>called<sp/>when<sp/>this<sp/>method<sp/>completes<sp/>(where</highlight></codeline>
<codeline lineno="2992"><highlight class="comment"><sp/>*<sp/><sp/>BWPersonality<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>personality<sp/>module<sp/>specified<sp/>in</highlight></codeline>
<codeline lineno="2993"><highlight class="comment"><sp/>*<sp/><sp/>&amp;lt;root&amp;gt;/&amp;lt;personality&amp;gt;<sp/>in<sp/>bw.xml).</highlight></codeline>
<codeline lineno="2994"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2995"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>fullReload<sp/>Optional<sp/>boolean<sp/>parameter<sp/>that<sp/>specifies<sp/>whether<sp/>to</highlight></codeline>
<codeline lineno="2996"><highlight class="comment"><sp/>*<sp/><sp/>reload<sp/>entity<sp/>definitions<sp/>as<sp/>well.<sp/>If<sp/>this<sp/>parameter<sp/>is<sp/>False,<sp/>then</highlight></codeline>
<codeline lineno="2997"><highlight class="comment"><sp/>*<sp/><sp/>entities<sp/>definitions<sp/>are<sp/>not<sp/>reloaded.<sp/>Default<sp/>is<sp/>True.</highlight></codeline>
<codeline lineno="2998"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2999"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>True<sp/>if<sp/>reload<sp/>successful,<sp/>False<sp/>otherwise.</highlight></codeline>
<codeline lineno="3000"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="3004"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reloadScript(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFullReload<sp/>)</highlight></codeline>
<codeline lineno="3005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CellApp::instance().reloadScript(<sp/>isFullReload<sp/>);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3008"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>reloadScript,<sp/>OPTARG(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>END<sp/>),</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal">static<sp/>PyObject<sp/>*<sp/>py_hasStarted(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="3016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_Size(<sp/>args<sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BigWorld.hasStarted:<sp/>Excepted<sp/>no<sp/>arguments.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>CellApp::instance().hasStarted()<sp/>);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.hasStarted</highlight></codeline>
<codeline lineno="3027"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3028"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>hasStarted<sp/>returns<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>server<sp/>has<sp/>started.<sp/>This</highlight></codeline>
<codeline lineno="3029"><highlight class="comment"><sp/>*<sp/><sp/>can<sp/>be<sp/>useful<sp/>for<sp/>identifying<sp/>entities<sp/>that<sp/>are<sp/>being<sp/>created<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="3030"><highlight class="comment"><sp/>*<sp/><sp/>database<sp/>during<sp/>a<sp/>controlled<sp/>start-up.</highlight></codeline>
<codeline lineno="3031"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal">PY_MODULE_FUNCTION(<sp/>hasStarted,<sp/>BigWorld<sp/>);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*<sp/>py_isShuttingDown(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="3039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyTuple_Size(<sp/>args<sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BigWorld.isShuttingDown:<sp/>Accepts<sp/>no<sp/>arguments.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>CellApp::instance().isShuttingDown()<sp/>);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.isShuttingDown</highlight></codeline>
<codeline lineno="3050"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3051"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>function<sp/>isShuttingDown<sp/>returns<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>server<sp/>is<sp/>shutting</highlight></codeline>
<codeline lineno="3052"><highlight class="comment"><sp/>*<sp/><sp/>down.<sp/>This<sp/>return<sp/>True<sp/>after<sp/>the<sp/>onCellAppShuttingDown<sp/>personality<sp/>callback</highlight></codeline>
<codeline lineno="3053"><highlight class="comment"><sp/>*<sp/><sp/>has<sp/>been<sp/>called.<sp/>It<sp/>can<sp/>be<sp/>useful<sp/>for<sp/>not<sp/>allowing<sp/>operations<sp/>to<sp/>start<sp/>when</highlight></codeline>
<codeline lineno="3054"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>the<sp/>process<sp/>of<sp/>shutting<sp/>down.</highlight></codeline>
<codeline lineno="3055"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal">PY_MODULE_FUNCTION(<sp/>isShuttingDown,<sp/>BigWorld<sp/>);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_util" kindref="compound">Util</ref></highlight></codeline>
<codeline lineno="3060"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3064"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isAppReady()</highlight></codeline>
<codeline lineno="3065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CellApp::instance().hasStarted();</highlight></codeline>
<codeline lineno="3067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setSharedData(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>value,</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedDataType<sp/>dataType<sp/>)</highlight></codeline>
<codeline lineno="3075"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppMgrInterface::setSharedData<sp/>);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>dataType<sp/>&lt;&lt;<sp/>key<sp/>&lt;&lt;<sp/>value;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr.send();</highlight></codeline>
<codeline lineno="3082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onSetSharedData(<sp/>PyObject<sp/>*<sp/>pKey,<sp/>PyObject<sp/>*<sp/>pValue,</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedDataType<sp/>dataType<sp/>)</highlight></codeline>
<codeline lineno="3090"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>methodName<sp/>=<sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_CELL_APP)<sp/>?</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onCellAppData&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;onGlobalData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().scriptEvents().triggerEvent(<sp/>methodName,</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_Pack(<sp/>2,<sp/>pKey,<sp/>pValue<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>delSharedData(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>key,<sp/>SharedDataType<sp/>dataType<sp/>)</highlight></codeline>
<codeline lineno="3103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_mgr_gateway" kindref="compound">CellAppMgrGateway</ref><sp/>&amp;<sp/>cellAppMgr<sp/>=<sp/>CellApp::instance().cellAppMgr();</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>cellAppMgr.bundle();</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppMgrInterface::delSharedData<sp/>);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>dataType<sp/>&lt;&lt;<sp/>key;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppMgr.send();</highlight></codeline>
<codeline lineno="3110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onDelSharedData(<sp/>PyObject<sp/>*<sp/>pKey,<sp/>SharedDataType<sp/>dataType<sp/>)</highlight></codeline>
<codeline lineno="3117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>methodName<sp/>=<sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_CELL_APP)<sp/>?</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onDelCellAppData&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;onDelGlobalData&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().scriptEvents().triggerEvent(<sp/>methodName,</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_Pack(<sp/>1,<sp/>pKey<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.setBaseAppData</highlight></codeline>
<codeline lineno="3128"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3129"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>The<sp/>key<sp/>of<sp/>the<sp/>value<sp/>to<sp/>be<sp/>set.</highlight></codeline>
<codeline lineno="3130"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>value<sp/>The<sp/>new<sp/>value.</highlight></codeline>
<codeline lineno="3131"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3132"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>sets<sp/>a<sp/>data<sp/>value<sp/>that<sp/>is<sp/>accessible<sp/>from<sp/>all<sp/>BaseApps.<sp/>This</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/>*<sp/><sp/>can<sp/>be<sp/>accessed<sp/>on<sp/>BaseApps.</highlight></codeline>
<codeline lineno="3134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3135"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>BaseAppMgr<sp/>is<sp/>the<sp/>authoritative<sp/>copy<sp/>of<sp/>this<sp/>data.<sp/>If<sp/>two<sp/>or<sp/>more</highlight></codeline>
<codeline lineno="3136"><highlight class="comment"><sp/>*<sp/><sp/>components<sp/>try<sp/>to<sp/>set<sp/>the<sp/>same<sp/>value,<sp/>the<sp/>last<sp/>one<sp/>to<sp/>reach<sp/>the<sp/>BaseAppMgr</highlight></codeline>
<codeline lineno="3137"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>be<sp/>the<sp/>one<sp/>that<sp/>is<sp/>kept.</highlight></codeline>
<codeline lineno="3138"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3139"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>Care<sp/>should<sp/>be<sp/>taken<sp/>using<sp/>this<sp/>functionality.<sp/>It<sp/>does<sp/>not<sp/>scale<sp/>well</highlight></codeline>
<codeline lineno="3140"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>should<sp/>be<sp/>used<sp/>sparingly.</highlight></codeline>
<codeline lineno="3141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal">PyObject<sp/>*<sp/>py_setBaseAppData(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="3143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pValue<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;OO:setBaseAppData&quot;</highlight><highlight class="normal">,<sp/>&amp;pKey,<sp/>&amp;pValue<sp/>))</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>key<sp/>=<sp/>CellApp::instance().pickle(<sp/></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>pKey,<sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.empty())</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;key<sp/>could<sp/>not<sp/>be<sp/>pickled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>value<sp/>=<sp/>CellApp::instance().pickle(<sp/></highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>pValue,<sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value.empty())</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;value<sp/>could<sp/>not<sp/>be<sp/>pickled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Util::isAppReady())</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_RuntimeError,<sp/></highlight><highlight class="stringliteral">&quot;App<sp/>is<sp/>not<sp/>ready<sp/>to<sp/>send<sp/>data&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/>Util::setSharedData(<sp/>key,<sp/>value,<sp/>SHARED_DATA_TYPE_BASE_APP<sp/>);</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_RETURN_NONE;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3180"><highlight class="normal">PY_MODULE_FUNCTION(<sp/>setBaseAppData,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.delBaseAppData</highlight></codeline>
<codeline lineno="3184"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3185"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>key<sp/>The<sp/>key<sp/>of<sp/>the<sp/>value<sp/>to<sp/>be<sp/>deleted.</highlight></codeline>
<codeline lineno="3186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3187"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>deletes<sp/>a<sp/>data<sp/>value<sp/>that<sp/>is<sp/>accessible<sp/>from<sp/>all<sp/>BaseApps.</highlight></codeline>
<codeline lineno="3188"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>can<sp/>be<sp/>accessed<sp/>on<sp/>BaseApps.</highlight></codeline>
<codeline lineno="3189"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3190"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>BaseAppMgr<sp/>is<sp/>the<sp/>authoritative<sp/>copy<sp/>of<sp/>this<sp/>data.<sp/>If<sp/>two<sp/>or<sp/>more</highlight></codeline>
<codeline lineno="3191"><highlight class="comment"><sp/>*<sp/><sp/>components<sp/>try<sp/>to<sp/>set<sp/>the<sp/>same<sp/>value,<sp/>the<sp/>last<sp/>one<sp/>to<sp/>reach<sp/>the<sp/>BaseAppMgr</highlight></codeline>
<codeline lineno="3192"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>be<sp/>the<sp/>one<sp/>that<sp/>is<sp/>kept.</highlight></codeline>
<codeline lineno="3193"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3194"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>Care<sp/>should<sp/>be<sp/>taken<sp/>using<sp/>this<sp/>functionality.<sp/>It<sp/>does<sp/>not<sp/>scale<sp/>well</highlight></codeline>
<codeline lineno="3195"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>should<sp/>be<sp/>used<sp/>sparingly.</highlight></codeline>
<codeline lineno="3196"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal">PyObject<sp/>*<sp/>py_delBaseAppData(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="3198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pKey<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;O:delBaseAppData&quot;</highlight><highlight class="normal">,<sp/>&amp;pKey<sp/>))</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>key<sp/>=<sp/>CellApp::instance().pickle(<sp/></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>pKey,<sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key.empty())</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;key<sp/>could<sp/>not<sp/>be<sp/>pickled&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>Util::delSharedData(<sp/>key,<sp/>SHARED_DATA_TYPE_BASE_APP<sp/>);</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_RETURN_NONE;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3219"><highlight class="normal">PY_MODULE_FUNCTION(<sp/>delBaseAppData,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.maxCellAppLoad</highlight></codeline>
<codeline lineno="3223"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3224"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3225"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>maximum<sp/>current<sp/>load<sp/>of<sp/>any<sp/>CellApp.<sp/>This<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="3226"><highlight class="comment"><sp/>*<sp/><sp/>useful<sp/>for<sp/>deciding<sp/>to<sp/>disallow<sp/>some<sp/>script<sp/>actions<sp/>when<sp/>the<sp/>server<sp/>is</highlight></codeline>
<codeline lineno="3227"><highlight class="comment"><sp/>*<sp/><sp/>overloaded.</highlight></codeline>
<codeline lineno="3228"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal">float<sp/>maxCellAppLoad()</highlight></codeline>
<codeline lineno="3230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CellApp::instance().maxCellAppLoad();</highlight></codeline>
<codeline lineno="3232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3233"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>maxCellAppLoad,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.load</highlight></codeline>
<codeline lineno="3237"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3239"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>the<sp/>current<sp/>load<sp/>of<sp/>this<sp/>CellApp.<sp/>This<sp/>can<sp/>be<sp/>useful</highlight></codeline>
<codeline lineno="3240"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>deciding<sp/>to<sp/>disallow<sp/>some<sp/>script<sp/>actions<sp/>when<sp/>the<sp/>server<sp/>is<sp/>overloaded.</highlight></codeline>
<codeline lineno="3241"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal">float<sp/>load()</highlight></codeline>
<codeline lineno="3243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CellApp::instance().getLoad();</highlight></codeline>
<codeline lineno="3245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3246"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETDATA,<sp/>load,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.shutDownApp</highlight></codeline>
<codeline lineno="3250"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3251"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3252"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>induce<sp/>a<sp/>controlled<sp/>shutdown<sp/>of<sp/>this<sp/>CellApp.</highlight></codeline>
<codeline lineno="3253"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal">void<sp/>shutDownApp()</highlight></codeline>
<codeline lineno="3255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().shutDown();</highlight></codeline>
<codeline lineno="3257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3258"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>shutDownApp,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>BigWorld.controlledShutDown</highlight></codeline>
<codeline lineno="3262"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3263"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3264"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>induces<sp/>a<sp/>controlled<sp/>shutdown<sp/>of<sp/>the<sp/>cluster.</highlight></codeline>
<codeline lineno="3265"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal">void<sp/>controlledShutDown()</highlight></codeline>
<codeline lineno="3267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().triggerControlledShutDown();</highlight></codeline>
<codeline lineno="3269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal">PY_AUTO_MODULE_FUNCTION(<sp/>RETVOID,<sp/>controlledShutDown,<sp/>END,<sp/>BigWorld<sp/>)</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal">bool<sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref>::initExtensions()</highlight></codeline>
<codeline lineno="3277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PluginLibrary::loadAllFromDirRelativeToApp(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;-extensions&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>comments<sp/>reside<sp/>here<sp/>because<sp/>it<sp/>doesn&apos;t<sp/>seem<sp/>right<sp/>to<sp/>have</highlight></codeline>
<codeline lineno="3283"><highlight class="comment"><sp/>*<sp/>declaration<sp/>comments<sp/>in<sp/>executable<sp/>code.</highlight></codeline>
<codeline lineno="3284"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>entities</highlight></codeline>
<codeline lineno="3286"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3287"><highlight class="comment"><sp/>*<sp/><sp/>entities<sp/>contains<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>entities<sp/>which<sp/>currently<sp/>reside<sp/>on<sp/>the<sp/>cell,</highlight></codeline>
<codeline lineno="3288"><highlight class="comment"><sp/>*<sp/><sp/>including<sp/>ghost<sp/>entities.</highlight></codeline>
<codeline lineno="3289"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>PyEntities</highlight></codeline>
<codeline lineno="3290"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>services<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3292"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3293"><highlight class="comment"><sp/>*<sp/><sp/>services<sp/>is<sp/>a<sp/>map<sp/>that<sp/>keys<sp/>a<sp/>service<sp/>name<sp/>to<sp/>a<sp/>corresponding<sp/>service</highlight></codeline>
<codeline lineno="3294"><highlight class="comment"><sp/>*<sp/><sp/>fragment<sp/>on<sp/>one<sp/>of<sp/>the<sp/>ServiceApps<sp/>that<sp/>offer<sp/>it.</highlight></codeline>
<codeline lineno="3295"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>PyBases<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3296"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>spaces<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3298"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3299"><highlight class="comment"><sp/>*<sp/><sp/>spaces<sp/>contains<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>spaces<sp/>which<sp/>currently<sp/>exist<sp/>on<sp/>the<sp/>cell.</highlight></codeline>
<codeline lineno="3300"><highlight class="comment"><sp/>*<sp/><sp/>@type<sp/>PySpaces<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3301"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>VOLATILE_ALWAYS</highlight></codeline>
<codeline lineno="3303"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3304"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>is<sp/>to<sp/>be<sp/>used<sp/>with<sp/>the<sp/>Entity.volatileInfo<sp/>attribute<sp/>to</highlight></codeline>
<codeline lineno="3305"><highlight class="comment"><sp/>*<sp/><sp/>indicate<sp/>that<sp/>the<sp/>value<sp/>should<sp/>always<sp/>be<sp/>sent<sp/>to<sp/>an<sp/>interested<sp/>client.</highlight></codeline>
<codeline lineno="3306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>VOLATILE_NEVER</highlight></codeline>
<codeline lineno="3308"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3309"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>is<sp/>to<sp/>be<sp/>used<sp/>with<sp/>the<sp/>Entity.volatileInfo<sp/>attribute<sp/>to</highlight></codeline>
<codeline lineno="3310"><highlight class="comment"><sp/>*<sp/><sp/>indicate<sp/>that<sp/>the<sp/>value<sp/>should<sp/>never<sp/>be<sp/>sent<sp/>to<sp/>a<sp/>client.</highlight></codeline>
<codeline lineno="3311"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>NEXT_ONLY</highlight></codeline>
<codeline lineno="3313"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3314"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>is<sp/>used<sp/>with<sp/>the<sp/>Entity.shouldAutoBackup<sp/>property.<sp/>This<sp/>value</highlight></codeline>
<codeline lineno="3315"><highlight class="comment"><sp/>*<sp/><sp/>indicates<sp/>that<sp/>the<sp/>entity<sp/>should<sp/>be<sp/>backed<sp/>up<sp/>next<sp/>time<sp/>it<sp/>is<sp/>considered</highlight></codeline>
<codeline lineno="3316"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>then<sp/>this<sp/>property<sp/>is<sp/>automatically<sp/>set<sp/>to<sp/>False<sp/>(0).</highlight></codeline>
<codeline lineno="3317"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>INVALID_POSITION</highlight></codeline>
<codeline lineno="3319"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3320"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>constant<sp/>is<sp/>used<sp/>to<sp/>represent<sp/>an<sp/>invalid<sp/>entity<sp/>position.<sp/>An<sp/>entity</highlight></codeline>
<codeline lineno="3321"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>has<sp/>been<sp/>teleported<sp/>via<sp/>Base.teleport<sp/>will<sp/>have<sp/>this<sp/>position<sp/>when</highlight></codeline>
<codeline lineno="3322"><highlight class="comment"><sp/>*<sp/><sp/>Entity.onTeleportSuccess<sp/>is<sp/>called.<sp/>It<sp/>is<sp/>expected<sp/>that<sp/>the<sp/>correct<sp/>position</highlight></codeline>
<codeline lineno="3323"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>set<sp/>during<sp/>this<sp/>callback.</highlight></codeline>
<codeline lineno="3324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>cellAppData</highlight></codeline>
<codeline lineno="3326"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3327"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>property<sp/>contains<sp/>a<sp/>dictionary-like<sp/>object<sp/>that<sp/>is<sp/>automatically</highlight></codeline>
<codeline lineno="3328"><highlight class="comment"><sp/>*<sp/><sp/>duplicated<sp/>between<sp/>all<sp/>CellApps.<sp/>Whenever<sp/>a<sp/>value<sp/>in<sp/>the<sp/>dictionary<sp/>is</highlight></codeline>
<codeline lineno="3329"><highlight class="comment"><sp/>*<sp/><sp/>modified,<sp/>this<sp/>change<sp/>is<sp/>propagated<sp/>to<sp/>all<sp/>CellApps.<sp/>The<sp/>CellAppMgr<sp/>keeps</highlight></codeline>
<codeline lineno="3330"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>authoritative<sp/>copy<sp/>of<sp/>this<sp/>information<sp/>and<sp/>resolves<sp/>race<sp/>conditions.</highlight></codeline>
<codeline lineno="3331"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3332"><highlight class="comment"><sp/>*<sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="3333"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="3334"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.cellAppData[<sp/>&quot;hello&quot;<sp/>]<sp/>=<sp/>&quot;there&quot;</highlight></codeline>
<codeline lineno="3335"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="3336"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3337"><highlight class="comment"><sp/>*<sp/><sp/>Another<sp/>CellApp<sp/>can<sp/>access<sp/>this<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="3338"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="3339"><highlight class="comment"><sp/>*<sp/><sp/>print<sp/>BigWorld.cellAppData[<sp/>&quot;hello&quot;<sp/>]</highlight></codeline>
<codeline lineno="3340"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="3341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3342"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>key<sp/>and<sp/>value<sp/>can<sp/>be<sp/>any<sp/>type<sp/>that<sp/>can<sp/>be<sp/>pickled<sp/>and<sp/>unpickled<sp/>on<sp/>all</highlight></codeline>
<codeline lineno="3343"><highlight class="comment"><sp/>*<sp/><sp/>destination<sp/>components.</highlight></codeline>
<codeline lineno="3344"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3345"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>a<sp/>value<sp/>is<sp/>changed<sp/>or<sp/>deleted,<sp/>a<sp/>callback<sp/>function<sp/>is<sp/>called<sp/>on<sp/>all</highlight></codeline>
<codeline lineno="3346"><highlight class="comment"><sp/>*<sp/><sp/>components.</highlight></codeline>
<codeline lineno="3347"><highlight class="comment"><sp/>*<sp/><sp/>See:<sp/>BWPersonality.onCellAppData<sp/>and<sp/>BWPersonality.onDelCellAppData.</highlight></codeline>
<codeline lineno="3348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3349"><highlight class="comment"><sp/>*<sp/><sp/>NOTE:<sp/>Only<sp/>top-level<sp/>values<sp/>are<sp/>propagated,<sp/>if<sp/>you<sp/>have<sp/>a<sp/>value<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="3350"><highlight class="comment"><sp/>*<sp/><sp/>mutable<sp/>(for<sp/>example,<sp/>a<sp/>list)<sp/>and<sp/>it<sp/>changed<sp/>internally<sp/>(for<sp/>example,</highlight></codeline>
<codeline lineno="3351"><highlight class="comment"><sp/>*<sp/><sp/>changing<sp/>just<sp/>one<sp/>member),<sp/>this<sp/>information<sp/>is<sp/>NOT<sp/>propagated.</highlight></codeline>
<codeline lineno="3352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3353"><highlight class="comment"><sp/>*<sp/><sp/>Do<sp/>NOT<sp/>do<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="3354"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="3355"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.cellAppData[<sp/>&quot;list&quot;<sp/>]<sp/>=<sp/>[1,<sp/>2,<sp/>3]</highlight></codeline>
<codeline lineno="3356"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.cellAppData[<sp/>&quot;list&quot;<sp/>][1]<sp/>=<sp/>7</highlight></codeline>
<codeline lineno="3357"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="3358"><highlight class="comment"><sp/>*<sp/><sp/>Locally,<sp/>this<sp/>would<sp/>look<sp/>like<sp/>[1,<sp/>7,<sp/>3]<sp/>and<sp/>remotely<sp/>[1,<sp/>2,<sp/>3].</highlight></codeline>
<codeline lineno="3359"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>globalData</highlight></codeline>
<codeline lineno="3361"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3362"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>property<sp/>contains<sp/>a<sp/>dictionary-like<sp/>object<sp/>that<sp/>is<sp/>automatically</highlight></codeline>
<codeline lineno="3363"><highlight class="comment"><sp/>*<sp/><sp/>duplicated<sp/>between<sp/>all<sp/>BaseApps<sp/>and<sp/>CellApps.<sp/>Whenever<sp/>a<sp/>value<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="3364"><highlight class="comment"><sp/>*<sp/><sp/>dictionary<sp/>is<sp/>modified,<sp/>this<sp/>change<sp/>is<sp/>propagated<sp/>to<sp/>all<sp/>BaseApps<sp/>and</highlight></codeline>
<codeline lineno="3365"><highlight class="comment"><sp/>*<sp/><sp/>CellApps.<sp/>The<sp/>CellAppMgr<sp/>keeps<sp/>the<sp/>authoritative<sp/>copy<sp/>of<sp/>this<sp/>information</highlight></codeline>
<codeline lineno="3366"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>resolves<sp/>race<sp/>conditions.</highlight></codeline>
<codeline lineno="3367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3368"><highlight class="comment"><sp/>*<sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="3369"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="3370"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.globalData[<sp/>&quot;hello&quot;<sp/>]<sp/>=<sp/>&quot;there&quot;</highlight></codeline>
<codeline lineno="3371"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="3372"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3373"><highlight class="comment"><sp/>*<sp/><sp/>Another<sp/>CellApp<sp/>or<sp/>BaseApp<sp/>can<sp/>access<sp/>this<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="3374"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="3375"><highlight class="comment"><sp/>*<sp/><sp/>print<sp/>BigWorld.globalData[<sp/>&quot;hello&quot;<sp/>]</highlight></codeline>
<codeline lineno="3376"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="3377"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3378"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>key<sp/>and<sp/>value<sp/>can<sp/>be<sp/>any<sp/>type<sp/>that<sp/>can<sp/>be<sp/>pickled<sp/>and<sp/>unpickled<sp/>on<sp/>all</highlight></codeline>
<codeline lineno="3379"><highlight class="comment"><sp/>*<sp/><sp/>destination<sp/>components.</highlight></codeline>
<codeline lineno="3380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3381"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>a<sp/>value<sp/>is<sp/>changed<sp/>or<sp/>deleted,<sp/>a<sp/>callback<sp/>function<sp/>is<sp/>called<sp/>on<sp/>all</highlight></codeline>
<codeline lineno="3382"><highlight class="comment"><sp/>*<sp/><sp/>components.</highlight></codeline>
<codeline lineno="3383"><highlight class="comment"><sp/>*<sp/><sp/>See:<sp/>BWPersonality.onGlobalData<sp/>and<sp/>BWPersonality.onDelGlobalData.</highlight></codeline>
<codeline lineno="3384"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3385"><highlight class="comment"><sp/>*<sp/><sp/>NOTE:<sp/>Only<sp/>top-level<sp/>values<sp/>are<sp/>propagated,<sp/>if<sp/>you<sp/>have<sp/>a<sp/>value<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="3386"><highlight class="comment"><sp/>*<sp/><sp/>mutable<sp/>(for<sp/>example,<sp/>a<sp/>list)<sp/>and<sp/>it<sp/>changed<sp/>internally<sp/>(for<sp/>example,</highlight></codeline>
<codeline lineno="3387"><highlight class="comment"><sp/>*<sp/><sp/>changing<sp/>just<sp/>one<sp/>member),<sp/>this<sp/>information<sp/>is<sp/>NOT<sp/>propagated.</highlight></codeline>
<codeline lineno="3388"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3389"><highlight class="comment"><sp/>*<sp/><sp/>Do<sp/>NOT<sp/>do<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="3390"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="3391"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.globalData[<sp/>&quot;list&quot;<sp/>]<sp/>=<sp/>[1,<sp/>2,<sp/>3]</highlight></codeline>
<codeline lineno="3392"><highlight class="comment"><sp/>*<sp/><sp/>BigWorld.globalData[<sp/>&quot;list&quot;<sp/>][1]<sp/>=<sp/>7</highlight></codeline>
<codeline lineno="3393"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="3394"><highlight class="comment"><sp/>*<sp/><sp/>Locally,<sp/>this<sp/>would<sp/>look<sp/>like<sp/>[1,<sp/>7,<sp/>3]<sp/>and<sp/>remotely<sp/>[1,<sp/>2,<sp/>3].</highlight></codeline>
<codeline lineno="3395"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>EXPOSE_CELL_APPS</highlight></codeline>
<codeline lineno="3397"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3398"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>callable<sp/>watchers<sp/>to<sp/>indicate<sp/>that<sp/>it<sp/>is<sp/>to<sp/>be<sp/>run<sp/>on</highlight></codeline>
<codeline lineno="3399"><highlight class="comment"><sp/>*<sp/><sp/>all<sp/>CellApp<sp/>components<sp/>owned<sp/>by<sp/>the<sp/>manager.</highlight></codeline>
<codeline lineno="3400"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>EXPOSE_LEAST_LOADED</highlight></codeline>
<codeline lineno="3402"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3403"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>by<sp/>callable<sp/>watchers<sp/>to<sp/>indicate<sp/>that<sp/>it<sp/>is<sp/>to<sp/>be<sp/>run<sp/>on</highlight></codeline>
<codeline lineno="3404"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>least<sp/>loaded<sp/>CellApp<sp/>component<sp/>owned<sp/>by<sp/>the<sp/>manager.</highlight></codeline>
<codeline lineno="3405"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>TRIANGLE_WATER</highlight></codeline>
<codeline lineno="3407"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3408"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>to<sp/>identify<sp/>water<sp/>triangles.</highlight></codeline>
<codeline lineno="3409"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>attribute<sp/>BigWorld<sp/>TRIANGLE_TERRAIN</highlight></codeline>
<codeline lineno="3411"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3412"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>flag<sp/>is<sp/>used<sp/>to<sp/>identify<sp/>terrain<sp/>triangles.</highlight></codeline>
<codeline lineno="3413"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addToModule(<sp/>PyObject<sp/>*<sp/>pModule,<sp/>T<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pName<sp/>)</highlight></codeline>
<codeline lineno="3417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pObj<sp/>=<sp/>Script::getData(<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObj)</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_SetAttrString(<sp/>pModule,<sp/>pName,<sp/>pObj<sp/>);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pObj<sp/>);</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CellApp::initScript()</highlight></codeline>
<codeline lineno="3436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onAllSpaceGeometryLoaded&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onAppReady&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onAppShuttingDown&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onBaseAppDeath&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onCellAppData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onCellAppReady&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onCellAppShuttingDown&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onDelCellAppData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onDelGlobalData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onGlobalData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onServiceAppDeath&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onSpaceData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onSpaceDataDeleted&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryLoaded&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onRecordingStarted&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onRecordingTickData&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onRecordingStopped&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryMappingAdded&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scriptEvents().createEventType(<sp/></highlight><highlight class="stringliteral">&quot;onSpaceGeometryMappingRemoved&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;ScriptApp::initScript(<sp/></highlight><highlight class="stringliteral">&quot;cell&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityDef::Constants::entitiesCellPath()<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="3459"><highlight class="normal">#ifdef<sp/>BUILD_PY_URLREQUEST</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!URL::Manager::init(<sp/>this-&gt;mainDispatcher()<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="3461"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!PyNetwork::init(<sp/>this-&gt;mainDispatcher(),<sp/>interface_<sp/>))</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/>Script::initExceptionHook(<sp/>&amp;mainDispatcher_<sp/>);</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pickler<sp/>must<sp/>be<sp/>initialised<sp/>after<sp/>Python.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/>pPickler_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Pickler();</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/>DataSectionPtr<sp/>pSection<sp/>=</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BWResource::openSection(<sp/>EntityDef::Constants::entitiesFile()<sp/>);</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSection)</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight><highlight class="stringliteral">&quot;CellApp::initScript:<sp/>Could<sp/>not<sp/>load<sp/>entities.xml\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>CellApp<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pModule<sp/>=<sp/>PyImport_AddModule(<sp/></highlight><highlight class="stringliteral">&quot;BigWorld&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObjectPtr<sp/>pEntities(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_entities" kindref="compound">PyEntities</ref>(),<sp/>PyObjectPtr::STEAL_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;entities&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntities.get()<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::initScript:<sp/>Failed<sp/>to<sp/>set<sp/>entities\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initalize<sp/>the<sp/>service<sp/>map<sp/>now<sp/>that<sp/>python<sp/>has<sp/>started</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/>pPyServicesMap_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>PyServicesMap();</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;services&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPyServicesMap_<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::initScript:<sp/>Failed<sp/>to<sp/>set<sp/>services\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/>pPySpaces_<sp/>=<sp/>PySpacesPtr(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_spaces" kindref="compound">PySpaces</ref>(),<sp/>PySpacesPtr::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;spaces&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPySpaces_.get()<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::initScript:<sp/>Failed<sp/>to<sp/>set<sp/>spaces\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;VOLATILE_ALWAYS&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::createFrom(<sp/>VolatileInfo::ALWAYS<sp/>).</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;VOLATILE_NEVER&quot;</highlight><highlight class="normal">,<sp/>Py_None<sp/>);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/>AutoBackupAndArchive::addNextOnlyConstant(<sp/>pModule<sp/>);</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>watcher<sp/>forwarding<sp/>hints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForwardingWatcher::CELL_APPS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EXPOSE_CELL_APPS&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForwardingWatcher::LEAST_LOADED,<sp/></highlight><highlight class="stringliteral">&quot;EXPOSE_LEAST_LOADED&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>the<sp/>following<sp/>hints<sp/>when<sp/>the<sp/>CellAppMgr<sp/>support<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>implemented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addToModule(<sp/>pModule,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ForwardingWatcher::WITH_ENTITY,<sp/><sp/>&quot;EXPOSE_WITH_ENTITY&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addToModule(<sp/>pModule,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ForwardingWatcher::WITH_SPACE,<sp/><sp/><sp/>&quot;EXPOSE_WITH_SPACE&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>INVALID_POSITION,<sp/></highlight><highlight class="stringliteral">&quot;INVALID_POSITION&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>(uint16)<sp/>TRIANGLE_WATER,<sp/></highlight><highlight class="stringliteral">&quot;TRIANGLE_WATER&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/>addToModule(<sp/>pModule,<sp/>(uint16)<sp/>TRIANGLE_TERRAIN,<sp/></highlight><highlight class="stringliteral">&quot;TRIANGLE_TERRAIN&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;PyObject<sp/>*&gt;(<sp/>&amp;Entity::s_type_<sp/>)<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UserDataObject&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;PyObject<sp/>*&gt;(<sp/>&amp;UserDataObject::s_type_<sp/>)<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Space&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;PyObject<sp/>*&gt;(<sp/>&amp;PySpace::s_type_<sp/>)<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pCellAppData_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppData_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SharedData(<sp/>SHARED_DATA_TYPE_CELL_APP,<sp/>Util::isAppReady,</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Util::setSharedData,<sp/>Util::delSharedData,</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Util::onSetSharedData,<sp/>Util::onDelSharedData,</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPickler_<sp/>);</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;cellAppData&quot;</highlight><highlight class="normal">,<sp/>pCellAppData_<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pGlobalData_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>pGlobalData_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SharedData(<sp/>SHARED_DATA_TYPE_GLOBAL,<sp/>Util::isAppReady,</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Util::setSharedData,<sp/>Util::delSharedData,</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Util::onSetSharedData,<sp/>Util::onDelSharedData,</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPickler_<sp/>);</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/>pModule,<sp/></highlight><highlight class="stringliteral">&quot;globalData&quot;</highlight><highlight class="normal">,<sp/>pGlobalData_<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>personality<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initPersonality(<sp/></highlight><highlight class="comment">/*<sp/>isOptional<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal">BW::string<sp/><ref refid="class_cell_app_1a8b23c16c935c18e42d0bbffb3905af01" kindref="member">CellApp::pickle</ref>(<sp/>ScriptObject<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="3598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;pickle&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pPickler_-&gt;pickle(<sp/>args<sp/>);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal">ScriptObject<sp/><ref refid="class_cell_app_1a8347d190f3b056443113be738ede91ba" kindref="member">CellApp::unpickle</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>str<sp/>)</highlight></codeline>
<codeline lineno="3608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;unpickle&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pPickler_-&gt;unpickle(<sp/>str<sp/>);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal">PyObject<sp/>*<sp/><ref refid="class_cell_app_1a72797c74f7682825520336c2d5d08608" kindref="member">CellApp::newClassInstance</ref>(<sp/>PyObject<sp/>*<sp/>pyClass,</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pDictionary<sp/>)</highlight></codeline>
<codeline lineno="3620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>was<sp/>inspired<sp/>by<sp/>new_instance<sp/>function<sp/>in<sp/>Modules/newmodule.c<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Python<sp/>source<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/>PyInstanceObject<sp/>*<sp/>pNewObject<sp/>=</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_New(<sp/>PyInstanceObject,<sp/>&amp;PyInstance_Type<sp/>);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pyClass<sp/>);</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pDictionary<sp/>);</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/>pNewObject-&gt;in_class<sp/>=<sp/>(PyClassObject<sp/>*)pyClass;</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/>pNewObject-&gt;in_dict<sp/>=<sp/>pDictionary;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject_GC_Init(<sp/>pNewObject<sp/>);</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PyObject<sp/>*)pNewObject;</highlight></codeline>
<codeline lineno="3635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::checkPython()</highlight></codeline>
<codeline lineno="3642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>Py_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>head<sp/>=<sp/>PyInt_FromLong(1000000);</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject*<sp/>p<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Script&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>python<sp/>objects...&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>&amp;&amp;<sp/>p-&gt;_ob_next<sp/>!=<sp/>head)</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((p-&gt;_ob_prev-&gt;_ob_next<sp/>!=<sp/>p)<sp/>||<sp/>(p-&gt;_ob_next-&gt;_ob_prev<sp/>!=<sp/>p))</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Script&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;Python<sp/>object<sp/>%0.8X<sp/>is<sp/>screwed\n&quot;</highlight><highlight class="normal">,<sp/>p<sp/>);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;_ob_next;</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_DECREF(head);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Script&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;Python<sp/>objects<sp/>are<sp/>Ok.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1a00102c87bcaf15349e8798cac7457249" kindref="member">CellApp::onSignalled</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sigNum<sp/>)</highlight></codeline>
<codeline lineno="3669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigNum<sp/>==<sp/>SIGQUIT)</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>print<sp/>out<sp/>some<sp/>information,<sp/>and<sp/>pass<sp/>it<sp/>up<sp/>to<sp/>EntityApp<sp/>to<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>core.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellApp::onSignalled:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;load<sp/>=<sp/>%f.<sp/>emergencyThrottle<sp/>=<sp/>%f.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>since<sp/>tick<sp/>=<sp/>%f<sp/>seconds\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getLoad(),<sp/>this-&gt;emergencyThrottle(),</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stampsToSeconds(<sp/>timestamp()<sp/>-<sp/>this-&gt;lastGameTickTime()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;EntityApp::onSignalled(<sp/>sigNum<sp/>);</highlight></codeline>
<codeline lineno="3683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1abd4c4f9b6802abbc4d64cdc55f1295ea" kindref="member">CellApp::registerWitness</ref>(<sp/><ref refid="class_witness" kindref="compound">Witness</ref><sp/>*<sp/>pObject,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>)</highlight></codeline>
<codeline lineno="3694"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>witnesses_.add(<sp/>pObject,<sp/>level<sp/>);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_1ac28abd686791acbde09af0a77eae396c" kindref="member">CellApp::deregisterWitness</ref>(<sp/><ref refid="class_witness" kindref="compound">Witness</ref><sp/>*<sp/>pObject<sp/>)</highlight></codeline>
<codeline lineno="3704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>witnesses_.remove(<sp/>pObject<sp/>);</highlight></codeline>
<codeline lineno="3706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellApp::callWitnesses(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkReceivedTime<sp/>)</highlight></codeline>
<codeline lineno="3713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasCalledWitnesses_)</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checkReceivedTime<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!pCellAppChannels_-&gt;haveAllChannelsReceivedTime(<sp/>this-&gt;time()<sp/>))</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;callWitnesses&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/>witnesses_.call();</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/>hasCalledWitnesses_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal">SpaceEntryID<sp/><ref refid="class_cell_app_1a1d01db7997d8fcc75fde91e814337210" kindref="member">CellApp::nextSpaceEntryID</ref>()</highlight></codeline>
<codeline lineno="3741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceEntryID<sp/>entryID<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;)(<sp/>interface_.address()<sp/>);</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/>entryID.salt<sp/>=<sp/>++nextSpaceEntryIDSalt_;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entryID;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cellapp.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellapp/cellapp.cpp"/>
  </compounddef>
</doxygen>
