<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="status__check__watcher_8cpp" kind="file" language="C++">
    <compoundname>status_check_watcher.cpp</compoundname>
    <includes refid="status__check__watcher_8hpp" local="yes">status_check_watcher.hpp</includes>
    <includes refid="loginapp_8hpp" local="yes">loginapp.hpp</includes>
    <includes local="yes">db/dbappmgr_interface.hpp</includes>
    <includes local="yes">network/bundle.hpp</includes>
    <incdepgraph>
      <node id="16363">
        <label>db/dbappmgr_interface.hpp</label>
      </node>
      <node id="16360">
        <label>server/server_app.hpp</label>
      </node>
      <node id="16331">
        <label>loginapp/status_check_watcher.cpp</label>
        <link refid="status_check_watcher.cpp"/>
        <childnode refid="16332" relation="include">
        </childnode>
        <childnode refid="16335" relation="include">
        </childnode>
        <childnode refid="16363" relation="include">
        </childnode>
        <childnode refid="16364" relation="include">
        </childnode>
      </node>
      <node id="16352">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="16351">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="16339">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="16341">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="16357">
        <label>network/public_key_cipher.hpp</label>
      </node>
      <node id="16364">
        <label>network/bundle.hpp</label>
      </node>
      <node id="16337">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="16347">
        <label>server/common.hpp</label>
      </node>
      <node id="16359">
        <label>resmgr/datasection.hpp</label>
      </node>
      <node id="16340">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="16338">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="16333">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="16336">
        <label>client_login_request.hpp</label>
        <link refid="client__login__request_8hpp_source"/>
        <childnode refid="16337" relation="include">
        </childnode>
        <childnode refid="16338" relation="include">
        </childnode>
        <childnode refid="16339" relation="include">
        </childnode>
        <childnode refid="16340" relation="include">
        </childnode>
        <childnode refid="16341" relation="include">
        </childnode>
        <childnode refid="16342" relation="include">
        </childnode>
        <childnode refid="16343" relation="include">
        </childnode>
      </node>
      <node id="16343">
        <label>connection/server_log_on_params.hpp</label>
      </node>
      <node id="16358">
        <label>network/tcp_server.hpp</label>
      </node>
      <node id="16361">
        <label>math/ema.hpp</label>
      </node>
      <node id="16356">
        <label>network/netmask.hpp</label>
      </node>
      <node id="16345">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="16348">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="16342">
        <label>connection/login_reply_record.hpp</label>
      </node>
      <node id="16334">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="16335">
        <label>loginapp.hpp</label>
        <link refid="loginapp_8hpp_source"/>
        <childnode refid="16336" relation="include">
        </childnode>
        <childnode refid="16344" relation="include">
        </childnode>
        <childnode refid="16343" relation="include">
        </childnode>
        <childnode refid="16349" relation="include">
        </childnode>
        <childnode refid="16342" relation="include">
        </childnode>
        <childnode refid="16350" relation="include">
        </childnode>
        <childnode refid="16351" relation="include">
        </childnode>
        <childnode refid="16352" relation="include">
        </childnode>
        <childnode refid="16353" relation="include">
        </childnode>
        <childnode refid="16354" relation="include">
        </childnode>
        <childnode refid="16355" relation="include">
        </childnode>
        <childnode refid="16356" relation="include">
        </childnode>
        <childnode refid="16357" relation="include">
        </childnode>
        <childnode refid="16334" relation="include">
        </childnode>
        <childnode refid="16358" relation="include">
        </childnode>
        <childnode refid="16359" relation="include">
        </childnode>
        <childnode refid="16360" relation="include">
        </childnode>
        <childnode refid="16361" relation="include">
        </childnode>
        <childnode refid="16362" relation="include">
        </childnode>
      </node>
      <node id="16332">
        <label>status_check_watcher.hpp</label>
        <link refid="status__check__watcher_8hpp_source"/>
        <childnode refid="16333" relation="include">
        </childnode>
        <childnode refid="16334" relation="include">
        </childnode>
      </node>
      <node id="16353">
        <label>db/database_gateway.hpp</label>
      </node>
      <node id="16350">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="16344">
        <label>login_int_interface.hpp</label>
        <link refid="login__int__interface_8hpp_source"/>
        <childnode refid="16345" relation="include">
        </childnode>
        <childnode refid="16346" relation="include">
        </childnode>
        <childnode refid="16347" relation="include">
        </childnode>
        <childnode refid="16348" relation="include">
        </childnode>
      </node>
      <node id="16346">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="16355">
        <label>network/event_dispatcher.hpp</label>
      </node>
      <node id="16354">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="16362">
        <label>memory</label>
      </node>
      <node id="16349">
        <label>connection/login_challenge_factory.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;status_check_watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;loginapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db/dbappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>ReplyHandler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">StatusCheckWatcher::ReplyHandler::ReplyHandler(<sp/><ref refid="class_status_check_watcher" kindref="compound">StatusCheckWatcher</ref><sp/>&amp;<sp/>rWatcher,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WatcherPathRequestV2<sp/>&amp;<sp/>pathRequest<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>rWatcher_(<sp/>rWatcher<sp/>),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>pathRequest_(<sp/>pathRequest<sp/>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StatusCheckWatcher::ReplyHandler::handleMessage(</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>source,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Should<sp/>check<sp/>that<sp/>there<sp/>are<sp/>not<sp/>too<sp/>many<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOkay;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::stringstream<sp/>outputStream;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>isOkay;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>from<sp/>a<sp/>sequence<sp/>of<sp/>strings<sp/>to<sp/>one<sp/>output<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!data.error()<sp/>&amp;&amp;<sp/>(data.remainingLength()<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>line;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>line;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputStream<sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>output<sp/>=<sp/>outputStream.str();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sendResult(<sp/>isOkay,<sp/>output<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StatusCheckWatcher::ReplyHandler::handleException(</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException<sp/>&amp;<sp/>ne,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;StatusCheckWatcher::ReplyHandler::handleException:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sendResult(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>reply<sp/>from<sp/>DBApp\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StatusCheckWatcher::ReplyHandler::sendResult(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>output<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>BinaryOStream<sp/>&amp;<sp/>resultStream<sp/>=<sp/>rWatcher_.startResultStream(<sp/>pathRequest_,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>watcherValueToStream(<sp/>resultStream,<sp/>status,<sp/>WT_READ_ONLY<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>rWatcher_.endResultStream(<sp/>pathRequest_,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>StatusCheckWatcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="class_status_check_watcher_1ad3b5b3520b2426753c20c975030ab6ee" kindref="member">StatusCheckWatcher::StatusCheckWatcher</ref>()<sp/>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>CallableWatcher(<sp/>LOCAL_ONLY,<sp/></highlight><highlight class="stringliteral">&quot;Check<sp/>the<sp/>status<sp/>of<sp/>the<sp/>server&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_status_check_watcher_1a0d01c98be4e174c96ebe6a9f65b09291" kindref="member">StatusCheckWatcher::setFromStream</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>base,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>path,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WatcherPathRequestV2<sp/>&amp;<sp/>pathRequest<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>base<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>pathRequest.getValueStream()-&gt;finish();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_login_app" kindref="compound">LoginApp</ref><sp/>&amp;<sp/>app<sp/>=<sp/>LoginApp::instance();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!app.isDBAppMgrReady())</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryOStream<sp/>&amp;<sp/>resultStream<sp/>=<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startResultStream(<sp/>pathRequest,<sp/></highlight><highlight class="stringliteral">&quot;DBAppMgr<sp/>not<sp/>ready&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watcherValueToStream(<sp/>resultStream,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>WT_READ_ONLY<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;endResultStream(<sp/>pathRequest,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>app.dbAppMgr().bundle();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startRequest(<sp/>DBAppMgrInterface::checkStatus,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_reply_handler" kindref="compound">ReplyHandler</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pathRequest<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>app.dbAppMgr().send();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>status_check_watcher.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="loginapp/status_check_watcher.cpp"/>
  </compounddef>
</doxygen>
