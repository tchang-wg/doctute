<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_hostnames_validator" kind="class" language="C++" prot="public">
    <compoundname>HostnamesValidator</compoundname>
    <derivedcompoundref refid="class_hostnames_mongo_d_b" prot="public" virt="non-virtual">HostnamesMongoDB</derivedcompoundref>
    <derivedcompoundref refid="class_hostnames_validator_m_l_d_b" prot="public" virt="non-virtual">HostnamesValidatorMLDB</derivedcompoundref>
    <includes refid="hostnames__validator_8hpp" local="no">hostnames_validator.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_hostnames_validator_1adfadd3070df362a95184413e7e42bd0c" prot="protected" static="no" mutable="no">
        <type>HostnameStatusMap</type>
        <definition>HostnameStatusMap HostnamesValidator::validationList_</definition>
        <argsstring></argsstring>
        <name>validationList_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="89" column="1" bodyfile="tools/message_logger/hostnames_validator.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hostnames_validator_1a19e0c36018244b934b96ff48dc6b6c0f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HostnamesValidator::lookupRetries_</definition>
        <argsstring></argsstring>
        <name>lookupRetries_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="93" column="1" bodyfile="tools/message_logger/hostnames_validator.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hostnames_validator_1a1a289fcd188cfd6d18dd5519c1d1b0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HostnamesValidator::HostnamesValidator</definition>
        <argsstring>()</argsstring>
        <name>HostnamesValidator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="70" column="1" bodyfile="tools/message_logger/hostnames_validator.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_hostnames_validator_1aba19516e55fcbae470e21c9bd16248e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>HostnamesValidator::~HostnamesValidator</definition>
        <argsstring>()</argsstring>
        <name>~HostnamesValidator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="71" column="1" bodyfile="tools/message_logger/hostnames_validator.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_hostnames_validator_1a873cff6c72e31bb60f3b1ef3e34b3405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HostnamesValidator::addValidateHostname</definition>
        <argsstring>(MessageLogger::IPAddress addr, const BW::string &amp;hostname, HostnameStatus status)</argsstring>
        <name>addValidateHostname</name>
        <param>
          <type>MessageLogger::IPAddress</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>HostnameStatus</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds an address/hostname pair with validation status to the stored validation list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="73" column="1" bodyfile="tools/message_logger/hostnames_validator.cpp" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_hostnames_validator_1a85bc0355a1e7c3c57a2c1db9bb53d1d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HostnamesValidatorProcessStatus</type>
        <definition>HostnamesValidatorProcessStatus HostnamesValidator::validateNextHostname</definition>
        <argsstring>()</argsstring>
        <name>validateNextHostname</name>
        <reimplementedby refid="class_hostnames_mongo_d_b_1a5a9d96589a32849f3c244fe6713cdaaa">validateNextHostname</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method validates a hostname/address pair using gethostbyaddr and writes the validated pair to db.</para><para>If the host is not found then the hostname pair will not be written, and a warning log will indicate that the hostname was rem. If any other error occurs then simply add the original pair, as the host may still be valid.</para><para>If a hostname is found it will be written to db (regardless of what the old value was, ie. whether it changed or not)</para><para><simplesect kind="return"><para>HostnamesValidatorProcessStatus </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="76" column="1" bodyfile="tools/message_logger/hostnames_validator.cpp" bodystart="85" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_hostnames_validator_1afa5f9993fb5104933ec9498cac0938db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HostnamesValidateResult</type>
        <definition>HostnamesValidateResult HostnamesValidator::validateOneHostname</definition>
        <argsstring>(MessageLogger::IPAddress addr, const BW::string &amp;oldName, BW::string &amp;newName)</argsstring>
        <name>validateOneHostname</name>
        <param>
          <type>MessageLogger::IPAddress</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>oldName</declname>
        </param>
        <param>
          <type>BW::string &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="78" column="1" bodyfile="tools/message_logger/hostnames_validator.cpp" bodystart="171" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_hostnames_validator_1aaeb54c612243f55797d879ff4778bfe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool HostnamesValidator::hostnameChanged</definition>
        <argsstring>(MessageLogger::IPAddress addr, const BW::string &amp;newHostname)</argsstring>
        <name>hostnameChanged</name>
        <reimplementedby refid="class_hostnames_mongo_d_b_1a134b8ee25c1713edf481a5b893b64da5">hostnameChanged</reimplementedby>
        <param>
          <type>MessageLogger::IPAddress</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>newHostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="83" column="1" bodyfile="tools/message_logger/hostnames_validator.hpp" bodystart="83" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hostnames_validator_1aef40085ce4c61ed95899a972c18638e3" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HostnamesValidator::inProgress</definition>
        <argsstring>()</argsstring>
        <name>inProgress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="87" column="1" bodyfile="tools/message_logger/hostnames_validator.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_hostnames_validator_1aa422b195177a8610e4bd50c24c4f2ce5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HostnamesValidator::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method releases allocated resources for the stored validation list and clears the list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/hostnames_validator.hpp" line="88" column="1" bodyfile="tools/message_logger/hostnames_validator.cpp" bodystart="44" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class handles the mapping between IP addresses and hostnames </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1457">
        <label>HostnamesMongoDB</label>
        <link refid="class_hostnames_mongo_d_b"/>
        <childnode refid="1456" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1456">
        <label>HostnamesValidator</label>
        <link refid="class_hostnames_validator"/>
      </node>
      <node id="1458">
        <label>HostnamesValidatorMLDB</label>
        <link refid="class_hostnames_validator_m_l_d_b"/>
        <childnode refid="1456" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="tools/message_logger/hostnames_validator.hpp" line="68" column="1" bodyfile="tools/message_logger/hostnames_validator.hpp" bodystart="67" bodyend="94"/>
    <listofallmembers>
      <member refid="class_hostnames_validator_1a873cff6c72e31bb60f3b1ef3e34b3405" prot="public" virt="non-virtual"><scope>HostnamesValidator</scope><name>addValidateHostname</name></member>
      <member refid="class_hostnames_validator_1aa422b195177a8610e4bd50c24c4f2ce5" prot="protected" virt="non-virtual"><scope>HostnamesValidator</scope><name>clear</name></member>
      <member refid="class_hostnames_validator_1aaeb54c612243f55797d879ff4778bfe7" prot="public" virt="virtual"><scope>HostnamesValidator</scope><name>hostnameChanged</name></member>
      <member refid="class_hostnames_validator_1a1a289fcd188cfd6d18dd5519c1d1b0f6" prot="public" virt="non-virtual"><scope>HostnamesValidator</scope><name>HostnamesValidator</name></member>
      <member refid="class_hostnames_validator_1aef40085ce4c61ed95899a972c18638e3" prot="protected" virt="non-virtual"><scope>HostnamesValidator</scope><name>inProgress</name></member>
      <member refid="class_hostnames_validator_1a19e0c36018244b934b96ff48dc6b6c0f" prot="private" virt="non-virtual"><scope>HostnamesValidator</scope><name>lookupRetries_</name></member>
      <member refid="class_hostnames_validator_1a85bc0355a1e7c3c57a2c1db9bb53d1d1" prot="public" virt="virtual"><scope>HostnamesValidator</scope><name>validateNextHostname</name></member>
      <member refid="class_hostnames_validator_1afa5f9993fb5104933ec9498cac0938db" prot="public" virt="non-virtual"><scope>HostnamesValidator</scope><name>validateOneHostname</name></member>
      <member refid="class_hostnames_validator_1adfadd3070df362a95184413e7e42bd0c" prot="protected" virt="non-virtual"><scope>HostnamesValidator</scope><name>validationList_</name></member>
      <member refid="class_hostnames_validator_1aba19516e55fcbae470e21c9bd16248e0" prot="public" virt="virtual"><scope>HostnamesValidator</scope><name>~HostnamesValidator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
