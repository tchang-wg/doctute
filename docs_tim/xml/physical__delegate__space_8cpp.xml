<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="physical__delegate__space_8cpp" kind="file" language="C++">
    <compoundname>physical_delegate_space.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="physical__delegate__space_8hpp" local="yes">physical_delegate_space.hpp</includes>
    <includes local="yes">delegate_interface/space_delegate_factory.hpp</includes>
    <includes local="yes">delegate_interface/space_delegate.hpp</includes>
    <includes local="yes">cstdmf/bw_namespace.hpp</includes>
    <includes refid="cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <incdepgraph>
      <node id="10734">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="10727">
        <label>math/rectt.hpp</label>
      </node>
      <node id="10766">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="10775">
        <label>py_spaces.hpp</label>
        <link refid="cellapp_2py__spaces_8hpp_source"/>
        <childnode refid="10776" relation="include">
        </childnode>
        <childnode refid="10777" relation="include">
        </childnode>
        <childnode refid="10778" relation="include">
        </childnode>
      </node>
      <node id="10755">
        <label>network/misc.hpp</label>
      </node>
      <node id="10765">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="10742">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="10763">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="10746">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="10752">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="10724">
        <label>script/first_include.hpp</label>
      </node>
      <node id="10774">
        <label>type_system/context.hpp</label>
      </node>
      <node id="10773">
        <label>script/script_object.hpp</label>
      </node>
      <node id="10777">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="10738">
        <label>delegate_interface/space_delegate_factory.hpp</label>
      </node>
      <node id="10745">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="10746" relation="include">
        </childnode>
        <childnode refid="10747" relation="include">
        </childnode>
        <childnode refid="10748" relation="include">
        </childnode>
        <childnode refid="10749" relation="include">
        </childnode>
        <childnode refid="10750" relation="include">
        </childnode>
      </node>
      <node id="10767">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="10749">
        <label>server/common.hpp</label>
      </node>
      <node id="10757">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="10737">
        <label>map</label>
      </node>
      <node id="10769">
        <label>pyscript/pickler.hpp</label>
      </node>
      <node id="10731">
        <label>pyscript/script_math.hpp</label>
      </node>
      <node id="10739">
        <label>delegate_interface/space_delegate.hpp</label>
      </node>
      <node id="10729">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="10770">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="10728">
        <label>math/boundbox.hpp</label>
      </node>
      <node id="10759">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="10735">
        <label>delegate_interface/game_delegate.hpp</label>
      </node>
      <node id="10726">
        <label>physical_space.hpp</label>
        <link refid="physical__space_8hpp_source"/>
        <childnode refid="10727" relation="include">
        </childnode>
        <childnode refid="10728" relation="include">
        </childnode>
        <childnode refid="10729" relation="include">
        </childnode>
        <childnode refid="10730" relation="include">
        </childnode>
        <childnode refid="10731" relation="include">
        </childnode>
      </node>
      <node id="10776">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="10753">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="10744">
        <label>cstdmf/safe_static.hpp</label>
      </node>
      <node id="10760">
        <label>emergency_throttle.hpp</label>
        <link refid="emergency__throttle_8hpp_source"/>
        <childnode refid="10729" relation="include">
        </childnode>
      </node>
      <node id="10741">
        <label>Python.h</label>
      </node>
      <node id="10730">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="10740">
        <label>cellapp.hpp</label>
        <link refid="cellapp_8hpp_source"/>
        <childnode refid="10741" relation="include">
        </childnode>
        <childnode refid="10742" relation="include">
        </childnode>
        <childnode refid="10743" relation="include">
        </childnode>
        <childnode refid="10745" relation="include">
        </childnode>
        <childnode refid="10751" relation="include">
        </childnode>
        <childnode refid="10758" relation="include">
        </childnode>
        <childnode refid="10760" relation="include">
        </childnode>
        <childnode refid="10761" relation="include">
        </childnode>
        <childnode refid="10763" relation="include">
        </childnode>
        <childnode refid="10764" relation="include">
        </childnode>
        <childnode refid="10765" relation="include">
        </childnode>
        <childnode refid="10734" relation="include">
        </childnode>
        <childnode refid="10766" relation="include">
        </childnode>
        <childnode refid="10767" relation="include">
        </childnode>
        <childnode refid="10768" relation="include">
        </childnode>
        <childnode refid="10769" relation="include">
        </childnode>
        <childnode refid="10749" relation="include">
        </childnode>
        <childnode refid="10770" relation="include">
        </childnode>
        <childnode refid="10771" relation="include">
        </childnode>
        <childnode refid="10772" relation="include">
        </childnode>
        <childnode refid="10773" relation="include">
        </childnode>
        <childnode refid="10774" relation="include">
        </childnode>
        <childnode refid="10775" relation="include">
        </childnode>
      </node>
      <node id="10723">
        <label>cellapp/physical_delegate_space.cpp</label>
        <link refid="physical_delegate_space.cpp"/>
        <childnode refid="10724" relation="include">
        </childnode>
        <childnode refid="10725" relation="include">
        </childnode>
        <childnode refid="10738" relation="include">
        </childnode>
        <childnode refid="10739" relation="include">
        </childnode>
        <childnode refid="10733" relation="include">
        </childnode>
        <childnode refid="10740" relation="include">
        </childnode>
      </node>
      <node id="10768">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="10756">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="10743">
        <label>cellapp_death_listener.hpp</label>
        <link refid="cellapp__death__listener_8hpp_source"/>
        <childnode refid="10732" relation="include">
        </childnode>
        <childnode refid="10730" relation="include">
        </childnode>
        <childnode refid="10744" relation="include">
        </childnode>
      </node>
      <node id="10771">
        <label>server/id_client.hpp</label>
      </node>
      <node id="10732">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="10764">
        <label>chunk_loading/preloaded_chunk_space.hpp</label>
      </node>
      <node id="10750">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="10748">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="10733">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="10751">
        <label>cellappmgr_gateway.hpp</label>
        <link refid="cellappmgr__gateway_8hpp_source"/>
        <childnode refid="10752" relation="include">
        </childnode>
        <childnode refid="10753" relation="include">
        </childnode>
        <childnode refid="10732" relation="include">
        </childnode>
        <childnode refid="10754" relation="include">
        </childnode>
        <childnode refid="10755" relation="include">
        </childnode>
        <childnode refid="10749" relation="include">
        </childnode>
        <childnode refid="10756" relation="include">
        </childnode>
        <childnode refid="10757" relation="include">
        </childnode>
      </node>
      <node id="10725">
        <label>physical_delegate_space.hpp</label>
        <link refid="physical__delegate__space_8hpp_source"/>
        <childnode refid="10726" relation="include">
        </childnode>
        <childnode refid="10732" relation="include">
        </childnode>
        <childnode refid="10733" relation="include">
        </childnode>
        <childnode refid="10734" relation="include">
        </childnode>
        <childnode refid="10735" relation="include">
        </childnode>
        <childnode refid="10736" relation="include">
        </childnode>
        <childnode refid="10737" relation="include">
        </childnode>
      </node>
      <node id="10758">
        <label>cells.hpp</label>
        <link refid="cells_8hpp_source"/>
        <childnode refid="10753" relation="include">
        </childnode>
        <childnode refid="10732" relation="include">
        </childnode>
        <childnode refid="10759" relation="include">
        </childnode>
      </node>
      <node id="10772">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="10747">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="10761">
        <label>profile.hpp</label>
        <link refid="profile_8hpp_source"/>
        <childnode refid="10762" relation="include">
        </childnode>
      </node>
      <node id="10762">
        <label>cstdmf/profile.hpp</label>
      </node>
      <node id="10754">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="10736">
        <label>scene/scene.hpp</label>
      </node>
      <node id="10778">
        <label>space/forward_declarations.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;physical_delegate_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;delegate_interface/space_delegate_factory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;delegate_interface/space_delegate.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/bw_namespace.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">PhysicalDelegateSpace::PhysicalDelegateSpace(<sp/>SpaceID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>:<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>id_(<sp/>id<sp/>),</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>scene_()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>IGameDelegate::instance()<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceDelegateFactory_<sp/>=<sp/><sp/>IGameDelegate::instance()-&gt;getSpaceDelegateFactory();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>spaceDelegateFactory_<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>createSpaceDelegate();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PhysicalDelegateSpace::createSpaceDelegate()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!spaceDelegate_<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceDelegate_<sp/>=<sp/>spaceDelegateFactory_-&gt;CreateSpaceDelegate(id_);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!spaceDelegate_)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>SpaceDelegate.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Created<sp/>physics<sp/>world<sp/>successfully.<sp/>Height<sp/>%f<sp/>Width<sp/>%f&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_physical_chunk_space_1a5d3dbf6832ad5dc9137a7f95ac17d496" kindref="member">bounds</ref>().height(),<sp/>this-&gt;<ref refid="class_physical_chunk_space_1a5d3dbf6832ad5dc9137a7f95ac17d496" kindref="member">bounds</ref>().width());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">PhysicalDelegateSpace::~PhysicalDelegateSpace()</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_physical_chunk_space_1a69a8088bbe7d3d27fc978d789947f162" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceDelegateFactory_-&gt;RemoveSpaceDelegate(spaceDelegate_);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1ac024b8db12255a502202ee9fc3334f4a" kindref="member">PhysicalDelegateSpace::loadResource</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>mappingID,<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>path,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix<sp/>&amp;<sp/>matrix)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>allow<sp/>to<sp/>add<sp/>a<sp/>second<sp/>mapping<sp/>for<sp/>the<sp/>same<sp/>path<sp/>with<sp/>a<sp/>different</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>mappingID<sp/>until<sp/>we<sp/>can<sp/>correctly<sp/>unload<sp/>mappings<sp/>so<sp/>that<sp/>any<sp/>request<sp/>to</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>unload<sp/>a<sp/>mappingID<sp/>that<sp/>references<sp/>a<sp/>particular<sp/>path<sp/>will<sp/>not<sp/>trigger</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>unloading<sp/>of<sp/>all<sp/>instances<sp/>of<sp/>that<sp/>path.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>See<sp/>jira<sp/>task<sp/>#BWT-30237</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>reversePaths_.find(<sp/>path<sp/>)<sp/>==<sp/>reversePaths_.end()<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>reversePaths_[<sp/>path<sp/>]<sp/>=<sp/>mappingID;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(paths_.find(<sp/>mappingID<sp/>)<sp/>!=<sp/>paths_.end()<sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;PhysicalDelegateSpace::loadResource:<sp/>Reusing<sp/>mapping<sp/>%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>entry<sp/>id<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path.c_str(),<sp/>mappingID.c_str()<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceDelegate_-&gt;loadSpaceFragment(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.c_str(),<sp/></highlight><highlight class="comment">/*blockUntilLoaded*/</highlight><highlight class="normal"><sp/>false<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;PhysicalDelegateSpace::loadResource:<sp/>Started<sp/>adding<sp/>mapping<sp/>%s&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>entry<sp/>id<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path.c_str(),<sp/>mappingID.c_str()<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>paths_[mappingID]<sp/>=<sp/>path;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a373f53e47415accb6d12af67d1f2483f" kindref="member">PhysicalDelegateSpace::unloadResource</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SpaceEntryID<sp/>&amp;<sp/>mappingID<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>map&lt;<sp/>mappingID,<sp/>path<sp/>&gt;<sp/>and<sp/>map&lt;<sp/>path,<sp/>referenceCount<sp/>&gt;<sp/>here<sp/>to</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>unload<sp/>a<sp/>path<sp/>which<sp/>happens<sp/>to<sp/>be<sp/>used<sp/>under<sp/>different<sp/>mappingID-s<sp/>only</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>all<sp/>references<sp/>to<sp/>it<sp/>are<sp/>removed.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>See<sp/>jira<sp/>task<sp/>#BWT-30237</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>PathMap::iterator<sp/>findP<sp/>=<sp/>paths_.find(<sp/>mappingID<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(findP<sp/>==<sp/>paths_.end())</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;PhysicalDelegateSpace::unloadResource:<sp/>Cannot<sp/>find<sp/>mapping&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>entry<sp/>id<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>mappingID.c_str()<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>path<sp/>=<sp/>findP-&gt;second;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceDelegate_-&gt;removeSpaceFragment(<sp/>path.c_str()<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;PhysicalDelegateSpace::unloadResource:<sp/>Requesting<sp/>to<sp/>delete<sp/>world&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>resources<sp/>for<sp/>entry<sp/>id<sp/>%s<sp/>(path:<sp/>%s)\n&quot;</highlight><highlight class="normal">,<sp/>mappingID.c_str(),<sp/>path.c_str()<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ReversePathMap::iterator<sp/>it<sp/>=<sp/>reversePaths_.find(<sp/>path<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>reversePaths_.end())</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reversePaths_.erase(it);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>paths_.erase(<sp/>findP<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a6685c5f39acfea4e7d44661ceccc5cec" kindref="member">PhysicalDelegateSpace::update</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/>rect,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unloadOnly<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ToDo:<sp/>implement<sp/>when<sp/>load<sp/>balancing<sp/>is<sp/>supported!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a70527ddd74a2cb2e0ead6f63ed616b4a" kindref="member">PhysicalDelegateSpace::getLoadedRect</ref>(<sp/>BW::Rect<sp/>&amp;<sp/>rect<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="139"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>rect<sp/>=<sp/>BW::Rect(<sp/>FLT_MAX,<sp/>FLT_MAX,<sp/>-FLT_MAX,<sp/>-FLT_MAX<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>loadedPaths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>spaceDelegate_<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>PathMap::const_iterator<sp/>it<sp/>=<sp/>paths_.begin();<sp/>it<sp/>!=<sp/>paths_.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spaceDelegate_-&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isFullyLoadedSpaceFragment(it-&gt;second.c_str())<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++loadedPaths;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>all<sp/>the<sp/>requested<sp/>worlds<sp/>have<sp/>finished<sp/>loading,<sp/>return<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-FLT_MAX..FLT_MAX<sp/>rectangle,<sp/>which<sp/>indicates<sp/>for<sp/>the<sp/>cellapp<sp/>mgr<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>required<sp/>&quot;geometry&quot;<sp/>has<sp/>finished<sp/>loading,<sp/>and<sp/>the<sp/>onAllSpaceGeometryLoaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callback<sp/>should<sp/>be<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>loadedPaths<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>loadedPaths<sp/>==<sp/>paths_.size()<sp/>)<sp/></highlight><highlight class="comment">//<sp/>all<sp/>worlds<sp/>are<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>=<sp/>BW::Rect(<sp/>-FLT_MAX,<sp/>-FLT_MAX,<sp/>FLT_MAX,<sp/>FLT_MAX<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>when<sp/>some<sp/>worlds<sp/>haven&apos;t<sp/>finished<sp/>loading<sp/>(or<sp/>there<sp/>are<sp/>no<sp/>worlds<sp/>at<sp/>all)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>empty<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect<sp/>=<sp/>BW::Rect(<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/>Overrides<sp/>from<sp/>IPhysicalSpace</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a335232515e8eefd7d1e79276d89e955e" kindref="member">PhysicalDelegateSpace::getLoadableRects</ref>(<sp/>IPhysicalSpace::BoundsList<sp/>&amp;<sp/>rects<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>override<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>TODO<sp/>WRITE<sp/>THE<sp/>CORRECT<sp/>IMPLEMENTATION<sp/>(Despair<sp/>version)</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">BoundingBox<sp/><ref refid="class_physical_delegate_space_1ab94d903c4432f106f8f7b58d9015c02b" kindref="member">PhysicalDelegateSpace::bounds</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="186"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>spaceDelegate_<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minX<sp/>=<sp/>0,<sp/>maxX<sp/>=<sp/>0,<sp/>minY<sp/>=<sp/>0,<sp/>maxY<sp/>=<sp/>0,<sp/>minZ<sp/>=<sp/>0,<sp/>maxZ<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceDelegate_-&gt;getBounds(<sp/>&amp;minX,<sp/>&amp;maxX,<sp/>&amp;minY,<sp/>&amp;maxY,<sp/>&amp;minZ,<sp/>&amp;maxZ<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BoundingBox(<sp/>Vector3(<sp/>minX,<sp/>minY,<sp/>minZ<sp/>),<sp/>Vector3(<sp/>maxX,<sp/>maxY,<sp/>maxZ<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a1d0e2c0a032c9e6bf007c3b320a805d7" kindref="member">PhysicalDelegateSpace::cancelCurrentlyLoading</ref>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>PathMap::const_iterator<sp/>it<sp/>=<sp/>paths_.begin();<sp/>it<sp/>!=<sp/>paths_.end();<sp/>++it<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>path<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceDelegate_-&gt;cancelLoadingSpaceFragment(<sp/>path.c_str()<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1aee5ad0463e46b05ca3fcc9921e78c54e" kindref="member">PhysicalDelegateSpace::isFullyUnloaded</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="212"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paths_.empty();</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a4b10c95ddbf1f9dc52c4f675776149a6" kindref="member">PhysicalDelegateSpace::isFullyLoaded</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="221"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>s_fullyLoadedRect<sp/>=<sp/>BW::Rect(<sp/>-FLT_MAX,<sp/>-FLT_MAX,<sp/>FLT_MAX,<sp/>FLT_MAX<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>loadedRect;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_physical_chunk_space_1a76618846400cea35352da49cb41b8ef5" kindref="member">getLoadedRect</ref>(<sp/>loadedRect<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loadedRect<sp/>==<sp/>s_fullyLoadedRect;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a2c6b20d159ad363e593251d3744c07fd" kindref="member">PhysicalDelegateSpace::reuse</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_physical_chunk_space_1a69a8088bbe7d3d27fc978d789947f162" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a6efa79b0ef3c07363dfe1736f4e48848" kindref="member">PhysicalDelegateSpace::clear</ref>()</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>spaceDelegate_-&gt;removeAllSpaceFragments();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>paths_.clear();</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_physical_delegate_space_1a249b64415fc6423f6517096526f6a403" kindref="member">PhysicalDelegateSpace::getMatrixForGeometry</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StringRef<sp/>path,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixProviderPtr<sp/>&amp;<sp/>pMapper,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix<sp/>&amp;<sp/>matrix<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>matrix<sp/>=<sp/>Matrix::identity;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>implementation<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
    </programlisting>
    <location file="cellapp/physical_delegate_space.cpp"/>
  </compounddef>
</doxygen>
