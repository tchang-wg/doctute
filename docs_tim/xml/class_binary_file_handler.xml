<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_binary_file_handler" kind="class" language="C++" prot="public">
    <compoundname>BinaryFileHandler</compoundname>
    <basecompoundref refid="class_file_handler" prot="public" virt="non-virtual">FileHandler</basecompoundref>
    <derivedcompoundref refid="class_categories_m_l_d_b" prot="public" virt="non-virtual">CategoriesMLDB</derivedcompoundref>
    <derivedcompoundref refid="class_format_strings_m_l_d_b" prot="public" virt="non-virtual">FormatStringsMLDB</derivedcompoundref>
    <derivedcompoundref refid="class_metadata_m_l_d_b" prot="public" virt="non-virtual">MetadataMLDB</derivedcompoundref>
    <derivedcompoundref refid="class_user_components" prot="public" virt="non-virtual">UserComponents</derivedcompoundref>
    <includes refid="binary__file__handler_8hpp" local="no">binary_file_handler.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_binary_file_handler_1a13bdd4383c425937da751b83380cd479" prot="protected" static="no" mutable="no">
        <type>FileStream *</type>
        <definition>FileStream* BinaryFileHandler::pFile_</definition>
        <argsstring></argsstring>
        <name>pFile_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/binary_file_handler.hpp" line="26" column="1" bodyfile="tools/message_logger/binary_file_handler.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_binary_file_handler_1a0cb04b5e807edbbcf09160a0718a75f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE BinaryFileHandler::BinaryFileHandler</definition>
        <argsstring>()</argsstring>
        <name>BinaryFileHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/binary_file_handler.hpp" line="17" column="1" bodyfile="tools/message_logger/binary_file_handler.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_file_handler_1ac0e6becf7617edfa335daec6e2bb658e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BinaryFileHandler::~BinaryFileHandler</definition>
        <argsstring>()</argsstring>
        <name>~BinaryFileHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/binary_file_handler.hpp" line="18" column="1" bodyfile="tools/message_logger/binary_file_handler.cpp" bodystart="17" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_file_handler_1a7bd532fd2f29b7505b34802225c7df94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BinaryFileHandler::init</definition>
        <argsstring>(const char *path, const char *mode)</argsstring>
        <name>init</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialises the <ref refid="class_binary_file_handler" kindref="compound">BinaryFileHandler</ref> with a new FileStream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/binary_file_handler.hpp" line="20" column="1" bodyfile="tools/message_logger/binary_file_handler.cpp" bodystart="29" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_file_handler_1a210e605b34b892af78197e6667f89bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BinaryFileHandler::reloadFileAndRefresh</definition>
        <argsstring>()</argsstring>
        <name>reloadFileAndRefresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/binary_file_handler.hpp" line="21" column="1" bodyfile="tools/message_logger/binary_file_handler.cpp" bodystart="53" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_binary_file_handler_1a2f569a2a2f1478ec6312a9f559cade02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>long BinaryFileHandler::length</definition>
        <argsstring>()</argsstring>
        <name>length</name>
        <reimplements refid="class_file_handler_1a115fb06c8296264b46a3ef98ac1afc28">length</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the length of the currently open file.</para><para><simplesect kind="return"><para>Current file length on success, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/binary_file_handler.hpp" line="23" column="1" bodyfile="tools/message_logger/binary_file_handler.cpp" bodystart="73" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Wraps binary-format files that are accessed via a FileStream. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="299">
        <label>BinaryFileHandler</label>
        <link refid="class_binary_file_handler"/>
        <childnode refid="300" relation="public-inheritance">
        </childnode>
      </node>
      <node id="300">
        <label>FileHandler</label>
        <link refid="class_file_handler"/>
      </node>
      <node id="301">
        <label>CategoriesMLDB</label>
        <link refid="class_categories_m_l_d_b"/>
        <childnode refid="299" relation="public-inheritance">
        </childnode>
      </node>
      <node id="304">
        <label>UserComponents</label>
        <link refid="class_user_components"/>
        <childnode refid="299" relation="public-inheritance">
        </childnode>
      </node>
      <node id="303">
        <label>MetadataMLDB</label>
        <link refid="class_metadata_m_l_d_b"/>
        <childnode refid="299" relation="public-inheritance">
        </childnode>
      </node>
      <node id="302">
        <label>FormatStringsMLDB</label>
        <link refid="class_format_strings_m_l_d_b"/>
        <childnode refid="299" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="305">
        <label>BinaryFileHandler</label>
        <link refid="class_binary_file_handler"/>
        <childnode refid="306" relation="public-inheritance">
        </childnode>
      </node>
      <node id="306">
        <label>FileHandler</label>
        <link refid="class_file_handler"/>
      </node>
    </collaborationgraph>
    <location file="tools/message_logger/binary_file_handler.hpp" line="15" column="1" bodyfile="tools/message_logger/binary_file_handler.hpp" bodystart="14" bodyend="27"/>
    <listofallmembers>
      <member refid="class_binary_file_handler_1a0cb04b5e807edbbcf09160a0718a75f9" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>BinaryFileHandler</name></member>
      <member refid="class_file_handler_1a21db311b76430aff514bf39a238b015d" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>filename</name></member>
      <member refid="class_file_handler_1a48f6ab15fbc95172ce6db0878cd4d5e7" prot="protected" virt="non-virtual"><scope>BinaryFileHandler</scope><name>filename_</name></member>
      <member refid="class_file_handler_1aaa5e02b440b04dd78fe9ac2c8f19c69e" prot="protected" virt="virtual"><scope>BinaryFileHandler</scope><name>flush</name></member>
      <member refid="class_binary_file_handler_1a7bd532fd2f29b7505b34802225c7df94" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>init</name></member>
      <member refid="class_file_handler_1a83d056536289a502e280ad909c998e29" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>isDirty</name></member>
      <member refid="class_file_handler_1aeca3703f7450120817ff241f9ab5cebc" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>join</name></member>
      <member refid="class_binary_file_handler_1a2f569a2a2f1478ec6312a9f559cade02" prot="public" virt="virtual"><scope>BinaryFileHandler</scope><name>length</name></member>
      <member refid="class_file_handler_1aa513ca77c5578ff7f931578c4e2f767c" prot="protected" virt="non-virtual"><scope>BinaryFileHandler</scope><name>length_</name></member>
      <member refid="class_file_handler_1af160a3724165ff7d40488471ad2cfeba" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>mode</name></member>
      <member refid="class_file_handler_1a3d60ec446935def914042db894c1bd3a" prot="protected" virt="non-virtual"><scope>BinaryFileHandler</scope><name>mode_</name></member>
      <member refid="class_binary_file_handler_1a13bdd4383c425937da751b83380cd479" prot="protected" virt="non-virtual"><scope>BinaryFileHandler</scope><name>pFile_</name></member>
      <member refid="class_file_handler_1a81e45df04afafdc54b27686861c4475c" prot="public" virt="pure-virtual"><scope>BinaryFileHandler</scope><name>read</name></member>
      <member refid="class_file_handler_1aa529a9fd4b544fd8b85e8aba4da1b32b" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>refresh</name></member>
      <member refid="class_binary_file_handler_1a210e605b34b892af78197e6667f89bf8" prot="public" virt="non-virtual"><scope>BinaryFileHandler</scope><name>reloadFileAndRefresh</name></member>
      <member refid="class_file_handler_1a6beda2ae2fd3b91e1928615ebde690af" prot="protected" virt="non-virtual"><scope>BinaryFileHandler</scope><name>s_pathBuf_</name></member>
      <member refid="class_binary_file_handler_1ac0e6becf7617edfa335daec6e2bb658e" prot="public" virt="virtual"><scope>BinaryFileHandler</scope><name>~BinaryFileHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
