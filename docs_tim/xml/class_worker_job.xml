<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_worker_job" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>WorkerJob</compoundname>
    <derivedcompoundref refid="class_file_streaming_job" prot="public" virt="non-virtual">FileStreamingJob</derivedcompoundref>
    <derivedcompoundref refid="class_ticked_worker_job" prot="public" virt="non-virtual">TickedWorkerJob</derivedcompoundref>
    <includes refid="worker__thread_8hpp" local="no">worker_thread.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_worker_job_1a45c6bd51df30d9effe7665b1b0370344" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float WorkerJob::DONT_RESCHEDULE</definition>
        <argsstring></argsstring>
        <name>DONT_RESCHEDULE</name>
        <initializer>= -0.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="76" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_worker_job_1a54aa01ef176dc2241b56c438ac02213b" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float WorkerJob::DONT_RESCHEDULE_AND_DESTROY</definition>
        <argsstring></argsstring>
        <name>DONT_RESCHEDULE_AND_DESTROY</name>
        <initializer>= -1.5f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="77" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_worker_job_1a103bfff38cf08799fd8a4e7877a64223" prot="private" static="no" mutable="no">
        <type><ref refid="class_worker_thread" kindref="compound">WorkerThread</ref> *</type>
        <definition>WorkerThread* WorkerJob::pThread_</definition>
        <argsstring></argsstring>
        <name>pThread_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="85" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_worker_job_1a9e30b63adaa0c0532f73f4f647de4634" prot="private" static="no" mutable="no">
        <type>uint64</type>
        <definition>uint64 WorkerJob::nextTime_</definition>
        <argsstring></argsstring>
        <name>nextTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="86" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_worker_job_1afee2ed44f4e279798dcddc953aeea959" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WorkerJob::running_</definition>
        <argsstring></argsstring>
        <name>running_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="87" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_worker_job_1ae06da1173b4856f0a48a474fbce9ed13" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool WorkerJob::deleting_</definition>
        <argsstring></argsstring>
        <name>deleting_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="88" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_worker_job_1a5cd181bfe09cfad66e8f3d87feef1439" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class WorkerThread</definition>
        <argsstring></argsstring>
        <name>WorkerThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="92" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_worker_job_1a99e3d7e946b7302500c2b71ec6b5e92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WorkerJob::WorkerJob</definition>
        <argsstring>()</argsstring>
        <name>WorkerJob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="55" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="204" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_job_1ab85f534e0406cbe24acd9997a9f2ab20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void WorkerJob::deleteSelf</definition>
        <argsstring>()</argsstring>
        <name>deleteSelf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="57" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_job_1a803b6fc05912dc5b6b9e2afbaa4fcf3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WorkerJob::submit</definition>
        <argsstring>(WorkerThread *pThread)</argsstring>
        <name>submit</name>
        <param>
          <type><ref refid="class_worker_thread" kindref="compound">WorkerThread</ref> *</type>
          <declname>pThread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Submit this job to the given thread </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="63" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="223" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_job_1a69d5df98ea6d0ee989610be780a18555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WorkerJob::withdraw</definition>
        <argsstring>()</argsstring>
        <name>withdraw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Withdraw this job from the current thread </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="64" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_job_1afd3c79ced2bbc23cd3cf9dacc49ea09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>float</type>
        <definition>virtual float WorkerJob::operator()</definition>
        <argsstring>()=0</argsstring>
        <name>operator()</name>
        <reimplementedby refid="class_file_streaming_job_1a3a201144953a3b4468020cf88e804555">operator()</reimplementedby>
        <reimplementedby refid="class_fetch_data_section_job_1ae1409557dcd5ecc2f35c381c0a83586b">operator()</reimplementedby>
        <reimplementedby refid="class_fetch_from_chunks_job_1a0bcbafb8e3167c1e03264782b812f8f4">operator()</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the method that is called to do stuff in the thread. It should return the desired time in seconds that the thread wants to wait before being called again. Zero is fine if you want to be called asap (although other jobs might be in front). If you return &lt; 0 you will not be rescheduled (you will be disowned) and if &lt; -1 you will also be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_worker_job_1a915d4203d1b0dbf592a89f4ecc3dd78d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool WorkerJob::isDisowned</definition>
        <argsstring>() const </argsstring>
        <name>isDisowned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="79" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_worker_job_1a2021f357efe65197ce3cbff302e34df1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>WorkerJob::~WorkerJob</definition>
        <argsstring>()</argsstring>
        <name>~WorkerJob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="82" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="215" bodyend="218"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_worker_job_1aeb4d0e8c08500588c0d0141cb21876bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WorkerJob::disowned</definition>
        <argsstring>()</argsstring>
        <name>disowned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>We have become permanently unemployed :( </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/worker_thread.hpp" line="90" column="1" bodyfile="baseapp/worker_thread.cpp" bodystart="244" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is a job that executes in a worker thread.</para><para>Jobs are in one of three states: in their worker thread&apos;s queue, currently running, or disowned. State transitions are guarded in such a way that it is safe to delete a job while it is running in another thread. It blocks until the current run of the job has completed.</para><para>Jobs present when the <ref refid="class_worker_thread" kindref="compound">WorkerThread</ref> is deleted are disowned. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3172">
        <label>TickedWorkerJob</label>
        <link refid="class_ticked_worker_job"/>
        <childnode refid="3170" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3170">
        <label>WorkerJob</label>
        <link refid="class_worker_job"/>
      </node>
      <node id="3174">
        <label>FetchFromChunksJob</label>
        <link refid="class_fetch_from_chunks_job"/>
        <childnode refid="3172" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3171">
        <label>FileStreamingJob</label>
        <link refid="class_file_streaming_job"/>
        <childnode refid="3170" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3173">
        <label>FetchDataSectionJob</label>
        <link refid="class_fetch_data_section_job"/>
        <childnode refid="3172" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="baseapp/worker_thread.hpp" line="53" column="1" bodyfile="baseapp/worker_thread.hpp" bodystart="52" bodyend="93"/>
    <listofallmembers>
      <member refid="class_worker_job_1ab85f534e0406cbe24acd9997a9f2ab20" prot="public" virt="non-virtual"><scope>WorkerJob</scope><name>deleteSelf</name></member>
      <member refid="class_worker_job_1ae06da1173b4856f0a48a474fbce9ed13" prot="private" virt="non-virtual"><scope>WorkerJob</scope><name>deleting_</name></member>
      <member refid="class_worker_job_1aeb4d0e8c08500588c0d0141cb21876bb" prot="private" virt="non-virtual"><scope>WorkerJob</scope><name>disowned</name></member>
      <member refid="class_worker_job_1a45c6bd51df30d9effe7665b1b0370344" prot="public" virt="non-virtual"><scope>WorkerJob</scope><name>DONT_RESCHEDULE</name></member>
      <member refid="class_worker_job_1a54aa01ef176dc2241b56c438ac02213b" prot="public" virt="non-virtual"><scope>WorkerJob</scope><name>DONT_RESCHEDULE_AND_DESTROY</name></member>
      <member refid="class_worker_job_1a915d4203d1b0dbf592a89f4ecc3dd78d" prot="public" virt="non-virtual"><scope>WorkerJob</scope><name>isDisowned</name></member>
      <member refid="class_worker_job_1a9e30b63adaa0c0532f73f4f647de4634" prot="private" virt="non-virtual"><scope>WorkerJob</scope><name>nextTime_</name></member>
      <member refid="class_worker_job_1afd3c79ced2bbc23cd3cf9dacc49ea09c" prot="public" virt="pure-virtual"><scope>WorkerJob</scope><name>operator()</name></member>
      <member refid="class_worker_job_1a103bfff38cf08799fd8a4e7877a64223" prot="private" virt="non-virtual"><scope>WorkerJob</scope><name>pThread_</name></member>
      <member refid="class_worker_job_1afee2ed44f4e279798dcddc953aeea959" prot="private" virt="non-virtual"><scope>WorkerJob</scope><name>running_</name></member>
      <member refid="class_worker_job_1a803b6fc05912dc5b6b9e2afbaa4fcf3a" prot="public" virt="non-virtual"><scope>WorkerJob</scope><name>submit</name></member>
      <member refid="class_worker_job_1a69d5df98ea6d0ee989610be780a18555" prot="public" virt="non-virtual"><scope>WorkerJob</scope><name>withdraw</name></member>
      <member refid="class_worker_job_1a99e3d7e946b7302500c2b71ec6b5e92a" prot="public" virt="non-virtual"><scope>WorkerJob</scope><name>WorkerJob</name></member>
      <member refid="class_worker_job_1a5cd181bfe09cfad66e8f3d87feef1439" prot="private" virt="non-virtual"><scope>WorkerJob</scope><name>WorkerThread</name></member>
      <member refid="class_worker_job_1a2021f357efe65197ce3cbff302e34df1" prot="protected" virt="virtual"><scope>WorkerJob</scope><name>~WorkerJob</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
