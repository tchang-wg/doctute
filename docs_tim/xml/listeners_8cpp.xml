<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="listeners_8cpp" kind="file" language="C++">
    <compoundname>listeners.cpp</compoundname>
    <includes refid="listeners_8hpp" local="yes">listeners.hpp</includes>
    <incdepgraph>
      <node id="17628">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="17631">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="17626">
        <label>network/endpoint.hpp</label>
      </node>
      <node id="17619">
        <label>network/machine_guard.hpp</label>
      </node>
      <node id="17627">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="17629">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="17622">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="17623">
        <label>usermap.hpp</label>
        <link refid="usermap_8hpp_source"/>
        <childnode refid="17619" relation="include">
        </childnode>
      </node>
      <node id="17632">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="17636">
        <label>sys/types.h</label>
      </node>
      <node id="17625">
        <label>connection_wrapper.hpp</label>
        <link refid="connection__wrapper_8hpp_source"/>
        <childnode refid="17626" relation="include">
        </childnode>
        <childnode refid="17627" relation="include">
        </childnode>
        <childnode refid="17628" relation="include">
        </childnode>
        <childnode refid="17629" relation="include">
        </childnode>
      </node>
      <node id="17617">
        <label>tools/bwmachined/listeners.cpp</label>
        <link refid="listeners.cpp"/>
        <childnode refid="17618" relation="include">
        </childnode>
      </node>
      <node id="17635">
        <label>network/portmap.hpp</label>
      </node>
      <node id="17634">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="17618">
        <label>listeners.hpp</label>
        <link refid="listeners_8hpp_source"/>
        <childnode refid="17619" relation="include">
        </childnode>
        <childnode refid="17620" relation="include">
        </childnode>
      </node>
      <node id="17630">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="17621">
        <label>process_binary_version.hpp</label>
        <link refid="process__binary__version_8hpp_source"/>
        <childnode refid="17622" relation="include">
        </childnode>
      </node>
      <node id="17624">
        <label>message_with_destination.hpp</label>
        <link refid="message__with__destination_8hpp_source"/>
        <childnode refid="17625" relation="include">
        </childnode>
        <childnode refid="17619" relation="include">
        </childnode>
        <childnode refid="17626" relation="include">
        </childnode>
      </node>
      <node id="17633">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="17620">
        <label>server_platform.hpp</label>
        <link refid="server__platform_8hpp_source"/>
        <childnode refid="17621" relation="include">
        </childnode>
        <childnode refid="17623" relation="include">
        </childnode>
        <childnode refid="17624" relation="include">
        </childnode>
        <childnode refid="17630" relation="include">
        </childnode>
        <childnode refid="17622" relation="include">
        </childnode>
        <childnode refid="17631" relation="include">
        </childnode>
        <childnode refid="17632" relation="include">
        </childnode>
        <childnode refid="17627" relation="include">
        </childnode>
        <childnode refid="17633" relation="include">
        </childnode>
        <childnode refid="17634" relation="include">
        </childnode>
        <childnode refid="17635" relation="include">
        </childnode>
        <childnode refid="17619" relation="include">
        </childnode>
        <childnode refid="17636" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;listeners.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_listeners" kindref="compound">Listeners&lt; ListenerMessage &gt;::handleNotify</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Endpoint<sp/>&amp;<sp/>endpoint,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ProcessMessage<sp/>&amp;<sp/>pm,<sp/>in_addr<sp/>addr<sp/>)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>address[6];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<sp/>address,<sp/>&amp;addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>addr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<sp/>address<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>addr<sp/>),<sp/>&amp;pm.port_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>pm.port_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>Members::iterator<sp/>iter<sp/>=<sp/>members_.begin();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>members_.end())</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ListenerMessage<sp/>&amp;lm<sp/>=<sp/>iter-&gt;mgm_;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm.category_<sp/>==<sp/>pm.category_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lm.uid_<sp/>==<sp/>lm.ANY_UID<sp/>||<sp/>lm.uid_<sp/>==<sp/>pm.uid_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lm.name_<sp/>==<sp/>pm.name_<sp/>||<sp/>lm.name_.size()<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msglen<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm.preAddr_.size()<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>address<sp/>)<sp/>+<sp/>lm.postAddr_.size());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<sp/>msglen<sp/>];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>preSize<sp/>=<sp/>lm.preAddr_.size();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>postSize<sp/>=<sp/>lm.postAddr_.size();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>data,<sp/>lm.preAddr_.c_str(),<sp/>preSize<sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>data<sp/>+<sp/>preSize,<sp/>address,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>address<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>data<sp/>+<sp/>preSize<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>address<sp/>),<sp/>lm.postAddr_.c_str(),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSize<sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>send<sp/>to<sp/>the<sp/>appropriate<sp/>port<sp/>locally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint.sendto(<sp/>data,<sp/>msglen,<sp/>lm.port_,<sp/>iter-&gt;addr_<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>data;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_listeners" kindref="compound">Listeners&lt; SignalListenerMessage &gt;::handleNotify</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Endpoint<sp/>&amp;<sp/>endpoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SignalMessage<sp/>&amp;<sp/>sm,<sp/>in_addr<sp/>addr<sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>Members::iterator<sp/>iter<sp/>=<sp/>members_.begin();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>members_.end())</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SignalListenerMessage<sp/>&amp;slm<sp/>=<sp/>iter-&gt;mgm_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slm.category_<sp/>==<sp/>sm.category_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slm.pid_<sp/>==<sp/>sm.pid_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slm.uid_<sp/>==<sp/>sm.uid_)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;handleNotify:<sp/>signal<sp/>=<sp/>%d<sp/>pid<sp/>=<sp/>%d<sp/>uid<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slm.signal_,<sp/>slm.pid_,<sp/>slm.uid_<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>signal<sp/>already<sp/>contained<sp/>in<sp/>the<sp/>original<sp/>bundle<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>to<sp/>the<sp/>appropriate<sp/>port<sp/>locally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endpoint.sendto(<sp/>const_cast&lt;<sp/>char<sp/>*<sp/>&gt;<sp/>(slm.bundleData_.c_str()),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;<sp/>int<sp/>&gt;<sp/>(slm.bundleData_.size()),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slm.port_,<sp/>iter-&gt;addr_<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>listeners.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/bwmachined/listeners.cpp"/>
  </compounddef>
</doxygen>
