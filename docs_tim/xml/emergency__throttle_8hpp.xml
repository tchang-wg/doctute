<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="emergency__throttle_8hpp" kind="file" language="C++">
    <compoundname>emergency_throttle.hpp</compoundname>
    <includes local="yes">cstdmf/smartpointer.hpp</includes>
    <includedby refid="cellapp_8hpp" local="yes">cellapp/cellapp.hpp</includedby>
    <includedby refid="emergency__throttle_8cpp" local="yes">cellapp/emergency_throttle.cpp</includedby>
    <incdepgraph>
      <node id="8269">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="8268">
        <label>cellapp/emergency_throttle.hpp</label>
        <link refid="emergency_throttle.hpp"/>
        <childnode refid="8269" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8270">
        <label>cellapp/emergency_throttle.hpp</label>
        <link refid="emergency_throttle.hpp"/>
        <childnode refid="8271" relation="include">
        </childnode>
      </node>
      <node id="8271">
        <label>cellapp/cellapp.hpp</label>
        <link refid="cellapp_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_emergency_throttle" prot="public">EmergencyThrottle</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="emergency__throttle_8hpp_1a4c736b5cb2f480ea5a252cc22746a1d8" prot="public" static="no">
        <type><ref refid="class_smart_pointer" kindref="compound">SmartPointer</ref>&lt; Watcher &gt;</type>
        <definition>typedef SmartPointer&lt; Watcher &gt; WatcherPtr</definition>
        <argsstring></argsstring>
        <name>WatcherPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/emergency_throttle.hpp" line="10" column="1" bodyfile="cellapp/emergency_throttle.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>EMERGENCY_THROTTLE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMERGENCY_THROTTLE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/smartpointer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Watcher;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_smart_pointer" kindref="compound">SmartPointer&lt; Watcher &gt;</ref><sp/><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_emergency_throttle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_emergency_throttle" kindref="compound">EmergencyThrottle</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_emergency_throttle_1aa486a0147dbb0c57d12b33f08c47f3f4" kindref="member">EmergencyThrottle</ref>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_emergency_throttle_1a6a3f53b0900aec61b5903b97ab771c8d" kindref="member">update</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>numSecondsBehind,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spareTime,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tickPeriod<sp/>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_emergency_throttle_1a57b7109144f25b1796a58dbba84d141b" kindref="member">estimatePersistentLoadTime</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>persistentLoadTime,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>throttledLoadTime)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/><ref refid="class_emergency_throttle_1aa8748f9f6edbd51db291455a755871ca" kindref="member">pWatcher</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldScaleBack(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeToNextTick,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spareTime<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaleBack(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fraction<sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaleForward(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fraction<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value_;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldPrintScaleForward_;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>startTime_;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxTimeBehind_;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>EMERGENCY_THROTTLE_HPP</highlight></codeline>
    </programlisting>
    <location file="cellapp/emergency_throttle.hpp"/>
  </compounddef>
</doxygen>
