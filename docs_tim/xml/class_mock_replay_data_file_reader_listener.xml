<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_mock_replay_data_file_reader_listener" kind="class" language="C++" prot="public">
    <compoundname>MockReplayDataFileReaderListener</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IReplayDataFileReaderListener</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_mock_replay_data_file_reader_listener_1a518447421348610a06a9efe4a8ec5b07" prot="public" static="no">
        <type>BW::vector&lt; std::pair&lt; GameTime, MemoryOStream * &gt; &gt;</type>
        <definition>typedef BW::vector&lt; std::pair&lt; GameTime, MemoryOStream * &gt; &gt; MockReplayDataFileReaderListener::TickData</definition>
        <argsstring></argsstring>
        <name>TickData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="454" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_mock_replay_data_file_reader_listener_1a5928240ce2b19e17cc71684caf4eb26e" prot="public" static="no">
        <type>TickData::const_iterator</type>
        <definition>typedef TickData::const_iterator MockReplayDataFileReaderListener::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="455" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="455" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mock_replay_data_file_reader_listener_1ac3118fd49927437feb60986ef6de4920" prot="private" static="no" mutable="no">
        <type>ReplayHeader</type>
        <definition>ReplayHeader MockReplayDataFileReaderListener::header_</definition>
        <argsstring></argsstring>
        <name>header_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="463" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_replay_data_file_reader_listener_1a8a23474ab86987eb5130abdadc910481" prot="private" static="no" mutable="no">
        <type>ReplayMetaData</type>
        <definition>ReplayMetaData MockReplayDataFileReaderListener::metaData_</definition>
        <argsstring></argsstring>
        <name>metaData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="464" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_replay_data_file_reader_listener_1a8aeb64a7cc3b59b49f2e8702634c9313" prot="private" static="no" mutable="no">
        <type>TickData</type>
        <definition>TickData MockReplayDataFileReaderListener::tickData_</definition>
        <argsstring></argsstring>
        <name>tickData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="465" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_replay_data_file_reader_listener_1a7629863ddf2185f3d02e53996b74013f" prot="private" static="no" mutable="no">
        <type>ErrorType</type>
        <definition>ErrorType MockReplayDataFileReaderListener::errorType_</definition>
        <argsstring></argsstring>
        <name>errorType_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="466" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_replay_data_file_reader_listener_1a5aaa4c9e28ff234b3a1215b9aec123f0" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string MockReplayDataFileReaderListener::errorDescription_</definition>
        <argsstring></argsstring>
        <name>errorDescription_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="467" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_replay_data_file_reader_listener_1a9abbe6a1c3420dd690aea2cffe676403" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MockReplayDataFileReaderListener::isReaderDestroyed_</definition>
        <argsstring></argsstring>
        <name>isReaderDestroyed_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="468" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1ae917c0b234bbb7453b1e076c04ecd4ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MockReplayDataFileReaderListener::MockReplayDataFileReaderListener</definition>
        <argsstring>()</argsstring>
        <name>MockReplayDataFileReaderListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="378" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="378" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a3c91acff35c3e8b5b49b9009913e4ecf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual MockReplayDataFileReaderListener::~MockReplayDataFileReaderListener</definition>
        <argsstring>()</argsstring>
        <name>~MockReplayDataFileReaderListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="392" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="392" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1ad29514e4b7f56c8f4dde94e125038a0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool MockReplayDataFileReaderListener::onReplayDataFileReaderHeader</definition>
        <argsstring>(ReplayDataFileReader &amp;reader, const ReplayHeader &amp;header, BW::string &amp;errorString)</argsstring>
        <name>onReplayDataFileReaderHeader</name>
        <param>
          <type>ReplayDataFileReader &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const ReplayHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BW::string &amp;</type>
          <declname>errorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="404" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="404" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a04ce0bc362cb25fa23c09dae5e3024ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool MockReplayDataFileReaderListener::onReplayDataFileReaderMetaData</definition>
        <argsstring>(ReplayDataFileReader &amp;reader, const ReplayMetaData &amp;metaData, BW::string &amp;errorString)</argsstring>
        <name>onReplayDataFileReaderMetaData</name>
        <param>
          <type>ReplayDataFileReader &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const ReplayMetaData &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type>BW::string &amp;</type>
          <declname>errorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="412" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="412" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1aa99ee0644abf60cc1b2e815ed89dfdb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool MockReplayDataFileReaderListener::onReplayDataFileReaderTickData</definition>
        <argsstring>(ReplayDataFileReader &amp;reader, GameTime time, bool isCompressed, BinaryIStream &amp;stream, BW::string &amp;errorString)</argsstring>
        <name>onReplayDataFileReaderTickData</name>
        <param>
          <type>ReplayDataFileReader &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>GameTime</type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isCompressed</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>BW::string &amp;</type>
          <declname>errorString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="420" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="420" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a1a8356ff6055b1b788198145b8da6fef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void MockReplayDataFileReaderListener::onReplayDataFileReaderError</definition>
        <argsstring>(ReplayDataFileReader &amp;reader, ErrorType errorType, const BW::string &amp;errorDescription)</argsstring>
        <name>onReplayDataFileReaderError</name>
        <param>
          <type>ReplayDataFileReader &amp;</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>ErrorType</type>
          <declname>errorType</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>errorDescription</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="433" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="433" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a728766f58c7424f5749a71e7551449a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void MockReplayDataFileReaderListener::onReplayDataFileReaderDestroyed</definition>
        <argsstring>(ReplayDataFileReader &amp;reader)</argsstring>
        <name>onReplayDataFileReaderDestroyed</name>
        <param>
          <type>ReplayDataFileReader &amp;</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="442" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="442" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a1bea27522ab6cca228b227ec87785919" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MockReplayDataFileReaderListener::hasError</definition>
        <argsstring>() const </argsstring>
        <name>hasError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="448" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="448" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1aa7287de200c01307287be9d809263e8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; MockReplayDataFileReaderListener::errorDescription</definition>
        <argsstring>() const </argsstring>
        <name>errorDescription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="450" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="450" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a971f0ec6117f31a9bd88f5d4edff9d22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ReplayHeader &amp;</type>
        <definition>const ReplayHeader&amp; MockReplayDataFileReaderListener::header</definition>
        <argsstring>() const </argsstring>
        <name>header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="452" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="452" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a7b02a37359324ea0e0e9ba97148e46c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator MockReplayDataFileReaderListener::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="457" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="457" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a11eb55e3b267cdaf19b341c154e02fe7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator MockReplayDataFileReaderListener::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="458" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="458" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_replay_data_file_reader_listener_1a7f6116f4a1dc85c381f8ae696c99a23b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MockReplayDataFileReaderListener::isReaderDestroyed</definition>
        <argsstring>() const </argsstring>
        <name>isReaderDestroyed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="460" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="460" bodyend="460"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class mocks a listener for a ReplayDataFileReader. It collects the calls for receiving the header and the tick data. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1937">
        <label>MockReplayDataFileReaderListener</label>
        <link refid="class_mock_replay_data_file_reader_listener"/>
        <childnode refid="1938" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1938">
        <label>IReplayDataFileReaderListener</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1939">
        <label>MockReplayDataFileReaderListener</label>
        <link refid="class_mock_replay_data_file_reader_listener"/>
        <childnode refid="1940" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1940">
        <label>IReplayDataFileReaderListener</label>
      </node>
    </collaborationgraph>
    <location file="baseapp/unit_test/test_recording.cpp" line="372" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="371" bodyend="469"/>
    <listofallmembers>
      <member refid="class_mock_replay_data_file_reader_listener_1a7b02a37359324ea0e0e9ba97148e46c5" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>begin</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a5928240ce2b19e17cc71684caf4eb26e" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>const_iterator</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a11eb55e3b267cdaf19b341c154e02fe7" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>end</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1aa7287de200c01307287be9d809263e8d" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>errorDescription</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a5aaa4c9e28ff234b3a1215b9aec123f0" prot="private" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>errorDescription_</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a7629863ddf2185f3d02e53996b74013f" prot="private" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>errorType_</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a1bea27522ab6cca228b227ec87785919" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>hasError</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a971f0ec6117f31a9bd88f5d4edff9d22" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>header</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1ac3118fd49927437feb60986ef6de4920" prot="private" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>header_</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a7f6116f4a1dc85c381f8ae696c99a23b" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>isReaderDestroyed</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a9abbe6a1c3420dd690aea2cffe676403" prot="private" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>isReaderDestroyed_</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a8a23474ab86987eb5130abdadc910481" prot="private" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>metaData_</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1ae917c0b234bbb7453b1e076c04ecd4ae" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>MockReplayDataFileReaderListener</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a728766f58c7424f5749a71e7551449a4" prot="public" virt="virtual"><scope>MockReplayDataFileReaderListener</scope><name>onReplayDataFileReaderDestroyed</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a1a8356ff6055b1b788198145b8da6fef" prot="public" virt="virtual"><scope>MockReplayDataFileReaderListener</scope><name>onReplayDataFileReaderError</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1ad29514e4b7f56c8f4dde94e125038a0b" prot="public" virt="virtual"><scope>MockReplayDataFileReaderListener</scope><name>onReplayDataFileReaderHeader</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a04ce0bc362cb25fa23c09dae5e3024ab" prot="public" virt="virtual"><scope>MockReplayDataFileReaderListener</scope><name>onReplayDataFileReaderMetaData</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1aa99ee0644abf60cc1b2e815ed89dfdb9" prot="public" virt="virtual"><scope>MockReplayDataFileReaderListener</scope><name>onReplayDataFileReaderTickData</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a518447421348610a06a9efe4a8ec5b07" prot="public" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>TickData</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a8aeb64a7cc3b59b49f2e8702634c9313" prot="private" virt="non-virtual"><scope>MockReplayDataFileReaderListener</scope><name>tickData_</name></member>
      <member refid="class_mock_replay_data_file_reader_listener_1a3c91acff35c3e8b5b49b9009913e4ecf" prot="public" virt="virtual"><scope>MockReplayDataFileReaderListener</scope><name>~MockReplayDataFileReaderListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
