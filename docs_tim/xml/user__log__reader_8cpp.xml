<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="user__log__reader_8cpp" kind="file" language="C++">
    <compoundname>user_log_reader.cpp</compoundname>
    <includes local="no">Python.h</includes>
    <includes refid="user__log__reader_8hpp" local="yes">user_log_reader.hpp</includes>
    <includes refid="user__segment__reader_8hpp" local="yes">user_segment_reader.hpp</includes>
    <includes refid="mlutil_8hpp" local="yes">mlutil.hpp</includes>
    <incdepgraph>
      <node id="22849">
        <label>query_range_iterator.hpp</label>
        <link refid="query__range__iterator_8hpp_source"/>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
      </node>
      <node id="22828">
        <label>unary_integer_file.hpp</label>
        <link refid="unary__integer__file_8hpp_source"/>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
      </node>
      <node id="22851">
        <label>mlutil.hpp</label>
        <link refid="mlutil_8hpp_source"/>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22841">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="22831">
        <label>query_params.hpp</label>
        <link refid="query__params_8hpp_source"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22832" relation="include">
        </childnode>
        <childnode refid="22847" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22848" relation="include">
        </childnode>
      </node>
      <node id="22798">
        <label>user_log_reader.hpp</label>
        <link refid="user__log__reader_8hpp_source"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22801" relation="include">
        </childnode>
        <childnode refid="22829" relation="include">
        </childnode>
        <childnode refid="22850" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
      </node>
      <node id="22812">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="22820">
        <label>log_time.hpp</label>
        <link refid="log__time_8hpp_source"/>
        <childnode refid="22821" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
        <childnode refid="22823" relation="include">
        </childnode>
      </node>
      <node id="22816">
        <label>stdlib.h</label>
      </node>
      <node id="22830">
        <label>log_entry_address_reader.hpp</label>
        <link refid="log__entry__address__reader_8hpp_source"/>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22797" relation="include">
        </childnode>
      </node>
      <node id="22826">
        <label>user_segment_usage.hpp</label>
        <link refid="user__segment__usage_8hpp_source"/>
        <childnode refid="22827" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
      </node>
      <node id="22840">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
      </node>
      <node id="22822">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="22813">
        <label>mldb/log_component_names.hpp</label>
        <link refid="mldb_2log__component__names_8hpp_source"/>
        <childnode refid="22814" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22799">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="22807">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="22846">
        <label>../hostnames.hpp</label>
        <link refid="hostnames_8hpp_source"/>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22842">
        <label>network/format_string_handler.hpp</label>
      </node>
      <node id="22800">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="22847">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="22829">
        <label>query_range.hpp</label>
        <link refid="query__range_8hpp_source"/>
        <childnode refid="22799" relation="include">
        </childnode>
        <childnode refid="22830" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22831" relation="include">
        </childnode>
        <childnode refid="22849" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
      </node>
      <node id="22844">
        <label>cstdmf/debug_message_source.hpp</label>
      </node>
      <node id="22836">
        <label>format_strings.hpp</label>
        <link refid="mldb_2format__strings_8hpp_source"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22837" relation="include">
        </childnode>
        <childnode refid="22838" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
      </node>
      <node id="22834">
        <label>categories.hpp</label>
        <link refid="mldb_2categories_8hpp_source"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22835" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22843">
        <label>log_entry.hpp</label>
        <link refid="log__entry_8hpp_source"/>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22844" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
      </node>
      <node id="22797">
        <label>Python.h</label>
      </node>
      <node id="22827">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="22838">
        <label>log_string_interpolator.hpp</label>
        <link refid="log__string__interpolator_8hpp_source"/>
        <childnode refid="22839" relation="include">
        </childnode>
        <childnode refid="22840" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22841" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22842" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
      </node>
      <node id="22815">
        <label>../text_file_handler.hpp</label>
        <link refid="text__file__handler_8hpp_source"/>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
      </node>
      <node id="22819">
        <label>user_segment.hpp</label>
        <link refid="user__segment_8hpp_source"/>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22801" relation="include">
        </childnode>
        <childnode refid="22820" relation="include">
        </childnode>
        <childnode refid="22824" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
        <childnode refid="22816" relation="include">
        </childnode>
        <childnode refid="22825" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22804">
        <label>binary_file_handler.hpp</label>
        <link refid="binary__file__handler_8hpp_source"/>
        <childnode refid="22805" relation="include">
        </childnode>
        <childnode refid="22808" relation="include">
        </childnode>
      </node>
      <node id="22821">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="22818" relation="include">
        </childnode>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22823">
        <label>time.h</label>
      </node>
      <node id="22810">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="22814">
        <label>../log_component_names.hpp</label>
        <link refid="log__component__names_8hpp_source"/>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22835">
        <label>../categories.hpp</label>
        <link refid="categories_8hpp_source"/>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
      </node>
      <node id="22809">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
      </node>
      <node id="22801">
        <label>user_log.hpp</label>
        <link refid="user__log_8hpp_source"/>
        <childnode refid="22802" relation="include">
        </childnode>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22826" relation="include">
        </childnode>
        <childnode refid="22828" relation="include">
        </childnode>
        <childnode refid="22825" relation="include">
        </childnode>
      </node>
      <node id="22845">
        <label>hostnames.hpp</label>
        <link refid="mldb_2hostnames_8hpp_source"/>
        <childnode refid="22846" relation="include">
        </childnode>
        <childnode refid="22815" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22818">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="22806">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="22837">
        <label>../format_strings.hpp</label>
        <link refid="format__strings_8hpp_source"/>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22838" relation="include">
        </childnode>
        <childnode refid="22843" relation="include">
        </childnode>
      </node>
      <node id="22839">
        <label>string_offset.hpp</label>
        <link refid="string__offset_8hpp_source"/>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
        <childnode refid="22822" relation="include">
        </childnode>
      </node>
      <node id="22805">
        <label>file_handler.hpp</label>
        <link refid="file__handler_8hpp_source"/>
        <childnode refid="22806" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22832">
        <label>mldb/log_reader.hpp</label>
        <link refid="log__reader_8hpp_source"/>
        <childnode refid="22833" relation="include">
        </childnode>
        <childnode refid="22846" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22802">
        <label>logging_component.hpp</label>
        <link refid="logging__component_8hpp_source"/>
        <childnode refid="22803" relation="include">
        </childnode>
        <childnode refid="22817" relation="include">
        </childnode>
        <childnode refid="22818" relation="include">
        </childnode>
      </node>
      <node id="22850">
        <label>user_segment_reader.hpp</label>
        <link refid="user__segment__reader_8hpp_source"/>
        <childnode refid="22819" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22811" relation="include">
        </childnode>
      </node>
      <node id="22833">
        <label>log_common.hpp</label>
        <link refid="log__common_8hpp_source"/>
        <childnode refid="22834" relation="include">
        </childnode>
        <childnode refid="22836" relation="include">
        </childnode>
        <childnode refid="22845" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22828" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22796">
        <label>tools/message_logger/user_log_reader.cpp</label>
        <link refid="user_log_reader.cpp"/>
        <childnode refid="22797" relation="include">
        </childnode>
        <childnode refid="22798" relation="include">
        </childnode>
        <childnode refid="22850" relation="include">
        </childnode>
        <childnode refid="22851" relation="include">
        </childnode>
      </node>
      <node id="22824">
        <label>mldb/metadata.hpp</label>
        <link refid="mldb_2metadata_8hpp_source"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22812" relation="include">
        </childnode>
      </node>
      <node id="22811">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="22848">
        <label>regex.h</label>
      </node>
      <node id="22808">
        <label>network/file_stream.hpp</label>
      </node>
      <node id="22803">
        <label>user_components.hpp</label>
        <link refid="user__components_8hpp_source"/>
        <childnode refid="22804" relation="include">
        </childnode>
        <childnode refid="22809" relation="include">
        </childnode>
        <childnode refid="22813" relation="include">
        </childnode>
        <childnode refid="22810" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
        <childnode refid="22800" relation="include">
        </childnode>
      </node>
      <node id="22817">
        <label>log_entry_address.hpp</label>
        <link refid="log__entry__address_8hpp_source"/>
        <childnode refid="22812" relation="include">
        </childnode>
        <childnode refid="22807" relation="include">
        </childnode>
      </node>
      <node id="22825">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Python.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;user_log_reader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;user_segment_reader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mlutil.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_collector_u_s_f_visitor_1ae4b74c623274bc916142a79727eaf913" kindref="member">CollectorUSFVisitor::onSegmentFile</ref>(<sp/>BW::string<sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>suffix<sp/>)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>existingIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>userSegments_.size();<sp/>i++)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userSegments_[i]-&gt;getSuffix()<sp/>==<sp/>suffix)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existingIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(existingIndex<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userSegments_[<sp/>existingIndex<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSegment-&gt;<ref refid="class_user_segment_reader_1addfaf3c69e5c66205df7ddda50c29277" kindref="member">isDirty</ref>())</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSegment-&gt;updateEntryBounds();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref>(<sp/>path,<sp/>suffix<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSegment-&gt;init();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSegment-&gt;isGood())</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userSegments_.push_back(<sp/>pSegment<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CollectorUSFVisitor::onSegmentFile:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Dropping<sp/>segment<sp/>%s<sp/>due<sp/>to<sp/>load<sp/>error.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSegment-&gt;getSuffix().c_str()<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pSegment;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">UserLogReader::UserLogReader(<sp/>uint16<sp/>uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;username<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_log" kindref="compound">UserLog</ref>(<sp/>uid,<sp/>username<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader_1a7d65f767ec0502d909b61ed748bcdb88" kindref="member">UserLogReader::init</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>rootPath<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_user_log_1a4a72327001d0eac1d6268eb7e950e2de" kindref="member">UserLog::init</ref>(<sp/>rootPath<sp/>))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MLUtil::isPathAccessible(<sp/>path_.c_str()<sp/>))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::init:<sp/>User<sp/>log<sp/>directory<sp/>is<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;accessible<sp/>in<sp/>read<sp/>mode:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uidFilePath<sp/>=<sp/>uidFile_.<ref refid="class_file_handler_1aeca3703f7450120817ff241f9ab5cebc" kindref="member">join</ref>(<sp/>path_.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;uid&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!uidFile_.<ref refid="class_unary_integer_file_1a3bf37f6fe1dd3e20a52bc62b5d4a9c18" kindref="member">init</ref>(<sp/>uidFilePath,<sp/>mode,<sp/>uid_<sp/>))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialise<sp/>uid<sp/>file<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!userComponents_.init(<sp/>path_.c_str(),<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>components<sp/>mapping<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userComponents_.<ref refid="class_file_handler_1a21db311b76430aff514bf39a238b015d" kindref="member">filename</ref>()<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;loadSegments())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::init:<sp/>Failed<sp/>to<sp/>load<sp/>segments\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>isGood_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isGood_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UserLogReader::loadSegments()</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_collector_u_s_f_visitor" kindref="compound">CollectorUSFVisitor</ref><sp/>visitor(<sp/>userSegments_<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_user_log_1a18c00aade45b8f58d4bfd4a2162fa2c9" kindref="member">visitAllSegmentFiles</ref>(<sp/>visitor<sp/>))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::loadSegments:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>load<sp/>segment<sp/>files\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>order<sp/>the<sp/>segments<sp/>by<sp/>sorting<sp/>on<sp/>their<sp/>start<sp/>times<sp/>instead<sp/>of<sp/>doing<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alphasort<sp/>in<sp/>scandir()<sp/>above,<sp/>because<sp/>the<sp/>filenames<sp/>are<sp/>generated<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>localtime()<sp/>and<sp/>may<sp/>not<sp/>be<sp/>strictly<sp/>in<sp/>the<sp/>right<sp/>order<sp/>around<sp/>daylight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>savings<sp/>or<sp/>other<sp/>similar<sp/>time<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_segment_comparator" kindref="compound">UserSegmentComparator</ref><sp/>USCompare;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(<sp/>userSegments_.begin(),<sp/>userSegments_.end(),<sp/>USCompare<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader_1a843081f181ea37fd5628c26b21b3d93d" kindref="member">UserLogReader::getSegmentIndexFromSuffix</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*suffix<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>userSegments_.size();<sp/>i++)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userSegments_[i]-&gt;getSuffix()<sp/>==<sp/>suffix)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UserLogReader::getNumSegments()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userSegments_.size();</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref>*<sp/>UserLogReader::getUserSegment(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentIndex<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="155"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>userSegments_[<sp/>segmentIndex<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader_1a807d530da7f70022c6d33824a8ebf588" kindref="member">UserLogReader::getEntryAndQueryRange</ref>(</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref><sp/>&amp;<sp/>logEntryAddress,<sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;<sp/>result,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">QueryRangePtr</ref><sp/>pRange<sp/>)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*logEntrySuffix<sp/>=<sp/>logEntryAddress.getSuffix();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>segment<sp/>num</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum<sp/>=<sp/>this-&gt;getSegmentIndexFromSuffix(<sp/>logEntrySuffix<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segmentNum<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::getEntry:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>segment<sp/>with<sp/>suffix<sp/>&apos;%s&apos;<sp/>in<sp/>%s&apos;s<sp/>log\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logEntrySuffix,<sp/>username_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>segment<sp/>and<sp/>read<sp/>off<sp/>the<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>userSegments_[<sp/>segmentNum<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSegment-&gt;<ref refid="class_user_segment_1adfe95e3601bbc84b8d9123fe2cf67b7a" kindref="member">readEntry</ref>(<sp/>logEntryAddress.getIndex(),<sp/>result<sp/>))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::getEntry:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>read<sp/>entry<sp/>%d<sp/>from<sp/>log<sp/>segment<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logEntryAddress.getIndex(),<sp/>logEntrySuffix<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>range<sp/>was<sp/>provided,<sp/>set<sp/>its<sp/>args<sp/>iterator<sp/>to<sp/>the<sp/>right<sp/>place</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRange<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRange-&gt;updateArgs(<sp/>segmentNum,<sp/>result.argsOffset()<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader_1a5d9b9cfe16303568f8ac1e952b937647" kindref="member">UserLogReader::getEntry</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref><sp/>&amp;<sp/>logEntryAddress,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment;<sp/></highlight><highlight class="comment">//<sp/>used<sp/>as<sp/>a<sp/>throw<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;getEntryAndSegment(<sp/>logEntryAddress,<sp/>result,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSegment,<sp/></highlight><highlight class="comment">/*shouldEmitWarnings*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader_1acfdbad26a253bd6e9c8d4568ef929644" kindref="member">UserLogReader::getEntryAndSegment</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref><sp/>&amp;<sp/>logEntryAddress,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;<sp/>result,<sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/>&amp;<sp/>pSegmentResult,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldEmitWarnings<sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*logEntrySuffix<sp/>=<sp/>logEntryAddress.getSuffix();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>pSegmentResult<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum<sp/>=<sp/>this-&gt;getSegmentIndexFromSuffix(<sp/>logEntrySuffix<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segmentNum<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldEmitWarnings)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::getEntry:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>no<sp/>segment<sp/>with<sp/>suffix<sp/>&apos;%s&apos;<sp/>in<sp/>%s&apos;s<sp/>log\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logEntrySuffix,<sp/>username_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>off<sp/>the<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>userSegments_[<sp/>segmentNum<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSegment-&gt;<ref refid="class_user_segment_1adfe95e3601bbc84b8d9123fe2cf67b7a" kindref="member">readEntry</ref>(<sp/>logEntryAddress.getIndex(),<sp/>result<sp/>))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::getEntry:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>read<sp/>entry<sp/>%d<sp/>from<sp/>log<sp/>segment<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logEntryAddress.getIndex(),<sp/>logEntrySuffix<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>pSegmentResult<sp/>=<sp/>pSegment;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader_1a493c974066ff50a7e5def8a581339aa2" kindref="member">UserLogReader::getFirstLogEntryFromStartOfLogs</ref>(<sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>encounter<sp/>the<sp/>extremely<sp/>unlikely<sp/>case<sp/>where<sp/>a<sp/>user&apos;s<sp/>log<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>been<sp/>created<sp/>but<sp/>the<sp/>first<sp/>log<sp/>segment<sp/>hasn&apos;t<sp/>been<sp/>written<sp/>yet,<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_user_log_1a18ef9654a5284634113a9ecbb65b6af4" kindref="member">hasActiveSegments</ref>())</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLog::getFirstLogEntryFromStartOfLogs:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;User&apos;s<sp/>log<sp/>is<sp/>currently<sp/>empty,<sp/>unable<sp/>to<sp/>proceed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_segment" kindref="compound">UserSegment</ref><sp/>*pSegment<sp/>=<sp/>userSegments_.front();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSegment-&gt;<ref refid="class_user_segment_1adfe95e3601bbc84b8d9123fe2cf67b7a" kindref="member">readEntry</ref>(<sp/></highlight><highlight class="comment">/*entryNum*/</highlight><highlight class="normal"><sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader_1a7d549e8f119c73618aeda2d51095742f" kindref="member">UserLogReader::getLastLogEntryFromEndOfLogs</ref>(<sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>encounter<sp/>the<sp/>extremely<sp/>unlikely<sp/>case<sp/>where<sp/>a<sp/>user&apos;s<sp/>log<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>been<sp/>created<sp/>but<sp/>the<sp/>first<sp/>log<sp/>segment<sp/>hasn&apos;t<sp/>been<sp/>written<sp/>yet,<sp/>abort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_user_log_1a18ef9654a5284634113a9ecbb65b6af4" kindref="member">hasActiveSegments</ref>())</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLog::getLastLogEntryFromEndOfLogs:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;User&apos;s<sp/>log<sp/>is<sp/>currently<sp/>empty,<sp/>unable<sp/>to<sp/>proceed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_segment" kindref="compound">UserSegment</ref><sp/>*pSegment<sp/>=<sp/>userSegments_.back();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum<sp/>=<sp/>pSegment-&gt;getNumEntries()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSegment-&gt;<ref refid="class_user_segment_1adfe95e3601bbc84b8d9123fe2cf67b7a" kindref="member">readEntry</ref>(<sp/>entryNum,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_logging_component" kindref="compound">LoggingComponent</ref><sp/>*UserLogReader::getComponentByID(</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageLogger::UserComponentID<sp/>componentID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userComponents_.getComponentByID(<sp/>componentID<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UserLogReader::reloadFiles()</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;loadSegments())</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::reloadFiles:<sp/>Failed<sp/>to<sp/>reload<sp/>segments\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!userComponents_.reloadFileAndRefresh())</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserLogReader::reloadFiles:<sp/>Error<sp/>reloading<sp/>components\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UserLogReader::getUserComponents(<sp/><ref refid="class_user_component_visitor" kindref="compound">UserComponentVisitor</ref><sp/>&amp;visitor<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="344"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>userComponents_.visitAllWith(<sp/>visitor<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UserLogReader::visitAllSegmentsWith(<sp/><ref refid="class_user_segment_visitor" kindref="compound">UserSegmentVisitor</ref><sp/>&amp;visitor<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="350"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>&lt;<sp/>userSegments_.size())<sp/>&amp;&amp;<sp/>(status<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>userSegments_[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>visitor.onSegment(<sp/>pSegment<sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>user_log_reader.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/user_log_reader.cpp"/>
  </compounddef>
</doxygen>
