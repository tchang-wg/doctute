<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="log__common_8cpp" kind="file" language="C++">
    <compoundname>log_common.cpp</compoundname>
    <includes refid="log__common_8hpp" local="yes">log_common.hpp</includes>
    <includes refid="constants_8hpp" local="yes">../constants.hpp</includes>
    <includes local="no">dirent.h</includes>
    <incdepgraph>
      <node id="20707">
        <label>../unary_integer_file.hpp</label>
        <link refid="unary__integer__file_8hpp_source"/>
        <childnode refid="20703" relation="include">
        </childnode>
        <childnode refid="20704" relation="include">
        </childnode>
      </node>
      <node id="20693">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="20673">
        <label>tools/message_logger/mldb/log_common.cpp</label>
        <link refid="log_common.cpp"/>
        <childnode refid="20674" relation="include">
        </childnode>
        <childnode refid="20698" relation="include">
        </childnode>
        <childnode refid="20708" relation="include">
        </childnode>
      </node>
      <node id="20686">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="20704">
        <label>stdlib.h</label>
      </node>
      <node id="20697">
        <label>log_time.hpp</label>
        <link refid="log__time_8hpp_source"/>
        <childnode refid="20698" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20691" relation="include">
        </childnode>
        <childnode refid="20699" relation="include">
        </childnode>
      </node>
      <node id="20692">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20691" relation="include">
        </childnode>
      </node>
      <node id="20691">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="20705">
        <label>log_component_names.hpp</label>
        <link refid="mldb_2log__component__names_8hpp_source"/>
        <childnode refid="20706" relation="include">
        </childnode>
        <childnode refid="20703" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
      </node>
      <node id="20679">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="20702">
        <label>../hostnames.hpp</label>
        <link refid="hostnames_8hpp_source"/>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
      </node>
      <node id="20694">
        <label>network/format_string_handler.hpp</label>
      </node>
      <node id="20682">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="20700">
        <label>cstdmf/debug_message_source.hpp</label>
      </node>
      <node id="20687">
        <label>format_strings.hpp</label>
        <link refid="mldb_2format__strings_8hpp_source"/>
        <childnode refid="20676" relation="include">
        </childnode>
        <childnode refid="20688" relation="include">
        </childnode>
        <childnode refid="20689" relation="include">
        </childnode>
        <childnode refid="20696" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
      </node>
      <node id="20675">
        <label>categories.hpp</label>
        <link refid="mldb_2categories_8hpp_source"/>
        <childnode refid="20676" relation="include">
        </childnode>
        <childnode refid="20681" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
      </node>
      <node id="20696">
        <label>log_entry.hpp</label>
        <link refid="log__entry_8hpp_source"/>
        <childnode refid="20697" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20700" relation="include">
        </childnode>
        <childnode refid="20691" relation="include">
        </childnode>
      </node>
      <node id="20689">
        <label>log_string_interpolator.hpp</label>
        <link refid="log__string__interpolator_8hpp_source"/>
        <childnode refid="20690" relation="include">
        </childnode>
        <childnode refid="20692" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20693" relation="include">
        </childnode>
        <childnode refid="20680" relation="include">
        </childnode>
        <childnode refid="20694" relation="include">
        </childnode>
        <childnode refid="20695" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20685" relation="include">
        </childnode>
      </node>
      <node id="20703">
        <label>../text_file_handler.hpp</label>
        <link refid="text__file__handler_8hpp_source"/>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20704" relation="include">
        </childnode>
      </node>
      <node id="20676">
        <label>../binary_file_handler.hpp</label>
        <link refid="binary__file__handler_8hpp_source"/>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20680" relation="include">
        </childnode>
      </node>
      <node id="20698">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="20695" relation="include">
        </childnode>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
      </node>
      <node id="20699">
        <label>time.h</label>
      </node>
      <node id="20684">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="20706">
        <label>../log_component_names.hpp</label>
        <link refid="log__component__names_8hpp_source"/>
        <childnode refid="20683" relation="include">
        </childnode>
      </node>
      <node id="20681">
        <label>../categories.hpp</label>
        <link refid="categories_8hpp_source"/>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
      </node>
      <node id="20683">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="20684" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
        <childnode refid="20685" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
      </node>
      <node id="20701">
        <label>hostnames.hpp</label>
        <link refid="mldb_2hostnames_8hpp_source"/>
        <childnode refid="20702" relation="include">
        </childnode>
        <childnode refid="20703" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
      </node>
      <node id="20695">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="20678">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="20688">
        <label>../format_strings.hpp</label>
        <link refid="format__strings_8hpp_source"/>
        <childnode refid="20682" relation="include">
        </childnode>
        <childnode refid="20689" relation="include">
        </childnode>
        <childnode refid="20696" relation="include">
        </childnode>
      </node>
      <node id="20690">
        <label>string_offset.hpp</label>
        <link refid="string__offset_8hpp_source"/>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20686" relation="include">
        </childnode>
        <childnode refid="20685" relation="include">
        </childnode>
        <childnode refid="20691" relation="include">
        </childnode>
      </node>
      <node id="20677">
        <label>file_handler.hpp</label>
        <link refid="file__handler_8hpp_source"/>
        <childnode refid="20678" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
      </node>
      <node id="20674">
        <label>log_common.hpp</label>
        <link refid="log__common_8hpp_source"/>
        <childnode refid="20675" relation="include">
        </childnode>
        <childnode refid="20687" relation="include">
        </childnode>
        <childnode refid="20701" relation="include">
        </childnode>
        <childnode refid="20705" relation="include">
        </childnode>
        <childnode refid="20707" relation="include">
        </childnode>
        <childnode refid="20683" relation="include">
        </childnode>
        <childnode refid="20679" relation="include">
        </childnode>
      </node>
      <node id="20685">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="20680">
        <label>network/file_stream.hpp</label>
      </node>
      <node id="20708">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;log_common.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dirent.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_common_m_l_d_b_1a4eac8e2af77ce51e732b424df5b825aa" kindref="member">LogCommonMLDB::initRootLogPath</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rootPath<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rootPath[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<sp/>512<sp/>];</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getcwd(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>buf<sp/>))<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::init:<sp/>Failed<sp/>to<sp/>getcwd().<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strerror(<sp/>errno<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootLogPath_<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootLogPath_<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootLogPath_<sp/>+=<sp/>rootPath;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootLogPath_<sp/>=<sp/>rootPath;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_common_m_l_d_b_1a3d36734cc0960dcf92a86225e3e398f6" kindref="member">LogCommonMLDB::initCommonFiles</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>mode<sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>rootLogPath<sp/>=<sp/>rootLogPath_.c_str();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*versionFile<sp/>=<sp/>version_.<ref refid="class_file_handler_1aeca3703f7450120817ff241f9ab5cebc" kindref="member">join</ref>(<sp/>rootLogPath,<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!version_.<ref refid="class_unary_integer_file_1a3bf37f6fe1dd3e20a52bc62b5d4a9c18" kindref="member">init</ref>(<sp/>versionFile,<sp/>mode,<sp/>LOG_FORMAT_VERSION<sp/>))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::init:<sp/>Couldn&apos;t<sp/>init<sp/>version<sp/>file\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!componentNames_.init(<sp/>rootLogPath,<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::init:<sp/>Couldn&apos;t<sp/>init<sp/>component<sp/>names<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mapping\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hostnames_.init(<sp/>rootLogPath,<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::init:<sp/>Couldn&apos;t<sp/>init<sp/>hostnames<sp/>mapping\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!formatStrings_.init(<sp/>rootLogPath,<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::init:<sp/>Couldn&apos;t<sp/>init<sp/>strings<sp/>mapping\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!categories_.init(<sp/>rootLogPath,<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::init:<sp/>Couldn&apos;t<sp/>init<sp/>categories<sp/>mapping\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_common_m_l_d_b_1a6f27811a0eec932201f4ecf330ed9690" kindref="member">LogCommonMLDB::initUserLogs</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*rootdir<sp/>=<sp/>opendir(<sp/>rootLogPath_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*dirent;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((dirent<sp/>=<sp/>readdir(<sp/>rootdir<sp/>))<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fname[<sp/>1024<sp/>];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>statinfo;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_snprintf(<sp/>fname,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>fname<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;%s/%s/uid&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rootLogPath_.c_str()<sp/>,<sp/>dirent-&gt;d_name<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(<sp/>fname,<sp/>&amp;statinfo<sp/>))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_unary_integer_file" kindref="compound">UnaryIntegerFile</ref><sp/>uidfile;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!uidfile.<ref refid="class_unary_integer_file_1a3bf37f6fe1dd3e20a52bc62b5d4a9c18" kindref="member">init</ref>(<sp/>fname,<sp/>mode<sp/>)<sp/>||<sp/>uidfile.getValue()<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::initUserLogs:<sp/>Skipping<sp/>user<sp/>directory<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;with<sp/>invalid<sp/>uid<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fname<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>uid<sp/>=<sp/>uidfile.getValue();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>username<sp/>=<sp/>dirent-&gt;d_name;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>into<sp/>the<sp/>implementing<sp/>sub-class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;onUserLogInit(<sp/>uid,<sp/>username<sp/>))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogCommonMLDB::initUserLogs:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialise<sp/>log<sp/>for<sp/>user<sp/>&apos;%s&apos;.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>username.c_str()<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closedir(<sp/>rootdir<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(<sp/>rootdir<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">BW::string<sp/><ref refid="class_log_common_m_l_d_b_1a11206fae2bcf2ceba6c4732fa1c15b9c" kindref="member">LogCommonMLDB::getHostByAddr</ref>(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageLogger::IPAddress<sp/>ipAddress<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>hostname;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>hostnames_.<ref refid="class_hostnames_1a11fb2267e0893c3e9329d6f6fe4c0334" kindref="member">getHostByAddr</ref>(<sp/>ipAddress,<sp/>hostname<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hostname;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_log_common_m_l_d_b_1a8702d9d9cd80a17610d824d67cb476ca" kindref="member">LogCommonMLDB::getComponentNameByAppTypeID</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageLogger::AppTypeID<sp/>appTypeID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="165"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>componentNames_.<ref refid="class_log_component_names_1a417d6362f12d675f400bd7acd86e1a04" kindref="member">getNameFromID</ref>(<sp/>appTypeID<sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_log_common_m_l_d_b_1a6d1995294bcc7a2f3608e50662df8cc8" kindref="member">LogCommonMLDB::getCategoryNameByID</ref>(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>MessageLogger::CategoryID<sp/>categoryID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>categories_.<ref refid="class_categories_1ac75347bddd1f2f312f68ffbf17915d76" kindref="member">resolveIDToName</ref>(<sp/>categoryID<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>log_common.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/mldb/log_common.cpp"/>
  </compounddef>
</doxygen>
