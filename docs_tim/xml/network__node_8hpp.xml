<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="network__node_8hpp" kind="file" language="C++">
    <compoundname>network_node.hpp</compoundname>
    <includes refid="broadcast__manager_8hpp" local="yes">broadcast_manager.hpp</includes>
    <includes refid="connection__wrapper_8hpp" local="yes">connection_wrapper.hpp</includes>
    <includes refid="connection__wrapper__mgr_8hpp" local="yes">connection_wrapper_mgr.hpp</includes>
    <includes local="yes">network/endpoint.hpp</includes>
    <includes local="yes">network/machine_guard.hpp</includes>
    <includes local="yes">network/portmap.hpp</includes>
    <includes local="yes">cstdmf/memory_stream.hpp</includes>
    <includedby refid="broadcast__manager_8cpp" local="yes">tools/bwmachined/broadcast_manager.cpp</includedby>
    <includedby refid="mock__handler_8hpp" local="yes">tools/bwmachined/mock_handler.hpp</includedby>
    <includedby refid="bwmachined_8hpp" local="yes">tools/bwmachined/bwmachined.hpp</includedby>
    <includedby refid="ring__network__node_8hpp" local="yes">tools/bwmachined/ring_network_node.hpp</includedby>
    <includedby refid="top__level__network__node_8hpp" local="yes">tools/bwmachined/top_level_network_node.hpp</includedby>
    <includedby refid="leaf__network__node_8hpp" local="yes">tools/bwmachined/leaf_network_node.hpp</includedby>
    <includedby refid="tools_2bwmachined_2main_8cpp" local="yes">tools/bwmachined/main.cpp</includedby>
    <includedby refid="mock__handler_8cpp" local="yes">tools/bwmachined/mock_handler.cpp</includedby>
    <includedby refid="network__node_8cpp" local="yes">tools/bwmachined/network_node.cpp</includedby>
    <incdepgraph>
      <node id="17810">
        <label>tools/bwmachined/network_node.hpp</label>
        <link refid="network_node.hpp"/>
        <childnode refid="17811" relation="include">
        </childnode>
        <childnode refid="17812" relation="include">
        </childnode>
        <childnode refid="17820" relation="include">
        </childnode>
        <childnode refid="17813" relation="include">
        </childnode>
        <childnode refid="17817" relation="include">
        </childnode>
        <childnode refid="17825" relation="include">
        </childnode>
        <childnode refid="17815" relation="include">
        </childnode>
      </node>
      <node id="17815">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="17822">
        <label>tcp_connection_wrapper.hpp</label>
        <link refid="tcp__connection__wrapper_8hpp_source"/>
        <childnode refid="17812" relation="include">
        </childnode>
        <childnode refid="17813" relation="include">
        </childnode>
        <childnode refid="17823" relation="include">
        </childnode>
        <childnode refid="17824" relation="include">
        </childnode>
        <childnode refid="17814" relation="include">
        </childnode>
        <childnode refid="17815" relation="include">
        </childnode>
      </node>
      <node id="17813">
        <label>network/endpoint.hpp</label>
      </node>
      <node id="17817">
        <label>network/machine_guard.hpp</label>
      </node>
      <node id="17814">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="17821">
        <label>udp_connection_wrapper.hpp</label>
        <link refid="udp__connection__wrapper_8hpp_source"/>
        <childnode refid="17812" relation="include">
        </childnode>
        <childnode refid="17813" relation="include">
        </childnode>
        <childnode refid="17814" relation="include">
        </childnode>
        <childnode refid="17815" relation="include">
        </childnode>
      </node>
      <node id="17816">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="17820">
        <label>connection_wrapper_mgr.hpp</label>
        <link refid="connection__wrapper__mgr_8hpp_source"/>
        <childnode refid="17812" relation="include">
        </childnode>
        <childnode refid="17821" relation="include">
        </childnode>
        <childnode refid="17822" relation="include">
        </childnode>
        <childnode refid="17813" relation="include">
        </childnode>
        <childnode refid="17823" relation="include">
        </childnode>
        <childnode refid="17824" relation="include">
        </childnode>
      </node>
      <node id="17819">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="17812">
        <label>connection_wrapper.hpp</label>
        <link refid="connection__wrapper_8hpp_source"/>
        <childnode refid="17813" relation="include">
        </childnode>
        <childnode refid="17814" relation="include">
        </childnode>
        <childnode refid="17815" relation="include">
        </childnode>
        <childnode refid="17816" relation="include">
        </childnode>
      </node>
      <node id="17818">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="17825">
        <label>network/portmap.hpp</label>
      </node>
      <node id="17824">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="17823">
        <label>network/event_dispatcher.hpp</label>
      </node>
      <node id="17811">
        <label>broadcast_manager.hpp</label>
        <link refid="broadcast__manager_8hpp_source"/>
        <childnode refid="17812" relation="include">
        </childnode>
        <childnode refid="17813" relation="include">
        </childnode>
        <childnode refid="17817" relation="include">
        </childnode>
        <childnode refid="17818" relation="include">
        </childnode>
        <childnode refid="17819" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17833">
        <label>tools/bwmachined/top_level_node_broadcast_manager.hpp</label>
        <link refid="top__level__node__broadcast__manager_8hpp_source"/>
      </node>
      <node id="17826">
        <label>tools/bwmachined/network_node.hpp</label>
        <link refid="network_node.hpp"/>
        <childnode refid="17827" relation="include">
        </childnode>
        <childnode refid="17828" relation="include">
        </childnode>
        <childnode refid="17830" relation="include">
        </childnode>
        <childnode refid="17832" relation="include">
        </childnode>
        <childnode refid="17834" relation="include">
        </childnode>
      </node>
      <node id="17831">
        <label>tools/bwmachined/ring_broadcast_manager.hpp</label>
        <link refid="ring__broadcast__manager_8hpp_source"/>
      </node>
      <node id="17834">
        <label>tools/bwmachined/leaf_network_node.hpp</label>
        <link refid="leaf__network__node_8hpp_source"/>
        <childnode refid="17835" relation="include">
        </childnode>
      </node>
      <node id="17830">
        <label>tools/bwmachined/ring_network_node.hpp</label>
        <link refid="ring__network__node_8hpp_source"/>
        <childnode refid="17831" relation="include">
        </childnode>
      </node>
      <node id="17835">
        <label>tools/bwmachined/leaf_node_broadcast_manager.hpp</label>
        <link refid="leaf__node__broadcast__manager_8hpp_source"/>
      </node>
      <node id="17832">
        <label>tools/bwmachined/top_level_network_node.hpp</label>
        <link refid="top__level__network__node_8hpp_source"/>
        <childnode refid="17833" relation="include">
        </childnode>
      </node>
      <node id="17829">
        <label>tools/bwmachined/incoming_packet.hpp</label>
        <link refid="incoming__packet_8hpp_source"/>
      </node>
      <node id="17828">
        <label>tools/bwmachined/bwmachined.hpp</label>
        <link refid="bwmachined_8hpp_source"/>
        <childnode refid="17829" relation="include">
        </childnode>
      </node>
      <node id="17827">
        <label>tools/bwmachined/mock_handler.hpp</label>
        <link refid="mock__handler_8hpp_source"/>
        <childnode refid="17828" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_network_node" prot="public">NetworkNode</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="network__node_8hpp_1a07bb518d5610bfa50443d7bf9844399b" prot="public" static="no" mutable="no">
        <type>BW_BEGIN_NAMESPACE const BW::string</type>
        <definition>BW_BEGIN_NAMESPACE const BW::string CLUSTER_MODE_OPTION_RING</definition>
        <argsstring></argsstring>
        <name>CLUSTER_MODE_OPTION_RING</name>
        <initializer>= &quot;ring&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/network_node.hpp" line="16" column="1" bodyfile="tools/bwmachined/network_node.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network__node_8hpp_1a38b7ed4dc747fc3fc612469a3093c008" prot="public" static="no" mutable="no">
        <type>const BW::string</type>
        <definition>const BW::string CLUSTER_MODE_OPTION_TOP_LEVEL</definition>
        <argsstring></argsstring>
        <name>CLUSTER_MODE_OPTION_TOP_LEVEL</name>
        <initializer>= &quot;toplevel&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/network_node.hpp" line="17" column="1" bodyfile="tools/bwmachined/network_node.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="network__node_8hpp_1a61846c322134c91079fcd075fb7ec85f" prot="public" static="no" mutable="no">
        <type>const BW::string</type>
        <definition>const BW::string CLUSTER_MODE_OPTION_LEAF</definition>
        <argsstring></argsstring>
        <name>CLUSTER_MODE_OPTION_LEAF</name>
        <initializer>= &quot;leaf&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/network_node.hpp" line="18" column="1" bodyfile="tools/bwmachined/network_node.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>NETWORK_NODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NETWORK_NODE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;broadcast_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection_wrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection_wrapper_mgr.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/endpoint.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/machine_guard.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/portmap.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/memory_stream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>CLUSTER_MODE_OPTION_RING<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ring&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>CLUSTER_MODE_OPTION_TOP_LEVEL<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;toplevel&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>CLUSTER_MODE_OPTION_LEAF<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;leaf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_w_machined" kindref="compound">BWMachined</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_network_node" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_network_node" kindref="compound">NetworkNode</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>NodeType</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NODE_UNKNOWN_NETWORK<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NODE_RING_NETWORK<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NODE_TOP_LEVEL<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NODE_LEAF<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_network_node_1a8ea43d56e13f46b2a1819e5b96ad3478" kindref="member">NetworkNode</ref>(<sp/>Mercury::EventDispatcher<sp/>&amp;<sp/>dispatcher,<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ConnectionWrapper::ReadHandler</ref><sp/>*<sp/>pConnectionReadHandler,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16<sp/>port<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1ad8c42da72e920b4b2470d24c588019b3" kindref="member">setInternalInterface</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>internalInterface<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a2b0a5947366d4e22c7a6c7396556a761" kindref="member">initNetworkInterfaces</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a0162469d287b9bde677fd2d8fda5bf9e" kindref="member">listenOnEndpoints</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a5d7ead3a7f13ef8209e654c3122f970e" kindref="member">closeEndpoints</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cleanupConnectionHandlers(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>freeAll<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NetworkNode::NodeType<sp/><ref refid="class_network_node_1ac17508bae117c8a432a361c02c224e13" kindref="member">strToNodeType</ref>(<sp/>BW::string<sp/>&amp;<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>NetworkNode::NodeType<sp/><ref refid="class_network_node_1ac17508bae117c8a432a361c02c224e13" kindref="member">strToNodeType</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>type<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int32_t<sp/>networkAddr()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="55"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>networkAddr_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isDefaultPort()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="61"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(port_<sp/>==<sp/>PORT_MACHINED);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>port()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port_;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a69e0f788ad274f7268455975c428466f" kindref="member">startHeartbeat</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a86cc9b4937b3eaafd2bc9bf25f734277" kindref="member">sendBroadcast</ref>(<sp/>MachineGuardMessage<sp/>*<sp/>pMGM<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a86cc9b4937b3eaafd2bc9bf25f734277" kindref="member">sendBroadcast</ref>(<sp/>MGMPacket<sp/>*<sp/>pPacket<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a36002a456a2583950e986e6a6f02b180" kindref="member">sendWrappedBroadcastPacket</ref>(<sp/>MGMPacket<sp/>*<sp/>pPacket<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1aa1319f908f02d0ec2d978671d4ae290d" kindref="member">isBroadcastResponse</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_smart_pointer" kindref="compound">ConnectionWrapperPtr</ref><sp/>pConnection,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MGMPacket<sp/>&amp;<sp/>packet<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>Endpoint<sp/>&amp;<sp/><ref refid="class_network_node_1acba74dd33fa9e64e0096c521f132a982" kindref="member">outgoingUDPEndpoint</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_broadcast_manager" kindref="compound">BroadcastManager</ref><sp/>*<sp/><ref refid="class_network_node_1a5d49ce01329d82f326d534e378ec16a5" kindref="member">createBroadcastManager</ref>(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BroadcastWrapperMessage<sp/>&amp;<sp/>bwm,<sp/><ref refid="class_smart_pointer" kindref="compound">ConnectionWrapperPtr</ref><sp/>pReplyConnection,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ManagerLookup<sp/>&amp;<sp/>lookup<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a2f6da3a9dc5d366ab8a5d155f5e64e3f" kindref="member">handleWholeMachineMessageReply</ref>(<sp/>WholeMachineMessage<sp/>&amp;<sp/>wmm,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a2e52e8a4ae330c682b4b1f6c0bce10f3" kindref="member">handleHighPrecisionMachineMessageReply</ref>(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HighPrecisionMachineMessage<sp/>&amp;<sp/>hpmm,<sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a8a6e43d2bd94491fac81db96160874a9" kindref="member">handleMachinedAnnounceBirth</ref>(<sp/>MachinedAnnounceMessage<sp/>&amp;<sp/>mam,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sockaddr_in<sp/>&amp;<sp/>sin,<sp/>MGMPacket<sp/>&amp;<sp/>replies<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a1776c9aab09009a1d6f5c07102adface" kindref="member">handleMachinedAnnounceDeath</ref>(<sp/>MachinedAnnounceMessage<sp/>&amp;<sp/>mam,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_network_node_1a49e8e8ef3d832d28ffaba2371a5e74a1" kindref="member">handleMachinedAnnounceExists</ref>(<sp/>MachinedAnnounceMessage<sp/>&amp;<sp/>mam,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sockaddr_in<sp/>&amp;<sp/>sin<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_connection_wrapper_mgr" kindref="compound">ConnectionWrapperMgr</ref><sp/>connectionWrapperMgr_;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>discoveryPort()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>discoveryPort_;<sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>port_;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>discoveryPort_;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>IP<sp/>of<sp/>the<sp/>interface<sp/>through<sp/>which<sp/>bwmachined<sp/>connects<sp/>to<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>machines<sp/>within<sp/>the<sp/>network.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>u_int32_t<sp/>networkAddr_;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>epLocal_<sp/>is<sp/>used<sp/>to<sp/>send<sp/>and<sp/>receive<sp/>loopback<sp/>packets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>Endpoint<sp/>epLocal_;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>epLocalTCP_<sp/>is<sp/>used<sp/>to<sp/>accept<sp/>and<sp/>respond<sp/>to<sp/>tools<sp/>broadcast<sp/>requests</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>LOCALHOST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>Endpoint<sp/>epLocalTCP_;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>findNetworkAddr();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initLocalNetworkInterfaces();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>listenOnLocalEndpoints();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>closeLocalEndpoints();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initExternalNetworkInterfaces()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>listenOnExternalEndpoints()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>closeExternalEndpoints()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>NETWORK_NODE_HPP</highlight></codeline>
    </programlisting>
    <location file="tools/bwmachined/network_node.hpp"/>
  </compounddef>
</doxygen>
