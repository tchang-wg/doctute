<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="py__bases_8cpp" kind="file" language="C++">
    <compoundname>py_bases.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="py__bases_8hpp" local="yes">py_bases.hpp</includes>
    <includes refid="base_8hpp" local="yes">base.hpp</includes>
    <includes refid="bases_8hpp" local="yes">bases.hpp</includes>
    <incdepgraph>
      <node id="4643">
        <label>connection/common_baseapp_interface.hpp</label>
      </node>
      <node id="4633">
        <label>base.hpp</label>
        <link refid="base_8hpp_source"/>
        <childnode refid="4634" relation="include">
        </childnode>
        <childnode refid="4635" relation="include">
        </childnode>
        <childnode refid="4636" relation="include">
        </childnode>
        <childnode refid="4639" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
        <childnode refid="4662" relation="include">
        </childnode>
        <childnode refid="4666" relation="include">
        </childnode>
        <childnode refid="4667" relation="include">
        </childnode>
        <childnode refid="4651" relation="include">
        </childnode>
        <childnode refid="4668" relation="include">
        </childnode>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4653" relation="include">
        </childnode>
        <childnode refid="4632" relation="include">
        </childnode>
        <childnode refid="4654" relation="include">
        </childnode>
        <childnode refid="4669" relation="include">
        </childnode>
        <childnode refid="4670" relation="include">
        </childnode>
        <childnode refid="4671" relation="include">
        </childnode>
        <childnode refid="4672" relation="include">
        </childnode>
      </node>
      <node id="4668">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="4635">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="4645">
        <label>baseapp_int_interface_stream_helpers.hpp</label>
        <link refid="baseapp__int__interface__stream__helpers_8hpp_source"/>
        <childnode refid="4640" relation="include">
        </childnode>
        <childnode refid="4646" relation="include">
        </childnode>
      </node>
      <node id="4630">
        <label>script/first_include.hpp</label>
      </node>
      <node id="4644">
        <label>buffered_input_message_handler.hpp</label>
        <link refid="baseapp_2buffered__input__message__handler_8hpp_source"/>
      </node>
      <node id="4641">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="4665">
        <label>pyscript/pyobject_pointer.hpp</label>
      </node>
      <node id="4658">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="4637">
        <label>server/entity_app_config.hpp</label>
      </node>
      <node id="4660">
        <label>math/stat_watcher_creator.hpp</label>
      </node>
      <node id="4647">
        <label>server/common.hpp</label>
      </node>
      <node id="4657">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="4669">
        <label>server/auto_backup_and_archive.hpp</label>
      </node>
      <node id="4663">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="4654">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="4662">
        <label>write_to_db_request.hpp</label>
        <link refid="write__to__db__request_8hpp_source"/>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4664" relation="include">
        </childnode>
        <childnode refid="4665" relation="include">
        </childnode>
        <childnode refid="4654" relation="include">
        </childnode>
      </node>
      <node id="4646">
        <label>network/stream_helpers.hpp</label>
      </node>
      <node id="4653">
        <label>network/udp_channel.hpp</label>
      </node>
      <node id="4667">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="4671">
        <label>server/writedb.hpp</label>
      </node>
      <node id="4674">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="4632">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="4639">
        <label>baseapp_int_interface.hpp</label>
        <link refid="baseapp__int__interface_8hpp_source"/>
        <childnode refid="4640" relation="include">
        </childnode>
        <childnode refid="4641" relation="include">
        </childnode>
        <childnode refid="4642" relation="include">
        </childnode>
        <childnode refid="4643" relation="include">
        </childnode>
        <childnode refid="4644" relation="include">
        </childnode>
        <childnode refid="4645" relation="include">
        </childnode>
        <childnode refid="4647" relation="include">
        </childnode>
        <childnode refid="4648" relation="include">
        </childnode>
        <childnode refid="4649" relation="include">
        </childnode>
      </node>
      <node id="4631">
        <label>py_bases.hpp</label>
        <link refid="py__bases_8hpp_source"/>
        <childnode refid="4632" relation="include">
        </childnode>
      </node>
      <node id="4670">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="4634">
        <label>Python.h</label>
      </node>
      <node id="4661">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="4656">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="4659">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="4640">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="4642">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="4629">
        <label>baseapp/py_bases.cpp</label>
        <link refid="py_bases.cpp"/>
        <childnode refid="4630" relation="include">
        </childnode>
        <childnode refid="4631" relation="include">
        </childnode>
        <childnode refid="4633" relation="include">
        </childnode>
        <childnode refid="4673" relation="include">
        </childnode>
      </node>
      <node id="4655">
        <label>entity_type.hpp</label>
        <link refid="baseapp_2entity__type_8hpp_source"/>
        <childnode refid="4634" relation="include">
        </childnode>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4651" relation="include">
        </childnode>
        <childnode refid="4659" relation="include">
        </childnode>
        <childnode refid="4660" relation="include">
        </childnode>
        <childnode refid="4640" relation="include">
        </childnode>
        <childnode refid="4661" relation="include">
        </childnode>
        <childnode refid="4635" relation="include">
        </childnode>
      </node>
      <node id="4651">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="4648">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="4664">
        <label>db/database_gateway.hpp</label>
      </node>
      <node id="4636">
        <label>baseapp_config.hpp</label>
        <link refid="baseapp__config_8hpp_source"/>
        <childnode refid="4637" relation="include">
        </childnode>
        <childnode refid="4638" relation="include">
        </childnode>
      </node>
      <node id="4649">
        <label>connection/common_client_interface.hpp</label>
      </node>
      <node id="4650">
        <label>mailbox.hpp</label>
        <link refid="baseapp_2mailbox_8hpp_source"/>
        <childnode refid="4651" relation="include">
        </childnode>
        <childnode refid="4652" relation="include">
        </childnode>
        <childnode refid="4653" relation="include">
        </childnode>
        <childnode refid="4632" relation="include">
        </childnode>
        <childnode refid="4654" relation="include">
        </childnode>
        <childnode refid="4635" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
      </node>
      <node id="4638">
        <label>server/external_app_config.hpp</label>
      </node>
      <node id="4673">
        <label>bases.hpp</label>
        <link refid="bases_8hpp_source"/>
        <childnode refid="4640" relation="include">
        </childnode>
        <childnode refid="4674" relation="include">
        </childnode>
        <childnode refid="4635" relation="include">
        </childnode>
      </node>
      <node id="4672">
        <label>memory</label>
      </node>
      <node id="4666">
        <label>common/py_timer.hpp</label>
      </node>
      <node id="4652">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="py__bases_8cpp_1a838f071edca00d9a0ba19496a95b8897" prot="public" static="yes" mutable="no">
        <type>PyMappingMethods</type>
        <definition>PyMappingMethods g_basesMapping</definition>
        <argsstring></argsstring>
        <name>g_basesMapping</name>
        <initializer>=
{
	PyBases::s_length,		
	PyBases::s_subscript,	
	NULL						
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This structure contains the function pointers necessary to provide a Python Mapping interface. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/py_bases.cpp" line="35" column="1" bodyfile="baseapp/py_bases.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_bases.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;base.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;bases.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">DECLARE_DEBUG_COMPONENT(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">PyObject<sp/>*<sp/><ref refid="class_py_bases" kindref="compound">PyBases</ref>::s_subscript(<sp/>PyObject<sp/>*<sp/>self,<sp/>PyObject<sp/>*<sp/>index<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_py_bases" kindref="compound">PyBases</ref><sp/>*)<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;subscript(<sp/>index<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">Py_ssize_t<sp/>PyBases::s_length(<sp/>PyObject<sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_py_bases" kindref="compound">PyBases</ref><sp/>*)<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;length();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMappingMethods<sp/>g_basesMapping<sp/>=</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>PyBases::s_length,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mp_length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>PyBases::s_subscript,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mp_subscript</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mp_ass_subscript</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>class<sp/>NoModule.PyBases</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>An<sp/>instance<sp/>of<sp/>PyBases<sp/>emulates<sp/>a<sp/>dictionary<sp/>of<sp/>Base<sp/>Entity<sp/>objects,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>indexed<sp/>by<sp/>their<sp/>id<sp/>attribute.<sp/><sp/>It<sp/>does<sp/>not<sp/>support<sp/>item<sp/>assignment,<sp/>but<sp/>can</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>used<sp/>with<sp/>the<sp/>subscript<sp/>operator.<sp/><sp/>Note<sp/>that<sp/>the<sp/>key<sp/>must<sp/>be<sp/>an<sp/>integer,</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>that<sp/>a<sp/>key<sp/>error<sp/>will<sp/>be<sp/>thrown<sp/>if<sp/>the<sp/>key<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>dictionary.<sp/><sp/>Instances<sp/>of<sp/>this<sp/>class<sp/>are<sp/>used<sp/>by<sp/>the<sp/>engine<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>lists<sp/>of<sp/>Base<sp/>Entities<sp/>available<sp/>to<sp/>Python.<sp/><sp/>They<sp/>cannot<sp/>be<sp/>created<sp/>via<sp/>script,</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>nor<sp/>can<sp/>they<sp/>be<sp/>modified.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>Code<sp/>Example<sp/>(on<sp/>baseapp<sp/>machine,<sp/>eg,<sp/>telnet<sp/>192.168.0.3:40001):</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>BigWorld.entities<sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>this<sp/>is<sp/>a<sp/>PyBases<sp/>object</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;The<sp/>entity<sp/>with<sp/>ID<sp/>100<sp/>is&quot;,<sp/>e[<sp/>100<sp/>]</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;There<sp/>are&quot;,<sp/>len(<sp/>e<sp/>),<sp/>&quot;entities&quot;</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">PY_TYPEOBJECT_WITH_MAPPING(<sp/><ref refid="class_py_bases" kindref="compound">PyBases</ref>,<sp/>&amp;g_basesMapping<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">PY_BEGIN_METHODS(<sp/><ref refid="class_py_bases" kindref="compound">PyBases</ref><sp/>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>PyBases<sp/>has_key</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>has_key<sp/>reports<sp/>whether<sp/>a<sp/>Base<sp/>Entity<sp/>with<sp/>a<sp/>specific<sp/>ID</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>is<sp/>listed<sp/>in<sp/>this<sp/>PyBases<sp/>object.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>key<sp/>key<sp/>is<sp/>the<sp/>integer<sp/>key<sp/>to<sp/>be<sp/>searched<sp/>for.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>A<sp/>boolean.<sp/>True<sp/>if<sp/>the<sp/>key<sp/>was<sp/>found,<sp/>false<sp/>if<sp/>it<sp/>was<sp/>not.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>has_key<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>PyBases<sp/>keys</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>keys<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>IDs<sp/>of<sp/>all<sp/>of<sp/>the<sp/>Base<sp/>Entities<sp/>listed<sp/>in</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>this<sp/>object.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>A<sp/>list<sp/>containing<sp/>all<sp/>of<sp/>the<sp/>keys.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>keys<sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>PyBases<sp/>items</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>items<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>the<sp/>items,<sp/>as<sp/>(ID,<sp/>Base<sp/>Entity)<sp/>pairs,<sp/>that<sp/>are<sp/>listed</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>in<sp/>this<sp/>object.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>A<sp/>list<sp/>containing<sp/>all<sp/>of<sp/>the<sp/>(ID,<sp/>Base<sp/>Entity)<sp/>pairs,<sp/>represented<sp/>as</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>tuples<sp/>containing<sp/>an<sp/>integer<sp/>ID<sp/>and<sp/>a<sp/>Base<sp/>Entity.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>items<sp/>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>PyBases<sp/>values</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>values<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>Base<sp/>Entities<sp/>listed<sp/>in</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>this<sp/>object.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>A<sp/>list<sp/>containing<sp/>all<sp/>of<sp/>the<sp/>Base<sp/>Entities.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>values<sp/>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>PyBases<sp/>get</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>base<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>id<sp/>The<sp/>id<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>find.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>defaultValue<sp/>An<sp/>optional<sp/>argument<sp/>that<sp/>is<sp/>the<sp/>return<sp/>value<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>entity<sp/>cannot<sp/>be<sp/>found.<sp/>This<sp/>defaults<sp/>to<sp/>None.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>The<sp/>entity<sp/>with<sp/>the<sp/>input<sp/>id<sp/>or<sp/>the<sp/>default<sp/>value<sp/>if<sp/>not<sp/>found.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>get<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">PY_END_METHODS()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">PY_BEGIN_ATTRIBUTES(<sp/><ref refid="class_py_bases" kindref="compound">PyBases</ref><sp/>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">PY_END_ATTRIBUTES()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="class_py_bases" kindref="compound">PyBases</ref>::<ref refid="class_py_bases" kindref="compound">PyBases</ref>(<sp/>const<sp/><ref refid="class_bases" kindref="compound">Bases</ref><sp/>&amp;<sp/>bases,<sp/>PyTypeObject<sp/>*<sp/>pType<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObjectPlus(<sp/>pType<sp/>),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>bases_(<sp/>bases<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">PyObject<sp/>*<sp/>PyBases::subscript(<sp/>PyObject*<sp/>entityID<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>PyInt_AsLong(<sp/>entityID<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyErr_Occurred())</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_Check(<sp/>entityID<sp/>))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;findInstanceWithType(<sp/>PyString_AsString(<sp/>entityID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pBase<sp/>=<sp/>bases_.findEntity(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_XINCREF(<sp/>pBase<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBase<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_KeyError,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pBase;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">PyObject<sp/>*<sp/>PyBases::findInstanceWithType(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>typeName<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base" kindref="compound">Base</ref><sp/>*<sp/>pBase<sp/>=<sp/>bases_.<ref refid="class_bases_1a2bac2cbead90547cc46579469d6fea62" kindref="member">findInstanceWithType</ref>(<sp/>typeName<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pBase)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_KeyError,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>an<sp/>entry<sp/>with<sp/>type<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeName<sp/>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pBase<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pBase;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyBases::length()</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bases_.size());</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">PyObject<sp/>*<sp/>PyBases::py_has_key(<sp/>PyObject*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">,<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyInt_FromLong(<sp/>bases_.findEntity(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">PyObject*<sp/>PyBases::py_keys(PyObject*<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bases_.size());</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pList<sp/>=<sp/>PyList_New(<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>Bases::const_iterator<sp/>iter<sp/>=<sp/>bases_.begin();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bases_.end())</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>steals<sp/>a<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SetItem(<sp/>pList,<sp/>i,<sp/>PyInt_FromLong(<sp/>iter-&gt;first<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">PyObject*<sp/>PyBases::py_values(PyObject*<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bases_.size());</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pList<sp/>=<sp/>PyList_New(<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>Bases::const_iterator<sp/>iter<sp/>=<sp/>bases_.begin();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bases_.end())</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>steals<sp/>a<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_XINCREF(<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SetItem(<sp/>pList,<sp/>i,<sp/>iter-&gt;second<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">PyObject*<sp/>PyBases::py_items(<sp/>PyObject*<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bases_.size());</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pList<sp/>=<sp/>PyList_New(<sp/>size<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>Bases::const_iterator<sp/>iter<sp/>=<sp/>bases_.begin();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>bases_.end())</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pTuple<sp/>=<sp/>PyTuple_New(<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pValue<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pValue<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SetItem(<sp/>pTuple,<sp/>0,<sp/>PyInt_FromLong(<sp/>iter-&gt;first<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTuple_SetItem(<sp/>pTuple,<sp/>1,<sp/>pValue<sp/>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>steals<sp/>a<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_SetItem(<sp/>pList,<sp/>i,<sp/>pTuple<sp/>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">PyObject<sp/>*<sp/>PyBases::py_get(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pDefault<sp/>=<sp/>Py_None;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;i|O&quot;</highlight><highlight class="normal">,<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;pDefault<sp/>))</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pEntity<sp/>=<sp/>bases_.findEntity(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntity)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity<sp/>=<sp/>pDefault;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pEntity;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>py_bases.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="baseapp/py_bases.cpp"/>
  </compounddef>
</doxygen>
