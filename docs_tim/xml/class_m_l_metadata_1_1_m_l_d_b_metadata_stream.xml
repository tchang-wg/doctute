<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream" kind="class" language="C++" prot="public">
    <compoundname>MLMetadata::MLDBMetadataStream</compoundname>
    <basecompoundref refid="class_m_l_metadata_1_1_log_metadata_stream" prot="public" virt="non-virtual">MLMetadata::LogMetadataStream</basecompoundref>
    <includes refid="metadata_8hpp" local="no">metadata.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a8ad89df8f5095edefdd3e5eec4ea645f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MLMetadata::MLDBMetadataStream::jsonAdded_</definition>
        <argsstring></argsstring>
        <name>jsonAdded_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="50" column="1" bodyfile="tools/message_logger/metadata.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a224f242d1fe6cd9696472a86c9a92f68" prot="private" static="no" mutable="no">
        <type>Json::Value</type>
        <definition>Json::Value MLMetadata::MLDBMetadataStream::root_</definition>
        <argsstring></argsstring>
        <name>root_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="51" column="1" bodyfile="tools/message_logger/metadata.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a61600a2fe22fd627a20bc1380e4e90f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MLMetadata::MLDBMetadataStream::MLDBMetadataStream</definition>
        <argsstring>()</argsstring>
        <name>MLDBMetadataStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create the MLDB metadata object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="39" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1adc7ef659626d17d272c1916641c01477" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_m_l_metadata_1_1_log_metadata_stream" kindref="compound">LogMetadataStream</ref> &amp;</type>
        <definition>LogMetadataStream &amp; MLMetadata::MLDBMetadataStream::add</definition>
        <argsstring>(const BW::string &amp;key, int value)</argsstring>
        <name>add</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1a35ed4442e4fe17d6f77260b3e614f1ad">add</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a key and accompanying int value to the metadata object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this stream, suitable for further chained operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="40" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a2eeac62d1070fba88f9bbe1435c8c2a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_m_l_metadata_1_1_log_metadata_stream" kindref="compound">LogMetadataStream</ref> &amp;</type>
        <definition>LogMetadataStream &amp; MLMetadata::MLDBMetadataStream::add</definition>
        <argsstring>(const BW::string &amp;key, long long int value)</argsstring>
        <name>add</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1aa1b03d9045217e95561fb926a16e5b21">add</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long long int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a key and accompanying long long int value to the metadata object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this stream, suitable for further chained operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="41" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a600ac16d08320ec3c61e7a7c261fb0f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_m_l_metadata_1_1_log_metadata_stream" kindref="compound">LogMetadataStream</ref> &amp;</type>
        <definition>LogMetadataStream &amp; MLMetadata::MLDBMetadataStream::add</definition>
        <argsstring>(const BW::string &amp;key, unsigned int value)</argsstring>
        <name>add</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1a86f231d54b30d4400138a5e84f874c6c">add</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a key and accompanying unsigned int value to the metadata object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this stream, suitable for further chained operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="42" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1aacdb0082b4919b42671d8535b60c3aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_m_l_metadata_1_1_log_metadata_stream" kindref="compound">LogMetadataStream</ref> &amp;</type>
        <definition>LogMetadataStream &amp; MLMetadata::MLDBMetadataStream::add</definition>
        <argsstring>(const BW::string &amp;key, float value)</argsstring>
        <name>add</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1aadb4d9b1f32d61b47c3405c9e6e0f597">add</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a key and accompanying float value to the metadata object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this stream, suitable for further chained operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="43" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a62e0dcfb1e172f4b262d44d1b7b18d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_m_l_metadata_1_1_log_metadata_stream" kindref="compound">LogMetadataStream</ref> &amp;</type>
        <definition>LogMetadataStream &amp; MLMetadata::MLDBMetadataStream::add</definition>
        <argsstring>(const BW::string &amp;key, double value)</argsstring>
        <name>add</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1a2694541ac486b58689bc76eb1c13151e">add</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a key and accompanying double value to the metadata object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this stream, suitable for further chained operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="44" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a21c41c0fa8dcb751cd74fd964e158e69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_m_l_metadata_1_1_log_metadata_stream" kindref="compound">LogMetadataStream</ref> &amp;</type>
        <definition>LogMetadataStream &amp; MLMetadata::MLDBMetadataStream::add</definition>
        <argsstring>(const BW::string &amp;key, const BW::string &amp;value)</argsstring>
        <name>add</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1a93a9d29cb4ed55cc51cc40081807ab38">add</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a key and accompanying string value to the metadata object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>this stream, suitable for further chained operations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="45" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="144" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a570da366a0204274215e2ee40199c28e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool MLMetadata::MLDBMetadataStream::setJSON</definition>
        <argsstring>(const BW::string &amp;json)</argsstring>
        <name>setJSON</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1aa650a8ef51c2080f2e0dbe696e07ade1">setJSON</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a fully-formed <ref refid="class_j_s_o_n" kindref="compound">JSON</ref> object to the metadata. Overwrites any existing key/value pairs and prevents future additions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json</parametername>
</parameternamelist>
<parameterdescription>
<para>a fully formed <ref refid="class_j_s_o_n" kindref="compound">JSON</ref> string to save as metadata </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the <ref refid="class_j_s_o_n" kindref="compound">JSON</ref> was valid, and therefore whether the update succeeded. Further updates are allowed on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="46" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="163" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1ae5b10096cdb7e653f1418af9059508ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BW::string</type>
        <definition>BW::string MLMetadata::MLDBMetadataStream::getJSON</definition>
        <argsstring>()</argsstring>
        <name>getJSON</name>
        <reimplements refid="class_m_l_metadata_1_1_log_metadata_stream_1a972cb8485901bc9e7e1d1b80396156fc">getJSON</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the <ref refid="class_j_s_o_n" kindref="compound">JSON</ref> representation of this metadata object, ready to store in MLDB.</para><para><simplesect kind="return"><para>the <ref refid="class_j_s_o_n" kindref="compound">JSON</ref> metadata string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/metadata.hpp" line="47" column="1" bodyfile="tools/message_logger/metadata.cpp" bodystart="184" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>MLDB-specific interface to store interim metadata. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1907">
        <label>MLMetadata::MLDBMetadataStream</label>
        <link refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream"/>
        <childnode refid="1908" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1908">
        <label>MLMetadata::LogMetadataStream</label>
        <link refid="class_m_l_metadata_1_1_log_metadata_stream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1909">
        <label>MLMetadata::MLDBMetadataStream</label>
        <link refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream"/>
        <childnode refid="1910" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1910">
        <label>MLMetadata::LogMetadataStream</label>
        <link refid="class_m_l_metadata_1_1_log_metadata_stream"/>
      </node>
    </collaborationgraph>
    <location file="tools/message_logger/metadata.hpp" line="37" column="1" bodyfile="tools/message_logger/metadata.hpp" bodystart="36" bodyend="52"/>
    <listofallmembers>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1adc7ef659626d17d272c1916641c01477" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>add</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a2eeac62d1070fba88f9bbe1435c8c2a9" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>add</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a600ac16d08320ec3c61e7a7c261fb0f4" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>add</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1aacdb0082b4919b42671d8535b60c3aa3" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>add</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a62e0dcfb1e172f4b262d44d1b7b18d11" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>add</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a21c41c0fa8dcb751cd74fd964e158e69" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>add</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1ae5b10096cdb7e653f1418af9059508ba" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>getJSON</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a8ad89df8f5095edefdd3e5eec4ea645f" prot="private" virt="non-virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>jsonAdded_</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a61600a2fe22fd627a20bc1380e4e90f3" prot="public" virt="non-virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>MLDBMetadataStream</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a224f242d1fe6cd9696472a86c9a92f68" prot="private" virt="non-virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>root_</name></member>
      <member refid="class_m_l_metadata_1_1_m_l_d_b_metadata_stream_1a570da366a0204274215e2ee40199c28e" prot="public" virt="virtual"><scope>MLMetadata::MLDBMetadataStream</scope><name>setJSON</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
