<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="query__range__iterator_8cpp" kind="file" language="C++">
    <compoundname>query_range_iterator.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="query__range__iterator_8hpp" local="yes">query_range_iterator.hpp</includes>
    <includes refid="query__range_8hpp" local="yes">query_range.hpp</includes>
    <includes refid="log__entry__address_8hpp" local="yes">log_entry_address.hpp</includes>
    <includes local="yes">cstdmf/debug.hpp</includes>
    <incdepgraph>
      <node id="22308">
        <label>query_range_iterator.hpp</label>
        <link refid="query__range__iterator_8hpp_source"/>
        <childnode refid="22309" relation="include">
        </childnode>
        <childnode refid="22317" relation="include">
        </childnode>
      </node>
      <node id="22343">
        <label>unary_integer_file.hpp</label>
        <link refid="unary__integer__file_8hpp_source"/>
        <childnode refid="22336" relation="include">
        </childnode>
        <childnode refid="22337" relation="include">
        </childnode>
      </node>
      <node id="22354">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="22325">
        <label>query_params.hpp</label>
        <link refid="query__params_8hpp_source"/>
        <childnode refid="22319" relation="include">
        </childnode>
        <childnode refid="22321" relation="include">
        </childnode>
        <childnode refid="22322" relation="include">
        </childnode>
        <childnode refid="22320" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22326" relation="include">
        </childnode>
        <childnode refid="22345" relation="include">
        </childnode>
        <childnode refid="22360" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22357" relation="include">
        </childnode>
        <childnode refid="22361" relation="include">
        </childnode>
      </node>
      <node id="22326">
        <label>user_log_reader.hpp</label>
        <link refid="user__log__reader_8hpp_source"/>
        <childnode refid="22319" relation="include">
        </childnode>
        <childnode refid="22327" relation="include">
        </childnode>
        <childnode refid="22328" relation="include">
        </childnode>
        <childnode refid="22318" relation="include">
        </childnode>
        <childnode refid="22344" relation="include">
        </childnode>
        <childnode refid="22315" relation="include">
        </childnode>
      </node>
      <node id="22362">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="22316">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="22307">
        <label>script/first_include.hpp</label>
      </node>
      <node id="22337">
        <label>stdlib.h</label>
      </node>
      <node id="22322">
        <label>log_time.hpp</label>
        <link refid="log__time_8hpp_source"/>
        <childnode refid="22309" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22323" relation="include">
        </childnode>
        <childnode refid="22324" relation="include">
        </childnode>
      </node>
      <node id="22320">
        <label>log_entry_address_reader.hpp</label>
        <link refid="log__entry__address__reader_8hpp_source"/>
        <childnode refid="22317" relation="include">
        </childnode>
        <childnode refid="22321" relation="include">
        </childnode>
      </node>
      <node id="22341">
        <label>user_segment_usage.hpp</label>
        <link refid="user__segment__usage_8hpp_source"/>
        <childnode refid="22342" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
      </node>
      <node id="22353">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22323" relation="include">
        </childnode>
      </node>
      <node id="22323">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="22334">
        <label>mldb/log_component_names.hpp</label>
        <link refid="mldb_2log__component__names_8hpp_source"/>
        <childnode refid="22335" relation="include">
        </childnode>
        <childnode refid="22336" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
      </node>
      <node id="22319">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="22314">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="22359">
        <label>../hostnames.hpp</label>
        <link refid="hostnames_8hpp_source"/>
        <childnode refid="22327" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
      </node>
      <node id="22355">
        <label>network/format_string_handler.hpp</label>
      </node>
      <node id="22327">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="22360">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="22318">
        <label>query_range.hpp</label>
        <link refid="query__range_8hpp_source"/>
        <childnode refid="22319" relation="include">
        </childnode>
        <childnode refid="22320" relation="include">
        </childnode>
        <childnode refid="22322" relation="include">
        </childnode>
        <childnode refid="22325" relation="include">
        </childnode>
        <childnode refid="22308" relation="include">
        </childnode>
        <childnode refid="22326" relation="include">
        </childnode>
        <childnode refid="22356" relation="include">
        </childnode>
      </node>
      <node id="22357">
        <label>cstdmf/debug_message_source.hpp</label>
      </node>
      <node id="22349">
        <label>format_strings.hpp</label>
        <link refid="mldb_2format__strings_8hpp_source"/>
        <childnode refid="22331" relation="include">
        </childnode>
        <childnode refid="22350" relation="include">
        </childnode>
        <childnode refid="22351" relation="include">
        </childnode>
        <childnode refid="22356" relation="include">
        </childnode>
        <childnode refid="22327" relation="include">
        </childnode>
      </node>
      <node id="22347">
        <label>categories.hpp</label>
        <link refid="mldb_2categories_8hpp_source"/>
        <childnode refid="22331" relation="include">
        </childnode>
        <childnode refid="22348" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22327" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
      </node>
      <node id="22356">
        <label>log_entry.hpp</label>
        <link refid="log__entry_8hpp_source"/>
        <childnode refid="22322" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22357" relation="include">
        </childnode>
        <childnode refid="22323" relation="include">
        </childnode>
      </node>
      <node id="22321">
        <label>Python.h</label>
      </node>
      <node id="22342">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="22351">
        <label>log_string_interpolator.hpp</label>
        <link refid="log__string__interpolator_8hpp_source"/>
        <childnode refid="22352" relation="include">
        </childnode>
        <childnode refid="22353" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22354" relation="include">
        </childnode>
        <childnode refid="22333" relation="include">
        </childnode>
        <childnode refid="22355" relation="include">
        </childnode>
        <childnode refid="22310" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
        <childnode refid="22315" relation="include">
        </childnode>
      </node>
      <node id="22336">
        <label>../text_file_handler.hpp</label>
        <link refid="text__file__handler_8hpp_source"/>
        <childnode refid="22332" relation="include">
        </childnode>
        <childnode refid="22337" relation="include">
        </childnode>
      </node>
      <node id="22338">
        <label>user_segment.hpp</label>
        <link refid="user__segment_8hpp_source"/>
        <childnode refid="22311" relation="include">
        </childnode>
        <childnode refid="22315" relation="include">
        </childnode>
        <childnode refid="22328" relation="include">
        </childnode>
        <childnode refid="22322" relation="include">
        </childnode>
        <childnode refid="22339" relation="include">
        </childnode>
        <childnode refid="22333" relation="include">
        </childnode>
        <childnode refid="22337" relation="include">
        </childnode>
        <childnode refid="22340" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
      </node>
      <node id="22331">
        <label>binary_file_handler.hpp</label>
        <link refid="binary__file__handler_8hpp_source"/>
        <childnode refid="22332" relation="include">
        </childnode>
        <childnode refid="22333" relation="include">
        </childnode>
      </node>
      <node id="22309">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="22310" relation="include">
        </childnode>
        <childnode refid="22311" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
      </node>
      <node id="22324">
        <label>time.h</label>
      </node>
      <node id="22313">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="22335">
        <label>../log_component_names.hpp</label>
        <link refid="log__component__names_8hpp_source"/>
        <childnode refid="22312" relation="include">
        </childnode>
      </node>
      <node id="22348">
        <label>../categories.hpp</label>
        <link refid="categories_8hpp_source"/>
        <childnode refid="22327" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
      </node>
      <node id="22312">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="22313" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
        <childnode refid="22315" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
      </node>
      <node id="22306">
        <label>tools/message_logger/query_range_iterator.cpp</label>
        <link refid="query_range_iterator.cpp"/>
        <childnode refid="22307" relation="include">
        </childnode>
        <childnode refid="22308" relation="include">
        </childnode>
        <childnode refid="22318" relation="include">
        </childnode>
        <childnode refid="22317" relation="include">
        </childnode>
        <childnode refid="22362" relation="include">
        </childnode>
      </node>
      <node id="22328">
        <label>user_log.hpp</label>
        <link refid="user__log_8hpp_source"/>
        <childnode refid="22329" relation="include">
        </childnode>
        <childnode refid="22330" relation="include">
        </childnode>
        <childnode refid="22338" relation="include">
        </childnode>
        <childnode refid="22341" relation="include">
        </childnode>
        <childnode refid="22343" relation="include">
        </childnode>
        <childnode refid="22340" relation="include">
        </childnode>
      </node>
      <node id="22358">
        <label>hostnames.hpp</label>
        <link refid="mldb_2hostnames_8hpp_source"/>
        <childnode refid="22359" relation="include">
        </childnode>
        <childnode refid="22336" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22327" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
      </node>
      <node id="22311">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="22310">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="22350">
        <label>../format_strings.hpp</label>
        <link refid="format__strings_8hpp_source"/>
        <childnode refid="22327" relation="include">
        </childnode>
        <childnode refid="22351" relation="include">
        </childnode>
        <childnode refid="22356" relation="include">
        </childnode>
      </node>
      <node id="22352">
        <label>string_offset.hpp</label>
        <link refid="string__offset_8hpp_source"/>
        <childnode refid="22311" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22315" relation="include">
        </childnode>
        <childnode refid="22323" relation="include">
        </childnode>
      </node>
      <node id="22332">
        <label>file_handler.hpp</label>
        <link refid="file__handler_8hpp_source"/>
        <childnode refid="22311" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
      </node>
      <node id="22345">
        <label>mldb/log_reader.hpp</label>
        <link refid="log__reader_8hpp_source"/>
        <childnode refid="22346" relation="include">
        </childnode>
        <childnode refid="22359" relation="include">
        </childnode>
        <childnode refid="22326" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22327" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
      </node>
      <node id="22329">
        <label>logging_component.hpp</label>
        <link refid="logging__component_8hpp_source"/>
        <childnode refid="22330" relation="include">
        </childnode>
        <childnode refid="22317" relation="include">
        </childnode>
        <childnode refid="22310" relation="include">
        </childnode>
      </node>
      <node id="22344">
        <label>user_segment_reader.hpp</label>
        <link refid="user__segment__reader_8hpp_source"/>
        <childnode refid="22338" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
        <childnode refid="22315" relation="include">
        </childnode>
      </node>
      <node id="22346">
        <label>log_common.hpp</label>
        <link refid="log__common_8hpp_source"/>
        <childnode refid="22347" relation="include">
        </childnode>
        <childnode refid="22349" relation="include">
        </childnode>
        <childnode refid="22358" relation="include">
        </childnode>
        <childnode refid="22334" relation="include">
        </childnode>
        <childnode refid="22343" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
      </node>
      <node id="22339">
        <label>mldb/metadata.hpp</label>
        <link refid="mldb_2metadata_8hpp_source"/>
        <childnode refid="22331" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22316" relation="include">
        </childnode>
      </node>
      <node id="22315">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="22361">
        <label>regex.h</label>
      </node>
      <node id="22333">
        <label>network/file_stream.hpp</label>
      </node>
      <node id="22330">
        <label>user_components.hpp</label>
        <link refid="user__components_8hpp_source"/>
        <childnode refid="22331" relation="include">
        </childnode>
        <childnode refid="22312" relation="include">
        </childnode>
        <childnode refid="22334" relation="include">
        </childnode>
        <childnode refid="22313" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
        <childnode refid="22327" relation="include">
        </childnode>
      </node>
      <node id="22317">
        <label>log_entry_address.hpp</label>
        <link refid="log__entry__address_8hpp_source"/>
        <childnode refid="22316" relation="include">
        </childnode>
        <childnode refid="22314" relation="include">
        </childnode>
      </node>
      <node id="22340">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;query_range_iterator.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;query_range.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_entry_address.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/debug.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="class_query_range_iterator_1a69fcb4509259c9c0b50a526a13d14a37" kindref="member">QueryRangeIterator::QueryRangeIterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range" kindref="compound">QueryRange</ref><sp/>*queryRange,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metaOffset<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>pQueryRange_(<sp/>queryRange<sp/>),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>segmentNum_(<sp/>segmentNum<sp/>),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>entryNum_(<sp/>entryNum<sp/>),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>metaOffset_(<sp/>metaOffset<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator_1a83f6a1111791b14a09291cf77d11cdc3" kindref="member">QueryRangeIterator::isGood</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="33"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((segmentNum_<sp/>!=<sp/>-1)<sp/>&amp;&amp;<sp/>(entryNum_<sp/>!=<sp/>-1));</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QueryRangeIterator::operator&lt;(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="39"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>-<sp/>other<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QueryRangeIterator::operator&lt;=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;<sp/>other)<sp/>||<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>QueryRangeIterator::operator==(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pQueryRange_<sp/>!=<sp/>other.pQueryRange_)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;QueryRangeIterator::operator&lt;:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>compare<sp/>iterators<sp/>from<sp/>two<sp/>different<sp/>ranges!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segmentNum_<sp/>==<sp/>other.segmentNum_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum_<sp/>==<sp/>other.entryNum_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaOffset_<sp/>==<sp/>other.metaOffset_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref>&amp;<sp/>QueryRangeIterator::operator++()</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;step(<sp/>pQueryRange_-&gt;getDirection()<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref>&amp;<sp/>QueryRangeIterator::operator--()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;step(<sp/>(SearchDirection)(-pQueryRange_-&gt;getDirection())<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QueryRangeIterator::step(<sp/>SearchDirection<sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchDirection<sp/>d<sp/>=<sp/>direction;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>got<sp/>a<sp/>metaoffset<sp/>and<sp/>it&apos;s<sp/>in<sp/>the<sp/>opposite<sp/>direction,<sp/>negate<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metaOffset_<sp/>==<sp/>-d)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaOffset_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>entryNum_<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>gone<sp/>off<sp/>the<sp/>end<sp/>of<sp/>a<sp/>segment,<sp/>try<sp/>to<sp/>select<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entryNum_<sp/>&lt;<sp/>0<sp/>||<sp/>entryNum_<sp/>&gt;=<sp/>this-&gt;getSegment()-&gt;getNumEntries()<sp/>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentNum_<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>go<sp/>off<sp/>the<sp/>end<sp/>of<sp/>the<sp/>log,<sp/>revert<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segmentNum_<sp/>&lt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentNum_<sp/>&gt;=<sp/>pQueryRange_-&gt;getUserLogNumSegments())</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum_<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentNum_<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>hit<sp/>the<sp/>end<sp/>of<sp/>the<sp/>search,<sp/>set<sp/>metaOffset<sp/>in<sp/>case<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resume()<sp/>at<sp/>some<sp/>later<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>pQueryRange_-&gt;getDirection()<sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaOffset_<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resuming<sp/>a<sp/>query<sp/>never<sp/>alters<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>range,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there&apos;s<sp/>not<sp/>much<sp/>point<sp/>doing<sp/>anything<sp/>with<sp/>metaOffset<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>off<sp/>the<sp/>end<sp/>of<sp/>the<sp/>log,<sp/>select<sp/>next<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>QUERY_FORWARDS)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>segment<sp/>number<sp/>was<sp/>changed<sp/>above,<sp/>get<sp/>the<sp/>new<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryNum_<sp/>=<sp/>this-&gt;getSegment()-&gt;getNumEntries()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>metaOffset_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator_1abb95ef2e69f8f17e38e07449460aad0f" kindref="member">QueryRangeIterator::operator-</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="147"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchDirection<sp/>d<sp/>=<sp/>pQueryRange_-&gt;getDirection();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segmentNum_<sp/>==<sp/>other.segmentNum_)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d<sp/>*<sp/>(entryNum_<sp/>-<sp/>other.entryNum_<sp/>+</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaOffset_<sp/>-<sp/>other.metaOffset_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>first<sp/>and<sp/>last<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(segmentNum_<sp/>&gt;<sp/>other.segmentNum_)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/>other.getSegment();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>entryNum_<sp/>+<sp/>pSegment-&gt;getNumEntries()<sp/>-<sp/>other.entryNum_;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/>this-&gt;getSegment();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>pSegment-&gt;getNumEntries()<sp/>-<sp/>entryNum_<sp/>+<sp/>other.entryNum_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intervening<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>QUERY_FORWARDS)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>other.segmentNum_<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>segmentNum_)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pQueryRange_-&gt;getUserSegmentFromIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>pSegment-&gt;getNumEntries();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>other.segmentNum_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>segmentNum_)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pQueryRange_-&gt;getUserSegmentFromIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>pSegment-&gt;getNumEntries();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flip<sp/>the<sp/>count<sp/>if<sp/>this<sp/>iterator<sp/>precedes<sp/>the<sp/>other<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>*<sp/>segmentNum_<sp/>&lt;<sp/>d<sp/>*<sp/>other.segmentNum_)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>-count;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count<sp/>+<sp/>metaOffset_<sp/>-<sp/>other.metaOffset_;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/>QueryRangeIterator::getSegment()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="207"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pQueryRange_-&gt;getUserSegmentFromIndex(<sp/>segmentNum_<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRangeIterator::getSegmentNumber()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="213"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>segmentNum_;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRangeIterator::getEntryNumber()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entryNum_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRangeIterator::getMetaOffset()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="225"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metaOffset_;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QueryRangeIterator::getArgsOffset()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="231"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argsOffset_;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref><sp/>QueryRangeIterator::getAddress()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="237"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*pSegment<sp/>=<sp/>this-&gt;getSegment();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref>(<sp/>pSegment-&gt;getSuffix(),<sp/>entryNum_<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">BW::string<sp/><ref refid="class_query_range_iterator_1a14f49674da1bf3c362b2b9c610645e53" kindref="member">QueryRangeIterator::asString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="247"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<sp/>32<sp/>];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_snprintf(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>buf<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;%d:%d:%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentNum_,<sp/>entryNum_,<sp/>metaOffset_<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BW::string(<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>query_range_iterator.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/query_range_iterator.cpp"/>
  </compounddef>
</doxygen>
