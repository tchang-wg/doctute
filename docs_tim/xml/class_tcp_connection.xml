<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_tcp_connection" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>TcpConnection</compoundname>
    <basecompoundref prot="public" virt="non-virtual">InputNotificationHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">TimerHandler</basecompoundref>
    <derivedcompoundref refid="class_http_pipeline" prot="private" virt="non-virtual">HttpPipeline</derivedcompoundref>
    <includes refid="tcp__connection_8hpp" local="no">tcp_connection.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500b" prot="private" static="no">
        <name>@9</name>
        <enumvalue id="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba35672e11a18fab0558cb53da3e3298d0" prot="private">
          <name>DISCONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba3aaa6a381bb2875c05b91cbd4d9e512a" prot="private">
          <name>RESOLVING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500baed9f7f980281ae40a6564037a3f6f711" prot="private">
          <name>CONNECTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba0cefdbd3b38ff7f4235e72d2b2608ffd" prot="private">
          <name>IDLING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba441b824ebb7fbc68419fbc6663311ed7" prot="private">
          <name>READING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500baf974789c30747c1cb7bd808c4681c438" prot="private">
          <name>WRITING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="94" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="93" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tcp_connection_1a7dca5ab166997d0d4419ba8becc0fb82" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class DnsResolver</definition>
        <argsstring></argsstring>
        <name>DnsResolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="38" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_tcp_connection_1a648c0c2d95de02df5038f270bb3ef36d" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int TcpConnection::BUFFER_SIZE</definition>
        <argsstring></argsstring>
        <name>BUFFER_SIZE</name>
        <initializer>= 4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="90" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tcp_connection_1acf064db5fb9b8504963eb052294f45f2" prot="private" static="no" mutable="no">
        <type>enum TcpConnection::@9</type>
        <definition>enum TcpConnection::@9  TcpConnection::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="101" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1a7941e05f79c2da7dcf8ddeb3e4d08c6d" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string TcpConnection::host_</definition>
        <argsstring></argsstring>
        <name>host_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="104" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1aa1ae2070e109ffb16a12d6c7dba2bc19" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 TcpConnection::port_</definition>
        <argsstring></argsstring>
        <name>port_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="105" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1a60c18ac83dc544c46ab40f908f581f63" prot="private" static="no" mutable="no">
        <type>int64</type>
        <definition>int64 TcpConnection::connectTimeout_</definition>
        <argsstring></argsstring>
        <name>connectTimeout_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="106" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1a5ec65f000d39c6cd4ea76064b6f9f96f" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char TcpConnection::rxBuffer_[BUFFER_SIZE]</definition>
        <argsstring>[BUFFER_SIZE]</argsstring>
        <name>rxBuffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="109" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1a50233da9389f86836649cdad0e596c22" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* TcpConnection::txBuffer_</definition>
        <argsstring></argsstring>
        <name>txBuffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="112" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1a1c1048530f965b5e1cf3a73d3355a2a6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TcpConnection::txSize_</definition>
        <argsstring></argsstring>
        <name>txSize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="113" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1a33bc8c06d361d61d605782a3e2ba3f08" prot="private" static="no" mutable="no">
        <type>TimerHandle</type>
        <definition>TimerHandle TcpConnection::timeoutTimer_</definition>
        <argsstring></argsstring>
        <name>timeoutTimer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="116" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1af6dd7d3d842931b4f96a87a5f2ef40e9" prot="private" static="no" mutable="no">
        <type>Endpoint</type>
        <definition>Endpoint TcpConnection::endpoint_</definition>
        <argsstring></argsstring>
        <name>endpoint_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="119" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1a1af44201fa522fa74d47524a48813a0e" prot="private" static="no" mutable="no">
        <type>Mercury::EventDispatcher &amp;</type>
        <definition>Mercury::EventDispatcher&amp; TcpConnection::dispatcher_</definition>
        <argsstring></argsstring>
        <name>dispatcher_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="122" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1ada3bb8883e9fd22cc14d8ab36046111d" prot="private" static="no" mutable="no">
        <type><ref refid="class_dns_resolver" kindref="compound">DnsResolver</ref> &amp;</type>
        <definition>DnsResolver&amp; TcpConnection::resolver_</definition>
        <argsstring></argsstring>
        <name>resolver_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="125" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tcp_connection_1ab383e4f0013f0422b1b83658baeeb964" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int TcpConnection::resolveId_</definition>
        <argsstring></argsstring>
        <name>resolveId_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="128" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tcp_connection_1ab88c48da7aeee8df77f31f52cb316196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE TcpConnection::TcpConnection</definition>
        <argsstring>(Mercury::EventDispatcher &amp;dispatcher, DnsResolver &amp;resolver)</argsstring>
        <name>TcpConnection</name>
        <param>
          <type>Mercury::EventDispatcher &amp;</type>
          <declname>dispatcher</declname>
        </param>
        <param>
          <type><ref refid="class_dns_resolver" kindref="compound">DnsResolver</ref> &amp;</type>
          <declname>resolver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para>Is supplied an EventDispatcher instance whose run loop will process this link.</para><para>Created connection starts it life in disconnected state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="41" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="14" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a57f0a40516d8bc7f6c83de77b730cf29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TcpConnection::~TcpConnection</definition>
        <argsstring>()</argsstring>
        <name>~TcpConnection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor.</para><para>IMPORTANT: should only be invoked in disconnected state, otherwise some unwanted effects like &quot;hung&quot; timers or late notifications arriving to an already destroyed object may have place. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="43" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1aead4f95acd5db8a011065d3e5bf0f5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TcpConnection::connect</definition>
        <argsstring>(const BW::string &amp;host, uint16 port, int64 microseconds)</argsstring>
        <name>connect</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint16</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int64</type>
          <declname>microseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method establishes a connection to remote endpoint.</para><para>Should be established from disconnected state, otherwise wont have effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="45" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="204" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1ae75b03e8c0269eed7b2625ec9006aa95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TcpConnection::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="46" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="280" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a9ed9b145b60b5af350cf73455937e7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TcpConnection::write</definition>
        <argsstring>(const char *buffer, int size, int64 microseconds)</argsstring>
        <name>write</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int64</type>
          <declname>microseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes a chunk of data into the stream.</para><para>Tries to write &quot;size&quot; bytes from the beginning of the &quot;buffer&quot;. Fails on connection reset or timeout specified by &quot;microseconds&quot;.</para><para>Should be called from idling state, and interleaved correspondingly with writing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="48" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="331" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a8dea385ee1c102d45dce6c1838bc773e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TcpConnection::read</definition>
        <argsstring>(int64 microseconds)</argsstring>
        <name>read</name>
        <param>
          <type>int64</type>
          <declname>microseconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method waits for any data available on the link.</para><para>Fails on connection reset or timeout specified by &quot;microseconds&quot;. Invokes &quot;onDisconnected&quot; on graceful TCP connection shutdown.</para><para>Should be called from idling state, and interleaved correspondingly with reading. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="49" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="381" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a572e29fa5153753e32f1600f63731f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TcpConnection::isConnected</definition>
        <argsstring>()</argsstring>
        <name>isConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="51" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a00fcbaf21883a98483fed630fa2655b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TcpConnection::isBlocked</definition>
        <argsstring>()</argsstring>
        <name>isBlocked</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="52" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a343f74537fb5a335f9cf0cc975b8fbb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void TcpConnection::onRead</definition>
        <argsstring>(const char *buffer, int size, bool isSuccess)=0</argsstring>
        <name>onRead</name>
        <reimplementedby refid="class_http_pipeline_1a2858591167764b0ea79ee9d90247c5e9">onRead</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked at the end of operation scheduled by &quot;read&quot;.</para><para>If &quot;isSuccess&quot; is true, &quot;buffer&quot; is non-NULL, &quot;size&quot; is positive. Otherwise &quot;buffer&quot; and &quot;size&quot; are unspecified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a4578d5df77523a3e21f683aed124e4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void TcpConnection::onWrite</definition>
        <argsstring>(int bytesWritten, bool isSuccess)=0</argsstring>
        <name>onWrite</name>
        <reimplementedby refid="class_http_pipeline_1a9ee06882151563f7f3ac39bf8585b2d5">onWrite</reimplementedby>
        <param>
          <type>int</type>
          <declname>bytesWritten</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked at the end of operation scheduled by &quot;write&quot;. If &quot;isSuccess&quot; is true, &quot;bytesWritten&quot; is non-negative </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1aa3ce13fb8be75bc6739a1e9bdc1c806b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void TcpConnection::onConnected</definition>
        <argsstring>()=0</argsstring>
        <name>onConnected</name>
        <reimplementedby refid="class_http_pipeline_1aacf98920f03cf389dd00ca598e23802b">onConnected</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked at the end of operation scheduled by &quot;connect&quot; if and only if connection had been successfully established. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1ade704dbaa89bd6ce8713c6ea7a340cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void TcpConnection::onDisconnected</definition>
        <argsstring>()=0</argsstring>
        <name>onDisconnected</name>
        <reimplementedby refid="class_http_pipeline_1a074f3d279a61c4e4bdf6204029cab51a">onDisconnected</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked either upon graceful shutdown at the end of &quot;read&quot;, failure of &quot;connect&quot;, or forceful connection reset due to &quot;disconnect&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a8cbba4e7763192e93059b2cdc04a9920" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int TcpConnection::handleInputNotification</definition>
        <argsstring>(int fd)</argsstring>
        <name>handleInputNotification</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="83" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="114" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a933346ee0b9e8778693d59f2af07d905" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void TcpConnection::handleTimeout</definition>
        <argsstring>(TimerHandle handle, void *pUser)</argsstring>
        <name>handleTimeout</name>
        <param>
          <type>TimerHandle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pUser</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="86" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="55" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tcp_connection_1aa174cf0ddc75054eca79cfcae0be0db3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TcpConnection::onDnsResolveFailed</definition>
        <argsstring>()</argsstring>
        <name>onDnsResolveFailed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="131" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="227" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_tcp_connection_1a09f6475c74bfbb00f2d3e7d2cb961e7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TcpConnection::onDnsResolveSucceeded</definition>
        <argsstring>(uint32 address)</argsstring>
        <name>onDnsResolveSucceeded</name>
        <param>
          <type>uint32</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="132" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.cpp" bodystart="241" bodyend="275"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class maintains a half-duplex TCP connection to a fixed endpoint, and is orchestrated via asynchronous I/O facilities of Mercury.</para><para>Can be in one of three states: disconnected, blocked, idling. Disconnected means that no connection was established yet, and no operations are available. Blocked means that an operation is in progress (establishing a connection, reading or writing data). Idling means that a connection is not performing any operations and can be ordered to read/write/disconnect.</para><para>Success/failure is signaled via callbacks (onRead/onWrite/onConnected/onDisconnected). The reason of failure can be either an appropriate Mercury status code or timeout (which is configured on per-operation basis). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2878">
        <label>Mercury::InputNotificationHandler</label>
      </node>
      <node id="2877">
        <label>TcpConnection</label>
        <link refid="class_tcp_connection"/>
        <childnode refid="2878" relation="public-inheritance">
        </childnode>
        <childnode refid="2879" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2879">
        <label>TimerHandler</label>
      </node>
      <node id="2881">
        <label>SpaPipeline</label>
        <link refid="class_spa_pipeline"/>
        <childnode refid="2880" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2880">
        <label>HttpPipeline</label>
        <link refid="class_http_pipeline"/>
        <childnode refid="2877" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2883">
        <label>Mercury::InputNotificationHandler</label>
      </node>
      <node id="2882">
        <label>TcpConnection</label>
        <link refid="class_tcp_connection"/>
        <childnode refid="2883" relation="public-inheritance">
        </childnode>
        <childnode refid="2884" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2884">
        <label>TimerHandler</label>
      </node>
    </collaborationgraph>
    <location file="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" line="37" column="1" bodyfile="dbapp_extensions/wgbilling_spa/tcp_connection.hpp" bodystart="35" bodyend="133"/>
    <listofallmembers>
      <member refid="class_tcp_connection_1a648c0c2d95de02df5038f270bb3ef36d" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>BUFFER_SIZE</name></member>
      <member refid="class_tcp_connection_1aead4f95acd5db8a011065d3e5bf0f5c9" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>connect</name></member>
      <member refid="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500baed9f7f980281ae40a6564037a3f6f711" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>CONNECTING</name></member>
      <member refid="class_tcp_connection_1a60c18ac83dc544c46ab40f908f581f63" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>connectTimeout_</name></member>
      <member refid="class_tcp_connection_1ae75b03e8c0269eed7b2625ec9006aa95" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>disconnect</name></member>
      <member refid="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba35672e11a18fab0558cb53da3e3298d0" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>DISCONNECTED</name></member>
      <member refid="class_tcp_connection_1a1af44201fa522fa74d47524a48813a0e" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>dispatcher_</name></member>
      <member refid="class_tcp_connection_1a7dca5ab166997d0d4419ba8becc0fb82" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>DnsResolver</name></member>
      <member refid="class_tcp_connection_1af6dd7d3d842931b4f96a87a5f2ef40e9" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>endpoint_</name></member>
      <member refid="class_tcp_connection_1a8cbba4e7763192e93059b2cdc04a9920" prot="public" virt="virtual"><scope>TcpConnection</scope><name>handleInputNotification</name></member>
      <member refid="class_tcp_connection_1a933346ee0b9e8778693d59f2af07d905" prot="public" virt="virtual"><scope>TcpConnection</scope><name>handleTimeout</name></member>
      <member refid="class_tcp_connection_1a7941e05f79c2da7dcf8ddeb3e4d08c6d" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>host_</name></member>
      <member refid="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba0cefdbd3b38ff7f4235e72d2b2608ffd" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>IDLING</name></member>
      <member refid="class_tcp_connection_1a00fcbaf21883a98483fed630fa2655b9" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>isBlocked</name></member>
      <member refid="class_tcp_connection_1a572e29fa5153753e32f1600f63731f48" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>isConnected</name></member>
      <member refid="class_tcp_connection_1aa3ce13fb8be75bc6739a1e9bdc1c806b" prot="public" virt="pure-virtual"><scope>TcpConnection</scope><name>onConnected</name></member>
      <member refid="class_tcp_connection_1ade704dbaa89bd6ce8713c6ea7a340cf3" prot="public" virt="pure-virtual"><scope>TcpConnection</scope><name>onDisconnected</name></member>
      <member refid="class_tcp_connection_1aa174cf0ddc75054eca79cfcae0be0db3" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>onDnsResolveFailed</name></member>
      <member refid="class_tcp_connection_1a09f6475c74bfbb00f2d3e7d2cb961e7e" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>onDnsResolveSucceeded</name></member>
      <member refid="class_tcp_connection_1a343f74537fb5a335f9cf0cc975b8fbb0" prot="public" virt="pure-virtual"><scope>TcpConnection</scope><name>onRead</name></member>
      <member refid="class_tcp_connection_1a4578d5df77523a3e21f683aed124e4bd" prot="public" virt="pure-virtual"><scope>TcpConnection</scope><name>onWrite</name></member>
      <member refid="class_tcp_connection_1aa1ae2070e109ffb16a12d6c7dba2bc19" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>port_</name></member>
      <member refid="class_tcp_connection_1a8dea385ee1c102d45dce6c1838bc773e" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>read</name></member>
      <member refid="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba441b824ebb7fbc68419fbc6663311ed7" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>READING</name></member>
      <member refid="class_tcp_connection_1ab383e4f0013f0422b1b83658baeeb964" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>resolveId_</name></member>
      <member refid="class_tcp_connection_1ada3bb8883e9fd22cc14d8ab36046111d" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>resolver_</name></member>
      <member refid="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500ba3aaa6a381bb2875c05b91cbd4d9e512a" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>RESOLVING</name></member>
      <member refid="class_tcp_connection_1a5ec65f000d39c6cd4ea76064b6f9f96f" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>rxBuffer_</name></member>
      <member refid="class_tcp_connection_1acf064db5fb9b8504963eb052294f45f2" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>state_</name></member>
      <member refid="class_tcp_connection_1ab88c48da7aeee8df77f31f52cb316196" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>TcpConnection</name></member>
      <member refid="class_tcp_connection_1a33bc8c06d361d61d605782a3e2ba3f08" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>timeoutTimer_</name></member>
      <member refid="class_tcp_connection_1a50233da9389f86836649cdad0e596c22" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>txBuffer_</name></member>
      <member refid="class_tcp_connection_1a1c1048530f965b5e1cf3a73d3355a2a6" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>txSize_</name></member>
      <member refid="class_tcp_connection_1a9ed9b145b60b5af350cf73455937e7ce" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>write</name></member>
      <member refid="class_tcp_connection_1a7d8f10ebfd42e51b7b77f4380bfa500baf974789c30747c1cb7bd808c4681c438" prot="private" virt="non-virtual"><scope>TcpConnection</scope><name>WRITING</name></member>
      <member refid="class_tcp_connection_1a57f0a40516d8bc7f6c83de77b730cf29" prot="public" virt="non-virtual"><scope>TcpConnection</scope><name>~TcpConnection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
