<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="entity__vision_8cpp" kind="file" language="C++">
    <compoundname>entity_vision.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="entity__vision_8hpp" local="yes">entity_vision.hpp</includes>
    <includes refid="cellapp_2entity_8hpp" local="yes">entity.hpp</includes>
    <includes refid="real__entity_8hpp" local="yes">real_entity.hpp</includes>
    <includes refid="cell_8hpp" local="yes">cell.hpp</includes>
    <includes refid="cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <includes refid="space_8hpp" local="yes">space.hpp</includes>
    <includes refid="vision__controller_8hpp" local="yes">vision_controller.hpp</includes>
    <includes refid="scan__vision__controller_8hpp" local="yes">scan_vision_controller.hpp</includes>
    <includes refid="visibility__controller_8hpp" local="yes">visibility_controller.hpp</includes>
    <includes local="yes">chunk/chunk_space.hpp</includes>
    <includes local="yes">chunk/chunk_obstacle.hpp</includes>
    <includes local="yes">physics2/worldtri.hpp</includes>
    <incdepgraph>
      <node id="9496">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="9458">
        <label>real_entity.hpp</label>
        <link refid="real__entity_8hpp_source"/>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9417" relation="include">
        </childnode>
        <childnode refid="9459" relation="include">
        </childnode>
        <childnode refid="9423" relation="include">
        </childnode>
        <childnode refid="9461" relation="include">
        </childnode>
        <childnode refid="9429" relation="include">
        </childnode>
        <childnode refid="9436" relation="include">
        </childnode>
        <childnode refid="9467" relation="include">
        </childnode>
        <childnode refid="9469" relation="include">
        </childnode>
        <childnode refid="9413" relation="include">
        </childnode>
        <childnode refid="9468" relation="include">
        </childnode>
        <childnode refid="9415" relation="include">
        </childnode>
        <childnode refid="9470" relation="include">
        </childnode>
        <childnode refid="9471" relation="include">
        </childnode>
        <childnode refid="9472" relation="include">
        </childnode>
      </node>
      <node id="9520">
        <label>chunk_loading/edge_geometry_mappings.hpp</label>
      </node>
      <node id="9476">
        <label>math/rectt.hpp</label>
      </node>
      <node id="9483">
        <label>functional</label>
      </node>
      <node id="9518">
        <label>scene/collision_scene_view.hpp</label>
      </node>
      <node id="9497">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="9450">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="9504">
        <label>py_spaces.hpp</label>
        <link refid="cellapp_2py__spaces_8hpp_source"/>
        <childnode refid="9415" relation="include">
        </childnode>
        <childnode refid="9505" relation="include">
        </childnode>
        <childnode refid="9506" relation="include">
        </childnode>
      </node>
      <node id="9439">
        <label>network/misc.hpp</label>
      </node>
      <node id="9444">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="9511">
        <label>float.h</label>
      </node>
      <node id="9416">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="9494">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="9418">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="9510">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="9463">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="9411">
        <label>script/first_include.hpp</label>
      </node>
      <node id="9410">
        <label>cellapp/entity_vision.cpp</label>
        <link refid="entity_vision.cpp"/>
        <childnode refid="9411" relation="include">
        </childnode>
        <childnode refid="9412" relation="include">
        </childnode>
        <childnode refid="9413" relation="include">
        </childnode>
        <childnode refid="9458" relation="include">
        </childnode>
        <childnode refid="9473" relation="include">
        </childnode>
        <childnode refid="9484" relation="include">
        </childnode>
        <childnode refid="9507" relation="include">
        </childnode>
        <childnode refid="9522" relation="include">
        </childnode>
        <childnode refid="9523" relation="include">
        </childnode>
        <childnode refid="9524" relation="include">
        </childnode>
        <childnode refid="9517" relation="include">
        </childnode>
        <childnode refid="9525" relation="include">
        </childnode>
        <childnode refid="9451" relation="include">
        </childnode>
      </node>
      <node id="9503">
        <label>type_system/context.hpp</label>
      </node>
      <node id="9427">
        <label>script/script_object.hpp</label>
      </node>
      <node id="9505">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="9524">
        <label>visibility_controller.hpp</label>
        <link refid="visibility__controller_8hpp_source"/>
        <childnode refid="9423" relation="include">
        </childnode>
        <childnode refid="9452" relation="include">
        </childnode>
      </node>
      <node id="9473">
        <label>cell.hpp</label>
        <link refid="cell_8hpp_source"/>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9417" relation="include">
        </childnode>
        <childnode refid="9474" relation="include">
        </childnode>
        <childnode refid="9477" relation="include">
        </childnode>
        <childnode refid="9430" relation="include">
        </childnode>
        <childnode refid="9443" relation="include">
        </childnode>
        <childnode refid="9444" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9478" relation="include">
        </childnode>
        <childnode refid="9479" relation="include">
        </childnode>
        <childnode refid="9480" relation="include">
        </childnode>
        <childnode refid="9421" relation="include">
        </childnode>
        <childnode refid="9481" relation="include">
        </childnode>
        <childnode refid="9482" relation="include">
        </childnode>
        <childnode refid="9483" relation="include">
        </childnode>
      </node>
      <node id="9507">
        <label>space.hpp</label>
        <link refid="space_8hpp_source"/>
        <childnode refid="9417" relation="include">
        </childnode>
        <childnode refid="9508" relation="include">
        </childnode>
        <childnode refid="9512" relation="include">
        </childnode>
        <childnode refid="9436" relation="include">
        </childnode>
        <childnode refid="9494" relation="include">
        </childnode>
        <childnode refid="9520" relation="include">
        </childnode>
        <childnode refid="9478" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9443" relation="include">
        </childnode>
        <childnode refid="9505" relation="include">
        </childnode>
        <childnode refid="9515" relation="include">
        </childnode>
      </node>
      <node id="9417">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="9418" relation="include">
        </childnode>
        <childnode refid="9419" relation="include">
        </childnode>
        <childnode refid="9420" relation="include">
        </childnode>
        <childnode refid="9421" relation="include">
        </childnode>
        <childnode refid="9422" relation="include">
        </childnode>
      </node>
      <node id="9523">
        <label>scan_vision_controller.hpp</label>
        <link refid="scan__vision__controller_8hpp_source"/>
        <childnode refid="9522" relation="include">
        </childnode>
      </node>
      <node id="9517">
        <label>chunk/chunk_space.hpp</label>
      </node>
      <node id="9431">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="9425">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="9474">
        <label>cell_info.hpp</label>
        <link refid="cell__info_8hpp_source"/>
        <childnode refid="9475" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
      </node>
      <node id="9465">
        <label>server/entity_app_config.hpp</label>
      </node>
      <node id="9467">
        <label>mailbox.hpp</label>
        <link refid="cellapp_2mailbox_8hpp_source"/>
        <childnode refid="9432" relation="include">
        </childnode>
        <childnode refid="9446" relation="include">
        </childnode>
        <childnode refid="9468" relation="include">
        </childnode>
        <childnode refid="9415" relation="include">
        </childnode>
        <childnode refid="9452" relation="include">
        </childnode>
        <childnode refid="9453" relation="include">
        </childnode>
        <childnode refid="9429" relation="include">
        </childnode>
      </node>
      <node id="9508">
        <label>cell_range_list.hpp</label>
        <link refid="cell__range__list_8hpp_source"/>
        <childnode refid="9509" relation="include">
        </childnode>
      </node>
      <node id="9421">
        <label>server/common.hpp</label>
      </node>
      <node id="9516">
        <label>chunk_space_collision_provider.hpp</label>
        <link refid="chunk__space__collision__provider_8hpp_source"/>
        <childnode refid="9442" relation="include">
        </childnode>
        <childnode refid="9517" relation="include">
        </childnode>
        <childnode refid="9518" relation="include">
        </childnode>
        <childnode refid="9519" relation="include">
        </childnode>
      </node>
      <node id="9428">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="9470">
        <label>server/auto_backup_and_archive.hpp</label>
      </node>
      <node id="9499">
        <label>pyscript/pickler.hpp</label>
      </node>
      <node id="9449">
        <label>entitydef/py_volatile_info.hpp</label>
      </node>
      <node id="9441">
        <label>entity_callback_buffer.hpp</label>
        <link refid="entity__callback__buffer_8hpp_source"/>
        <childnode refid="9442" relation="include">
        </childnode>
        <childnode refid="9443" relation="include">
        </childnode>
        <childnode refid="9427" relation="include">
        </childnode>
      </node>
      <node id="9515">
        <label>pyscript/script_math.hpp</label>
      </node>
      <node id="9477">
        <label>cell_profiler.hpp</label>
        <link refid="cell__profiler_8hpp_source"/>
        <childnode refid="9454" relation="include">
        </childnode>
      </node>
      <node id="9471">
        <label>server/util.hpp</label>
      </node>
      <node id="9426">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="9452">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="9437">
        <label>entitydef/data_description.hpp</label>
      </node>
      <node id="9522">
        <label>vision_controller.hpp</label>
        <link refid="vision__controller_8hpp_source"/>
        <childnode refid="9423" relation="include">
        </childnode>
        <childnode refid="9469" relation="include">
        </childnode>
      </node>
      <node id="9430">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="9479">
        <label>math/vector2.hpp</label>
      </node>
      <node id="9429">
        <label>entity_type.hpp</label>
        <link refid="cellapp_2entity__type_8hpp_source"/>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9430" relation="include">
        </childnode>
        <childnode refid="9431" relation="include">
        </childnode>
        <childnode refid="9432" relation="include">
        </childnode>
        <childnode refid="9433" relation="include">
        </childnode>
        <childnode refid="9434" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9435" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
      </node>
      <node id="9468">
        <label>network/udp_channel.hpp</label>
      </node>
      <node id="9461">
        <label>entity_cache.hpp</label>
        <link refid="entity__cache_8hpp_source"/>
        <childnode refid="9462" relation="include">
        </childnode>
        <childnode refid="9425" relation="include">
        </childnode>
        <childnode refid="9420" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9413" relation="include">
        </childnode>
        <childnode refid="9464" relation="include">
        </childnode>
        <childnode refid="9466" relation="include">
        </childnode>
        <childnode refid="9455" relation="include">
        </childnode>
      </node>
      <node id="9500">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="9469">
        <label>server/updatable.hpp</label>
      </node>
      <node id="9445">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="9447">
        <label>entitydef/property_event_stamps.hpp</label>
      </node>
      <node id="9466">
        <label>limits.h</label>
      </node>
      <node id="9514">
        <label>math/boundbox.hpp</label>
      </node>
      <node id="9480">
        <label>math/vector3.hpp</label>
      </node>
      <node id="9451">
        <label>physics2/worldtri.hpp</label>
      </node>
      <node id="9456">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="9513">
        <label>physical_space.hpp</label>
        <link refid="physical__space_8hpp_source"/>
        <childnode refid="9476" relation="include">
        </childnode>
        <childnode refid="9514" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9440" relation="include">
        </childnode>
        <childnode refid="9515" relation="include">
        </childnode>
      </node>
      <node id="9455">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="9509">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="9463" relation="include">
        </childnode>
        <childnode refid="9510" relation="include">
        </childnode>
        <childnode refid="9511" relation="include">
        </childnode>
        <childnode refid="9430" relation="include">
        </childnode>
        <childnode refid="9443" relation="include">
        </childnode>
      </node>
      <node id="9415">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="9488">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="9486">
        <label>cstdmf/safe_static.hpp</label>
      </node>
      <node id="9491">
        <label>emergency_throttle.hpp</label>
        <link refid="emergency__throttle_8hpp_source"/>
        <childnode refid="9426" relation="include">
        </childnode>
      </node>
      <node id="9454">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="9414">
        <label>Python.h</label>
      </node>
      <node id="9436">
        <label>history_event.hpp</label>
        <link refid="history__event_8hpp_source"/>
        <childnode refid="9437" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9438" relation="include">
        </childnode>
        <childnode refid="9439" relation="include">
        </childnode>
        <childnode refid="9440" relation="include">
        </childnode>
        <childnode refid="9425" relation="include">
        </childnode>
      </node>
      <node id="9440">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="9484">
        <label>cellapp.hpp</label>
        <link refid="cellapp_8hpp_source"/>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9485" relation="include">
        </childnode>
        <childnode refid="9417" relation="include">
        </childnode>
        <childnode refid="9487" relation="include">
        </childnode>
        <childnode refid="9490" relation="include">
        </childnode>
        <childnode refid="9491" relation="include">
        </childnode>
        <childnode refid="9492" relation="include">
        </childnode>
        <childnode refid="9494" relation="include">
        </childnode>
        <childnode refid="9495" relation="include">
        </childnode>
        <childnode refid="9444" relation="include">
        </childnode>
        <childnode refid="9496" relation="include">
        </childnode>
        <childnode refid="9497" relation="include">
        </childnode>
        <childnode refid="9431" relation="include">
        </childnode>
        <childnode refid="9498" relation="include">
        </childnode>
        <childnode refid="9499" relation="include">
        </childnode>
        <childnode refid="9421" relation="include">
        </childnode>
        <childnode refid="9500" relation="include">
        </childnode>
        <childnode refid="9501" relation="include">
        </childnode>
        <childnode refid="9502" relation="include">
        </childnode>
        <childnode refid="9427" relation="include">
        </childnode>
        <childnode refid="9503" relation="include">
        </childnode>
        <childnode refid="9504" relation="include">
        </childnode>
      </node>
      <node id="9448">
        <label>entitydef/property_owner.hpp</label>
      </node>
      <node id="9498">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="9423">
        <label>controller.hpp</label>
        <link refid="controller_8hpp_source"/>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9425" relation="include">
        </childnode>
        <childnode refid="9426" relation="include">
        </childnode>
        <childnode refid="9427" relation="include">
        </childnode>
        <childnode refid="9428" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
      </node>
      <node id="9489">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="9435">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="9434">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="9485">
        <label>cellapp_death_listener.hpp</label>
        <link refid="cellapp__death__listener_8hpp_source"/>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9440" relation="include">
        </childnode>
        <childnode refid="9486" relation="include">
        </childnode>
      </node>
      <node id="9519">
        <label>scene/scene_provider.hpp</label>
      </node>
      <node id="9501">
        <label>server/id_client.hpp</label>
      </node>
      <node id="9433">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="9478">
        <label>math/math_extra.hpp</label>
      </node>
      <node id="9472">
        <label>math.h</label>
      </node>
      <node id="9424">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="9495">
        <label>chunk_loading/preloaded_chunk_space.hpp</label>
      </node>
      <node id="9422">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="9462">
        <label>aoi_update_schemes.hpp</label>
        <link refid="aoi__update__schemes_8hpp_source"/>
        <childnode refid="9463" relation="include">
        </childnode>
        <childnode refid="9456" relation="include">
        </childnode>
        <childnode refid="9430" relation="include">
        </childnode>
      </node>
      <node id="9482">
        <label>deque</label>
      </node>
      <node id="9459">
        <label>cell_app_channel.hpp</label>
        <link refid="cell__app__channel_8hpp_source"/>
        <childnode refid="9460" relation="include">
        </childnode>
      </node>
      <node id="9432">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="9420">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="9442">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="9487">
        <label>cellappmgr_gateway.hpp</label>
        <link refid="cellappmgr__gateway_8hpp_source"/>
        <childnode refid="9463" relation="include">
        </childnode>
        <childnode refid="9488" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9460" relation="include">
        </childnode>
        <childnode refid="9439" relation="include">
        </childnode>
        <childnode refid="9421" relation="include">
        </childnode>
        <childnode refid="9489" relation="include">
        </childnode>
        <childnode refid="9428" relation="include">
        </childnode>
      </node>
      <node id="9464">
        <label>cellapp_config.hpp</label>
        <link refid="cellapp__config_8hpp_source"/>
        <childnode refid="9465" relation="include">
        </childnode>
      </node>
      <node id="9453">
        <label>server/backup_hash.hpp</label>
      </node>
      <node id="9457">
        <label>entity_extra.hpp</label>
        <link refid="entity__extra_8hpp_source"/>
        <childnode refid="9413" relation="include">
        </childnode>
      </node>
      <node id="9412">
        <label>entity_vision.hpp</label>
        <link refid="entity__vision_8hpp_source"/>
        <childnode refid="9413" relation="include">
        </childnode>
        <childnode refid="9457" relation="include">
        </childnode>
      </node>
      <node id="9490">
        <label>cells.hpp</label>
        <link refid="cells_8hpp_source"/>
        <childnode refid="9488" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9456" relation="include">
        </childnode>
      </node>
      <node id="9502">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="9443">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="9419">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="9492">
        <label>profile.hpp</label>
        <link refid="profile_8hpp_source"/>
        <childnode refid="9493" relation="include">
        </childnode>
      </node>
      <node id="9481">
        <label>algorithm</label>
      </node>
      <node id="9413">
        <label>entity.hpp</label>
        <link refid="cellapp_2entity_8hpp_source"/>
        <childnode refid="9414" relation="include">
        </childnode>
        <childnode refid="9415" relation="include">
        </childnode>
        <childnode refid="9416" relation="include">
        </childnode>
        <childnode refid="9417" relation="include">
        </childnode>
        <childnode refid="9423" relation="include">
        </childnode>
        <childnode refid="9429" relation="include">
        </childnode>
        <childnode refid="9436" relation="include">
        </childnode>
        <childnode refid="9441" relation="include">
        </childnode>
        <childnode refid="9444" relation="include">
        </childnode>
        <childnode refid="9445" relation="include">
        </childnode>
        <childnode refid="9446" relation="include">
        </childnode>
        <childnode refid="9447" relation="include">
        </childnode>
        <childnode refid="9448" relation="include">
        </childnode>
        <childnode refid="9449" relation="include">
        </childnode>
        <childnode refid="9450" relation="include">
        </childnode>
        <childnode refid="9434" relation="include">
        </childnode>
        <childnode refid="9451" relation="include">
        </childnode>
        <childnode refid="9452" relation="include">
        </childnode>
        <childnode refid="9453" relation="include">
        </childnode>
        <childnode refid="9454" relation="include">
        </childnode>
        <childnode refid="9455" relation="include">
        </childnode>
        <childnode refid="9443" relation="include">
        </childnode>
        <childnode refid="9456" relation="include">
        </childnode>
      </node>
      <node id="9512">
        <label>physical_chunk_space.hpp</label>
        <link refid="physical__chunk__space_8hpp_source"/>
        <childnode refid="9513" relation="include">
        </childnode>
        <childnode refid="9516" relation="include">
        </childnode>
        <childnode refid="9424" relation="include">
        </childnode>
        <childnode refid="9442" relation="include">
        </childnode>
        <childnode refid="9517" relation="include">
        </childnode>
        <childnode refid="9520" relation="include">
        </childnode>
        <childnode refid="9494" relation="include">
        </childnode>
        <childnode refid="9521" relation="include">
        </childnode>
        <childnode refid="9515" relation="include">
        </childnode>
      </node>
      <node id="9493">
        <label>cstdmf/profile.hpp</label>
      </node>
      <node id="9525">
        <label>chunk/chunk_obstacle.hpp</label>
      </node>
      <node id="9475">
        <label>space_node.hpp</label>
        <link refid="space__node_8hpp_source"/>
        <childnode refid="9425" relation="include">
        </childnode>
        <childnode refid="9476" relation="include">
        </childnode>
      </node>
      <node id="9438">
        <label>network/interface_element.hpp</label>
      </node>
      <node id="9460">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="9521">
        <label>scene/scene.hpp</label>
      </node>
      <node id="9506">
        <label>space/forward_declarations.hpp</label>
      </node>
      <node id="9446">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="entity__vision_8cpp_1a8b10a3225dda78274ab8c9edbb98ed33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DEBUG_COMPONENT</definition>
        <argsstring>(0)</argsstring>
        <name>DECLARE_DEBUG_COMPONENT</name>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity_vision.cpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="entity__vision_8cpp_1aa76be19d8bb494c56e26f97053085a9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>PyObject* addScanVision</definition>
        <argsstring>(float angle, int updatePeriod=1, int userArg=0)</argsstring>
        <name>addScanVision</name>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>int</type>
          <declname>updatePeriod</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>userArg</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity_vision.cpp" line="704" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_vision.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vision_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;scan_vision_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;visibility_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_obstacle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;physics2/worldtri.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">DECLARE_DEBUG_COMPONENT(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>EntityVision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">PY_TYPEOBJECT(<sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref><sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">PY_BEGIN_METHODS(<sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref><sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>addVision<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>addScanVision<sp/>)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>setVisionRange<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>entitiesInView<sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">PY_END_METHODS()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">PY_BEGIN_ATTRIBUTES(<sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref><sp/>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity.seeingHeight</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>stores<sp/>the<sp/>height<sp/>on<sp/>the<sp/>Entity<sp/>to<sp/>use<sp/>as<sp/>the<sp/>source<sp/>of</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>current<sp/>field<sp/>of<sp/>view,<sp/>eg,<sp/>eye-level<sp/>of<sp/>current<sp/>Model.<sp/><sp/>This<sp/>should</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>be<sp/>changed<sp/>as<sp/>the<sp/>point<sp/>of<sp/>vision<sp/>changes,<sp/>eg,<sp/>if<sp/>the<sp/>Model<sp/>crouches,</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>but<sp/>not<sp/>when<sp/>jumping<sp/>because<sp/>the<sp/>height<sp/>from<sp/>the<sp/>base<sp/>of<sp/>the<sp/>Model<sp/>is</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>same.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>float</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>seeingHeight<sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity.visibleHeight</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>stores<sp/>the<sp/>height<sp/>that<sp/>the<sp/>vision<sp/>controllers<sp/>will<sp/>use<sp/>to</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>determine<sp/>whether<sp/>this<sp/>Entity<sp/>can<sp/>be<sp/>seen.<sp/><sp/>It<sp/>should<sp/>correspond<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>height<sp/>of<sp/>the<sp/>current<sp/>Model<sp/>and<sp/>be<sp/>updated<sp/>if<sp/>the<sp/>Model<sp/>changes<sp/>height,</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>eg,<sp/>when<sp/>crouched,<sp/>but<sp/>not<sp/>when<sp/>jumping<sp/>because<sp/>the<sp/>height<sp/>from<sp/>the<sp/>base</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>the<sp/>Model<sp/>is<sp/>the<sp/>same.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>float</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>visibleHeight<sp/>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity.canBeSeen</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>set<sp/>to<sp/>True,<sp/>this<sp/>attribute<sp/>indicates<sp/>that<sp/>this<sp/>Entity<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>included<sp/>in<sp/>vision<sp/>updates.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>set<sp/>to<sp/>False,<sp/>the<sp/>Entity<sp/>will<sp/>be<sp/>&apos;invisible&apos;<sp/>to<sp/>any<sp/>Entity&apos;s<sp/>vision</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>controller.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>bool</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>canBeSeen<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity.shouldDropVision</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>set<sp/>to<sp/>True,<sp/>this<sp/>attribute<sp/>indicates<sp/>that<sp/>this<sp/>Entity&apos;s<sp/>seeingHeight</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>visibleHeight<sp/>should<sp/>be<sp/>dropped<sp/>by<sp/>2<sp/>metres<sp/>or<sp/>to<sp/>the<sp/>terrain</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>surface,<sp/>if<sp/>within<sp/>that<sp/>2m<sp/>range.<sp/><sp/>This<sp/>is<sp/>because<sp/>on<sp/>the<sp/>Cell,<sp/>the</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Entity<sp/>moves<sp/>on<sp/>the<sp/>BigWorld<sp/>navPoly<sp/>system.<sp/><sp/>No<sp/>part<sp/>of<sp/>any<sp/>navPoly</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>will<sp/>be<sp/>beneath<sp/>the<sp/>terrain<sp/>or<sp/>more<sp/>than<sp/>2<sp/>metres<sp/>higher,<sp/>so<sp/>by<sp/>dropping</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>these<sp/>seeingHeight<sp/>and<sp/>visibleHeight<sp/>by<sp/>2m,<sp/>we<sp/>ensure<sp/>that<sp/>the<sp/>heights</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>are<sp/>relative<sp/>to<sp/>the<sp/>terrain.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>set<sp/>to<sp/>False,<sp/>the<sp/>heights<sp/>will<sp/>remain<sp/>relative<sp/>to<sp/>the<sp/>navPoly,<sp/>rather</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>than<sp/>the<sp/>terrain.</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>bool</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>shouldDropVision<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity.fieldOfView</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>stores<sp/>the<sp/>angle<sp/>of<sp/>the<sp/>vision<sp/>cone<sp/>in<sp/>radians.<sp/><sp/>Entities</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>that<sp/>are<sp/>greater<sp/>than<sp/>this<sp/>angle,<sp/>in<sp/>radians,<sp/>from<sp/>this<sp/>entity&apos;s</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>direction<sp/>will<sp/>not<sp/>be<sp/>seen.<sp/>The<sp/>field<sp/>of<sp/>view<sp/>is<sp/>double<sp/>this<sp/>number.<sp/>For</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>example,<sp/>a<sp/>field<sp/>of<sp/>view<sp/>of<sp/>180<sp/>degrees<sp/>(pi<sp/>radians)<sp/>would<sp/>be<sp/>equivalent</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>to<sp/>a<sp/>vision<sp/>cone<sp/>angle<sp/>of<sp/>90<sp/>degrees<sp/>(pi/2<sp/>radians).</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>is<sp/>deprecated<sp/>due<sp/>to<sp/>the<sp/>confusion<sp/>it<sp/>can<sp/>cause.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>identical<sp/>to<sp/>the<sp/>visionAngle<sp/>attribute.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>float</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>fieldOfView<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity.visionAngle</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>stores<sp/>the<sp/>angle<sp/>of<sp/>the<sp/>vision<sp/>cone<sp/>in<sp/>radians.<sp/><sp/>Entities</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>that<sp/>are<sp/>greater<sp/>than<sp/>this<sp/>angle,<sp/>in<sp/>radians,<sp/>from<sp/>this<sp/>entity&apos;s</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>direction<sp/>will<sp/>not<sp/>be<sp/>seen.<sp/>The<sp/>field<sp/>of<sp/>view<sp/>is<sp/>double<sp/>this<sp/>number.<sp/>For</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>example,<sp/>a<sp/>field<sp/>of<sp/>view<sp/>of<sp/>180<sp/>degrees<sp/>(pi<sp/>radians)<sp/>would<sp/>be<sp/>equivalent</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>to<sp/>a<sp/>vision<sp/>cone<sp/>angle<sp/>of<sp/>90<sp/>degrees<sp/>(pi/2<sp/>radians).</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>float</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>visionAngle<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity.visionRange</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>stores<sp/>the<sp/>range,<sp/>in<sp/>metres,<sp/>of<sp/>the<sp/>entity&apos;s</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>vision.<sp/>Entities<sp/>further<sp/>away<sp/>than<sp/>this<sp/>distance<sp/>will<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>seen<sp/>by<sp/>this<sp/>entity.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>float</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>visionRange<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">PY_END_ATTRIBUTES()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onStartSeeing</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>a<sp/>new<sp/>entity<sp/>enters<sp/>this<sp/>entity&apos;s<sp/>vision.<sp/>See</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/><sp/>Entity.addVision<sp/>for<sp/>how<sp/>to<sp/>add<sp/>vision<sp/>to<sp/>an<sp/>entity.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entity<sp/><sp/><sp/>The<sp/>entity<sp/>that<sp/>has<sp/>just<sp/>entered<sp/>this<sp/>entity&apos;s<sp/>vision.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>userData</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onStopSeeing</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>an<sp/>entity<sp/>leaves<sp/>this<sp/>entity&apos;s<sp/>vision.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onStopSeeingID</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>entity<sp/><sp/>The<sp/>entity<sp/>that<sp/>has<sp/>just<sp/>left<sp/>this<sp/>entity&apos;s<sp/>vision.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>userData</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onStopSeeingID</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>an<sp/>entity<sp/>leaves<sp/>this<sp/>entity&apos;s<sp/>vision<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>is<sp/>not<sp/>on<sp/>this<sp/>cell.<sp/>Getting<sp/>this<sp/>method<sp/>called<sp/>should<sp/>be<sp/>rare.<sp/>It</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/><sp/>can<sp/>only<sp/>occur<sp/>if<sp/>the<sp/>entity<sp/>is<sp/>onloaded<sp/>to<sp/>a<sp/>new<sp/>cell<sp/>that<sp/>does<sp/>not<sp/>have</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>currently<sp/>seen<sp/>entity.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onStopSeeing</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>entityID<sp/><sp/><sp/><sp/>The<sp/>id<sp/>of<sp/>the<sp/>entity<sp/>that<sp/>has<sp/>just<sp/>left<sp/>this<sp/>entity&apos;s</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vision.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>userData</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">const<sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref>::Instance&lt;<ref refid="class_entity_vision" kindref="compound">EntityVision</ref>&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref>::instance(<sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref>::s_getMethodDefs(),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref>::s_getAttributeDefs()<sp/>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="class_entity_vision" kindref="compound">EntityVision</ref>::<ref refid="class_entity_vision" kindref="compound">EntityVision</ref>(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>e<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_extra" kindref="compound">EntityExtra</ref>(<sp/>e<sp/>),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>lastDropPosition_(<sp/>100000.f,<sp/>0.f,<sp/>100000.f<sp/>),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>entitiesInVisionRange_(),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>visibleEntities_(),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>visibility_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>vision_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>shouldDropVision_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>iterating_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>iterationCancelled_(<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_VISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>seenByEntities_()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">EntityVision::~EntityVision()</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity.entitiesInView</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>all<sp/>the<sp/>Entities<sp/>that<sp/>can<sp/>be<sp/>seen<sp/>with</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>current<sp/>field<sp/>of<sp/>view<sp/>and<sp/>vision<sp/>range.</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(list)<sp/><sp/>List<sp/>of<sp/>Entities<sp/>currently<sp/>in<sp/>view</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="235"><highlight class="normal">PyObject*<sp/>EntityVision::entitiesInView()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="236"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>May<sp/>be<sp/>able<sp/>to<sp/>use<sp/>our<sp/>stl-to-python<sp/>wrappers<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*pList=<sp/>PyList_New(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(EntitySet::const_iterator<sp/>iter<sp/>=<sp/>visibleEntities_.begin();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>visibleEntities_.end();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref>*<sp/>entity<sp/>=<sp/>(*iter).get();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList,<sp/>entity<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntitySet<sp/>&amp;<sp/>EntityVision::updateVisibleEntities(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>seeingHeight,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yawOffset<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet<sp/>newVisible;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet<sp/>oldVisible;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>oldVisible.swap(<sp/>visibleEntities_<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChunkSpace<sp/>*<sp/>cs<sp/>=<sp/>entity_.pChunkSpace();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>remove<sp/>the<sp/>following<sp/>when<sp/>collide()<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>supported<sp/>by<sp/>all<sp/>Physical<sp/>Space<sp/>types.<sp/>Then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>need<sp/>to<sp/>use<sp/>PhysicalSpace<sp/>instead<sp/>of<sp/>ChunkSpace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cs)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;EntityVision::updateVisibleEntities():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Delegate<sp/>space<sp/>type<sp/>is<sp/>not<sp/>supported\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visibleEntities_;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>headPos<sp/>=<sp/>this-&gt;getDroppedPosition();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>headPos.y<sp/>+=<sp/>seeingHeight;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yaw<sp/>=<sp/>entity_.direction().yaw<sp/>+<sp/>yawOffset;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>visionAngle<sp/>=<sp/>(vision_<sp/>!=<sp/>NULL)<sp/>?<sp/>vision_-&gt;visionAngle()<sp/>:<sp/>1.f;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>direction;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>direction.setPitchYaw(<sp/>entity_.direction().pitch,<sp/>yaw<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(EntitySet::iterator<sp/>iter<sp/>=<sp/>entitiesInVisionRange_.begin();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>entitiesInVisionRange_.end();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref>*<sp/>pEntity<sp/>=<sp/>(*iter).get();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!pEntity-&gt;isDestroyed()<sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>canSee<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EntityVision::canBeSeen(<sp/>pEntity<sp/>))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref><sp/>&amp;<sp/>ev<sp/>=<sp/>EntityVision::instance(<sp/>*pEntity<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>targetPos<sp/>=</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev.getDroppedPosition()<sp/>+<sp/>Vector3(<sp/>0,<sp/>ev.visibleHeight(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>cs-&gt;collide(<sp/>headPos,<sp/>targetPos<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>collide<sp/>above<sp/>does<sp/>not<sp/>require<sp/>closest<sp/>obstacle,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>obstacle<sp/>will<sp/>do<sp/>(i.e.<sp/>dist<sp/>may<sp/>be<sp/>too<sp/>big)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>sight<sp/>is<sp/>blocked,<sp/>move<sp/>on<sp/>to<sp/>next<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;<sp/>0.f)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>entityDirection<sp/>=<sp/>targetPos<sp/>-<sp/>headPos;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityDirection.normalise();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dotProduct<sp/>=<sp/>direction.dotProduct(<sp/>entityDirection<sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>acosf(<sp/>dotProduct<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(angle<sp/>&lt;<sp/>visionAngle)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canSee<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>time<sp/>through,<sp/>try<sp/>a<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetPos<sp/>=<sp/>ev.getDroppedPosition()<sp/>+</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3(0,<sp/>3.f<sp/>/<sp/>4.f<sp/>*<sp/><sp/>ev.visibleHeight(),<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(canSee)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newVisible.insert(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>difference<sp/>between<sp/>the<sp/>old<sp/>and<sp/>the<sp/>new<sp/>visible<sp/>entities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet::const_iterator<sp/>oldIter<sp/>=<sp/>oldVisible.begin();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet::const_iterator<sp/>newIter<sp/>=<sp/>newVisible.begin();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet::const_iterator<sp/>oldEnd<sp/>=<sp/>oldVisible.end();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet::const_iterator<sp/>newEnd<sp/>=<sp/>newVisible.end();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>iterating_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(oldIter<sp/>!=<sp/>oldEnd<sp/>&amp;&amp;<sp/>newIter<sp/>!=<sp/>newEnd)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*oldIter)<sp/>&lt;<sp/>(*newIter))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onStopSeeing&quot;</highlight><highlight class="normal">,<sp/>oldIter-&gt;get()<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oldIter;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*oldIter)<sp/>&gt;<sp/>(*newIter))</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onStartSeeing&quot;</highlight><highlight class="normal">,<sp/>newIter-&gt;get()<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++newIter;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oldIter;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++newIter;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>the<sp/>tails<sp/>if<sp/>we<sp/>have<sp/>not<sp/>stopped<sp/>iterating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(oldIter<sp/>!=<sp/>oldEnd)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onStopSeeing&quot;</highlight><highlight class="normal">,<sp/>oldIter-&gt;get()<sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oldIter;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(newIter<sp/>!=<sp/>newEnd)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onStartSeeing&quot;</highlight><highlight class="normal">,<sp/>newIter-&gt;get()<sp/>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++newIter;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>iterating_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iterationCancelled_)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>we<sp/>are<sp/>no<sp/>longer<sp/>being<sp/>controlled<sp/>by<sp/>the<sp/>same<sp/>vision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>controller,<sp/>so<sp/>delete<sp/>ourselves<sp/>unless<sp/>a<sp/>new<sp/>controller<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>come<sp/>along</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCancelled_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isNeeded())</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Note<sp/>that<sp/>the<sp/>onStopSeeing<sp/>method<sp/>is<sp/>not<sp/>called<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>entities<sp/>in<sp/>the<sp/>visible<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance.clear(<sp/>entity_<sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibleEntities_.swap(<sp/>newVisible<sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>still<sp/>iterating,<sp/>then<sp/>good,<sp/>swap<sp/>to<sp/>the<sp/>new<sp/>visible<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibleEntities_.swap(<sp/>newVisible<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visibleEntities_;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::callback(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>methodName,<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="408"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>SCRIPT_CALL_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_.callback(<sp/>methodName,<sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,<sp/>pEntity<sp/>),</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methodName,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::setVisibleEntities(</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::vector&lt;<sp/>EntityID<sp/>&gt;<sp/>&amp;<sp/>visibleEntities<sp/>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>be<sp/>called<sp/>before<sp/>we<sp/>have<sp/>any<sp/>visible<sp/>entities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>visibleEntities_.empty()<sp/>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::vector&lt;<sp/>EntityID<sp/>&gt;::const_iterator<sp/>iter<sp/>=<sp/>visibleEntities.begin();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::vector&lt;<sp/>EntityID<sp/>&gt;::const_iterator<sp/>endIter<sp/>=<sp/>visibleEntities.end();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>endIter)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>CellApp::instance().findEntity(<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibleEntities_.insert(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Need<sp/>to<sp/>document<sp/>this<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;EntityVision::setVisibleEntities:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>entity<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*iter<sp/>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.callback(<sp/></highlight><highlight class="stringliteral">&quot;onStopSeeingID&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(i)&quot;</highlight><highlight class="normal">,<sp/>*iter<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;onStopSeeingID:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::triggerVisionEnter(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>who<sp/>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity_.isReal())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_VISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(entitiesInVisionRange_.find(who)<sp/>==<sp/>entitiesInVisionRange_.end())</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entitiesInVisionRange_.find(who)<sp/>!=<sp/>entitiesInVisionRange_.end())</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who-&gt;py_debug(NULL);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who-&gt;debugDump();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.py_debug(NULL);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.debugDump();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntitySet::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Entities<sp/>in<sp/>Vision<sp/>Range\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>entitiesInVisionRange_.begin();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>entitiesInVisionRange_.end();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref>*<sp/>entity<sp/>=<sp/>(*iter).get();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Entity<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)entity-&gt;id(),<sp/>(int)entity-&gt;isDestroyed());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Visible<sp/>Entities\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>visibleEntities_.begin();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>visibleEntities_.end();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref>*<sp/>entity<sp/>=<sp/>(*iter).get();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Entity<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)entity-&gt;id(),<sp/>(int)entity-&gt;isDestroyed());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Seen<sp/>byEntities\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>seenByEntities_.begin();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>seenByEntities_.end();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref>*<sp/>entity<sp/>=<sp/>(*iter).get();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;Entity<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)entity-&gt;id(),<sp/>(int)entity-&gt;isDestroyed());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.space().<ref refid="class_space_1aa3f636634350495dcdc136dcc82bd08d" kindref="member">debugRangeList</ref>();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_MSG(&quot;Entity<sp/>%d<sp/>entered<sp/>vision<sp/>range<sp/>of<sp/>%d\n&quot;,</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)who-&gt;id(),<sp/>(int)entity_.id());</highlight></codeline>
<codeline lineno="504"><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/>EntityVision<sp/>whoEV<sp/>=<sp/>EntityVision::instance(<sp/>*who<sp/>);</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(entitiesInVisionRange_.find(who)<sp/>!=<sp/>entitiesInVisionRange_.end())</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(&quot;%d<sp/>already<sp/>in<sp/><sp/>%d&apos;s<sp/>vision<sp/>range!!!!\n&quot;,</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)who-&gt;id(),(int)entity_.id());</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(whoEV.seenByEntities().find(&amp;entity_)<sp/>!=<sp/>whoEV.seenByEntities().end())</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(&quot;%d<sp/>already<sp/>in<sp/>%d&apos;s<sp/>seen<sp/>bby<sp/>list!!!!\n&quot;,</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)entity_.id(),(int)who-&gt;id());</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityVision::instance(<sp/>*who<sp/>).seenByEntities().insert(<sp/>&amp;entity_<sp/>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG_VISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>who<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>entitiesInVisionRange_.insert(<sp/>who<sp/>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::triggerVisionLeave(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>who<sp/>)</highlight></codeline>
<codeline lineno="532"><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity_.isReal())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_VISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entitiesInVisionRange_.find(who)<sp/>==<sp/>entitiesInVisionRange_.end())</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who-&gt;py_debug(NULL);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who-&gt;debugDump();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.py_debug(NULL);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.debugDump();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.space().<ref refid="class_space_1aa3f636634350495dcdc136dcc82bd08d" kindref="member">debugRangeList</ref>();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(entitiesInVisionRange_.find(who)<sp/>!=<sp/>entitiesInVisionRange_.end())</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">#endif<sp/></highlight><highlight class="comment">//<sp/>DEBUG_VISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>May<sp/>want<sp/>to<sp/>consider<sp/>what<sp/>happens<sp/>when<sp/>an<sp/>entity<sp/>teleports.<sp/>We<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>want<sp/>to<sp/>call<sp/>script<sp/>here<sp/>because<sp/>we<sp/>may<sp/>be<sp/>iterating<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>visibleEntities_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>entitiesInVisionRange_.erase(<sp/>who<sp/>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_VISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityVision::instance(<sp/>*who<sp/>).seenByEntities().erase(<sp/>&amp;entity_<sp/>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref><sp/>whoEv<sp/>=<sp/>EntityVision::instance(<sp/>*who<sp/>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(entitiesInVisionRange_.find(who)<sp/>!=<sp/>entitiesInVisionRange_.end())</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;%d<sp/>didn&apos;t<sp/>delete<sp/>%d<sp/>from<sp/>vision<sp/>range!!!!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)entity_.id(),(int)who-&gt;id());</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whoEv.seenByEntities().find(&amp;entity_)<sp/>!=<sp/>whoEv.seenByEntities().end())</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(</highlight><highlight class="stringliteral">&quot;%d<sp/>didn&apos;t<sp/>delete<sp/>%d<sp/>from<sp/>seen<sp/>by<sp/>list!!!!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)who-&gt;id(),(int)entity_.id());</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG_VISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity.setVisionRange</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>alters<sp/>the<sp/>range<sp/>and<sp/>field<sp/>of<sp/>view<sp/>of<sp/>currently</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*<sp/><sp/>active<sp/>vision<sp/>controller.</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>TypeError<sp/>is<sp/>raised<sp/>if<sp/>it<sp/>is<sp/>not<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>and<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>does<sp/>not<sp/>have<sp/>a<sp/>vision<sp/>controller.</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>visionAngle<sp/>(float)<sp/>The<sp/>angle<sp/>of<sp/>the<sp/>vision<sp/>cone<sp/>in<sp/>radians.<sp/>The</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>of<sp/>view<sp/>is<sp/>double<sp/>this<sp/>value.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>range<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/>The<sp/>new<sp/>range<sp/>of<sp/>the<sp/>vision</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="597"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EntityVision::setVisionRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>visionAngle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity_.isRealToScript())</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>requires<sp/>an<sp/>entity<sp/>with<sp/>a<sp/>vision<sp/>controller.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>vision_-&gt;<ref refid="class_vision_controller_1a91f5ef302dd091694132dce91edf76d1" kindref="member">setVisionRange</ref>(<sp/>visionAngle,<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>controller<sp/>that<sp/>allows<sp/>the<sp/>Entity<sp/>to<sp/>(virtually)</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*<sp/><sp/>visualise<sp/>other<sp/>nearby<sp/>Entities<sp/>that<sp/>have<sp/>their<sp/>Entity.canBeSeen<sp/>attribute</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*<sp/><sp/>set<sp/>to<sp/>True,<sp/>invoking<sp/>a<sp/>notification<sp/>method<sp/>when<sp/>an<sp/>Entity<sp/>becomes<sp/>seen<sp/>and</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*<sp/><sp/>not<sp/>seen.<sp/><sp/>For<sp/>a<sp/>given<sp/>Entity,<sp/>only<sp/>one<sp/>vision<sp/>controller<sp/>should<sp/>be<sp/>active</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*<sp/><sp/>at<sp/>any<sp/>one<sp/>time.<sp/><sp/>Returns<sp/>a<sp/>ControllerID<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>cancel()<sp/>the</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*<sp/><sp/>&apos;vision&apos;.</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>notification<sp/>methods<sp/>are<sp/>not<sp/>called<sp/>when<sp/>&apos;vision&apos;<sp/>is<sp/>cancelled...</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>notification<sp/>methods<sp/>are<sp/>defined<sp/>as<sp/>follows;</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>onStartSeeing(<sp/>self,<sp/>entityNowSeen<sp/>):</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>onStopSeeing(<sp/>self,<sp/>entityNoLongerSeen<sp/>):</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>onStopSeeingID(<sp/>self,<sp/>entityIDNoLongerSeen<sp/>):</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.canBeSeen</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.addScanVision</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.cancel</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>angle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>angle<sp/>of<sp/>the<sp/>vision<sp/>cone<sp/>in</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radians.<sp/>The<sp/>field<sp/>of<sp/>view<sp/>is</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>this<sp/>value.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>range<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>range<sp/>of<sp/>the<sp/>vision</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>seeingHeight<sp/><sp/><sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>height<sp/>on<sp/>the<sp/>Entity<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>the<sp/>source<sp/>of<sp/>the<sp/>field<sp/>of</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view,<sp/>eg,<sp/>eye-level<sp/>of<sp/>current</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Model</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>period<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(optional<sp/>int)<sp/><sp/><sp/><sp/><sp/><sp/>How<sp/>often<sp/>the<sp/>vision<sp/>is<sp/>updated</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>ticks<sp/>(defaults<sp/>to<sp/>10<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sec)</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(integer)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>ID<sp/>of<sp/>the<sp/>newly<sp/>created</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controller</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="669"><highlight class="normal">PyObject*<sp/>EntityVision::addVision(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>seeingHeight,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>period,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userArg<sp/>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>ControllerID<sp/>controllerID;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DEBUG_MSG(&quot;EntityVision::addVision:<sp/>id=%d,<sp/>angle=%6.3f,<sp/>range=%6.3f,<sp/>period=%d\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>(int)entity_.id(),<sp/>angle,<sp/>range,<sp/>period);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity_.isRealToScript())</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range<sp/>&lt;=<sp/>0.f)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_AttributeError,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>start<sp/>vision<sp/>system<sp/>with<sp/>0<sp/>or<sp/>negative<sp/>range&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vision_)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">ControllerPtr</ref><sp/>pController<sp/>=</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller" kindref="compound">VisionController</ref>(<sp/>angle,<sp/>range,<sp/>seeingHeight,<sp/>period<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controllerID<sp/>=<sp/>entity_.addController(<sp/>pController,<sp/>userArg<sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>controllerID<sp/>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_AttributeError,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>have<sp/>a<sp/>vision<sp/>controller&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal">PyObject*<sp/>addScanVision(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updatePeriod<sp/>=<sp/>1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userArg<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity.addScanVision</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>creates<sp/>a<sp/>controller<sp/>that<sp/>allows<sp/>the<sp/>Entity<sp/>to<sp/>scan<sp/>left<sp/>and</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/><sp/>right<sp/>to<sp/>(virtually)<sp/>visualise<sp/>other<sp/>nearby<sp/>Entities,<sp/>invoking<sp/>a</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/><sp/>notification<sp/>method<sp/>when<sp/>an<sp/>Entity<sp/>becomes<sp/>seen<sp/>and<sp/>not<sp/>seen.<sp/><sp/>For<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*<sp/><sp/>Entity,<sp/>only<sp/>one<sp/>vision<sp/>controller<sp/>should<sp/>be<sp/>active<sp/>at<sp/>any<sp/>one<sp/>time.</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>a<sp/>ControllerID<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>cancel()<sp/>the<sp/>&apos;vision&apos;.<sp/><sp/>The</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*<sp/><sp/>notification<sp/>methods<sp/>are<sp/>not<sp/>called<sp/>when<sp/>&apos;vision&apos;<sp/>is<sp/>cancelled...<sp/><sp/>The</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*<sp/><sp/>notification<sp/>methods<sp/>are<sp/>defined<sp/>as<sp/>follows;</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>onStartSeeing(<sp/>self,<sp/>entityNowSeen<sp/>):</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>onStopSeeing(<sp/>self,<sp/>entityNoLongerSeen<sp/>):</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>def<sp/>onStopSeeingID(<sp/>self,<sp/>entityIDNoLongerSeen<sp/>):</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.addVision</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.cancel</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>angle<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>angle<sp/>of<sp/>the<sp/>vision<sp/>cone<sp/>in</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radians.<sp/>The<sp/>field<sp/>of<sp/>view<sp/>is</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>this<sp/>value.</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>range<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>range<sp/>of<sp/>the<sp/>vision</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>seeingHeight<sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>height<sp/>on<sp/>the<sp/>Entity<sp/>to<sp/>use<sp/>as</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>source<sp/>of<sp/>the<sp/>field<sp/>of<sp/>view,<sp/>eg,</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eye-level<sp/>of<sp/>current<sp/>Model</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>amplitude<sp/><sp/><sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>yaw<sp/>offset,<sp/>in<sp/>radians,</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>the<sp/>entity<sp/>scans.<sp/>That<sp/>is,<sp/>the<sp/>scan<sp/>range</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>[yaw<sp/>-<sp/>amplitude,<sp/>yaw<sp/>+<sp/>amplitude].</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>scanPeriod<sp/><sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>time<sp/>it<sp/>takes<sp/>to<sp/>make<sp/>each<sp/>scan</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>seconds</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>phaseOffset<sp/><sp/>(float)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Offset<sp/>(phase)<sp/>of<sp/>the<sp/>scan<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fraction.</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>updatePeriod<sp/>(optional<sp/>int)<sp/><sp/><sp/><sp/><sp/>How<sp/>often<sp/>the<sp/>vision<sp/>is<sp/>updated<sp/>in</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ticks<sp/>(defaults<sp/>to<sp/>1<sp/>==<sp/>1/10<sp/>sec)</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/><sp/>userData<sp/><sp/><sp/><sp/><sp/>(optional<sp/>object)<sp/><sp/>Data<sp/>that<sp/>is<sp/>passed<sp/>to<sp/>notification</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>method</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(integer)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>ID<sp/>of<sp/>the<sp/>newly<sp/>created</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controller</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="765"><highlight class="normal">PyObject*<sp/>EntityVision::addScanVision(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>seeingHeight,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>amplitude,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scanPeriod,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timeOffset,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updatePeriod,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userArg<sp/>)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>ControllerID<sp/>controllerID;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity_.isRealToScript())</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>range<sp/>&lt;=<sp/>0.f<sp/>)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_AttributeError,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>start<sp/>vision<sp/>system<sp/>with<sp/>0<sp/>or<sp/>negative<sp/>range&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>amplitude<sp/>&lt;=<sp/>0.f<sp/>||<sp/>scanPeriod<sp/>&lt;=<sp/>0.f<sp/>)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_AttributeError,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>start<sp/>vision<sp/>system<sp/>with<sp/>0<sp/>or<sp/>negative<sp/>amplitude<sp/>or<sp/>scan<sp/>period&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!vision_<sp/>)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">ControllerPtr</ref><sp/>pController<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_scan_vision_controller" kindref="compound">ScanVisionController</ref>(<sp/>angle,<sp/>range,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seeingHeight,<sp/>amplitude,<sp/>scanPeriod,<sp/>timeOffset,<sp/>updatePeriod<sp/>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>controllerID<sp/>=<sp/>entity_.addController(pController,<sp/>userArg);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>controllerID<sp/>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_AttributeError,<sp/></highlight><highlight class="stringliteral">&quot;Already<sp/>have<sp/>a<sp/>vision<sp/>controller&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::setVision(<sp/><ref refid="class_vision_controller" kindref="compound">VisionController</ref><sp/>*<sp/>vc<sp/>)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iterating_)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>not<sp/>iterating<sp/>then<sp/>it&apos;s<sp/>easy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vision_<sp/>=<sp/>vc;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isNeeded())</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Note<sp/>that<sp/>the<sp/>onStopSeeing<sp/>method<sp/>is<sp/>not<sp/>called<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>entities<sp/>in<sp/>the<sp/>visible<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance.clear(<sp/>entity_<sp/>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterationCancelled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vision_<sp/>=<sp/>vc;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>vision<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>entitiesInVisionRange_.clear();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>shouldDropVision_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vc)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Note<sp/>that<sp/>the<sp/>onStopSeeing<sp/>method<sp/>is<sp/>not<sp/>called<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remaining<sp/>entities<sp/>in<sp/>the<sp/>visible<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibleEntities_.clear();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastDropPosition_<sp/>=<sp/>Position3D(<sp/>100000.f,<sp/>0.f,<sp/>100000.f<sp/>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::setVisibility(<sp/><ref refid="class_visibility_controller" kindref="compound">VisibilityController</ref><sp/>*<sp/>vc<sp/>)</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>visibility_<sp/>=<sp/>vc;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>iteration<sp/>was<sp/>cancelled<sp/>then<sp/>we<sp/>will<sp/>check<sp/>isNeeded()<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>updateVisibleEntities().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!iterationCancelled_<sp/>&amp;&amp;<sp/>!this-&gt;isNeeded())</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance.clear(<sp/>entity_<sp/>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EntityVision::visibleHeight()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="862"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visibility_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visibility_-&gt;<ref refid="class_visibility_controller_1acbf78ec563c767f1bf3594057599646c" kindref="member">visibleHeight</ref>();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::visibleHeight(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>)</highlight></codeline>
<codeline lineno="874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scripts<sp/>never<sp/>get<sp/>this<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>entity_.isReal()<sp/>);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visibility_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isEqual(<sp/>visibility_-&gt;<ref refid="class_visibility_controller_1acbf78ec563c767f1bf3594057599646c" kindref="member">visibleHeight</ref>(),<sp/>h<sp/>))</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visibility_-&gt;<ref refid="class_visibility_controller_1acbf78ec563c767f1bf3594057599646c" kindref="member">visibleHeight</ref>(<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.addController(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_visibility_controller" kindref="compound">VisibilityController</ref>(<sp/>h<sp/>),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>visibility_<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EntityVision::canBeSeen()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="897"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visibility_<sp/>!=<sp/>NULL;</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::canBeSeen(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v<sp/>)</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scripts<sp/>never<sp/>get<sp/>this<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>entity_.isReal()<sp/>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((visibility_<sp/>!=<sp/>NULL)<sp/>==<sp/>v)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visibility_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.addController(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_visibility_controller" kindref="compound">VisibilityController</ref>(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>visibility_<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_.delController(<sp/>visibility_-&gt;<ref refid="class_controller_1a8c2f39fc63cd53d3a098b14310cdbc6c" kindref="member">id</ref>()<sp/>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;this&apos;<sp/>may<sp/>have<sp/>been<sp/>deleted<sp/>at<sp/>this<sp/>stage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MF_ASSERT(<sp/>visibility_<sp/>==<sp/>NULL<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EntityVision::canBeSeen(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EntityVision::instance.exists(<sp/>*pEntity<sp/>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EntityVision::instance(<sp/>*pEntity<sp/>).canBeSeen();</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal">Position3D<sp/>EntityVision::getDroppedPosition()</highlight></codeline>
<codeline lineno="940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shouldDropVision_)</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entity_.position();</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isEqual(<sp/>lastDropPosition_.x,<sp/>entity_.position().x<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!isEqual(<sp/>lastDropPosition_.z,<sp/>entity_.position().z<sp/>))</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastDropPosition_<sp/>=<sp/>entity_.getGroundPosition();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastDropPosition_;</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EntityVision::seeingHeight()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="960"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vision_-&gt;seeingHeight();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::seeingHeight(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scripts<sp/>never<sp/>get<sp/>this<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>entity_.isReal()<sp/>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isEqual(<sp/>vision_-&gt;seeingHeight(),<sp/>h<sp/>))</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vision_-&gt;seeingHeight(<sp/>h<sp/>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EntityVision::fieldOfView()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="993"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vision_-&gt;visionAngle();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::fieldOfView(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>entity_.isReal()<sp/>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)<sp/>vision_-&gt;<ref refid="class_vision_controller_1a91f5ef302dd091694132dce91edf76d1" kindref="member">setVisionRange</ref>(<sp/>v,<sp/>vision_-&gt;visionRange()<sp/>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EntityVision::visionAngle()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1013"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vision_-&gt;fieldOfView();</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::visionAngle(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>entity_.isReal()<sp/>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)<sp/>vision_-&gt;<ref refid="class_vision_controller_1a91f5ef302dd091694132dce91edf76d1" kindref="member">setVisionRange</ref>(<sp/>v,<sp/>vision_-&gt;visionRange()<sp/>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>EntityVision::visionRange()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1031"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vision_-&gt;visionRange();</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EntityVision::visionRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>entity_.isReal()<sp/>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vision_<sp/>!=<sp/>NULL)<sp/>vision_-&gt;<ref refid="class_vision_controller_1a91f5ef302dd091694132dce91edf76d1" kindref="member">setVisionRange</ref>(<sp/>vision_-&gt;visionAngle(),<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="comment">//<sp/>entity_vision.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellapp/entity_vision.cpp"/>
  </compounddef>
</doxygen>
