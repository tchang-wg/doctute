<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cellapp_2entity_8cpp" kind="file" language="C++">
    <compoundname>entity.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="cellapp_2entity_8hpp" local="yes">entity.hpp</includes>
    <includes refid="ghost__entity__stream__helper_8hpp" local="yes">ghost_entity_stream_helper.hpp</includes>
    <includes refid="buffered__ghost__message__factory_8hpp" local="yes">buffered_ghost_message_factory.hpp</includes>
    <includes refid="buffered__ghost__messages_8hpp" local="yes">buffered_ghost_messages.hpp</includes>
    <includes refid="cell_8hpp" local="yes">cell.hpp</includes>
    <includes refid="cell__app__channels_8hpp" local="yes">cell_app_channels.hpp</includes>
    <includes refid="cell__chunk_8hpp" local="yes">cell_chunk.hpp</includes>
    <includes refid="cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <includes refid="cellapp__config_8hpp" local="yes">cellapp_config.hpp</includes>
    <includes refid="controllers_8hpp" local="yes">controllers.hpp</includes>
    <includes refid="entity__extra_8hpp" local="yes">entity_extra.hpp</includes>
    <includes refid="entity__population_8hpp" local="yes">entity_population.hpp</includes>
    <includes refid="entity__range__list__node_8hpp" local="yes">entity_range_list_node.hpp</includes>
    <includes refid="cellapp_2mailbox_8hpp" local="yes">mailbox.hpp</includes>
    <includes refid="noise__config_8hpp" local="yes">noise_config.hpp</includes>
    <includes refid="passengers_8hpp" local="yes">passengers.hpp</includes>
    <includes refid="passenger__extra_8hpp" local="yes">passenger_extra.hpp</includes>
    <includes refid="portal__config__controller_8hpp" local="yes">portal_config_controller.hpp</includes>
    <includes refid="py__client_8hpp" local="yes">py_client.hpp</includes>
    <includes refid="range__list__appeal__trigger_8hpp" local="yes">range_list_appeal_trigger.hpp</includes>
    <includes refid="range__trigger_8hpp" local="yes">range_trigger.hpp</includes>
    <includes refid="real__caller_8hpp" local="yes">real_caller.hpp</includes>
    <includes refid="real__entity_8hpp" local="yes">real_entity.hpp</includes>
    <includes refid="replay__data__collector_8hpp" local="yes">replay_data_collector.hpp</includes>
    <includes refid="space_8hpp" local="yes">space.hpp</includes>
    <includes refid="witness_8hpp" local="yes">witness.hpp</includes>
    <includes refid="baseapp__int__interface_8hpp" local="yes">baseapp/baseapp_int_interface.hpp</includes>
    <includes local="yes">delegate_interface/entity_delegate_cell.hpp</includes>
    <includes local="yes">chunk/chunk_space.hpp</includes>
    <includes local="yes">chunk/chunk_obstacle.hpp</includes>
    <includes local="yes">cstdmf/debug.hpp</includes>
    <includes local="yes">cstdmf/memory_stream.hpp</includes>
    <includes local="yes">cstdmf/stringmap.hpp</includes>
    <includes local="yes">cstdmf/profiler.hpp</includes>
    <includes local="yes">common/closest_triangle.hpp</includes>
    <includes local="yes">connection/baseapp_ext_interface.hpp</includes>
    <includes local="yes">connection/client_interface.hpp</includes>
    <includes local="yes">entitydef/entity_delegate_helpers.hpp</includes>
    <includes local="yes">entitydef/entity_description_map.hpp</includes>
    <includes local="yes">entitydef/property_change.hpp</includes>
    <includes local="yes">entitydef/script_data_sink.hpp</includes>
    <includes local="yes">entitydef/script_data_source.hpp</includes>
    <includes local="yes">entitydef_script/py_delegate.hpp</includes>
    <includes local="yes">delegate_interface/game_delegate.hpp</includes>
    <includes local="yes">network/bundle.hpp</includes>
    <includes local="yes">network/channel_sender.hpp</includes>
    <includes local="yes">network/compression_stream.hpp</includes>
    <includes local="yes">network/exposed_message_range.hpp</includes>
    <includes local="yes">physics2/worldtri.hpp</includes>
    <includes local="yes">pyscript/pyobject_base.hpp</includes>
    <includes local="yes">resmgr/bwresource.hpp</includes>
    <includes local="yes">server/real_entity_stream_helper.hpp</includes>
    <includes local="yes">server/client_method_calling_flags.hpp</includes>
    <includes local="yes">server/util.hpp</includes>
    <includes local="yes">server/writedb.hpp</includes>
    <includes local="yes">server/event_history_stats.hpp</includes>
    <includes refid="face__entity__controller_8hpp" local="yes">face_entity_controller.hpp</includes>
    <includes refid="timer__controller_8hpp" local="yes">timer_controller.hpp</includes>
    <includes refid="turn__controller_8hpp" local="yes">turn_controller.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes refid="entity_8ipp" local="yes">entity.ipp</includes>
    <includes local="yes">pyscript/pywatcher.hpp</includes>
    <includes local="yes">pyscript/script_math.hpp</includes>
    <incdepgraph>
      <node id="8426">
        <label>entitydef/script_data_sink.hpp</label>
      </node>
      <node id="8432">
        <label>network/compression_stream.hpp</label>
      </node>
      <node id="8413">
        <label>connection/common_baseapp_interface.hpp</label>
      </node>
      <node id="8320">
        <label>buffered_ghost_messages.hpp</label>
        <link refid="buffered__ghost__messages_8hpp_source"/>
        <childnode refid="8321" relation="include">
        </childnode>
        <childnode refid="8278" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
      </node>
      <node id="8436">
        <label>server/real_entity_stream_helper.hpp</label>
      </node>
      <node id="8440">
        <label>face_entity_controller.hpp</label>
        <link refid="face__entity__controller_8hpp_source"/>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8393" relation="include">
        </childnode>
      </node>
      <node id="8354">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="8388">
        <label>real_entity.hpp</label>
        <link refid="real__entity_8hpp_source"/>
        <childnode refid="8277" relation="include">
        </childnode>
        <childnode refid="8278" relation="include">
        </childnode>
        <childnode refid="8389" relation="include">
        </childnode>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8390" relation="include">
        </childnode>
        <childnode refid="8290" relation="include">
        </childnode>
        <childnode refid="8297" relation="include">
        </childnode>
        <childnode refid="8375" relation="include">
        </childnode>
        <childnode refid="8393" relation="include">
        </childnode>
        <childnode refid="8274" relation="include">
        </childnode>
        <childnode refid="8376" relation="include">
        </childnode>
        <childnode refid="8276" relation="include">
        </childnode>
        <childnode refid="8394" relation="include">
        </childnode>
        <childnode refid="8395" relation="include">
        </childnode>
        <childnode refid="8396" relation="include">
        </childnode>
      </node>
      <node id="8407">
        <label>chunk_loading/edge_geometry_mappings.hpp</label>
      </node>
      <node id="8442">
        <label>turn_controller.hpp</label>
        <link refid="turn__controller_8hpp_source"/>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8313" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8393" relation="include">
        </childnode>
        <childnode refid="8443" relation="include">
        </childnode>
      </node>
      <node id="8326">
        <label>math/rectt.hpp</label>
      </node>
      <node id="8333">
        <label>functional</label>
      </node>
      <node id="8405">
        <label>scene/collision_scene_view.hpp</label>
      </node>
      <node id="8335">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="8311">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="8361">
        <label>py_spaces.hpp</label>
        <link refid="cellapp_2py__spaces_8hpp_source"/>
        <childnode refid="8276" relation="include">
        </childnode>
        <childnode refid="8362" relation="include">
        </childnode>
        <childnode refid="8363" relation="include">
        </childnode>
      </node>
      <node id="8421">
        <label>common/closest_triangle.hpp</label>
      </node>
      <node id="8300">
        <label>network/misc.hpp</label>
      </node>
      <node id="8444">
        <label>pyscript/pywatcher.hpp</label>
      </node>
      <node id="8305">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="8385">
        <label>range_list_appeal_trigger.hpp</label>
        <link refid="range__list__appeal__trigger_8hpp_source"/>
        <childnode refid="8386" relation="include">
        </childnode>
      </node>
      <node id="8374">
        <label>float.h</label>
      </node>
      <node id="8441">
        <label>timer_controller.hpp</label>
        <link refid="timer__controller_8hpp_source"/>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8306" relation="include">
        </childnode>
        <childnode refid="8313" relation="include">
        </childnode>
      </node>
      <node id="8339">
        <label>chunk/chunk_cache.hpp</label>
      </node>
      <node id="8277">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="8352">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="8279">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="8415">
        <label>baseapp_int_interface_stream_helpers.hpp</label>
        <link refid="baseapp__int__interface__stream__helpers_8hpp_source"/>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8416" relation="include">
        </childnode>
      </node>
      <node id="8373">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="8344">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="8273">
        <label>script/first_include.hpp</label>
      </node>
      <node id="8414">
        <label>buffered_input_message_handler.hpp</label>
        <link refid="baseapp_2buffered__input__message__handler_8hpp_source"/>
      </node>
      <node id="8434">
        <label>pyscript/pyobject_base.hpp</label>
      </node>
      <node id="8321">
        <label>buffered_ghost_messages_for_entity.hpp</label>
        <link refid="buffered__ghost__messages__for__entity_8hpp_source"/>
        <childnode refid="8322" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
      </node>
      <node id="8360">
        <label>type_system/context.hpp</label>
      </node>
      <node id="8288">
        <label>script/script_object.hpp</label>
      </node>
      <node id="8443">
        <label>math/angle.hpp</label>
      </node>
      <node id="8362">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="8371">
        <label>entity_range_list_node.hpp</label>
        <link refid="entity__range__list__node_8hpp_source"/>
        <childnode refid="8372" relation="include">
        </childnode>
      </node>
      <node id="8430">
        <label>network/bundle.hpp</label>
      </node>
      <node id="8323">
        <label>cell.hpp</label>
        <link refid="cell_8hpp_source"/>
        <childnode refid="8277" relation="include">
        </childnode>
        <childnode refid="8278" relation="include">
        </childnode>
        <childnode refid="8324" relation="include">
        </childnode>
        <childnode refid="8327" relation="include">
        </childnode>
        <childnode refid="8291" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8328" relation="include">
        </childnode>
        <childnode refid="8329" relation="include">
        </childnode>
        <childnode refid="8330" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8331" relation="include">
        </childnode>
        <childnode refid="8332" relation="include">
        </childnode>
        <childnode refid="8333" relation="include">
        </childnode>
      </node>
      <node id="8423">
        <label>connection/client_interface.hpp</label>
      </node>
      <node id="8398">
        <label>space.hpp</label>
        <link refid="space_8hpp_source"/>
        <childnode refid="8278" relation="include">
        </childnode>
        <childnode refid="8399" relation="include">
        </childnode>
        <childnode refid="8400" relation="include">
        </childnode>
        <childnode refid="8297" relation="include">
        </childnode>
        <childnode refid="8352" relation="include">
        </childnode>
        <childnode refid="8407" relation="include">
        </childnode>
        <childnode refid="8328" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8362" relation="include">
        </childnode>
        <childnode refid="8403" relation="include">
        </childnode>
      </node>
      <node id="8278">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="8279" relation="include">
        </childnode>
        <childnode refid="8280" relation="include">
        </childnode>
        <childnode refid="8281" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8283" relation="include">
        </childnode>
      </node>
      <node id="8412">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="8382">
        <label>chunk/chunk_space.hpp</label>
      </node>
      <node id="8292">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="8286">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="8324">
        <label>cell_info.hpp</label>
        <link refid="cell__info_8hpp_source"/>
        <childnode refid="8325" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
      </node>
      <node id="8365">
        <label>server/entity_app_config.hpp</label>
      </node>
      <node id="8375">
        <label>mailbox.hpp</label>
        <link refid="cellapp_2mailbox_8hpp_source"/>
        <childnode refid="8293" relation="include">
        </childnode>
        <childnode refid="8307" relation="include">
        </childnode>
        <childnode refid="8376" relation="include">
        </childnode>
        <childnode refid="8276" relation="include">
        </childnode>
        <childnode refid="8313" relation="include">
        </childnode>
        <childnode refid="8314" relation="include">
        </childnode>
        <childnode refid="8290" relation="include">
        </childnode>
      </node>
      <node id="8399">
        <label>cell_range_list.hpp</label>
        <link refid="cell__range__list_8hpp_source"/>
        <childnode refid="8372" relation="include">
        </childnode>
      </node>
      <node id="8282">
        <label>server/common.hpp</label>
      </node>
      <node id="8404">
        <label>chunk_space_collision_provider.hpp</label>
        <link refid="chunk__space__collision__provider_8hpp_source"/>
        <childnode refid="8303" relation="include">
        </childnode>
        <childnode refid="8382" relation="include">
        </childnode>
        <childnode refid="8405" relation="include">
        </childnode>
        <childnode refid="8406" relation="include">
        </childnode>
      </node>
      <node id="8289">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="8394">
        <label>server/auto_backup_and_archive.hpp</label>
      </node>
      <node id="8381">
        <label>portal_config_controller.hpp</label>
        <link refid="portal__config__controller_8hpp_source"/>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8382" relation="include">
        </childnode>
        <childnode refid="8306" relation="include">
        </childnode>
        <childnode refid="8312" relation="include">
        </childnode>
      </node>
      <node id="8356">
        <label>pyscript/pickler.hpp</label>
      </node>
      <node id="8310">
        <label>entitydef/py_volatile_info.hpp</label>
      </node>
      <node id="8302">
        <label>entity_callback_buffer.hpp</label>
        <link refid="entity__callback__buffer_8hpp_source"/>
        <childnode refid="8303" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8288" relation="include">
        </childnode>
      </node>
      <node id="8433">
        <label>network/exposed_message_range.hpp</label>
      </node>
      <node id="8403">
        <label>pyscript/script_math.hpp</label>
      </node>
      <node id="8327">
        <label>cell_profiler.hpp</label>
        <link refid="cell__profiler_8hpp_source"/>
        <childnode refid="8315" relation="include">
        </childnode>
      </node>
      <node id="8395">
        <label>server/util.hpp</label>
      </node>
      <node id="8287">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="8313">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="8425">
        <label>entitydef/property_change.hpp</label>
      </node>
      <node id="8298">
        <label>entitydef/data_description.hpp</label>
      </node>
      <node id="8291">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="8387">
        <label>real_caller.hpp</label>
        <link refid="real__caller_8hpp_source"/>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8276" relation="include">
        </childnode>
      </node>
      <node id="8329">
        <label>math/vector2.hpp</label>
      </node>
      <node id="8290">
        <label>entity_type.hpp</label>
        <link refid="cellapp_2entity__type_8hpp_source"/>
        <childnode refid="8275" relation="include">
        </childnode>
        <childnode refid="8291" relation="include">
        </childnode>
        <childnode refid="8292" relation="include">
        </childnode>
        <childnode refid="8293" relation="include">
        </childnode>
        <childnode refid="8294" relation="include">
        </childnode>
        <childnode refid="8295" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8296" relation="include">
        </childnode>
        <childnode refid="8277" relation="include">
        </childnode>
      </node>
      <node id="8416">
        <label>network/stream_helpers.hpp</label>
      </node>
      <node id="8376">
        <label>network/udp_channel.hpp</label>
      </node>
      <node id="8439">
        <label>server/event_history_stats.hpp</label>
      </node>
      <node id="8390">
        <label>entity_cache.hpp</label>
        <link refid="entity__cache_8hpp_source"/>
        <childnode refid="8391" relation="include">
        </childnode>
        <childnode refid="8286" relation="include">
        </childnode>
        <childnode refid="8281" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8274" relation="include">
        </childnode>
        <childnode refid="8364" relation="include">
        </childnode>
        <childnode refid="8392" relation="include">
        </childnode>
        <childnode refid="8316" relation="include">
        </childnode>
      </node>
      <node id="8357">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="8393">
        <label>server/updatable.hpp</label>
      </node>
      <node id="8306">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="8308">
        <label>entitydef/property_event_stamps.hpp</label>
      </node>
      <node id="8392">
        <label>limits.h</label>
      </node>
      <node id="8438">
        <label>server/writedb.hpp</label>
      </node>
      <node id="8402">
        <label>math/boundbox.hpp</label>
      </node>
      <node id="8330">
        <label>math/vector3.hpp</label>
      </node>
      <node id="8312">
        <label>physics2/worldtri.hpp</label>
      </node>
      <node id="8317">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="8429">
        <label>delegate_interface/game_delegate.hpp</label>
      </node>
      <node id="8424">
        <label>entitydef/entity_delegate_helpers.hpp</label>
      </node>
      <node id="8401">
        <label>physical_space.hpp</label>
        <link refid="physical__space_8hpp_source"/>
        <childnode refid="8326" relation="include">
        </childnode>
        <childnode refid="8402" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8301" relation="include">
        </childnode>
        <childnode refid="8403" relation="include">
        </childnode>
      </node>
      <node id="8316">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="8372">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="8344" relation="include">
        </childnode>
        <childnode refid="8373" relation="include">
        </childnode>
        <childnode refid="8374" relation="include">
        </childnode>
        <childnode refid="8291" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
      </node>
      <node id="8420">
        <label>cstdmf/profiler.hpp</label>
      </node>
      <node id="8276">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="8409">
        <label>witness.hpp</label>
        <link refid="witness_8hpp_source"/>
        <childnode refid="8388" relation="include">
        </childnode>
        <childnode refid="8390" relation="include">
        </childnode>
        <childnode refid="8281" relation="include">
        </childnode>
        <childnode refid="8410" relation="include">
        </childnode>
      </node>
      <node id="8345">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="8411">
        <label>baseapp/baseapp_int_interface.hpp</label>
        <link refid="baseapp__int__interface_8hpp_source"/>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8412" relation="include">
        </childnode>
        <childnode refid="8283" relation="include">
        </childnode>
        <childnode refid="8413" relation="include">
        </childnode>
        <childnode refid="8414" relation="include">
        </childnode>
        <childnode refid="8415" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8281" relation="include">
        </childnode>
        <childnode refid="8417" relation="include">
        </childnode>
      </node>
      <node id="8342">
        <label>cstdmf/safe_static.hpp</label>
      </node>
      <node id="8349">
        <label>emergency_throttle.hpp</label>
        <link refid="emergency__throttle_8hpp_source"/>
        <childnode refid="8287" relation="include">
        </childnode>
      </node>
      <node id="8322">
        <label>buffered_ghost_message_queue.hpp</label>
        <link refid="buffered__ghost__message__queue_8hpp_source"/>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8301" relation="include">
        </childnode>
      </node>
      <node id="8315">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="8379">
        <label>passengers.hpp</label>
        <link refid="passengers_8hpp_source"/>
        <childnode refid="8367" relation="include">
        </childnode>
      </node>
      <node id="8383">
        <label>py_client.hpp</label>
        <link refid="py__client_8hpp_source"/>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8276" relation="include">
        </childnode>
        <childnode refid="8384" relation="include">
        </childnode>
      </node>
      <node id="8275">
        <label>Python.h</label>
      </node>
      <node id="8422">
        <label>connection/baseapp_ext_interface.hpp</label>
      </node>
      <node id="8297">
        <label>history_event.hpp</label>
        <link refid="history__event_8hpp_source"/>
        <childnode refid="8298" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8299" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
        <childnode refid="8301" relation="include">
        </childnode>
        <childnode refid="8286" relation="include">
        </childnode>
      </node>
      <node id="8301">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="8340">
        <label>cellapp.hpp</label>
        <link refid="cellapp_8hpp_source"/>
        <childnode refid="8275" relation="include">
        </childnode>
        <childnode refid="8277" relation="include">
        </childnode>
        <childnode refid="8341" relation="include">
        </childnode>
        <childnode refid="8278" relation="include">
        </childnode>
        <childnode refid="8343" relation="include">
        </childnode>
        <childnode refid="8348" relation="include">
        </childnode>
        <childnode refid="8349" relation="include">
        </childnode>
        <childnode refid="8350" relation="include">
        </childnode>
        <childnode refid="8352" relation="include">
        </childnode>
        <childnode refid="8353" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8354" relation="include">
        </childnode>
        <childnode refid="8335" relation="include">
        </childnode>
        <childnode refid="8292" relation="include">
        </childnode>
        <childnode refid="8355" relation="include">
        </childnode>
        <childnode refid="8356" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8357" relation="include">
        </childnode>
        <childnode refid="8358" relation="include">
        </childnode>
        <childnode refid="8359" relation="include">
        </childnode>
        <childnode refid="8288" relation="include">
        </childnode>
        <childnode refid="8360" relation="include">
        </childnode>
        <childnode refid="8361" relation="include">
        </childnode>
      </node>
      <node id="8309">
        <label>entitydef/property_owner.hpp</label>
      </node>
      <node id="8431">
        <label>network/channel_sender.hpp</label>
      </node>
      <node id="8355">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="8284">
        <label>controller.hpp</label>
        <link refid="controller_8hpp_source"/>
        <childnode refid="8275" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8286" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8288" relation="include">
        </childnode>
        <childnode refid="8289" relation="include">
        </childnode>
        <childnode refid="8277" relation="include">
        </childnode>
      </node>
      <node id="8347">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="8296">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="8428">
        <label>entitydef_script/py_delegate.hpp</label>
      </node>
      <node id="8295">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="8272">
        <label>cellapp/entity.cpp</label>
        <link refid="cellapp/entity.cpp"/>
        <childnode refid="8273" relation="include">
        </childnode>
        <childnode refid="8274" relation="include">
        </childnode>
        <childnode refid="8318" relation="include">
        </childnode>
        <childnode refid="8319" relation="include">
        </childnode>
        <childnode refid="8320" relation="include">
        </childnode>
        <childnode refid="8323" relation="include">
        </childnode>
        <childnode refid="8334" relation="include">
        </childnode>
        <childnode refid="8337" relation="include">
        </childnode>
        <childnode refid="8340" relation="include">
        </childnode>
        <childnode refid="8364" relation="include">
        </childnode>
        <childnode refid="8366" relation="include">
        </childnode>
        <childnode refid="8367" relation="include">
        </childnode>
        <childnode refid="8368" relation="include">
        </childnode>
        <childnode refid="8371" relation="include">
        </childnode>
        <childnode refid="8375" relation="include">
        </childnode>
        <childnode refid="8377" relation="include">
        </childnode>
        <childnode refid="8379" relation="include">
        </childnode>
        <childnode refid="8380" relation="include">
        </childnode>
        <childnode refid="8381" relation="include">
        </childnode>
        <childnode refid="8383" relation="include">
        </childnode>
        <childnode refid="8385" relation="include">
        </childnode>
        <childnode refid="8386" relation="include">
        </childnode>
        <childnode refid="8387" relation="include">
        </childnode>
        <childnode refid="8388" relation="include">
        </childnode>
        <childnode refid="8397" relation="include">
        </childnode>
        <childnode refid="8398" relation="include">
        </childnode>
        <childnode refid="8409" relation="include">
        </childnode>
        <childnode refid="8411" relation="include">
        </childnode>
        <childnode refid="8418" relation="include">
        </childnode>
        <childnode refid="8382" relation="include">
        </childnode>
        <childnode refid="8419" relation="include">
        </childnode>
        <childnode refid="8373" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8292" relation="include">
        </childnode>
        <childnode refid="8420" relation="include">
        </childnode>
        <childnode refid="8421" relation="include">
        </childnode>
        <childnode refid="8422" relation="include">
        </childnode>
        <childnode refid="8423" relation="include">
        </childnode>
        <childnode refid="8424" relation="include">
        </childnode>
        <childnode refid="8355" relation="include">
        </childnode>
        <childnode refid="8425" relation="include">
        </childnode>
        <childnode refid="8426" relation="include">
        </childnode>
        <childnode refid="8427" relation="include">
        </childnode>
        <childnode refid="8428" relation="include">
        </childnode>
        <childnode refid="8429" relation="include">
        </childnode>
        <childnode refid="8430" relation="include">
        </childnode>
        <childnode refid="8431" relation="include">
        </childnode>
        <childnode refid="8432" relation="include">
        </childnode>
        <childnode refid="8433" relation="include">
        </childnode>
        <childnode refid="8312" relation="include">
        </childnode>
        <childnode refid="8434" relation="include">
        </childnode>
        <childnode refid="8435" relation="include">
        </childnode>
        <childnode refid="8436" relation="include">
        </childnode>
        <childnode refid="8437" relation="include">
        </childnode>
        <childnode refid="8395" relation="include">
        </childnode>
        <childnode refid="8438" relation="include">
        </childnode>
        <childnode refid="8439" relation="include">
        </childnode>
        <childnode refid="8440" relation="include">
        </childnode>
        <childnode refid="8441" relation="include">
        </childnode>
        <childnode refid="8442" relation="include">
        </childnode>
        <childnode refid="8331" relation="include">
        </childnode>
        <childnode refid="8444" relation="include">
        </childnode>
        <childnode refid="8403" relation="include">
        </childnode>
      </node>
      <node id="8341">
        <label>cellapp_death_listener.hpp</label>
        <link refid="cellapp__death__listener_8hpp_source"/>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8301" relation="include">
        </childnode>
        <childnode refid="8342" relation="include">
        </childnode>
      </node>
      <node id="8337">
        <label>cell_chunk.hpp</label>
        <link refid="cell__chunk_8hpp_source"/>
        <childnode refid="8338" relation="include">
        </childnode>
        <childnode refid="8339" relation="include">
        </childnode>
      </node>
      <node id="8377">
        <label>noise_config.hpp</label>
        <link refid="noise__config_8hpp_source"/>
        <childnode refid="8378" relation="include">
        </childnode>
      </node>
      <node id="8338">
        <label>chunk/chunk.hpp</label>
      </node>
      <node id="8386">
        <label>range_trigger.hpp</label>
        <link refid="range__trigger_8hpp_source"/>
        <childnode refid="8371" relation="include">
        </childnode>
      </node>
      <node id="8369">
        <label>ack_cell_app_death_helper.hpp</label>
        <link refid="ack__cell__app__death__helper_8hpp_source"/>
        <childnode refid="8274" relation="include">
        </childnode>
        <childnode refid="8370" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
      </node>
      <node id="8406">
        <label>scene/scene_provider.hpp</label>
      </node>
      <node id="8380">
        <label>passenger_extra.hpp</label>
        <link refid="passenger__extra_8hpp_source"/>
        <childnode refid="8367" relation="include">
        </childnode>
      </node>
      <node id="8358">
        <label>server/id_client.hpp</label>
      </node>
      <node id="8294">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="8328">
        <label>math/math_extra.hpp</label>
      </node>
      <node id="8397">
        <label>replay_data_collector.hpp</label>
        <link refid="replay__data__collector_8hpp_source"/>
        <childnode refid="8317" relation="include">
        </childnode>
        <childnode refid="8316" relation="include">
        </childnode>
        <childnode refid="8291" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8287" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
      </node>
      <node id="8396">
        <label>math.h</label>
      </node>
      <node id="8285">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="8353">
        <label>chunk_loading/preloaded_chunk_space.hpp</label>
      </node>
      <node id="8283">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="8391">
        <label>aoi_update_schemes.hpp</label>
        <link refid="aoi__update__schemes_8hpp_source"/>
        <childnode refid="8344" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
        <childnode refid="8291" relation="include">
        </childnode>
      </node>
      <node id="8319">
        <label>buffered_ghost_message_factory.hpp</label>
        <link refid="buffered__ghost__message__factory_8hpp_source"/>
        <childnode refid="8285" relation="include">
        </childnode>
      </node>
      <node id="8370">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="8332">
        <label>deque</label>
      </node>
      <node id="8389">
        <label>cell_app_channel.hpp</label>
        <link refid="cell__app__channel_8hpp_source"/>
        <childnode refid="8346" relation="include">
        </childnode>
      </node>
      <node id="8366">
        <label>controllers.hpp</label>
        <link refid="controllers_8hpp_source"/>
        <childnode refid="8275" relation="include">
        </childnode>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
      </node>
      <node id="8293">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="8427">
        <label>entitydef/script_data_source.hpp</label>
      </node>
      <node id="8281">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="8378">
        <label>server/server_app_option.hpp</label>
      </node>
      <node id="8435">
        <label>resmgr/bwresource.hpp</label>
      </node>
      <node id="8303">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="8437">
        <label>server/client_method_calling_flags.hpp</label>
      </node>
      <node id="8343">
        <label>cellappmgr_gateway.hpp</label>
        <link refid="cellappmgr__gateway_8hpp_source"/>
        <childnode refid="8344" relation="include">
        </childnode>
        <childnode refid="8345" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8346" relation="include">
        </childnode>
        <childnode refid="8300" relation="include">
        </childnode>
        <childnode refid="8282" relation="include">
        </childnode>
        <childnode refid="8347" relation="include">
        </childnode>
        <childnode refid="8289" relation="include">
        </childnode>
      </node>
      <node id="8364">
        <label>cellapp_config.hpp</label>
        <link refid="cellapp__config_8hpp_source"/>
        <childnode refid="8365" relation="include">
        </childnode>
      </node>
      <node id="8314">
        <label>server/backup_hash.hpp</label>
      </node>
      <node id="8417">
        <label>connection/common_client_interface.hpp</label>
      </node>
      <node id="8384">
        <label>server/recording_options.hpp</label>
      </node>
      <node id="8367">
        <label>entity_extra.hpp</label>
        <link refid="entity__extra_8hpp_source"/>
        <childnode refid="8274" relation="include">
        </childnode>
      </node>
      <node id="8348">
        <label>cells.hpp</label>
        <link refid="cells_8hpp_source"/>
        <childnode refid="8345" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
      </node>
      <node id="8359">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="8304">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="8280">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="8350">
        <label>profile.hpp</label>
        <link refid="profile_8hpp_source"/>
        <childnode refid="8351" relation="include">
        </childnode>
      </node>
      <node id="8368">
        <label>entity_population.hpp</label>
        <link refid="entity__population_8hpp_source"/>
        <childnode refid="8369" relation="include">
        </childnode>
        <childnode refid="8341" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
      </node>
      <node id="8331">
        <label>algorithm</label>
      </node>
      <node id="8410">
        <label>common/space_geometry_mappings.hpp</label>
      </node>
      <node id="8274">
        <label>entity.hpp</label>
        <link refid="cellapp_2entity_8hpp_source"/>
        <childnode refid="8275" relation="include">
        </childnode>
        <childnode refid="8276" relation="include">
        </childnode>
        <childnode refid="8277" relation="include">
        </childnode>
        <childnode refid="8278" relation="include">
        </childnode>
        <childnode refid="8284" relation="include">
        </childnode>
        <childnode refid="8290" relation="include">
        </childnode>
        <childnode refid="8297" relation="include">
        </childnode>
        <childnode refid="8302" relation="include">
        </childnode>
        <childnode refid="8305" relation="include">
        </childnode>
        <childnode refid="8306" relation="include">
        </childnode>
        <childnode refid="8307" relation="include">
        </childnode>
        <childnode refid="8308" relation="include">
        </childnode>
        <childnode refid="8309" relation="include">
        </childnode>
        <childnode refid="8310" relation="include">
        </childnode>
        <childnode refid="8311" relation="include">
        </childnode>
        <childnode refid="8295" relation="include">
        </childnode>
        <childnode refid="8312" relation="include">
        </childnode>
        <childnode refid="8313" relation="include">
        </childnode>
        <childnode refid="8314" relation="include">
        </childnode>
        <childnode refid="8315" relation="include">
        </childnode>
        <childnode refid="8316" relation="include">
        </childnode>
        <childnode refid="8304" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
      </node>
      <node id="8400">
        <label>physical_chunk_space.hpp</label>
        <link refid="physical__chunk__space_8hpp_source"/>
        <childnode refid="8401" relation="include">
        </childnode>
        <childnode refid="8404" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8303" relation="include">
        </childnode>
        <childnode refid="8382" relation="include">
        </childnode>
        <childnode refid="8407" relation="include">
        </childnode>
        <childnode refid="8352" relation="include">
        </childnode>
        <childnode refid="8408" relation="include">
        </childnode>
        <childnode refid="8403" relation="include">
        </childnode>
      </node>
      <node id="8351">
        <label>cstdmf/profile.hpp</label>
      </node>
      <node id="8318">
        <label>ghost_entity_stream_helper.hpp</label>
        <link refid="ghost__entity__stream__helper_8hpp_source"/>
        <childnode refid="8278" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
      </node>
      <node id="8419">
        <label>chunk/chunk_obstacle.hpp</label>
      </node>
      <node id="8336">
        <label>cstdmf/timer_handler.hpp</label>
      </node>
      <node id="8325">
        <label>space_node.hpp</label>
        <link refid="space__node_8hpp_source"/>
        <childnode refid="8286" relation="include">
        </childnode>
        <childnode refid="8326" relation="include">
        </childnode>
      </node>
      <node id="8299">
        <label>network/interface_element.hpp</label>
      </node>
      <node id="8346">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="8418">
        <label>delegate_interface/entity_delegate_cell.hpp</label>
      </node>
      <node id="8408">
        <label>scene/scene.hpp</label>
      </node>
      <node id="8363">
        <label>space/forward_declarations.hpp</label>
      </node>
      <node id="8307">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
      <node id="8334">
        <label>cell_app_channels.hpp</label>
        <link refid="cell__app__channels_8hpp_source"/>
        <childnode refid="8335" relation="include">
        </childnode>
        <childnode refid="8336" relation="include">
        </childnode>
        <childnode refid="8285" relation="include">
        </childnode>
        <childnode refid="8317" relation="include">
        </childnode>
        <childnode refid="8316" relation="include">
        </childnode>
        <childnode refid="8277" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_entity_extra_info" prot="public">EntityExtraInfo</innerclass>
    <innerclass refid="class_build_entity_type_dict" prot="public">BuildEntityTypeDict</innerclass>
    <innerclass refid="class_reply_forwarder" prot="public">ReplyForwarder</innerclass>
    <innerclass refid="class_py_entity_vector3" prot="public">PyEntityVector3</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cellapp_2entity_8cpp_1af47aed6f1f6f90ecf879f29bdbe11751" prot="public" static="no">
        <name>BEGIN_AV_UPD_MESSAGES</name>
        <param></param>
        <initializer>static const Mercury::InterfaceElement * s_avatarUpdateMessage[] =	\
	{</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="2658" column="9"/>
      </memberdef>
      <memberdef kind="define" id="cellapp_2entity_8cpp_1a12e5e0fa3f1cc5c2b4e830a6ff423f50" prot="public" static="no">
        <name>AV_UPD_MESSAGE</name>
        <param><defname>TYPE</defname></param>
        <initializer>&amp;BaseAppIntInterface::avatarUpdate##TYPE,</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="2662" column="9"/>
      </memberdef>
      <memberdef kind="define" id="cellapp_2entity_8cpp_1a322b38d77459881d2c576852559c73a3" prot="public" static="no">
        <name>END_AV_UPD_MESSAGES</name>
        <param></param>
        <initializer>};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="2664" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cellapp_2entity_8cpp_1a92c4c41bf43ad842d383cc7182c8d139" prot="public" static="no" mutable="no">
        <type>EntityMovementCallback</type>
        <definition>EntityMovementCallback g_entityMovementCallback</definition>
        <argsstring></argsstring>
        <name>g_entityMovementCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="91" column="1" bodyfile="cellapp/entity.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_2entity_8cpp_1aa0bafcb8911a60a57ccf6784b1d669c2" prot="public" static="no" mutable="no">
        <type><ref refid="class_build_entity_type_dict" kindref="compound">BuildEntityTypeDict</ref></type>
        <definition>BuildEntityTypeDict s_buildEntityDictInitTimeJob</definition>
        <argsstring></argsstring>
        <name>s_buildEntityDictInitTimeJob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="1112" column="1" bodyfile="cellapp/entity.cpp" bodystart="1112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_2entity_8cpp_1a480e001810d01b547e317bba64567d32" prot="public" static="yes" mutable="no">
        <type>BW::vector&lt; <ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref> &gt;</type>
        <definition>BW::vector&lt; EntityPtr &gt; s_nominatedEntities</definition>
        <argsstring></argsstring>
        <name>s_nominatedEntities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="8012" column="1" bodyfile="cellapp/entity.cpp" bodystart="8012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cellapp_2entity_8cpp_1a7e85788fe024606b05bbaea50b5adc06" prot="public" static="no" mutable="no">
        <type>CustomPhysicsValidator</type>
        <definition>CustomPhysicsValidator g_customPhysicsValidator</definition>
        <argsstring></argsstring>
        <name>g_customPhysicsValidator</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The max network jitter to accept for the purposes of physics validation. A Swinburne uni paper (that I think I saw at ATNAC) found jitter and latency to be highly correlated, with jitter generally &lt;= 20% of latency, even for very high latencies of say 600ms. The <ref refid="class_base_app" kindref="compound">BaseApp</ref> and <ref refid="class_cell_app" kindref="compound">CellApp</ref> ticks probably introduce more jitter than the network. Thus the default is 200ms. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="8064" column="1" bodyfile="cellapp/entity.cpp" bodystart="8064" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cellapp_2entity_8cpp_1a8b10a3225dda78274ab8c9edbb98ed33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DEBUG_COMPONENT</definition>
        <argsstring>(0)</argsstring>
        <name>DECLARE_DEBUG_COMPONENT</name>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/entity.cpp" line="80" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ghost_entity_stream_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffered_ghost_message_factory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;buffered_ghost_messages.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_app_channels.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_chunk.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;controllers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_extra.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_population.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_range_list_node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mailbox.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;noise_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;passengers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;passenger_extra.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;portal_config_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_client.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;range_list_appeal_trigger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;range_trigger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_caller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;replay_data_collector.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;witness.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseapp/baseapp_int_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;delegate_interface/entity_delegate_cell.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;chunk/chunk_obstacle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/debug.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/memory_stream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/stringmap.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/profiler.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/closest_triangle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection/baseapp_ext_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;connection/client_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/entity_delegate_helpers.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/entity_description_map.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/property_change.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/script_data_sink.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/script_data_source.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef_script/py_delegate.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;delegate_interface/game_delegate.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/channel_sender.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/compression_stream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/exposed_message_range.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;physics2/worldtri.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/pyobject_base.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resmgr/bwresource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/real_entity_stream_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/client_method_calling_flags.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/real_entity_stream_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/writedb.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/event_history_stats.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;face_entity_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;timer_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;turn_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">DECLARE_DEBUG_COMPONENT(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cell" kindref="compound">Cell</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CODE_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.ipp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">EntityMovementCallback<sp/>g_entityMovementCallback;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal">uint32<sp/>g_numEntitiesEver<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">uint32<sp/>g_nonVolatileBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">uint32<sp/>g_volatileBytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">EventHistoryStats<sp/>g_publicClientStats;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">EventHistoryStats<sp/>g_totalPublicClientStats;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">EventHistoryStats<sp/>g_privateClientStats;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>g_numEntities<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">uint32<sp/>numEntitiesLeaked()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Entity::population().size()<sp/>-<sp/>g_numEntities);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Not<sp/>sure<sp/>where<sp/>or<sp/>how<sp/>these<sp/>are<sp/>defined,<sp/>so<sp/>they<sp/>are<sp/>here<sp/>for<sp/>now...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>base</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>provides<sp/>a<sp/>BaseEntityMailbox<sp/>object.<sp/>This<sp/>can</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>be<sp/>used<sp/>to<sp/>call<sp/>functions<sp/>on<sp/>the<sp/>base<sp/>Entity.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>BaseEntityMailBox</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>client</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>is<sp/>an<sp/>alias<sp/>for<sp/>Entity.ownClient.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>It<sp/>provides<sp/>a<sp/>PyClient<sp/>object.<sp/>This<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>used<sp/>to<sp/>call<sp/>functions<sp/>on<sp/>the<sp/>client<sp/>Entity.<sp/>Function<sp/>calls<sp/>that<sp/>are<sp/>made</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>via<sp/>this<sp/>PyClient<sp/>object<sp/>are<sp/>only<sp/>passed<sp/>to<sp/>the<sp/>client<sp/>that<sp/>owns<sp/>the</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>entity.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>clientEntity</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>allClients</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>otherClients</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>PyClient</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>ownClient</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>provides<sp/>a<sp/>PyClient<sp/>object.<sp/>This<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>used<sp/>to<sp/>call<sp/>functions<sp/>on<sp/>the<sp/>client<sp/>Entity.<sp/>Function<sp/>calls<sp/>that<sp/>are<sp/>made</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>via<sp/>this<sp/>PyClient<sp/>object<sp/>are<sp/>only<sp/>passed<sp/>to<sp/>the<sp/>client<sp/>that<sp/>owns<sp/>the</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>entity.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>clientEntity</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>allClients</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>otherClients</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>PyClient</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>otherClients</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>When<sp/>read,<sp/>the<sp/>otherClients<sp/>attribute<sp/>provides<sp/>a<sp/>PyClient<sp/>object.<sp/>This<sp/>can</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>be<sp/>used<sp/>to<sp/>call<sp/>functions<sp/>on<sp/>the<sp/>client<sp/>Entity.<sp/>Function<sp/>calls<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>made<sp/>via<sp/>this<sp/>PyClient<sp/>object<sp/>are<sp/>passed<sp/>to<sp/>all<sp/>clients<sp/>except<sp/>the<sp/>one<sp/>that</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>owns<sp/>the<sp/>entity.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>ownClient</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>allClients</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>clientEntity</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>PyClient</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>allClients</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>When<sp/>read,<sp/>the<sp/>allClients<sp/>attribute<sp/>provides<sp/>a<sp/>PyClient<sp/>object.<sp/>This<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>used<sp/>to<sp/>call<sp/>functions<sp/>on<sp/>the<sp/>client<sp/>Entity.<sp/>Function<sp/>calls<sp/>that<sp/>are<sp/>made</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>via<sp/>this<sp/>PyClient<sp/>object<sp/>are<sp/>passed<sp/>to<sp/>all<sp/>clients.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>ownClient</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>clientEntity</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>otherClients</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>PyClient</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">PY_BASETYPEOBJECT(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">PY_BEGIN_METHODS(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>destroy</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>function<sp/>destroys<sp/>entity<sp/>by<sp/>destroying<sp/>its<sp/>local<sp/>Entity<sp/>instance,</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>informing<sp/>every<sp/>other<sp/>application<sp/>which<sp/>holds<sp/>some<sp/>form<sp/>of<sp/>instance<sp/>of</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>it<sp/>to<sp/>do<sp/>the<sp/>same.<sp/>It<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>called<sp/>by<sp/>the<sp/>entity<sp/>itself,<sp/>and</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>will<sp/>throw<sp/>a<sp/>TypeError<sp/>if<sp/>the<sp/>entity<sp/>is<sp/>a<sp/>ghost.<sp/>The<sp/>callback<sp/>onDestroy()</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>is<sp/>called<sp/>if<sp/>present.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>destroy<sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>cancel</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>cancel<sp/>function<sp/>stops<sp/>a<sp/>controller<sp/>from<sp/>affecting<sp/>the<sp/>Entity.<sp/>It<sp/>can</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>controllerID<sp/>controllerID<sp/>is<sp/>an<sp/>integer<sp/>which<sp/>is<sp/>the<sp/>index<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>controller<sp/>to<sp/>cancel.<sp/>Alternatively,<sp/>a<sp/>string<sp/>of<sp/>an<sp/>exclusive<sp/>controller</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>category<sp/>can<sp/>be<sp/>passed<sp/>to<sp/>cancel<sp/>the<sp/>controller<sp/>of<sp/>that<sp/>category.<sp/>For</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>example,<sp/>only<sp/>one<sp/>movement/navigation<sp/>controller<sp/>can<sp/>be<sp/>active<sp/>at<sp/>once.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>can<sp/>be<sp/>cancelled<sp/>with<sp/>entity.cancel(<sp/>&quot;Movement&quot;<sp/>).</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>cancel<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>debug</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>debug<sp/>function<sp/>generates<sp/>debugging<sp/>information<sp/>regarding<sp/>the<sp/>position</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>this<sp/>entity<sp/>in<sp/>the<sp/>cell&apos;s<sp/>sorted<sp/>position<sp/>lists<sp/>(which<sp/>contain<sp/>all</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>entities<sp/>known<sp/>to<sp/>the<sp/>cell,<sp/>sorted<sp/>by<sp/>their<sp/>position<sp/>on<sp/>the<sp/>x<sp/>and<sp/>z<sp/>axis),</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>sends<sp/>it<sp/>to<sp/>wherever<sp/>the<sp/>cell<sp/>is<sp/>directing<sp/>its<sp/>debug<sp/>messages.<sp/>This</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>cannot<sp/>be<sp/>set<sp/>via<sp/>Python,<sp/>and<sp/>defaults<sp/>to<sp/>stdout.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>first<sp/>line<sp/>of<sp/>debug<sp/>information<sp/>provides<sp/>the<sp/>entity&apos;s<sp/>position<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>cell&apos;s<sp/>x<sp/>axis,<sp/>its<sp/>type<sp/>and<sp/>ID,<sp/>type<sp/>and<sp/>ID<sp/>information<sp/>for<sp/>the<sp/>previous</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>object<sp/>along<sp/>the<sp/>x<sp/>axis,<sp/>and<sp/>type<sp/>and<sp/>ID<sp/>information<sp/>for<sp/>the<sp/>next<sp/>object</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>on<sp/>the<sp/>x<sp/>axis.<sp/>The<sp/>second<sp/>line<sp/>is<sp/>identical<sp/>to<sp/>the<sp/>first,<sp/>except<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>data<sp/>relates<sp/>to<sp/>the<sp/>cell&apos;s<sp/>z<sp/>axis.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Sample<sp/>Output:</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>107.9<sp/>DEBUG:<sp/>RangeListNode::debugX:<sp/>me.PosX=-347.4982910,<sp/>me=[Entity<sp/>16777218],<sp/>prevX=[Head],<sp/>nextX=[Entity<sp/>16777216]</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>107.9<sp/>DEBUG:<sp/>RangeListNode::debugZ:<sp/>me.PosZ=369.6944580,<sp/>me=[Entity<sp/>16777218],<sp/>prevZ=[Entity<sp/>16777216],<sp/>nextZ=[Tail]</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>debug<sp/>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>isReal</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>isReal<sp/>method<sp/>returns<sp/>whether<sp/>this<sp/>Entity<sp/>is<sp/>real<sp/>or<sp/>a<sp/>ghost.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>method<sp/>should<sp/>be<sp/>rarely<sp/>used<sp/>but<sp/>can<sp/>be<sp/>helpful<sp/>for<sp/>debugging.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>(bool)<sp/>True<sp/>if<sp/>the<sp/>entity<sp/>is<sp/>real,<sp/>False<sp/>if<sp/>it<sp/>is<sp/>not.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>isReal<sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>isRealToScript</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>isRealToScript<sp/>method<sp/>returns<sp/>whether<sp/>it<sp/>is<sp/>safe<sp/>to<sp/>treat<sp/>this<sp/>Entity</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>as<sp/>a<sp/>Real<sp/>entity.<sp/>This<sp/>method<sp/>can<sp/>be<sp/>different<sp/>from<sp/>Entity.isReal()</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>when<sp/>cellApp/treatAllOtherEntitiesAsGhosts<sp/>is<sp/>set<sp/>to<sp/>True.<sp/>This<sp/>method</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>will<sp/>return<sp/>False<sp/>if<sp/>script<sp/>should<sp/>consider<sp/>this<sp/>a<sp/>ghost<sp/>entity<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>current<sp/>calling<sp/>context.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>method<sp/>should<sp/>be<sp/>rarely<sp/>used<sp/>but<sp/>can<sp/>be<sp/>helpful<sp/>for<sp/>debugging.</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>(bool)<sp/>True<sp/>if<sp/>the<sp/>entity<sp/>is<sp/>real<sp/>to<sp/>script,<sp/>otherwise<sp/>False.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>isRealToScript<sp/>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>destroySpace</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>method<sp/>attempts<sp/>to<sp/>shut<sp/>down<sp/>the<sp/>space<sp/>that<sp/>the<sp/>entity<sp/>is<sp/>in.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>It<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>shut<sp/>down<sp/>the<sp/>default<sp/>space.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>destroySpace<sp/>)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>writeToDB</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>method<sp/>write<sp/>the<sp/>data<sp/>associated<sp/>with<sp/>this<sp/>entity<sp/>to<sp/>the<sp/>database.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>It<sp/>includes<sp/>the<sp/>base<sp/>entity&apos;s<sp/>data.<sp/>The<sp/>base<sp/>entity&apos;s<sp/>onWriteToDB</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>method<sp/>will<sp/>be<sp/>called<sp/>before<sp/>the<sp/>data<sp/>is<sp/>actually<sp/>sent<sp/>to<sp/>the<sp/>database.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>cell<sp/>entity&apos;s<sp/>data<sp/>is<sp/>also<sp/>backed<sp/>up<sp/>to<sp/>the<sp/>base<sp/>entity<sp/>to<sp/>ensure</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>that<sp/>the<sp/>fault<sp/>tolerance<sp/>data<sp/>is<sp/>at<sp/>least<sp/>as<sp/>up-to-date<sp/>as<sp/>the<sp/>disaster</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>recovery<sp/>data.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>that<sp/>has<sp/>a<sp/>base<sp/>entity.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>writeToDB<sp/>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>entitiesInRange</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>entitiesInRange<sp/>function<sp/>searches<sp/>for<sp/>entities<sp/>whose<sp/>position</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>attributes<sp/>are<sp/>within<sp/>a<sp/>given<sp/>distance<sp/>from<sp/>the<sp/>Entity.<sp/>This<sp/>is<sp/>a<sp/>spherical</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>search,<sp/>as<sp/>the<sp/>distance<sp/>is<sp/>measured<sp/>across<sp/>all<sp/>three<sp/>axis.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>can<sp/>find<sp/>entities<sp/>which<sp/>are<sp/>outside<sp/>the<sp/>Entity&apos;s</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>area<sp/>of<sp/>interest,<sp/>but<sp/>cannot<sp/>find<sp/>entities<sp/>which<sp/>are<sp/>not<sp/>known<sp/>to<sp/>the<sp/>cell.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>self.entitiesInRange(<sp/>100,<sp/>&apos;Creature&apos;,<sp/>(100,0,100)<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Gives<sp/>a<sp/>list<sp/>of<sp/>entities<sp/>that<sp/>are<sp/>instance<sp/>of<sp/>class<sp/>Creature,<sp/>but<sp/>does<sp/>not<sp/>include</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>entities<sp/>that<sp/>are<sp/>instances<sp/>of<sp/>subclasses<sp/>of<sp/>Creature.<sp/>The<sp/>search<sp/>radius<sp/>is<sp/>100</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>metres<sp/>using<sp/>(100,0,100)<sp/>as<sp/>centre.</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>[<sp/>e<sp/>for<sp/>e<sp/>in<sp/>self.entitiesInRange(<sp/>100,<sp/>None,<sp/>(100,0,100)<sp/>)<sp/>if<sp/>isinstance(<sp/>e,<sp/>BaseType<sp/>)<sp/>]</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>will<sp/>give<sp/>a<sp/>list<sp/>of<sp/>entities<sp/>that<sp/>are<sp/>instantiated<sp/>from<sp/>BaseType<sp/>or<sp/>subclasses<sp/>of<sp/>BaseType</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>range<sp/>range<sp/>is<sp/>the<sp/>distance<sp/>around<sp/>this<sp/>entity<sp/>to<sp/>search,<sp/>as<sp/>a<sp/>float.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>entityType=None<sp/>An<sp/>optional<sp/>string<sp/>argument<sp/>of<sp/>entity<sp/>type<sp/>name<sp/>that</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>will<sp/>be<sp/>used<sp/>in<sp/>matching<sp/>entities.<sp/>If<sp/>entityType<sp/>is<sp/>a<sp/>valid<sp/>class<sp/>name<sp/>then<sp/>only</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>entities<sp/>of<sp/>that<sp/>class<sp/>will<sp/>be<sp/>returned,<sp/>otherwise<sp/>all<sp/>entities<sp/>in<sp/>range<sp/>are<sp/>returned.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>position=None<sp/>An<sp/>optional<sp/>Vector3<sp/>argument<sp/>to<sp/>be<sp/>used<sp/>as<sp/>the<sp/>centre<sp/>of</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>searching<sp/>radius.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>A<sp/>list<sp/>of<sp/>Entity<sp/>objects<sp/>that<sp/>are<sp/>within<sp/>the<sp/>given<sp/>range.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>entitiesInRange<sp/>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>clientEntity</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>clientEntity<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>make<sp/>calls<sp/>on<sp/>a<sp/>single<sp/>instance</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>an<sp/>entity,<sp/>as<sp/>opposed<sp/>to<sp/>all<sp/>instances<sp/>as<sp/>is<sp/>the<sp/>case<sp/>with</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Entity.allClients.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>For<sp/>example,<sp/>playerEntity.clientEntity(<sp/>buttonEntityID<sp/>).flash()<sp/>will</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>call<sp/>the<sp/>flash()<sp/>method<sp/>on<sp/>the<sp/>button<sp/>entity<sp/>only<sp/>on<sp/>this<sp/>player&apos;s</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>application.<sp/>Any<sp/>other<sp/>player<sp/>with<sp/>the<sp/>button<sp/>in<sp/>their<sp/>AoI<sp/>will<sp/>not<sp/>have</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>this<sp/>method<sp/>called.</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>ownClient</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>allClients</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>otherClients</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>destID<sp/>destID<sp/>is<sp/>the<sp/>ID<sp/>number<sp/>of<sp/>the<sp/>entity<sp/>to<sp/>which<sp/>the<sp/>new</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>PyClient<sp/>is<sp/>to<sp/>be<sp/>associated.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>A<sp/>PyClient<sp/>for<sp/>the<sp/>specified<sp/>entity.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>clientEntity<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>makeNoise</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>makeNoise<sp/>function<sp/>informs<sp/>all<sp/>other<sp/>entities<sp/>within<sp/>a<sp/>specified</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>range<sp/>that<sp/>this<sp/>entity<sp/>has<sp/>made<sp/>a<sp/>sound.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>It<sp/>does<sp/>this<sp/>by<sp/>calling<sp/>the<sp/>onNoise<sp/>function<sp/>of<sp/>each<sp/>of<sp/>these<sp/>entities.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>onNoise<sp/>must<sp/>take<sp/>five<sp/>arguments,<sp/>and<sp/>is<sp/>not<sp/>defined<sp/>by<sp/>default.<sp/>Errors</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>thrown<sp/>by<sp/>the<sp/>attempt<sp/>to<sp/>call<sp/>onNoise<sp/>are<sp/>silently<sp/>ignored.<sp/>The</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>arguments<sp/>with<sp/>which<sp/>onNoise<sp/>is<sp/>called<sp/>are<sp/>the<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>which</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>made<sp/>the<sp/>noise,<sp/>the<sp/>distance<sp/>from<sp/>the<sp/>source<sp/>entity<sp/>at<sp/>which<sp/>the<sp/>noise</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>can<sp/>still<sp/>be<sp/>heard<sp/>(as<sp/>a<sp/>float),<sp/>the<sp/>distance<sp/>at<sp/>which<sp/>the<sp/>noise<sp/>was</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>heard<sp/>(as<sp/>a<sp/>float),<sp/>an<sp/>integer<sp/>indicating<sp/>the<sp/>event<sp/>which<sp/>caused<sp/>the</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>sound,<sp/>and<sp/>an<sp/>arbitrary<sp/>user<sp/>supplied<sp/>integer<sp/>which<sp/>can<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>provide<sp/>more<sp/>information.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>distance<sp/>between<sp/>entities<sp/>for<sp/>noise<sp/>propagation<sp/>purposes<sp/>is</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>calculated<sp/>as<sp/>the<sp/>shortest<sp/>route<sp/>of<sp/>travel<sp/>via<sp/>chunk<sp/>portals.<sp/>This<sp/>means</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>that,<sp/>for<sp/>instance,<sp/>if<sp/>two<sp/>chunks<sp/>represent<sp/>long<sp/>parallel<sp/>corridors,</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>then<sp/>a<sp/>noise<sp/>made<sp/>in<sp/>one<sp/>may<sp/>not<sp/>be<sp/>heard<sp/>by<sp/>an<sp/>entity<sp/>standing<sp/>close<sp/>by</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>in<sp/>the<sp/>other.</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>function<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity,<sp/>a<sp/>TypeError<sp/>is<sp/>raised</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>if<sp/>this<sp/>is<sp/>not<sp/>the<sp/>case.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>noiseLevel<sp/><sp/><sp/><sp/>The<sp/>noiseLevel<sp/>parameter<sp/>is<sp/>a<sp/>float<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multiplied<sp/>by<sp/>the<sp/>value<sp/>found<sp/>in</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>server/bw.xml/cellApp/noise/standardRange<sp/>to</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>determine<sp/>the<sp/>maximum<sp/>distance<sp/>at<sp/>which<sp/>the<sp/>noise</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>heard.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>event<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>event<sp/>argument<sp/>is<sp/>an<sp/>integer<sp/>which<sp/>indicates</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>type<sp/>of<sp/>event<sp/>that<sp/>caused<sp/>the<sp/>sound.<sp/>This<sp/>is<sp/>0</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>movement<sp/>related<sp/>noise<sp/>(see<sp/>setStealthFactor),</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>is<sp/>otherwise<sp/>unrestricted.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>info=0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>info<sp/>argument<sp/>is<sp/>optional,<sp/>and<sp/>can<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>supply<sp/>further<sp/>information<sp/>regarding<sp/>a<sp/>sound<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entities<sp/>which<sp/>hear<sp/>it,<sp/>as<sp/>an<sp/>integer.<sp/>This<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>the<sp/>fifth<sp/>argument<sp/>in<sp/>all<sp/>calls<sp/>to<sp/>onNoise<sp/>that</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>makes.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>makeNoise<sp/>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>getGroundPosition</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>getGroundPosition<sp/>provides<sp/>the<sp/>position<sp/>of<sp/>the<sp/>ground<sp/>immediately<sp/>below<sp/>the</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>entity<sp/>in<sp/>world<sp/>coordinates,<sp/>or<sp/>the<sp/>position<sp/>of<sp/>the<sp/>entity<sp/>if<sp/>there<sp/>is<sp/>no</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>ground<sp/>below<sp/>it.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>The<sp/>position<sp/>of<sp/>the<sp/>ground<sp/>below<sp/>the<sp/>entity<sp/>(or<sp/>the<sp/>entity<sp/>itself,</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>if<sp/>no<sp/>ground<sp/>is<sp/>found),<sp/>expressed<sp/>as<sp/>3<sp/>floats<sp/>(x,<sp/>y,<sp/>z),<sp/>in<sp/>worldspace.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>getGroundPosition<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>trackEntity</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>trackEntity<sp/>function<sp/>causes<sp/>the<sp/>Entity<sp/>to<sp/>turn<sp/>towards<sp/>another<sp/>entity.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>is<sp/>achieved<sp/>by<sp/>creating<sp/>a<sp/>new<sp/>controller<sp/>and<sp/>adding<sp/>it<sp/>to<sp/>the<sp/>Entity.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>It<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity,<sp/>and<sp/>the<sp/>controller<sp/>can<sp/>be<sp/>removed</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>via<sp/>the<sp/>Entity&apos;s<sp/>cancel<sp/>function.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>cancel</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>entityID<sp/>The<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>that<sp/>this<sp/>should<sp/>turn<sp/>towards.<sp/>This</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>entity<sp/>must<sp/>be<sp/>known<sp/>by<sp/>the<sp/>cell.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>velocity=2*math.pi<sp/>velocity<sp/>is<sp/>the<sp/>speed<sp/>at<sp/>which<sp/>the<sp/>Entity<sp/>will</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>turn,<sp/>in<sp/>radians<sp/>per<sp/>second.</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>period=10<sp/>ticks<sp/>ticks<sp/>is<sp/>the<sp/>number<sp/>of<sp/>ticks<sp/>that<sp/>occur<sp/>between</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>updates.<sp/>This<sp/>affects<sp/>how<sp/>accurately<sp/>the<sp/>Entity<sp/>will<sp/>track<sp/>its<sp/>target.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>userArg=0<sp/>userArg<sp/>is<sp/>an<sp/>integer,<sp/>and<sp/>is<sp/>not<sp/>currently<sp/>used.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@return<sp/>trackEntity<sp/>returns<sp/>the<sp/>ID<sp/>of<sp/>the<sp/>new<sp/>controller.<sp/>This<sp/>can<sp/>later<sp/>be</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>used<sp/>with<sp/>the<sp/>Entity&apos;s<sp/>cancel<sp/>function<sp/>to<sp/>remove<sp/>the<sp/>controller<sp/>and<sp/>stop</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>Entity<sp/>from<sp/>tracking.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>trackEntity<sp/>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity.setPortalState</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>setPortalState<sp/>function<sp/>allows<sp/>an<sp/>entity<sp/>to<sp/>control<sp/>the<sp/>state<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>portal.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>position<sp/>of<sp/>the<sp/>entity<sp/>must<sp/>be<sp/>within<sp/>1<sp/>metre<sp/>of<sp/>the<sp/>portal<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>to<sp/>be<sp/>configured,<sp/>otherwise<sp/>the<sp/>portal<sp/>will<sp/>probably<sp/>not<sp/>be<sp/>found.<sp/>No</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>other<sp/>portal<sp/>may<sp/>be<sp/>closer.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>permissive<sp/><sp/><sp/>Whether<sp/>the<sp/>portal<sp/>is<sp/>open<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@param<sp/>triFlags<sp/>Optional<sp/>argument<sp/>that<sp/>sets<sp/>the<sp/>flags<sp/>on<sp/>the<sp/>portal&apos;s</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>triangles<sp/>as<sp/>returned<sp/>from<sp/>collision<sp/>tests.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>setPortalState<sp/>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>function<sp/>Entity<sp/>getDict</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>getDict<sp/>function<sp/>constructs<sp/>a<sp/>dictionary<sp/>containing<sp/>all<sp/>of<sp/>this</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>entity&apos;s<sp/>properties<sp/>that<sp/>are<sp/>defined<sp/>in<sp/>its<sp/>def<sp/>file.<sp/>Modifying<sp/>this</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>dictionary<sp/>does<sp/>not<sp/>alter<sp/>this<sp/>entity&apos;s<sp/>properties.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>is<sp/>a<sp/>useful<sp/>debugging<sp/>method<sp/>but<sp/>should<sp/>be<sp/>avoided<sp/>in<sp/>production.</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_METHOD(<sp/>getDict<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_PICKLING_METHOD()</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">PY_END_METHODS()</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">PY_BEGIN_ATTRIBUTES(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>aoiUpdateScheme</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>property<sp/>affects<sp/>the<sp/>frequency<sp/>at<sp/>which<sp/>updates<sp/>about<sp/>this<sp/>entity</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>are<sp/>sent<sp/>to<sp/>clients.<sp/>Note<sp/>that<sp/>this<sp/>only<sp/>affects<sp/>the<sp/>scheme<sp/>used<sp/>by<sp/>new</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>AoIs<sp/>that<sp/>this<sp/>entity<sp/>enters.</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>available<sp/>schemes<sp/>are<sp/>specified<sp/>in<sp/>bw.xml&apos;s<sp/>cellApp/aoiUpdateSchemes</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>section.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>aoiUpdateScheme<sp/>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>periodsWithoutWitness<sp/>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>vehicle</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>vehicle<sp/>is<sp/>the<sp/>vehicle<sp/>Entity<sp/>that<sp/>this<sp/>Entity<sp/>is<sp/>currently<sp/>riding<sp/>in.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Entity</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>vehicle<sp/>)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>volatileInfo</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>volatileInfo<sp/>attribute<sp/>specifies<sp/>how<sp/>often<sp/>(if<sp/>ever)<sp/>the<sp/>Entity&apos;s</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>volatile<sp/>data<sp/>should<sp/>be<sp/>sent<sp/>to<sp/>clients.<sp/>The<sp/>four<sp/>float<sp/>(or<sp/>None)<sp/>values</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>that<sp/>this<sp/>contains<sp/>are<sp/>the<sp/>position<sp/>priority,<sp/>yaw<sp/>priority,<sp/>pitch<sp/>priority,</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>roll<sp/>priority<sp/>(where<sp/>higher<sp/>numbers<sp/>result<sp/>in<sp/>more<sp/>frequent<sp/>updates,</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>None<sp/>indicates<sp/>that<sp/>no<sp/>updates<sp/>are<sp/>to<sp/>be<sp/>sent<sp/>at<sp/>all).</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>values<sp/>for<sp/>these<sp/>are<sp/>initially<sp/>read<sp/>from<sp/>the<sp/>entity&apos;s<sp/>.def<sp/>file,</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>defaulting<sp/>to<sp/>None<sp/>if<sp/>not<sp/>provided.<sp/>They<sp/>can<sp/>later<sp/>be<sp/>specified,<sp/>and<sp/>are</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>each<sp/>clamped<sp/>between<sp/>BigWorld.VOLATILE_NEVER<sp/>and<sp/>BigWorld.VOLATILE_ALWAYS.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>latter<sp/>three<sp/>elements<sp/>must<sp/>be<sp/>in<sp/>descending<sp/>order<sp/>(where<sp/>0<sp/>is</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>interpreted<sp/>as<sp/>being<sp/>greater<sp/>than<sp/>None),<sp/>or<sp/>else<sp/>a<sp/>TypeError<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>thrown.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Sample<sp/>.def<sp/>Excerpt:</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>&amp;lt;Volatile&amp;gt;</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&amp;lt;position/&amp;gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;lt;!--<sp/>always<sp/>--&amp;gt;</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&amp;lt;yaw/&amp;gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;lt;!--<sp/>always<sp/>--&amp;gt;</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&amp;lt;pitch&amp;gt;20&amp;lt;/pitch&amp;gt;<sp/><sp/><sp/><sp/><sp/>&amp;lt;!--<sp/>20<sp/><sp/><sp/><sp/><sp/>--&amp;gt;</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>&amp;lt;/Volatile&amp;gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;lt;!--<sp/>roll<sp/>never<sp/><sp/>--&amp;gt;</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>A<sp/>sequence<sp/>of<sp/>4<sp/>floats<sp/>(or<sp/>None<sp/>objects)</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>volatileInfo<sp/>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>className</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>class<sp/>name<sp/>of<sp/>this<sp/>Entity.</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>string</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>className<sp/>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>id</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>is<sp/>the<sp/>unique<sp/>identifier<sp/>for<sp/>the<sp/>Entity.<sp/>It<sp/>is<sp/>common<sp/>across<sp/>client,</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>cell,<sp/>and<sp/>base<sp/>applications.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Integer</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>spaceID</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>is<sp/>the<sp/>unique<sp/>identifier<sp/>for<sp/>the<sp/>space<sp/>that<sp/>currently<sp/>contains<sp/>the</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Entity.<sp/>It<sp/>is<sp/>common<sp/>across<sp/>client<sp/>and<sp/>cell<sp/>applications.</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Integer.</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/><ref refid="class_cell_1aeb3a5d22c5b62e3e3370d2d460ef6513" kindref="member">spaceID</ref><sp/>)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>position</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>position<sp/>attribute<sp/>is<sp/>the<sp/>location<sp/>of<sp/>the<sp/>Entity,<sp/>in<sp/>world</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>coordinates.<sp/>This<sp/>can<sp/>be<sp/>written<sp/>to.<sp/>If<sp/>the<sp/>entity<sp/>has<sp/>a<sp/>client<sp/>who<sp/>is</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>modifying<sp/>its<sp/>position,<sp/>these<sp/>changes<sp/>will<sp/>be<sp/>ignored<sp/>until<sp/>the<sp/>client</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>acknowledges<sp/>this<sp/>position<sp/>change.</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>It<sp/>is<sp/>also<sp/>important<sp/>to<sp/>consider<sp/>the<sp/>volatileInfo<sp/>of<sp/>the<sp/>entity.<sp/>If<sp/>the</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>position<sp/>is<sp/>not<sp/>volatile,<sp/>each<sp/>change<sp/>to<sp/>this<sp/>value<sp/>will<sp/>be<sp/>sent<sp/>down<sp/>to</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>all<sp/>client<sp/>applications<sp/>within<sp/>range.</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Note:<sp/>This<sp/>property<sp/>is<sp/>mutable<sp/>which<sp/>means<sp/>that<sp/>you<sp/>can<sp/>change<sp/>individual</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>elements<sp/>of<sp/>the<sp/>position.<sp/>It<sp/>also<sp/>means<sp/>if<sp/>you<sp/>keep<sp/>a<sp/>reference<sp/>to<sp/>it<sp/>and</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>entity<sp/>moves,<sp/>this<sp/>property<sp/>will<sp/>change.</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>self.position.y<sp/>=<sp/>50.0</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>you<sp/>want<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>current<sp/>value,<sp/>you<sp/>should<sp/>cast<sp/>to<sp/>a<sp/>Vector3.</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>self.startPosition<sp/>=<sp/>Math.Vector3(<sp/>self.position<sp/>)</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Vector3</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>position<sp/>)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>yaw</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>yaw<sp/>provides<sp/>the<sp/>yaw<sp/>component<sp/>of<sp/>the<sp/>direction<sp/>attribute.<sp/>It<sp/>is<sp/>the<sp/>yaw</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>the<sp/>current<sp/>facing<sp/>direction<sp/>of<sp/>the<sp/>Entity,<sp/>in<sp/>radians<sp/>and<sp/>in<sp/>world</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>space.</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>can<sp/>be<sp/>set<sp/>via<sp/>the<sp/>direction<sp/>attribute.</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Float</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>yaw<sp/>)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>pitch</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>pitch<sp/>provides<sp/>the<sp/>pitch<sp/>component<sp/>of<sp/>the<sp/>direction<sp/>attribute.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>pitch<sp/>of<sp/>the<sp/>current<sp/>facing<sp/>direction<sp/>of<sp/>the<sp/>Entity,<sp/>in<sp/>radians</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>in<sp/>world<sp/>space.</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>can<sp/>be<sp/>set<sp/>via<sp/>the<sp/>direction<sp/>attribute.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Float</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>pitch<sp/>)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>roll</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>roll<sp/>provides<sp/>the<sp/>roll<sp/>component<sp/>of<sp/>the<sp/>direction<sp/>attribute.<sp/>It<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>roll<sp/>of<sp/>the<sp/>current<sp/>facing<sp/>direction<sp/>of<sp/>the<sp/>Entity,<sp/>in<sp/>radians<sp/>and<sp/>in</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>world<sp/>space.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>can<sp/>be<sp/>set<sp/>via<sp/>the<sp/>direction<sp/>attribute.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Float</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>roll<sp/>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>direction</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>direction<sp/>attribute<sp/>is<sp/>the<sp/>current<sp/>orientation<sp/>of<sp/>the<sp/>Entity,<sp/>in</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>world<sp/>space.<sp/>This<sp/>can<sp/>be<sp/>written<sp/>to,<sp/>however<sp/>entities<sp/>for<sp/>whom</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>a<sp/>client<sp/>is<sp/>authoritative<sp/>(in<sp/>regards<sp/>to<sp/>position)<sp/>will<sp/>have<sp/>this</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>data<sp/>overwritten.</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Changes<sp/>to<sp/>this<sp/>data<sp/>will<sp/>not<sp/>be<sp/>propagated<sp/>to<sp/>clients<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>volatileInfo<sp/>for<sp/>this<sp/>Entity<sp/>specifies<sp/>that<sp/>position<sp/>is<sp/>not<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>updated.</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>property<sp/>is<sp/>roll,<sp/>pitch<sp/>and<sp/>yaw<sp/>combined<sp/>(in<sp/>that<sp/>order).<sp/>All</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>values<sp/>are<sp/>in<sp/>radians.</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Like<sp/>Entity.position,<sp/>this<sp/>value<sp/>is<sp/>mutable.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>you<sp/>want<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>current<sp/>value,<sp/>you<sp/>should<sp/>cast<sp/>to<sp/>a<sp/>Vector3.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@{</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>self.startDirection<sp/>=<sp/>Math.Vector3(<sp/>self.direction<sp/>)</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@}</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Tuple<sp/>of<sp/>3<sp/>floats<sp/>as<sp/>(roll,<sp/>pitch,<sp/>yaw)</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>localPosition</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>read-only<sp/>attribute<sp/>returns<sp/>the<sp/>position<sp/>of<sp/>this<sp/>entity<sp/>relative</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>to<sp/>the<sp/>vehicle<sp/>that<sp/>it<sp/>is<sp/>riding<sp/>on.</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Tuple<sp/>of<sp/>3<sp/>floats<sp/>as<sp/>(x,<sp/>y,<sp/>z).</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>localPosition<sp/>)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>localYaw</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>read-only<sp/>attribute<sp/>returns<sp/>yaw<sp/>of<sp/>this<sp/>entity<sp/>relative<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>vehicle<sp/>that<sp/>it<sp/>is<sp/>riding<sp/>on.</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Float.</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>localYaw<sp/>)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>localPitch</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>read-only<sp/>attribute<sp/>returns<sp/>pitch<sp/>of<sp/>this<sp/>entity<sp/>relative<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>vehicle<sp/>that<sp/>it<sp/>is<sp/>riding<sp/>on.</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Float.</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>localPitch<sp/>)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>localRoll</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>read-only<sp/>attribute<sp/>returns<sp/>roll<sp/>of<sp/>this<sp/>entity<sp/>relative<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>vehicle<sp/>that<sp/>it<sp/>is<sp/>riding<sp/>on.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>Float.</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>localRoll<sp/>)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>client<sp/>)</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>otherClients<sp/>)</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>allClients<sp/>)</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="609"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>isDestroyed</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>isDestroyed<sp/>attribute<sp/>will<sp/>be<sp/>True<sp/>if<sp/>the<sp/>Entity<sp/>has<sp/>been<sp/>destroyed.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>bool</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>isDestroyed<sp/>)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>debug_numTimesRealOffloaded</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>debug_numTimesRealOffloaded<sp/>attribute<sp/>is<sp/>the<sp/>number<sp/>of<sp/>times<sp/>that</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>real<sp/>entity<sp/>for<sp/>this<sp/>entity<sp/>has<sp/>been<sp/>offloaded.<sp/>It<sp/>may<sp/>be<sp/>useful</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>for<sp/>debugging<sp/>but<sp/>is<sp/>not<sp/>expected<sp/>to<sp/>be<sp/>used<sp/>in<sp/>production<sp/>code.</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>is<sp/>a<sp/>16<sp/>bit<sp/>unsigned<sp/>value<sp/>and<sp/>is<sp/>expected<sp/>to<sp/>wrap<sp/>at<sp/>65535.</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>debug_numTimesRealOffloaded<sp/>)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>isOnGround</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>isOnGround<sp/>attribute<sp/>will<sp/>be<sp/>True<sp/>if<sp/>the<sp/>position<sp/>of<sp/>the<sp/>Entity<sp/>is<sp/>on<sp/>the<sp/>ground<sp/>and<sp/>false<sp/>otherwise.</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-write<sp/>bool</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>isOnGround<sp/>)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>isIndoors</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>isIndoors<sp/>attribute<sp/>will<sp/>be<sp/>True<sp/>if<sp/>the<sp/>entity<sp/>is<sp/>indoors<sp/>and<sp/>False</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>if<sp/>outdoors<sp/>or<sp/>in<sp/>no<sp/>chunk.</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>isIndoors<sp/>)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>isOutdoors</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>isOutdoors<sp/>attribute<sp/>will<sp/>be<sp/>True<sp/>if<sp/>the<sp/>entity<sp/>is<sp/>outdoors<sp/>and<sp/>False</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>if<sp/>indoors<sp/>or<sp/>in<sp/>no<sp/>chunk.</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>isOutdoors<sp/>)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>velocity</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>velocity<sp/>attribute<sp/>is<sp/>the<sp/>current<sp/>velocity<sp/>of<sp/>the<sp/>Entity,<sp/>in<sp/>world</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>coordinates.<sp/>This<sp/>is<sp/>calculated<sp/>by<sp/>the<sp/>cell<sp/>each<sp/>time<sp/>the<sp/>Entity<sp/>is<sp/>moved,</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>is<sp/>assumed<sp/>to<sp/>equal<sp/>the<sp/>displacement<sp/>from<sp/>the<sp/>last<sp/>move<sp/>divided<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>time<sp/>between<sp/>position<sp/>updates.<sp/>Accessing<sp/>this<sp/>throws<sp/>a<sp/>TypeError<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Entity<sp/>is<sp/>a<sp/>ghost.</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>Read-only<sp/>tuple<sp/>of<sp/>3<sp/>floats,<sp/>as<sp/>(x,<sp/>y,<sp/>z)</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>velocity<sp/>)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>topSpeed</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>is<sp/>the<sp/>top<sp/>speed<sp/>of<sp/>the<sp/>entity<sp/>for<sp/>physics<sp/>checking<sp/>purposes.<sp/><sp/>It</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>only<sp/>makes<sp/>sense<sp/>to<sp/>set<sp/>it<sp/>on<sp/>real<sp/>entities,<sp/>setting<sp/>it<sp/>on<sp/>ghosts<sp/>has<sp/>no</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>effect<sp/>and<sp/>will<sp/>some<sp/>day<sp/>generate<sp/>an<sp/>exception.</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>set<sp/>to<sp/>0<sp/>(the<sp/>default)<sp/>no<sp/>physics<sp/>checking<sp/>is<sp/>done.<sp/>If<sp/>set<sp/>to<sp/>greater</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>than<sp/>zero,<sp/>entity<sp/>movements<sp/>are<sp/>checked<sp/>against<sp/>chunk<sp/>portals,<sp/>and<sp/>speed</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>is<sp/>checked<sp/>against<sp/>the<sp/>value<sp/>of<sp/>this<sp/>property.</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Setting<sp/>this<sp/>value<sp/>to<sp/>a<sp/>negative<sp/>value<sp/>is<sp/>undefined.</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>Additionally,<sp/>if<sp/>this<sp/>attribute<sp/>value<sp/>is<sp/>greater<sp/>than<sp/>zero<sp/>and<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>value<sp/>of<sp/>the<sp/>attribute<sp/>topSpeedY<sp/>is<sp/>also<sp/>greater<sp/>than<sp/>zero,<sp/>then<sp/>this</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>attribute&apos;s<sp/>value<sp/>enforces<sp/>the<sp/>magnitude<sp/>of<sp/>the<sp/>velocity<sp/>along<sp/>the<sp/>x-</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>z-axes<sp/>only,<sp/>and<sp/>value<sp/>of<sp/>the<sp/>attribute<sp/>topSpeedY<sp/>restricts<sp/>the</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>magnitude<sp/>of<sp/>the<sp/>velocity<sp/>along<sp/>the<sp/>y-axis.</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>topSpeedY</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>float</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>topSpeed<sp/>)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*~<sp/>attribute<sp/>Entity<sp/>topSpeedY</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>the<sp/>value<sp/>of<sp/>this<sp/>attribute<sp/>is<sp/>greater<sp/>than<sp/>0<sp/>and<sp/>value<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>topSpeed<sp/>attribute<sp/>is<sp/>also<sp/>greater<sp/>than<sp/>0,<sp/>then<sp/>the<sp/>topSpeed<sp/>attribute</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>applies<sp/>only<sp/>along<sp/>the<sp/>x-<sp/>and<sp/>z-axes,<sp/>and<sp/>this<sp/>attribute<sp/>restricts<sp/>the</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>top<sp/>speed<sp/>of<sp/>entities<sp/>along<sp/>the<sp/>y-axis.</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>value<sp/>of<sp/>topSpeed<sp/>attribute<sp/>is<sp/>not<sp/>greater<sp/>than<sp/>zero,<sp/>then<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>of<sp/>the<sp/>topSpeedY<sp/>attribute<sp/>has<sp/>no<sp/>effect.</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>This<sp/>attribute<sp/>is<sp/>only<sp/>available<sp/>on<sp/>the<sp/>real<sp/>entity<sp/>and<sp/>reading/writing</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>to<sp/>this<sp/>value<sp/>on<sp/>a<sp/>ghost<sp/>is<sp/>not<sp/>defined.</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>If<sp/>set<sp/>to<sp/>zero,<sp/>then<sp/>the<sp/>value<sp/>of<sp/>the<sp/>attribute<sp/>topSpeed<sp/>applies<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>magnitude<sp/>of<sp/>the<sp/>velocity<sp/>along<sp/>x-,<sp/>y-<sp/>and<sp/>z-axes.</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@see<sp/>topSpeed</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/><sp/>@type<sp/>float</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>PY_ATTRIBUTE(<sp/>topSpeedY<sp/>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal">PY_END_ATTRIBUTES()</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onDestroy</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>when<sp/>this<sp/>entity<sp/>is<sp/>being<sp/>destroyed.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*<sp/><sp/>Customised<sp/>clean-up<sp/>should<sp/>be<sp/>put<sp/>in<sp/>this<sp/>callback.<sp/>This<sp/>method<sp/>has<sp/>no</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/><sp/>arguments.</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onRestore</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>if<sp/>this<sp/>entity<sp/>has<sp/>been<sp/>restored<sp/>after<sp/>the</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*<sp/><sp/>failure<sp/>of<sp/>a<sp/>Cell<sp/>application.<sp/>This<sp/>method<sp/>has<sp/>no<sp/>arguments.</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onGhostCreated</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>ghost<sp/>representation<sp/>of<sp/>this<sp/>entity</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>the<sp/>ghost<sp/>is<sp/>created.</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>This<sp/>callback<sp/>must<sp/>have<sp/>the<sp/>decorator<sp/>@bwdecorators.callableOnGhost<sp/>in</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>*<sp/><sp/>order<sp/>to<sp/>be<sp/>successfully<sp/>called.</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onGhostDestroyed</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>ghost<sp/>representation<sp/>of<sp/>this<sp/>entity</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>the<sp/>ghost<sp/>is<sp/>destroyed.</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>This<sp/>callback<sp/>must<sp/>have<sp/>the<sp/>decorator<sp/>@bwdecorators.callableOnGhost<sp/>in</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*<sp/><sp/>order<sp/>to<sp/>be<sp/>successfully<sp/>called.</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>documentation<sp/>has<sp/>been<sp/>removed<sp/>since<sp/>we<sp/>do<sp/>not<sp/>support<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;complex&quot;<sp/>updater.<sp/>Also,<sp/>it&apos;s<sp/>probably<sp/>would&apos;ve<sp/>been<sp/>better<sp/>to<sp/>call<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="comment">//<sp/>something<sp/>like<sp/>onUpdateResource<sp/>and<sp/>onUpdatedAllResources.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>callback<sp/>Entity.onMigrate</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>when<sp/>this<sp/>entity<sp/>has<sp/>been<sp/>updated<sp/>during</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>update<sp/>process.</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>oldEntity<sp/>The<sp/>previous<sp/>instance<sp/>of<sp/>this<sp/>entity.</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>callback<sp/>Entity.onMigratedAll</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>when<sp/>all<sp/>entities<sp/>have<sp/>been<sp/>updated</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/><sp/>during<sp/>the<sp/>update<sp/>process.<sp/>This<sp/>method<sp/>has<sp/>no<sp/>arguments.</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onWindowOverflow</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>if<sp/>this<sp/>entity&apos;s<sp/>channel<sp/>is<sp/>close<sp/>to</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/>*<sp/><sp/>overflowing.<sp/>This<sp/>threshold<sp/>is<sp/>configured<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/>*<sp/><sp/>cellApp/sendWindowCallbackThreshold<sp/>setting<sp/>in<sp/>bw.xml.</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onWriteToDB</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>on<sp/>the<sp/>entity<sp/>when<sp/>it<sp/>is<sp/>about<sp/>to<sp/>write</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*<sp/><sp/>its<sp/>data<sp/>to<sp/>the<sp/>database.</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onNoise</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>this<sp/>entity<sp/>hears<sp/>a<sp/>noise.<sp/>See<sp/>Entity.makeNoise</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>more<sp/>information<sp/>about<sp/>how<sp/>an<sp/>entity<sp/>can<sp/>make<sp/>noise.</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entity<sp/><sp/><sp/>The<sp/>entity<sp/>that<sp/>made<sp/>the<sp/>noise.</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>propRange<sp/>The<sp/>propagation<sp/>range<sp/>of<sp/>the<sp/>noise.</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>distance<sp/>This<sp/>is<sp/>how<sp/>far<sp/>away<sp/>the<sp/>noise<sp/>was<sp/>made.</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>event<sp/>The<sp/>integer<sp/>event<sp/>number<sp/>that<sp/>was<sp/>passed<sp/>to<sp/>Entity.makeNoise.</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>info<sp/>The<sp/>integer<sp/>info<sp/>argument<sp/>that<sp/>was<sp/>passed<sp/>to<sp/>Entity.makeNoise.</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onSpaceGone</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>space<sp/>this<sp/>entity<sp/>is<sp/>in<sp/>wants<sp/>to<sp/>shut<sp/>down.</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onGetWitness</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>a<sp/>witness<sp/>attaches<sp/>to<sp/>this<sp/>entity.</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onLoseWitness</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>a<sp/>witness<sp/>detaches<sp/>from<sp/>this<sp/>entity.</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onWitnessed</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>state<sp/>of<sp/>this<sp/>entity<sp/>being<sp/>witnessed<sp/>changes.</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/>*<sp/><sp/>That<sp/>is,<sp/>if<sp/>there<sp/>are<sp/>no<sp/>attached<sp/>clients<sp/>who<sp/>have<sp/>this<sp/>entity<sp/>in<sp/>their<sp/>Area</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>Interest,<sp/>this<sp/>entity&apos;s<sp/>witnessed<sp/>state<sp/>will<sp/>be<sp/>False.<sp/>If<sp/>a<sp/>client<sp/>is</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*<sp/><sp/>interested<sp/>in<sp/>this<sp/>entity,<sp/>its<sp/>witnessed<sp/>state<sp/>will<sp/>be<sp/>True.</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>entities<sp/>are<sp/>created,<sp/>their<sp/>initial<sp/>witness<sp/>state<sp/>is<sp/>unwitnessed.<sp/>If</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*<sp/><sp/>they<sp/>are<sp/>created<sp/>within<sp/>the<sp/>AoI<sp/>of<sp/>a<sp/>witness,<sp/>then<sp/>they<sp/>will<sp/>have</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>*<sp/><sp/>Entity.onWitnessed(<sp/>True<sp/>)<sp/>called<sp/>as<sp/>soon<sp/>as<sp/>the<sp/>witness<sp/>is<sp/>notified<sp/>of</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>entity.</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>can<sp/>be<sp/>useful<sp/>as<sp/>an<sp/>optimisation.<sp/>For<sp/>example,<sp/>CPU<sp/>intensive<sp/>entities</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*<sp/><sp/>may<sp/>be<sp/>able<sp/>to<sp/>pause<sp/>their<sp/>AI<sp/>while<sp/>they<sp/>are<sp/>not<sp/>being<sp/>watched.</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.isWitnessed</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>isWitnessed<sp/>A<sp/>boolean<sp/>indicating<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>entity<sp/>is<sp/>now</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/>*<sp/><sp/>witnessed.</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onLoseControlledBy</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>entity<sp/>associated<sp/>with<sp/>the<sp/>controlledBy</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/>*<sp/><sp/>property<sp/>is<sp/>destroyed.</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>id<sp/>The<sp/>id<sp/>of<sp/>the<sp/>controlledBy<sp/>entity.</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onEnteringCell</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>ghost<sp/>entity<sp/>when<sp/>it<sp/>is<sp/>about<sp/>to<sp/>become<sp/>real.</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>source<sp/>cell,<sp/>onLeavingCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>real<sp/>before<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/>*<sp/><sp/>offloaded.<sp/>onLeftCell<sp/>is<sp/>then<sp/>called<sp/>on<sp/>this<sp/>entity<sp/>after<sp/>being<sp/>converted</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>a<sp/>ghost.</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>destination<sp/>cell,<sp/>onEnteringCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>ghost<sp/>entity.<sp/>This</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>*<sp/><sp/>ghost<sp/>is<sp/>then<sp/>converted<sp/>to<sp/>a<sp/>real<sp/>entity<sp/>and<sp/>onEnteredCell<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>should<sp/>be<sp/>decorated<sp/>with<sp/>@bwdecorators.callableOnGhost<sp/>since</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>will<sp/>only<sp/>be<sp/>called<sp/>on<sp/>ghost<sp/>entities.</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>Think<sp/>twice<sp/>before<sp/>using<sp/>this<sp/>callback.<sp/>These<sp/>can<sp/>often<sp/>be<sp/>avoided<sp/>by</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>*<sp/><sp/>using<sp/>smarter<sp/>data<sp/>types.</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteredCell</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeavingCell</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeftCell</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onEnteredCell</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>when<sp/>it<sp/>has<sp/>just<sp/>entered<sp/>a<sp/>new<sp/>cell.</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>source<sp/>cell,<sp/>onLeavingCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>real<sp/>before<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/>*<sp/><sp/>offloaded.</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/>*<sp/><sp/>onLeftCell<sp/>is<sp/>then<sp/>called<sp/>on<sp/>this<sp/>entity<sp/>after<sp/>being<sp/>converted<sp/>to<sp/>a<sp/>ghost.</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>destination<sp/>cell,<sp/>onEnteringCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>ghost<sp/>entity.<sp/>This</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/>*<sp/><sp/>ghost<sp/>is<sp/>then<sp/>converted<sp/>to<sp/>a<sp/>real<sp/>entity<sp/>and<sp/>onEnteredCell<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>Think<sp/>twice<sp/>before<sp/>using<sp/>this<sp/>callback.<sp/>These<sp/>can<sp/>often<sp/>be<sp/>avoided<sp/>by</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/>*<sp/><sp/>using<sp/>smarter<sp/>data<sp/>types.</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteringCell</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeavingCell</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeftCell</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onLeavingCell</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>when<sp/>it<sp/>is<sp/>about<sp/>to<sp/>move<sp/>to<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/>*<sp/><sp/>cell.</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>source<sp/>cell,<sp/>onLeavingCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>real<sp/>before<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/>*<sp/><sp/>offloaded.<sp/>onLeftCell<sp/>is<sp/>then<sp/>called<sp/>on<sp/>this<sp/>entity<sp/>after<sp/>being<sp/>converted</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>a<sp/>ghost.</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>destination<sp/>cell,<sp/>onEnteringCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>ghost<sp/>entity.<sp/>This</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/>*<sp/><sp/>ghost<sp/>is<sp/>then<sp/>converted<sp/>to<sp/>a<sp/>real<sp/>entity<sp/>and<sp/>onEnteredCell<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>Think<sp/>twice<sp/>before<sp/>using<sp/>this<sp/>callback.<sp/>These<sp/>can<sp/>often<sp/>be<sp/>avoided<sp/>by</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/>*<sp/><sp/>using<sp/>smarter<sp/>data<sp/>types.</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteringCell</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteredCell</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeftCell</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onLeftCell</highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>ghost<sp/>entity<sp/>when<sp/>the<sp/>real<sp/>entity<sp/>has<sp/>just<sp/>left</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>cell.</highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>source<sp/>cell,<sp/>onLeavingCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>real<sp/>before<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/>*<sp/><sp/>offloaded.<sp/>onLeftCell<sp/>is<sp/>then<sp/>called<sp/>on<sp/>this<sp/>entity<sp/>after<sp/>being<sp/>converted</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>a<sp/>ghost.</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*<sp/><sp/>On<sp/>the<sp/>destination<sp/>cell,<sp/>onEnteringCell<sp/>is<sp/>called<sp/>on<sp/>the<sp/>ghost<sp/>entity.<sp/>This</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/>*<sp/><sp/>ghost<sp/>is<sp/>then<sp/>converted<sp/>to<sp/>a<sp/>real<sp/>entity<sp/>and<sp/>onEnteredCell<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>should<sp/>be<sp/>decorated<sp/>with<sp/>@bwdecorators.callableOnGhost<sp/>since</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>will<sp/>only<sp/>be<sp/>called<sp/>on<sp/>ghost<sp/>entities.</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>Think<sp/>twice<sp/>before<sp/>using<sp/>this<sp/>callback.<sp/>These<sp/>can<sp/>often<sp/>be<sp/>avoided<sp/>by</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/>*<sp/><sp/>using<sp/>smarter<sp/>data<sp/>types.</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteringCell</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteredCell</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeavingCell</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onTeleport</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>just<sp/>before<sp/>the<sp/>entity<sp/>is<sp/>teleported</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/>*<sp/><sp/>via<sp/>a<sp/>Base.teleport<sp/>call.<sp/>Note<sp/>that<sp/>this<sp/>method<sp/>is<sp/>not<sp/>called<sp/>when<sp/>the</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>is<sp/>teleported<sp/>via<sp/>the<sp/>cell&apos;s<sp/>Entity.teleport<sp/>method.<sp/>You<sp/>should</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/>*<sp/><sp/>explicit<sp/>call<sp/>this<sp/>method<sp/>if<sp/>you<sp/>need<sp/>this<sp/>functionality.</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.teleport</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onTeleportSuccess</highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>when<sp/>a<sp/>teleport()<sp/>call<sp/>for<sp/>that</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>has<sp/>succeeded.<sp/>The<sp/>nearby<sp/>entity<sp/>is<sp/>passed<sp/>as<sp/>the<sp/>only<sp/>argument.</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>the<sp/>teleport<sp/>has<sp/>been<sp/>caused<sp/>by<sp/>a<sp/>call<sp/>from<sp/>the<sp/>base<sp/>entity,<sp/>the</highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/>*<sp/><sp/>position<sp/>of<sp/>the<sp/>entity<sp/>will<sp/>be<sp/>BigWorld.INVALID_POSITION.<sp/>The<sp/>desired</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/>*<sp/><sp/>position<sp/>should<sp/>be<sp/>set<sp/>in<sp/>this<sp/>callback.<sp/>This<sp/>will<sp/>typically<sp/>be<sp/>the</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/>*<sp/><sp/>position<sp/>of<sp/>the<sp/>nearby<sp/>entity<sp/>or<sp/>a<sp/>close<sp/>offset.</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>nearby<sp/>entity<sp/>argument<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>a<sp/>real<sp/>entity.<sp/>Two-way</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/>*<sp/><sp/>methods<sp/>that<sp/>modify<sp/>state<sp/>can<sp/>be<sp/>called<sp/>on<sp/>this<sp/>argument.<sp/>This<sp/>can<sp/>be<sp/>useful</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>the<sp/>nearby<sp/>entity<sp/>contains<sp/>state<sp/>for<sp/>where<sp/>the<sp/>entity<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/>*<sp/><sp/>positioned.</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>nearbyEntity<sp/>The<sp/>entity<sp/>associated<sp/>with<sp/>the<sp/>mailbox<sp/>passed<sp/>to</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Entity.teleport<sp/>or<sp/>Base.teleport.<sp/>This<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>a<sp/>real</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>entity.</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.teleport</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onTeleportFailure</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>when<sp/>a<sp/>teleport()<sp/>call<sp/>for<sp/>that</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>fails.<sp/>This<sp/>can<sp/>occur<sp/>if<sp/>the<sp/>nearby<sp/>entity<sp/>mailbox<sp/>passed<sp/>into</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/>*<sp/><sp/>teleport()<sp/>is<sp/>stale,<sp/>meaning<sp/>that<sp/>the<sp/>entity<sp/>that<sp/>it<sp/>points<sp/>to<sp/>no<sp/>longer</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/>*<sp/><sp/>exists<sp/>on<sp/>the<sp/>destination<sp/>CellApp<sp/>pointed<sp/>to<sp/>by<sp/>the<sp/>mailbox.</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.teleport</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onEnteredAoI</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>with<sp/>witness<sp/>whenever<sp/>an<sp/>entity</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/>*<sp/><sp/>enters<sp/>its<sp/>Area<sp/>of<sp/>Interest.</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/>*<sp/><sp/>Note:<sp/>Any<sp/>persistent<sp/>entity<sp/>tracking<sp/>performed<sp/>as<sp/>a<sp/>result<sp/>of<sp/>this<sp/>callback</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/>*<sp/><sp/>must<sp/>be<sp/>cleared<sp/>in<sp/>Entity.onRestore<sp/>as<sp/>the<sp/>AoI<sp/>is<sp/>not<sp/>restored<sp/>during<sp/>a</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/>*<sp/><sp/>CellApp<sp/>failure.</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeftAoI</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeftAoIID</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entity<sp/><sp/><sp/>The<sp/>entity<sp/>that<sp/>entered<sp/>the<sp/>AoI.</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onLeftAoI</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>with<sp/>witness<sp/>whenever<sp/>an<sp/>entity</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/>*<sp/><sp/>leaves<sp/>its<sp/>Area<sp/>of<sp/>Interest.<sp/>Entity.onLeftAoIID<sp/>should<sp/>also<sp/>be<sp/>implemented</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>order<sp/>to<sp/>handle<sp/>offload<sp/>scenarios<sp/>where<sp/>the<sp/>leaving<sp/>entity<sp/>may<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/><sp/>able<sp/>to<sp/>be<sp/>directly<sp/>referenced.</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*<sp/><sp/>NB:<sp/>It<sp/>is<sp/>possible<sp/>that<sp/>the<sp/>entity<sp/>passed<sp/>into<sp/>this<sp/>callback<sp/>may<sp/>already<sp/>be</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*<sp/><sp/>destroyed,<sp/>ie:<sp/>entity.isDestroyed<sp/>is<sp/>True</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteredAoI</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeftAoIID</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entity<sp/><sp/><sp/>The<sp/>entity<sp/>that<sp/>left<sp/>the<sp/>AoI.</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.onLeftAoIID</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>with<sp/>witness<sp/>when<sp/>an<sp/>entity</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/>*<sp/><sp/>leaves<sp/>its<sp/>Area<sp/>of<sp/>Interest<sp/>where<sp/>the<sp/>leaving<sp/>entity<sp/>is<sp/>not<sp/>able<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/>*<sp/><sp/>directly<sp/>referenced,<sp/>e.g.,<sp/>during<sp/>entity<sp/>offload.</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onEnteredAoI</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onLeftAoI</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>entityID<sp/>The<sp/>ID<sp/>of<sp/>the<sp/>entity<sp/>that<sp/>left<sp/>the<sp/>AoI.</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity.__init__</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>real<sp/>entity<sp/>is<sp/>initially<sp/>created.<sp/>It<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/>*<sp/><sp/>called<sp/>on<sp/>ghost<sp/>entities<sp/>or<sp/>when<sp/>the<sp/>real<sp/>entity<sp/>is<sp/>offloaded.</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/>*<sp/><sp/>@param<sp/>nearbyEntity<sp/>This<sp/>optional<sp/>argument<sp/>accepts<sp/>the<sp/>entity<sp/>that<sp/>was<sp/>used</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>Base.createCellEntity<sp/>call.<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>setting<sp/>the</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>initial<sp/>position<sp/>of<sp/>the<sp/>entity.<sp/>This<sp/>argument<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>real<sp/>entity.</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>Entity.onTeleportSuccess</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><ref refid="class_entity_population" kindref="compound">EntityPopulation</ref><sp/><ref refid="class_entity" kindref="compound">Entity</ref>::population_;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal">namespace</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>outputEntityPerfWarning(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>message,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_entity" kindref="compound">Entity</ref>&amp;<sp/>entity,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duration,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>(%s<sp/>%u<sp/>of<sp/>size<sp/>%d<sp/>bytes<sp/>took<sp/>%f<sp/>seconds)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message,<sp/>entity.pType()-&gt;description().name().c_str(),<sp/>entity.id(),</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,<sp/>duration<sp/>);</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::s_init()</highlight></codeline>
<codeline lineno="1000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>g_publicClientStats.init(<sp/></highlight><highlight class="stringliteral">&quot;eventProfiles/publicClientEvents&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>g_totalPublicClientStats.init(<sp/></highlight><highlight class="stringliteral">&quot;eventProfiles/totalPublicClientEvents&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>g_privateClientStats.init(<sp/></highlight><highlight class="stringliteral">&quot;eventProfiles/privateClientEvents&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal">uint16<sp/>Entity::s_physicsCorrectionsOutstandingWarningLevel<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>EntityExtraInfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="class_entity_extra_info" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_entity_extra_info" kindref="compound">EntityExtraInfo</ref></highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_extra_info" kindref="compound">EntityExtraInfo</ref>(<sp/>PyMethodDef<sp/>*<sp/>pMethods,<sp/>PyGetSetDef<sp/>*<sp/>pAttributes<sp/>)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pMethods_(<sp/>pMethods<sp/>),<sp/>pAttributes_(<sp/>pAttributes<sp/>)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>PyMethodDef<sp/>*<sp/>pMethods_;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>PyGetSetDef<sp/>*<sp/>pAttributes_;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>BuildEntityTypeDict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034" refid="class_build_entity_type_dict" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_build_entity_type_dict" kindref="compound">BuildEntityTypeDict</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Script::InitTimeJob</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_build_entity_type_dict" kindref="compound">BuildEntityTypeDict</ref>()<sp/>:</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::InitTimeJob(<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init()</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addMethods(<sp/>Entity::s_getMethodDefs()<sp/>);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addAttributes(<sp/>Entity::s_getAttributeDefs(),<sp/></highlight><highlight class="comment">/*<sp/>mainMethods:<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>entity<sp/>extra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityExtraMembers<sp/>&amp;<sp/>entityExtra<sp/>=<sp/>Entity::s_entityExtraInfo();</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(EntityExtraMembers::iterator<sp/>it<sp/>=<sp/>entityExtra.begin();</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>&lt;<sp/>entityExtra.end();<sp/>++it)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>pMethods_<sp/>and/or<sp/>pAttributes_<sp/>can<sp/>be<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addMethods(<sp/>it-&gt;pMethods_<sp/>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addAttributes(<sp/>it-&gt;pAttributes_<sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addMethods(<sp/>RealEntity::s_getMethodDefs()<sp/>);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addAttributes(<sp/>RealEntity::s_getAttributeDefs()<sp/>);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Witness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addMethods(<sp/>Witness::s_getMethodDefs()<sp/>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addAttributes(<sp/>Witness::s_getAttributeDefs()<sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>Sentinels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyMethodDef<sp/>nullMethod<sp/>=<sp/>{<sp/>NULL,<sp/>NULL,<sp/>0,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methods_.push_back(<sp/>nullMethod<sp/>);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyGetSetDef<sp/>nullMember<sp/>=<sp/>{<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>members_.push_back(<sp/>nullMember<sp/>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::s_type_.tp_methods<sp/>=<sp/>&amp;methods_[0];</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::s_type_.tp_getset<sp/>=<sp/>&amp;members_[0];</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StringSet&lt;ConstPolicy&gt;<sp/>&amp;<sp/>attributeSet()</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attributeSet_;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addMethods(<sp/>PyMethodDef<sp/>*<sp/>pMethods<sp/>)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pMethods<sp/>&amp;&amp;<sp/>pMethods-&gt;ml_name<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methods_.push_back(<sp/>*pMethods<sp/>);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributeSet_.insert(<sp/>pMethods-&gt;ml_name<sp/>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pMethods;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addAttributes(<sp/>PyGetSetDef<sp/>*<sp/>pMembers,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mainMethods<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pMembers<sp/>&amp;&amp;<sp/>pMembers-&gt;name<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mainMethods<sp/>||</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp(<sp/>pMembers-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;__members__&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp(<sp/>pMembers-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;__methods__&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>members_.push_back(<sp/>*pMembers<sp/>);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attributeSet_.insert(<sp/>pMembers-&gt;name<sp/>);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pMembers;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::vector&lt;PyMethodDef&gt;<sp/>methods_;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::vector&lt;PyGetSetDef&gt;<sp/>members_;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>StringSet&lt;ConstPolicy&gt;<sp/>attributeSet_;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><ref refid="class_build_entity_type_dict" kindref="compound">BuildEntityTypeDict</ref><sp/>s_buildEntityDictInitTimeJob;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal">Entity::Entity(<sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pEntityType<sp/>):</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObjectPlus(<sp/>pEntityType-&gt;pPyType(),<sp/>true<sp/>),</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pSpace_(<sp/>pSpace<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>removalHandle_(<sp/>NO_SPACE_REMOVAL_HANDLE<sp/>),</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>id_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntityType_(<sp/>pEntityType<sp/>),</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>globalPosition_(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>globalDirection_(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>localPosition_(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>localDirection_(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAddr_(<sp/>Mercury::Address::NONE<sp/>),</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pVehicle_(<sp/>NULL<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vehicleChangeNum_(<sp/>0<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aoiUpdateSchemeID_(<sp/>0<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numTimesRealOffloaded_(<sp/>0<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pRealChannel_(<sp/>NULL<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pReal_(<sp/>NULL<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>properties_(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyOwner_(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>eventHistory_(<sp/>pEntityType-&gt;description().numLatestChangeOnlyMembers()<sp/>),</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>isDestroyed_(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>),<sp/></highlight><highlight class="comment">//<sp/>cleared<sp/>in<sp/>setToInitialState</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inDestroy_(<sp/>false<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isInAoIOffload_(<sp/>false<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pVehicle_(<sp/>NULL<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>volatileUpdateNumber_(<sp/>0<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isOnGround_(<sp/>false<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lastEventNumber_(<sp/>0<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>pRangeListNode_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>pRangeListAppealTrigger_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>shouldReturnID_(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>extras_(<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pChunk_(<sp/>NULL<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pPrevInChunk_(<sp/>NULL<sp/>),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pNextInChunk_(<sp/>NULL<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>++g_numEntitiesEver;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>pRangeListNode_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_entity_range_list_node" kindref="compound">EntityRangeListNode</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>appealRadius<sp/>=<sp/>pEntityType-&gt;description().appealRadius();</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasAoIAppeal<sp/>=<sp/>!isZero(<sp/>appealRadius<sp/>);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasAoIAppeal)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRangeListAppealTrigger_<sp/>=</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_range_list_appeal_trigger" kindref="compound">RangeListAppealTrigger</ref>(<sp/>pRangeListNode_,<sp/>appealRadius<sp/>);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;setToInitialState(<sp/>pSpace<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>population_.add(<sp/>*this<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setToInitialState(<sp/>EntityID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PyObjectPlus(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_<sp/>=<sp/>pSpace;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>removalHandle_<sp/>==<sp/>NO_SPACE_REMOVAL_HANDLE<sp/>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>globalPosition_<sp/>=<sp/>Vector3();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>globalDirection_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>localPosition_<sp/>=<sp/>Vector3();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>localDirection_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAddr_<sp/>=<sp/>Mercury::Address::NONE;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>pVehicle_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>vehicleChangeNum_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>aoiUpdateSchemeID_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>numTimesRealOffloaded_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>pRealChannel_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>nextRealAddr_<sp/>=<sp/>Mercury::Address::NONE;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>!this-&gt;isReal()<sp/>)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;destroyReal();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_.empty()<sp/>);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>properties_.assign(<sp/>pEntityType_-&gt;propCountGhost(),<sp/>ScriptObject()<sp/>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>eventHistory_.clear();</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isDestroyed_<sp/>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>isDestroyed_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>++g_numEntities;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>inDestroy_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>isInAoIOffload_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>isOnGround_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>volatileUpdateNumber_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>topSpeed_<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>topSpeedY_<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsCorrections_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsLastValidated_<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsNetworkJitterDebt_<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>lastEventNumber_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pRangeListNode_<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pRangeListAppealTrigger_<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pControllers_;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_controllers" kindref="compound">Controllers</ref>;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extras_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extras_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_entity_extra" kindref="compound">EntityExtra</ref>*[<sp/>s_entityExtraInfo().size()<sp/>];</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s_entityExtraInfo().size();<sp/>i++)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extras_[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s_entityExtraInfo().size();<sp/>i++)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>extras_[i];</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extras_[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>pChunk_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>pPrevInChunk_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>pNextInChunk_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>periodsWithoutWitness_<sp/>=<sp/>NOT_WITNESSED_THRESHOLD;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>id_<sp/>==<sp/>0<sp/>||<sp/>id_<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(id_<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population_.add(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal">Entity::~Entity()</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isDestroyed()<sp/>);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pChunk_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_.empty()<sp/>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>real<sp/>part<sp/>of<sp/>this<sp/>entity<sp/>should<sp/>have<sp/>already<sp/>been<sp/>destroyed<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entity::destroy().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>any<sp/>entity<sp/>extras<sp/>(for<sp/>the<sp/>second<sp/>time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s_entityExtraInfo().size();<sp/>i++)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>extras_[i];</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extras_[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>none<sp/>came<sp/>back<sp/>through<sp/>self<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s_entityExtraInfo().size();<sp/>i++)</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>extras_[i]<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>extras_;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>population_.remove(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>we<sp/>are<sp/>out<sp/>of<sp/>all<sp/>range<sp/>lists<sp/>no<sp/>one<sp/>should<sp/>have<sp/>triggers<sp/>on<sp/>us!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>triggers_.empty()<sp/>);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pRangeListNode_<sp/>);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pRangeListAppealTrigger_<sp/>);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pControllers_<sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldReturnID_)</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>didn&apos;t<sp/>have<sp/>a<sp/>base,<sp/>and<sp/>we<sp/>were<sp/>the<sp/>real<sp/>that<sp/>got</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destroyed,<sp/>so<sp/>we<sp/>now<sp/>return<sp/>our<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().idClient().putUsedID(<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>DEBUG_FAULT_TOLERANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_FAULT_TOLERANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_crashOnOnload;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>g_crashOnOffload;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>s_pTreatAsReal<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>s_pRealEntityArg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::addWatchers()</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_FAULT_TOLERANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>handy<sp/>for<sp/>testing<sp/>whether<sp/>the<sp/>fault<sp/>tolerance<sp/>can<sp/>handle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restoring<sp/>an<sp/>entity<sp/>while<sp/>an<sp/>offload<sp/>or<sp/>onload<sp/>is<sp/>in<sp/>progress.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;debugging/crashOnOnload&quot;</highlight><highlight class="normal">,<sp/>g_crashOnOnload<sp/>);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;debugging/crashOnOffload&quot;</highlight><highlight class="normal">,<sp/>g_crashOnOffload<sp/>);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;config/physicsCorrectionsOutstandingWarningLevel&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::s_physicsCorrectionsOutstandingWarningLevel,</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Watcher::WT_READ_WRITE,</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>outstanding<sp/>physicsCorrections<sp/>from<sp/>an<sp/>entity<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>a<sp/>client<sp/>at<sp/>which<sp/>to<sp/>log<sp/>a<sp/>warning.<sp/>Set<sp/>to<sp/>0<sp/>to<sp/>disable.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CellAppConfig::treatAllOtherEntitiesAsGhosts()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppConfig::isProduction())</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Production<sp/>Mode:<sp/>Treating<sp/>other<sp/>entities<sp/>as<sp/>ghosts<sp/>enabled.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>may<sp/>reduce<sp/>your<sp/>performance.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/numEntities&quot;</highlight><highlight class="normal">,<sp/>g_numEntities,<sp/>Watcher::WT_READ_ONLY,</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>entities<sp/>on<sp/>this<sp/>CellApp.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/numEntitiesLeaked&quot;</highlight><highlight class="normal">,<sp/>numEntitiesLeaked,</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>number<sp/>of<sp/>entities<sp/>that<sp/>have<sp/>been<sp/>destroyed<sp/>but<sp/>are<sp/>still<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;referenced.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/totalEntitiesEver&quot;</highlight><highlight class="normal">,<sp/>g_numEntitiesEver<sp/>);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/nonVolatileBytes&quot;</highlight><highlight class="normal">,<sp/>g_nonVolatileBytes<sp/>);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/volatileBytes&quot;</highlight><highlight class="normal">,<sp/>g_volatileBytes<sp/>);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntity::addWatchers();</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::initReal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealEntityStreamHelper::AddEntityData<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptDict<sp/>&amp;<sp/>properties,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRestore,</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelVersion<sp/>channelVersion,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pNearbyEntity,</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>baseAddr<sp/>)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ProfileVal<sp/>localProfile(<sp/></highlight><highlight class="stringliteral">&quot;initReal&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>TRANSIENT_LOAD_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>START_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>data.remainingLength();</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAddr_<sp/>=<sp/>baseAddr;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;readRealDataInEntityFromStreamForInitOrRestore(<sp/>header,<sp/>data,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties<sp/>))</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forget<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>creation<sp/>data,<sp/>it<sp/>obviously<sp/>failed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>state<sp/>that<sp/>comes<sp/>from<sp/>Entity::setToInitialState,<sp/>but<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>our<sp/>destructor<sp/>depends<sp/>on<sp/>Entity::destroy<sp/>to<sp/>clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setDestroyed();</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;clearPythonProperties();</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STOP_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>called<sp/>in<sp/>Cell::createEntityInternal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entity::callbacksPermitted(<sp/>false<sp/>);<sp/>//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!Entity::callbacksPermitted()<sp/>);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>it<sp/>to<sp/>the<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_-&gt;addEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isRestore)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volatileInfo_<sp/>=<sp/>pEntityType_-&gt;volatileInfo();</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>volatileInfo_;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createReal();</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldUpdateGhostPositions<sp/>=<sp/>pReal_-&gt;init(<sp/>data,</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isRestore<sp/>?<sp/>CREATE_REAL_FROM_RESTORE<sp/>:<sp/>CREATE_REAL_FROM_INIT,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channelVersion<sp/>);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isRestore<sp/>!=<sp/>shouldUpdateGhostPositions<sp/>);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>any<sp/>BASE_AND_CLIENT<sp/>data<sp/>exposed<sp/>for<sp/>recording.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;readBasePropertiesExposedForReplayFromStream(<sp/>data<sp/>))</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::readRealDataInEntityFromStreamForInitOrRestore&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%u):<sp/>Error<sp/>streaming<sp/>off<sp/>exposed<sp/>base<sp/>entity<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;properties\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateGlobalPosition(<sp/>shouldUpdateGhostPositions<sp/>);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRestore)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startRealControllers();</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>us<sp/>to<sp/>the<sp/>right<sp/>chunk&apos;s<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace_<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pChunk_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).removeEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT_DEBUG(<sp/>this-&gt;pChunk()<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT_DEBUG(<sp/>this-&gt;nextInChunk()<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT_DEBUG(<sp/>this-&gt;prevInChunk()<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;checkChunkCrossing();</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>stop<sp/>callbacks<sp/>here<sp/>but<sp/>we<sp/>also<sp/>do<sp/>not<sp/>yet<sp/>want<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replay<sp/>any<sp/>queued<sp/>callback<sp/>yet.<sp/>This<sp/>is<sp/>a<sp/>bit<sp/>of<sp/>a<sp/>risk<sp/>because<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callbacks<sp/>could<sp/>come<sp/>in<sp/>in<sp/>an<sp/>unexpected<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>s_callbackBuffer_.enableHighPriorityBuffering();</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>call<sp/>__init__<sp/>(which<sp/>could<sp/>change<sp/>position,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>spaces,<sp/>offload<sp/>or<sp/>even<sp/>destroy<sp/>us)<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>our<sp/>caller<sp/>is<sp/>keeping<sp/>a<sp/>ref<sp/>so<sp/>that<sp/>we<sp/>don&apos;t<sp/>get<sp/>destructed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callScriptInit(<sp/>isRestore,<sp/>pNearbyEntity<sp/>);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>s_callbackBuffer_.disableHighPriorityBuffering();</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>release<sp/>any<sp/>queued<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entity::callbacksPermitted(<sp/>true<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/>//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>STOP_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>duration<sp/>=<sp/>localProfile.lastTime();</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(duration<sp/>&gt;<sp/>g_profileInitRealTimeLevel)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputEntityPerfWarning(<sp/></highlight><highlight class="stringliteral">&quot;Profile<sp/>initReal/timeWarningLevel<sp/>exceeded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stampsToSeconds(<sp/>duration<sp/>),<sp/>dataSize<sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSize<sp/>&gt;<sp/>g_profileInitRealSizeLevel)</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputEntityPerfWarning(<sp/></highlight><highlight class="stringliteral">&quot;Profile<sp/>initReal/sizeWarningLevel<sp/>exceeded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stampsToSeconds(<sp/>duration<sp/>),<sp/>dataSize<sp/>);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::readRealDataInEntityFromStreamForInitOrRestore(</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealEntityStreamHelper::AddEntityData<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data,<sp/></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptDict<sp/>&amp;<sp/>properties<sp/>)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>localPosition_<sp/>=<sp/>header.position;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>localDirection_<sp/>=<sp/>header.direction;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>lastEventNumber_<sp/>=<sp/>header.lastEventNumber;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>templateID_<sp/>=<sp/>header.templateID;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>isOnGround_<sp/>=<sp/>header.isOnGround();</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEBUG_MSG(<sp/>&quot;Entity::initReal:<sp/>entityTypeID_<sp/>=<sp/>%d\n&quot;,<sp/>entityTypeID_<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>description<sp/>=<sp/>pEntityType_-&gt;description();</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>structure<sp/>that<sp/>stores<sp/>the<sp/>time-stamps<sp/>for<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clientServer<sp/>properties<sp/>were<sp/>last<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>For<sp/>now,<sp/>setting<sp/>all<sp/>properties<sp/>to<sp/>the<sp/>lastEventNumber_.<sp/>In<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>future,<sp/>these<sp/>may<sp/>be<sp/>stored<sp/>in<sp/>the<sp/>database<sp/>and<sp/>streamed<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyEventStamps_.init(<sp/>description,<sp/>lastEventNumber_<sp/>);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Properties<sp/>can<sp/>come<sp/>from<sp/>only<sp/>one<sp/>of<sp/>two<sp/>sources:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>ScriptDict,<sp/>which<sp/>has<sp/>come<sp/>from<sp/>Python<sp/>script<sp/>locally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>EntityDescription::CELL_DATA<sp/>stream<sp/>from<sp/>a<sp/>BaseApp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;createEntityDelegate(<sp/>templateID_<sp/>))</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::readRealDataInEntityFromStreamForInitOrRestore(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>create<sp/>an<sp/>Entity<sp/>of<sp/>type<sp/>%s<sp/>by<sp/>template<sp/>%s<sp/>but<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;delegate<sp/>cannot<sp/>handle<sp/>that<sp/>type<sp/>or<sp/>template.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pEntityType_-&gt;name(),<sp/>templateID_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!templateID_.empty())</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Support<sp/>TemplateID<sp/>creation<sp/>without<sp/>an<sp/>IEntityDelegate.<sp/>We<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>way<sp/>to<sp/>identify<sp/>a<sp/>specific<sp/>Entity<sp/>in<sp/>a<sp/>ChunkSpace...<sp/>GUID<sp/>perhaps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>template<sp/>may<sp/>override<sp/>localPosition_,<sp/>isOnGround_<sp/>and<sp/>localDirection_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(localPosition_<sp/>==<sp/>INVALID_POSITION<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!pEntityDelegate_-&gt;getSpatialData(</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPosition_,<sp/>isOnGround_,<sp/>localDirection_))</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::readRealDataInEntityFromStreamForInitOrRestore(%d):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;getSpatialData<sp/>for<sp/>&apos;%s&apos;<sp/>template<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>templateID_.c_str());</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>propDict;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!header.hasProperties()<sp/>);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propDict<sp/>=<sp/>properties;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propDict<sp/>=<sp/>ScriptDict::create();</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>properties<sp/>are<sp/>provided<sp/>via<sp/>stream,<sp/>get<sp/>a<sp/>dictionary<sp/>of<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Optimise<sp/>by<sp/>streaming<sp/>directly<sp/>into<sp/>properties_<sp/>and/or<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delegate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.hasProperties())</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Written<sp/>by<sp/>one<sp/>of:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Base::addCellCreationData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>RealEntity::writeBackupProperties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>a<sp/>stream<sp/>then<sp/>put<sp/>it<sp/>into<sp/>a<sp/>temp<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!description.readStreamToDict(<sp/>data,</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityDescription::CELL_DATA,<sp/>propDict<sp/>))</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::readRealDataInEntityFromStreamForInitOrRestore(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>streaming<sp/>off<sp/>entity<sp/>properties\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>template<sp/>properties<sp/>can<sp/>be<sp/>overridden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityDelegate_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!populateDelegateWithDict(<sp/>description,<sp/>pEntityDelegate_.get(),</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propDict,<sp/>EntityDescription::CELL_DATA,<sp/></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pType()-&gt;getDelegatedProperties()<sp/>))</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::readRealDataInEntityFromStreamForInitOrRestore(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>populate<sp/>the<sp/>delegate<sp/>of<sp/>an<sp/>Entity<sp/>of<sp/>type<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pEntityType_-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>globalPosition_<sp/>=<sp/>INVALID_POSITION;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/>globalDirection_<sp/>=<sp/>localDirection_;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resize<sp/>properties_<sp/>to<sp/>the<sp/>correct<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>properties_.insert(<sp/>properties_.end(),</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propCountGhostPlusReal()-properties_.size(),</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject()<sp/>);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>set<sp/>properties_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>properties_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataDescription<sp/>&amp;<sp/>ds<sp/>=<sp/>*pEntityType_-&gt;propIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>&amp;<sp/>dt<sp/>=<sp/>*ds.dataType();</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>detach<sp/>in<sp/>case<sp/>we<sp/>are<sp/>restoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties_[i])</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt.detach(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[i]<sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//<sp/>necessary;<sp/>see<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>attach<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pNewVal<sp/>=<sp/>ds.getItemFrom(<sp/>propDict<sp/>);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNewVal<sp/>||</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(properties_[i]<sp/>=<sp/>dt.attach(<sp/>pNewVal,</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;propertyOwner_,<sp/>i<sp/>)))</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prop<sp/>currently<sp/>null<sp/>so<sp/>assignment<sp/>won&apos;t<sp/>exec<sp/>python<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();<sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>ok<sp/>to<sp/>delay<sp/>clearing<sp/>err<sp/>&apos;till<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewVal)</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::readRealDataInEntityFromStreamForInitOrRestore(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>set<sp/>%s.%s<sp/>to<sp/>invalid<sp/>value\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pEntityType_-&gt;name(),<sp/>ds.name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[i]<sp/>=</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt.attach(<sp/>ds.pInitialValue(),<sp/>&amp;propertyOwner_,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::initGhost(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ProfileVal<sp/>localProfile(<sp/></highlight><highlight class="stringliteral">&quot;initGhost&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>START_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>data.remainingLength();</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;readGhostDataFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Consider<sp/>putting<sp/>this<sp/>above<sp/>readGhostDataFromStream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>any<sp/>of<sp/>the<sp/>ghostControllers<sp/>or<sp/>entity<sp/>extras<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>script<sp/>method<sp/>to<sp/>be<sp/>called<sp/>back<sp/>on<sp/>some<sp/>entity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(obv.<sp/>a<sp/>different<sp/>one<sp/>to<sp/>this<sp/>one<sp/>which<sp/>is<sp/>just<sp/>a<sp/>ghost).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e.g.<sp/>if<sp/>a<sp/>ghost<sp/>controller<sp/>added<sp/>it<sp/>to<sp/>some<sp/>plane<sp/>of<sp/>entities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>others<sp/>got<sp/>script<sp/>notifications<sp/>of<sp/>(like<sp/>with<sp/>a<sp/>proximity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>controller)<sp/>and<sp/>then<sp/>they<sp/>couldn&apos;t<sp/>find<sp/>this<sp/>entity<sp/>as<sp/>it<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>yet<sp/>in<sp/>the<sp/>space<sp/>...<sp/>anyway,<sp/>yeah,<sp/>worth<sp/>thinking<sp/>about,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>not<sp/>for<sp/>this<sp/>commit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_-&gt;addEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;onPositionChanged();</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>the<sp/>chunk<sp/>is<sp/>NULL<sp/>(controller<sp/>could<sp/>have<sp/>set<sp/>it<sp/>already)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChunk_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).removeEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>which<sp/>chunk<sp/>we<sp/>are<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>pChunk_<sp/>=<sp/>this-&gt;pChunkSpace()-&gt;findChunkFromPointExact(</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_<sp/>+<sp/>Vector3(0.f,<sp/>0.1f,<sp/>0.f)<sp/>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>us<sp/>to<sp/>its<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChunk_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).addEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>STOP_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>duration<sp/>=<sp/>localProfile.lastTime();</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(duration<sp/>&gt;<sp/>g_profileInitGhostTimeLevel)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputEntityPerfWarning(<sp/></highlight><highlight class="stringliteral">&quot;Profile<sp/>initGhost/timeWarningLevel<sp/>exceeded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stampsToSeconds(<sp/>duration<sp/>),<sp/>dataSize<sp/>);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSize<sp/>&gt;<sp/>g_profileInitGhostSizeLevel)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputEntityPerfWarning(<sp/></highlight><highlight class="stringliteral">&quot;Profile<sp/>initGhost/sizeWarningLevel<sp/>exceeded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stampsToSeconds(<sp/>duration<sp/>),<sp/>dataSize<sp/>);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onGhostCreated&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onGhostCreated();</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::readGhostDataFromStream(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>CompressionIStream<sp/>compressionStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;readGhostDataFromStreamInternal(<sp/>compressionStream<sp/>);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::readGhostDataFromStreamInternal(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>realAddr;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise<sp/>the<sp/>structure<sp/>that<sp/>stores<sp/>the<sp/>time-stamps<sp/>for<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clientServer<sp/>properties<sp/>were<sp/>last<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>propertyEventStamps_.init(<sp/>pEntityType_-&gt;description()<sp/>);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>GhostEntityStreamHelper::readHeader(<sp/></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>numTimesRealOffloaded_,<sp/>localPosition_,<sp/>localDirection_,<sp/></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOnGround_,<sp/>lastEventNumber_,<sp/>volatileInfo_,<sp/>realAddr,<sp/>baseAddr_,<sp/></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>templateID_,<sp/>propertyEventStamps_<sp/>));</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>globalPosition_<sp/>=<sp/>localPosition_;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>globalDirection_<sp/>=<sp/>localDirection_;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>eventHistory_.lastTrimmedEventNumber(<sp/>lastEventNumber_<sp/>);</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>pRealChannel_<sp/>=<sp/>CellAppChannels::instance().get(<sp/>realAddr<sp/>);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>createEntityDelegate(<sp/>templateID_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_CHECK(<sp/>data,<sp/></highlight><highlight class="stringliteral">&quot;GProperties&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>in<sp/>the<sp/>ghost<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_.size()<sp/>==<sp/>pEntityType_-&gt;propCountGhost()<sp/>);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>properties_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataDescription<sp/>&amp;<sp/>dataDescr<sp/>=<sp/>*pEntityType_-&gt;propIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pType()-&gt;isDelegatedProperty(<sp/>&amp;dataDescr<sp/>))</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntityDelegate_-&gt;updateProperty(<sp/>data,<sp/>dataDescr,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::initGhost(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>streaming<sp/>off<sp/>delegated<sp/>entity<sp/>property<sp/>%s.%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name(),<sp/>dataDescr.name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>&amp;<sp/>dt<sp/>=<sp/>*dataDescr.dataType();</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>and<sp/>attach<sp/>the<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptDataSink<sp/>sink;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>dt.createFromStream(<sp/>data,<sp/>sink,</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isPersistentOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>value<sp/>=<sp/>sink.finalise();</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(properties_[i]<sp/>=<sp/>dt.attach(<sp/>value,<sp/>&amp;propertyOwner_,<sp/>i<sp/>)))</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::initGhost(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>streaming<sp/>off<sp/>entity<sp/>property<sp/>%s.%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name(),<sp/>dataDescr.name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_CHECK(<sp/>data,<sp/></highlight><highlight class="stringliteral">&quot;GController&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally<sp/>get<sp/>controllers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;readGhostControllersFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_CHECK(<sp/>data,<sp/></highlight><highlight class="stringliteral">&quot;GTail&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>periodsWithoutWitness_<sp/>&gt;&gt;<sp/>aoiUpdateSchemeID_;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>data.remainingLength()<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!data.error()<sp/>);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeGhostDataToStream(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1790"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>The<sp/>id<sp/>and<sp/>entityTypeID<sp/>is<sp/>not<sp/>read<sp/>off<sp/>by<sp/>readGhostDataFromStream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>are<sp/>read<sp/>by<sp/>Space::createGhost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Also<sp/>read<sp/>by<sp/>BufferGhostMessage<sp/>to<sp/>get<sp/>numTimesRealOffloaded_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>id_<sp/>&lt;&lt;<sp/>this-&gt;entityTypeID();</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>CompressionOStream<sp/>compressionStream(<sp/>stream,</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().internalNetworkCompressionType()<sp/>);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeGhostDataToStreamInternal(<sp/>compressionStream<sp/>);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeGhostDataToStreamInternal(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1807"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>GhostEntityStreamHelper::writeHeader(</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream,<sp/>numTimesRealOffloaded_,<sp/>localPosition_,<sp/>localDirection_,<sp/></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOnGround_,<sp/>lastEventNumber_,<sp/>volatileInfo_,<sp/></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().networkInterface().address(),<sp/></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseAddr_,<sp/>templateID_,<sp/>propertyEventStamps_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_ADD(<sp/>stream,<sp/></highlight><highlight class="stringliteral">&quot;GProperties&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>ghosted<sp/>properties<sp/>dependent<sp/>on<sp/>entity<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;pType()-&gt;addDataToStream(<sp/>this,<sp/>stream,<sp/>DATA_GHOSTED<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>our<sp/>ghost<sp/>properties<sp/>to<sp/>the<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pEntityType_-&gt;propCountGhost();<sp/>++i)</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataDescription<sp/>*<sp/>pDataDesc<sp/>=<sp/>pEntityType_-&gt;propIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pDataDesc<sp/>);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pType()-&gt;isDelegatedProperty(<sp/>pDataDesc<sp/>))</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntityDelegate_-&gt;getDataField(<sp/>stream,<sp/>*pDataDesc,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::writeGhostDataToStream(%u):<sp/>Could<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;write<sp/>delegated<sp/>ghost<sp/>property<sp/>%s.%s<sp/>to<sp/>stream\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name(),<sp/>pDataDesc-&gt;name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptDataSource<sp/>source(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDataDesc-&gt;addToStream(<sp/>source,<sp/>stream,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::writeGhostDataToStream(%u):<sp/>Could<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;write<sp/>ghost<sp/>property<sp/>%s.%s<sp/>to<sp/>stream\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name(),<sp/>pDataDesc-&gt;name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_ADD(<sp/>stream,<sp/></highlight><highlight class="stringliteral">&quot;GController&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeGhostControllersToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_ADD(<sp/>stream,<sp/></highlight><highlight class="stringliteral">&quot;GTail&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>periodsWithoutWitness_<sp/>&lt;&lt;<sp/>aoiUpdateSchemeID_;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::readGhostControllersFromStream(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;readGhostsFromStream(<sp/>data,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::readRealControllersFromStream(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;readRealsFromStream(<sp/>data,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::callScriptInit(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRestore,<sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pNearbyEntity<sp/>)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRestore)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onRestore&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntityType_-&gt;expectsNearbyEntity())</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>s_pRealEntityArg<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_pRealEntityArg<sp/>=<sp/>pNearbyEntity.get();</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNearbyEntity<sp/>?<sp/>pNearbyEntity.get()<sp/>:<sp/>Py_None<sp/>),</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__init__&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_pRealEntityArg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>BWT-31859<sp/>move<sp/>this<sp/>to<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityDelegate_)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityDelegate_-&gt;onEntityInitialised();</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRestore)</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate();</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(pCellEntityDelegate);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onOnload(<sp/></highlight><highlight class="comment">/*isRestore*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::isOffloadingTo(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1933"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;realAddr()<sp/>==<sp/>nextRealAddr_<sp/>&amp;&amp;<sp/>nextRealAddr_<sp/>==<sp/>addr;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::offload(<sp/><ref refid="class_cell_app_channel" kindref="compound">CellAppChannel</ref><sp/>*<sp/>pChannel,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTeleport<sp/>)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_FAULT_TOLERANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_crashOnOffload)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!</highlight><highlight class="stringliteral">&quot;Entity::offload:<sp/>Crash<sp/>on<sp/>offload&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>pChannel-&gt;bundle();</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>teleporting<sp/>then<sp/>we<sp/>already<sp/>have<sp/>a<sp/>message<sp/>on<sp/>the<sp/>bundle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isTeleport)</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::onload<sp/>);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;convertRealToGhost(<sp/>&amp;bundle,<sp/>pChannel,<sp/>isTeleport<sp/>);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DEBUG_MSG(<sp/>&quot;Entity::offload(<sp/>%d<sp/>):<sp/>Offloading<sp/>to<sp/>%s\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pChannel-&gt;addr().c_str()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::convertRealToGhost(<sp/>BinaryOStream<sp/>*<sp/>pStream,</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_app_channel" kindref="compound">CellAppChannel</ref><sp/>*<sp/>pChannel,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTeleport<sp/>)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!pRealChannel_<sp/>);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_witness" kindref="compound">Witness</ref><sp/>*<sp/>pWitness<sp/>=<sp/>this-&gt;pReal()-&gt;pWitness();</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pWitness<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWitness-&gt;<ref refid="class_witness_1a3eb0beefb254554856eb21cc52caf105" kindref="member">flushToClient</ref>();</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChannel<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offload<sp/>the<sp/>entity<sp/>if<sp/>we<sp/>have<sp/>a<sp/>pChannel<sp/>to<sp/>the<sp/>next<sp/>real.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pStream<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;writeRealDataToStream(<sp/>*pStream,<sp/>isTeleport<sp/>);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRealChannel_<sp/>=<sp/>pChannel;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>the<sp/>real<sp/>is<sp/>created<sp/>on<sp/>the<sp/>other<sp/>CellApp,<sp/>it<sp/>will<sp/>send<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ghostSetReal<sp/>back<sp/>to<sp/>this<sp/>app,<sp/>so<sp/>we<sp/>better<sp/>be<sp/>ready<sp/>for<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRealAddr_<sp/>=<sp/>pRealChannel_-&gt;addr();</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>real<sp/>part<sp/>(includes<sp/>decrementing<sp/>refs<sp/>of<sp/>haunts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>notifying<sp/>haunts<sp/>of<sp/>our<sp/>nextRealAddr_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;offloadReal();</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>real<sp/>part<sp/>(includes<sp/>decrementing<sp/>refs<sp/>of<sp/>haunts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we&apos;re<sp/>being<sp/>destroyed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;destroyReal();</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>it<sp/>a<sp/>ghost<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;pType()-&gt;convertToGhostScript(<sp/>this<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>..<sp/>by<sp/>dropping<sp/>all<sp/>the<sp/>properties<sp/>of<sp/>the<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_.size()<sp/>==<sp/>pEntityType_-&gt;propCountGhostPlusReal()<sp/>);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>pEntityType_-&gt;propCountGhost();<sp/>i<sp/>&lt;<sp/>properties_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties_[i])</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propIndex(i)-&gt;dataType()-&gt;detach(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>properties_.erase(<sp/>properties_.begin()<sp/>+<sp/>pEntityType_-&gt;propCountGhost(),</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_.end()<sp/>);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;relocated();</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeRealDataToStream(<sp/>BinaryOStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTeleport<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2050"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>the<sp/>information<sp/>on<sp/>the<sp/>stream.<sp/>This<sp/>must<sp/>be<sp/>done<sp/>in<sp/>the<sp/>same<sp/>order<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readRealDataFromStreamForOnload.<sp/>First<sp/>we<sp/>do<sp/>the<sp/>Entity,<sp/>then<sp/>the<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>related<sp/>stuff<sp/>and<sp/>then<sp/>the<sp/>real<sp/>stuff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>teleportFailure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/>CompressionOStream<sp/>compressionStream(<sp/>data,</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().internalNetworkCompressionType()<sp/>);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeRealDataToStreamInternal(<sp/>compressionStream,</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isTeleport<sp/>);</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeRealDataToStreamInternal(<sp/>BinaryOStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isTeleport<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2072"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;pType()-&gt;dumpRealScript(<sp/>this,<sp/>data<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_.size()<sp/>==<sp/>pEntityType_-&gt;propCountGhostPlusReal()<sp/>);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>pEntityType_-&gt;propCountGhost();<sp/>i<sp/>&lt;<sp/>properties_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDescription<sp/>*<sp/>pDataDesc<sp/>=<sp/>pEntityType_-&gt;propIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(pDataDesc);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pType()-&gt;isDelegatedProperty(<sp/>pDataDesc<sp/>))</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntityDelegate_-&gt;getDataField(<sp/>data,<sp/>*pDataDesc,<sp/></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isPersistentOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::writeRealDataToStream(%d):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>stream<sp/>on<sp/>delegated<sp/>property<sp/>%s.%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().name().c_str(),</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDataDesc-&gt;name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptDataSource<sp/>source(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDataDesc-&gt;addToStream(<sp/>source,<sp/>data,<sp/></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isPersistentOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::writeRealDataToStream(%d):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>stream<sp/>on<sp/>property<sp/>%s.%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().name().c_str(),</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDataDesc-&gt;name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_ADD(<sp/>data,<sp/></highlight><highlight class="stringliteral">&quot;RealProps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_-&gt;writeOffloadData(<sp/>data,<sp/>isTeleport<sp/>);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeBasePropertiesExposedForReplayToStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::readBasePropertiesExposedForReplayFromStream(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>basePropertiesDataSize<sp/>=<sp/>data.readPackedInt();</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basePropertiesDataSize)</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOStream<sp/>basePropertiesData;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basePropertiesData.transfer(<sp/>data,<sp/>basePropertiesDataSize<sp/>);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptDict<sp/>basePropDict<sp/>=<sp/>ScriptDict::create();</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>description<sp/>=<sp/>pEntityType_-&gt;description();</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!description.readStreamToDict(<sp/>basePropertiesData,</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityDescription::BASE_DATA,<sp/>basePropDict<sp/>))</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposedForReplayClientProperties_<sp/>=<sp/>basePropDict;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeBasePropertiesExposedForReplayToStream(</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/>BinaryOStream<sp/>&amp;<sp/>data<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2153"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryOStream<sp/>propData;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>edesc<sp/>=<sp/>pEntityType_-&gt;description();</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exposedForReplayClientProperties_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposedForReplayClientProperties_.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!edesc.addDictionaryToStream(</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposedForReplayClientProperties_,<sp/>propData,</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityDescription::BASE_DATA<sp/>))</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::writeBasePropertiesExposedForReplayToStream:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Add<sp/>exposed<sp/>base<sp/>properties<sp/>failed\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>data.writePackedInt(<sp/>propData.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>data.transfer(<sp/>propData,<sp/>propData.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeGhostControllersToStream(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2179"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;writeGhostsToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="2181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeRealControllersToStream(<sp/>BinaryOStream<sp/>&amp;<sp/>data<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2191"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;writeRealsToStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::startRealControllers()</highlight></codeline>
<codeline lineno="2200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;startReals();</highlight></codeline>
<codeline lineno="2204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::stopRealControllers()</highlight></codeline>
<codeline lineno="2211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;stopReals(<sp/>this-&gt;isDestroyed()<sp/>);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220" refid="class_reply_forwarder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_reply_forwarder" kindref="compound">ReplyForwarder</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Mercury::ShutdownSafeReplyMessageHandler</highlight></codeline>
<codeline lineno="2221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_reply_forwarder" kindref="compound">ReplyForwarder</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address&amp;<sp/>destAddr,</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ReplyID<sp/>replyID<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destAddr_(<sp/>destAddr<sp/>),<sp/>replyID_(<sp/>replyID<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMessage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address&amp;<sp/>source,</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,<sp/>BinaryIStream&amp;<sp/>data,</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>CellApp::getChannel(<sp/>destAddr_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender.bundle().startReply(<sp/>replyID_<sp/>);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender.bundle().transfer(<sp/>data,<sp/>data.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleException(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException&amp;<sp/>exception,</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;ReplyForwarder::handleException:<sp/>destAddr_<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destAddr_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destination<sp/>for<sp/>the<sp/>reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>destAddr_;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::ReplyID<sp/>replyID_;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::forwardMessageToReal(</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_app_channel" kindref="compound">CellAppChannel</ref><sp/>&amp;<sp/>realChannel,</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityID<sp/>entityID,</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>messageID,<sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,<sp/>Mercury::ReplyID<sp/>replyID<sp/>)</highlight></codeline>
<codeline lineno="2269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;forwardToReal&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>realChannel.channel()<sp/>);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::InterfaceElement<sp/>&amp;<sp/>ie<sp/>=</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::gMinder.interfaceElement(<sp/>messageID<sp/>);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replyID<sp/>==<sp/>Mercury::REPLY_ID_NONE)</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>ie<sp/>);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startRequest(<sp/>ie,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_reply_forwarder" kindref="compound">ReplyForwarder</ref>(<sp/>srcAddr,<sp/>replyID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>entityID;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.transfer(<sp/>data,<sp/>data.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/pywatcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Entity::numHaunts()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2299"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isReal())</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pReal_-&gt;numHaunts();</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal">BW::string<sp/>entityPropertyIndexToName(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>(<ref refid="class_entity" kindref="compound">Entity</ref><sp/>*)base;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pEntity-&gt;pType()-&gt;propIndex(<sp/>index<sp/>)-&gt;name();</highlight></codeline>
<codeline lineno="2314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entityPropertyNameToIndex(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>base,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>name<sp/>)</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>(<ref refid="class_entity" kindref="compound">Entity</ref><sp/>*)base;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDescription<sp/>*<sp/>pDescription<sp/>=</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;pType()-&gt;description(<sp/>name.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDescription)</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDescription-&gt;localIndex();</highlight></codeline>
<codeline lineno="2329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>anonymous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/>Entity::pWatcher()</highlight></codeline>
<codeline lineno="2338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DirectoryWatcherPtr<sp/>pWatcher<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pWatcher)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DirectoryWatcher;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pWatcher.addChild(<sp/>&quot;profiles&quot;,<sp/>new<sp/>DirectoryWatcher()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SmartPointerDereferenceWatcher&lt;<sp/>EntityTypePtr<sp/>&gt;(</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeWatcher(<sp/>&amp;<ref refid="class_entity_type_1a3b9ba212743bbac838c561b1f688afed" kindref="member">EntityType::name</ref><sp/>)<sp/>),</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Entity::pEntityType_<sp/>);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Entity::id_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;pos&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Entity::globalPosition_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;dir&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Entity::globalDirection_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;localPos&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Entity::localPosition_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;localDir&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Entity::localDirection_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;haunts&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Entity::numHaunts<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;spaceID&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;Entity::spaceID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_smart_pointer" kindref="compound">SmartPointer&lt; SequenceWatcher&lt; Properties &gt;</ref><sp/>&gt;<sp/>PropWatcherPtr;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PropWatcherPtr<sp/>propertiesWatcher<sp/>=</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeWatcher&lt;<sp/>SequenceWatcher<sp/>&gt;(<sp/>&amp;Entity::properties_<sp/>);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertiesWatcher-&gt;setStringIndexConverter(<sp/>entityPropertyNameToIndex,</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityPropertyIndexToName<sp/>);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertiesWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SmartPointerDereferenceWatcher&lt;<sp/>ScriptObject<sp/>&gt;(</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SimplePythonWatcher()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;properties&quot;</highlight><highlight class="normal">,<sp/>propertiesWatcher<sp/>);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;profile&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityProfiler::pWatcher(),</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Entity::profiler_<sp/>);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BaseDereferenceWatcher(</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;RealEntity::pWatcher()<sp/>),<sp/>&amp;Entity::pReal_<sp/>);</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pWatcher;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::addToRangeList(<sp/><ref refid="class_range_list" kindref="compound">RangeList</ref><sp/>&amp;<sp/>rangeList,</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>RangeTriggerList<sp/>&amp;<sp/>appealRadiusList<sp/>)</highlight></codeline>
<codeline lineno="2392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>rangeList.<ref refid="class_range_list_1afe42b47f5316f7711db5ff7fb3ef9cdb" kindref="member">add</ref>(<sp/>pRangeListNode_<sp/>);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRangeListAppealTrigger_)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AppealRadius<sp/>is<sp/>non-zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entity<sp/>node<sp/>is<sp/>no<sp/>longer<sp/>an<sp/>AoI<sp/>trigger<sp/>since<sp/>range<sp/>is<sp/>taking<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRangeListNode_-&gt;isAoITrigger(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRangeListAppealTrigger_-&gt;insert();</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addTrigger(<sp/>pRangeListAppealTrigger_<sp/>);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appealRadiusList.push_back(<sp/>pRangeListAppealTrigger_<sp/>);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::removeFromRangeList(<sp/><ref refid="class_range_list" kindref="compound">RangeList</ref><sp/>&amp;<sp/>rangeList,</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/>RangeTriggerList<sp/>&amp;<sp/>appealRadiusList<sp/>)</highlight></codeline>
<codeline lineno="2418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRangeListAppealTrigger_)</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appealRadiusList.remove(<sp/>pRangeListAppealTrigger_<sp/>);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;delTrigger(<sp/>pRangeListAppealTrigger_<sp/>);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRangeListAppealTrigger_-&gt;remove();</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Entity<sp/>node<sp/>now<sp/>needs<sp/>to<sp/>be<sp/>an<sp/>AoI<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRangeListNode_-&gt;isAoITrigger(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>pRangeListNode_-&gt;remove();</highlight></codeline>
<codeline lineno="2433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><ref refid="class_history_event" kindref="compound">HistoryEvent</ref><sp/>*<sp/>Entity::addHistoryEventLocally(<sp/>uint8<sp/>type,</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryOStream<sp/>&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MemberDescription<sp/>&amp;<sp/>description,<sp/>int16<sp/>msgStreamSize,</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_history_event_1_1_level" kindref="compound">HistoryEvent::Level</ref><sp/>level<sp/>)</highlight></codeline>
<codeline lineno="2444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ENABLE_WATCHERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntityType_-&gt;stats().countAddedToHistoryQueue(<sp/>stream.size()<sp/>);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;eventHistory().add(<sp/>this-&gt;getNextEventNumber(),</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/>stream,<sp/>description,<sp/>level,<sp/>msgStreamSize<sp/>);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::writeClientUpdateDataToBundle(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle,</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>basePos,</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_cache" kindref="compound">EntityCache</ref><sp/>&amp;<sp/>cache,</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lodPriority<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2473"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initSize<sp/>=<sp/>bundle.size();</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldSize<sp/>=<sp/>initSize;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numEvents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeVehicleChangeToBundle(<sp/>bundle,<sp/>cache<sp/>);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>appropriate<sp/>history<sp/>for<sp/>this<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/>EventHistory::const_reverse_iterator<sp/>eventIter<sp/>=<sp/>eventHistory_.rbegin();</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>EventHistory::const_reverse_iterator<sp/>eventEnd<sp/><sp/>=<sp/>eventHistory_.rend();</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>back<sp/>to<sp/>find<sp/>the<sp/>correct<sp/>place<sp/>then<sp/>forward<sp/>to<sp/>add<sp/>to<sp/>the<sp/>bundle<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chronological<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Consider<sp/>the<sp/>wrap<sp/>around<sp/>case.<sp/>To<sp/>wrap<sp/>around<sp/>a<sp/>32-bit<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>12<sp/>events<sp/>a<sp/>second<sp/>for<sp/>10<sp/>years<sp/>(24<sp/>hours<sp/>a<sp/>day).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasEventsToSend<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasSelectedEntity<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(eventIter<sp/>!=<sp/>eventEnd<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*eventIter)-&gt;number()<sp/>&gt;<sp/>cache.<ref refid="class_entity_cache_1a425db53e875276350d814dc1039bb3b0" kindref="member">lastEventNumber</ref>())</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_history_event" kindref="compound">HistoryEvent</ref><sp/>&amp;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>**eventIter;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasEventsToSend<sp/>=<sp/>hasEventsToSend<sp/>||</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="class_history_event_1ae7cd52dce6aea112c170d865d18e151f" kindref="member">shouldSend</ref>(<sp/>lodPriority,<sp/>cache.<ref refid="class_entity_cache_1ad37ff9d077dee2e2b3f4b843ee8ea8f5" kindref="member">detailLevel</ref>()<sp/>);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventIter++;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasAddedReliableRelativePosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>currently<sp/>enabled<sp/>as<sp/>it<sp/>affects<sp/>the<sp/>filters<sp/>if<sp/>this<sp/>is<sp/>not<sp/>sent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regularly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(cache.lastVolatileUpdateNumber()<sp/>!=<sp/>volatileUpdateNumber_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.<ref refid="class_entity_cache_1a1df661ca7202c7237585f8fac5330436" kindref="member">lastVolatileUpdateNumber</ref>(<sp/>volatileUpdateNumber_<sp/>);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;volatileInfo().hasVolatile(<sp/>lodPriority<sp/>))</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isReliable<sp/>=<sp/>hasEventsToSend;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache.<ref refid="class_entity_cache_1aa9ff270887bb3c03c4d92b3646ea7928" kindref="member">isAlwaysDetailed</ref>()<sp/>||<sp/>(cache.isPrioritised()<sp/>&amp;&amp;<sp/>CellAppConfig::sendDetailedPlayerVehicles())<sp/>)</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;writeVolatileDetailedDataToBundle(<sp/>bundle,</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.<ref refid="class_entity_cache_1a6ece3d88420d892ee0be81d031bf8eba" kindref="member">idAlias</ref>(),<sp/>isReliable<sp/>);</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasAddedReliableRelativePosition<sp/>=</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;writeVolatileDataToBundle(<sp/>bundle,<sp/>basePos,</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.<ref refid="class_entity_cache_1a6ece3d88420d892ee0be81d031bf8eba" kindref="member">idAlias</ref>(),<sp/>lodPriority,<sp/>isReliable<sp/>);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSelectedEntity<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldSize<sp/>=<sp/>bundle.size();</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_nonVolatileBytes<sp/>+=<sp/>(oldSize<sp/>-<sp/>initSize);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ENABLE_WATCHERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;stats().countVolatileSentToOtherClients(</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldSize<sp/>-<sp/>initSize<sp/>);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasEventsToSend)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasSelectedEntity)</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.<ref refid="class_entity_cache_1a60a9b6befc42dca6ddc8ebd3c6f37f15" kindref="member">addEntitySelectMessage</ref>(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSelectedEntity<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(eventIter<sp/>!=<sp/>eventHistory_.rbegin())</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventIter--;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_history_event" kindref="compound">HistoryEvent</ref><sp/>&amp;<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>**eventIter;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.shouldSend(<sp/>lodPriority,<sp/>cache.<ref refid="class_entity_cache_1ad37ff9d077dee2e2b3f4b843ee8ea8f5" kindref="member">detailLevel</ref>()<sp/>))</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.pName())</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_totalPublicClientStats.trackEvent(<sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.pName()-&gt;c_str(),<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.msgLen(),</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.msgStreamSize()<sp/>);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numEvents;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="class_history_event_1a9af6aba083c32babd26ed1e310167378" kindref="member">addToBundle</ref>(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>cache.<ref refid="class_entity_cache_1a425db53e875276350d814dc1039bb3b0" kindref="member">lastEventNumber</ref>(<sp/>this-&gt;lastEventNumber()<sp/>);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nonVolatileSize<sp/>=<sp/>bundle.size()<sp/>-<sp/>oldSize;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ENABLE_WATCHERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntityType_-&gt;stats().countNonVolatileSentToOtherClients(<sp/>nonVolatileSize<sp/>);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/>g_nonVolatileBytes<sp/>+=<sp/>nonVolatileSize;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nonVolatileSize<sp/>&gt;<sp/>CellAppConfig::entitySpamSize())</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::writeClientUpdateDataToBundle(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[%s]<sp/>added<sp/>%d<sp/>bytes<sp/>with<sp/>%d<sp/>events\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.size()<sp/>-<sp/>oldSize,</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numEvents<sp/>);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/>hasSelectedEntity<sp/>|=<sp/>cache.<ref refid="class_entity_cache_1a206ad2894633af9b7645c8cf8619441b" kindref="member">updateDetailLevel</ref>(<sp/>bundle,<sp/>lodPriority,</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSelectedEntity<sp/>);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>we<sp/>thought<sp/>no-one<sp/>had<sp/>noticed<sp/>us<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periodsWithoutWitness_)</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isReal())</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>callback<sp/>generated<sp/>from<sp/>this<sp/>call<sp/>will<sp/>be<sp/>delayed<sp/>until<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>update<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_entity" kindref="compound">Entity</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>this<sp/>)-&gt;witnessed();</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tell<sp/>the<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>pRealChannel_-&gt;channel()<sp/>);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Better<sp/>handling<sp/>of<sp/>prefixed<sp/>empty<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender.bundle().startMessage(<sp/>CellAppInterface::witnessed<sp/>);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender.bundle()<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(it<sp/>will<sp/>usually<sp/>only<sp/>have<sp/>told<sp/>us<sp/>that<sp/>it<sp/>has<sp/>inc&apos;d<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unwitnessed<sp/>level<sp/>when<sp/>higher<sp/>than<sp/>1,<sp/>i.e.<sp/>if<sp/>it<sp/>has<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>witnesses<sp/>of<sp/>its<sp/>own)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>periodsWithoutWitness_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasAddedReliableRelativePosition;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeVehicleChangeToBundle(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle,</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_cache" kindref="compound">EntityCache</ref><sp/>&amp;<sp/>cache<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2628"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>our<sp/>record<sp/>of<sp/>this<sp/>entity<sp/>being<sp/>on<sp/>a<sp/>vehicle<sp/>doesn&apos;t<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>current<sp/>state<sp/>of<sp/>vehicular<sp/>activity,<sp/>then<sp/>tell<sp/>the<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache.vehicleChangeNum()<sp/>!=<sp/>this-&gt;vehicleChangeNum())</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::setVehicleArgs<sp/>&amp;<sp/>args<sp/>=</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::setVehicleArgs::start(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.passengerID(<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.vehicleID(<sp/>this-&gt;vehicleID()<sp/>);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache.vehicleChangeNum(<sp/>this-&gt;vehicleChangeNum()<sp/>);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::InterfaceElement<sp/>*<sp/>Entity::getAvatarUpdateMessage(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>)</highlight></codeline>
<codeline lineno="2656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BEGIN_AV_UPD_MESSAGES()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2659"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>Mercury::InterfaceElement<sp/>*<sp/>s_avatarUpdateMessage[]<sp/>=<sp/><sp/>\</highlight></codeline>
<codeline lineno="2660"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_UPD_MESSAGE(<sp/>TYPE<sp/>)<sp/>&amp;BaseAppIntInterface::avatarUpdate##TYPE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>END_AV_UPD_MESSAGES()<sp/><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/>BEGIN_AV_UPD_MESSAGES()</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasFullPosYawPitchRoll<sp/>)</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasFullPosYawPitch<sp/>)</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasFullPosYaw<sp/>)</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasFullPosNoDir<sp/>)</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasOnGroundYawPitchRoll<sp/>)</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasOnGroundYawPitch<sp/>)</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasOnGroundYaw<sp/>)</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasOnGroundNoDir<sp/>)</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasNoPosYawPitchRoll<sp/>)</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasNoPosYawPitch<sp/>)</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasNoPosYaw<sp/>)</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>NoAliasNoPosNoDir<sp/>)</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasFullPosYawPitchRoll<sp/>)</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasFullPosYawPitch<sp/>)</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasFullPosYaw<sp/>)</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasFullPosNoDir<sp/>)</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasOnGroundYawPitchRoll<sp/>)</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasOnGroundYawPitch<sp/>)</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasOnGroundYaw<sp/>)</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasOnGroundNoDir<sp/>)</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasNoPosYawPitchRoll<sp/>)</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasNoPosYawPitch<sp/>)</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasNoPosYaw<sp/>)</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AV_UPD_MESSAGE(<sp/>AliasNoPosNoDir<sp/>)</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>END_AV_UPD_MESSAGES()</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>0<sp/>&lt;=<sp/>index<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>24<sp/>);</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_avatarUpdateMessage[<sp/>index<sp/>];</highlight></codeline>
<codeline lineno="2701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::writeVolatileDataToBundle(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle,</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>basePosition,</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDAlias<sp/>idAlias,</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>priorityThreshold,</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isReliable<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2729"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendAlias<sp/><sp/><sp/><sp/>=<sp/>(idAlias<sp/>!=<sp/>NO_ID_ALIAS);</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendOnGround<sp/>=<sp/>this-&gt;isOnGround();</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldSendPosition<sp/>=<sp/>volatileInfo_.shouldSendPosition();</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>CellAppConfig::packedXZScale();</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>relative<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRelative<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>relativePos<sp/>=<sp/>localPosition_;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRelative<sp/>=<sp/>(pVehicle_<sp/>==<sp/>NULL);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>relativePos<sp/>=<sp/>isRelative<sp/>?</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPosition_<sp/>-<sp/>basePosition<sp/>:<sp/>localPosition_;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldSendPosition)</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>cannot<sp/>represent<sp/>the<sp/>given<sp/>relative<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>PackedXZ<sp/>or<sp/>PackedXYZ<sp/>(as<sp/>appropriate)<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>detailed<sp/>volatile<sp/>position<sp/>update<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxLimit<sp/>=<sp/>sendOnGround<sp/>?</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PackedXZ::maxLimit(<sp/>scale<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PackedXYZ::maxLimit(<sp/>scale<sp/>);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minLimit<sp/>=<sp/>sendOnGround<sp/>?</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PackedXZ::minLimit(<sp/>scale<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PackedXYZ::minLimit(<sp/>scale<sp/>);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((relativePos.x<sp/>&lt;<sp/>minLimit)<sp/>||<sp/>(maxLimit<sp/>&lt;=<sp/>relativePos.x)<sp/>||</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(relativePos.z<sp/>&lt;<sp/>minLimit)<sp/>||<sp/>(maxLimit<sp/>&lt;=<sp/>relativePos.z))</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;writeVolatileDetailedDataToBundle(<sp/>bundle,</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idAlias,<sp/>isReliable<sp/>);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posType<sp/>=<sp/>shouldSendPosition<sp/>?<sp/>sendOnGround<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dirType<sp/>=<sp/>volatileInfo_.dirType(<sp/>priorityThreshold<sp/>);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>sendAlias<sp/>*<sp/>12<sp/>+<sp/>posType<sp/>*<sp/>4<sp/>+<sp/>dirType;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can&apos;t<sp/>actually<sp/>send<sp/>an<sp/>avatarUpdate*NoPosNoDir<sp/>message,<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>never<sp/>have<sp/>entered<sp/>this<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Remove<sp/>those<sp/>messages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>dirType<sp/>&lt;<sp/>3<sp/>||<sp/>posType<sp/>&lt;<sp/>2<sp/>);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isReliable)</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::makeNextMessageReliableArgs::start(</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>).isReliable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>*getAvatarUpdateMessage(<sp/>index<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendAlias)</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>idAlias;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldSendPosition)</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendOnGround)</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>PackedXZ(<sp/>relativePos.x,<sp/>relativePos.z,<sp/>scale<sp/>);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>PackedXYZ(<sp/>relativePos.x,<sp/>relativePos.y,<sp/>relativePos.z,</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>Direction3D<sp/>&amp;<sp/>dir<sp/>=<sp/>this-&gt;direction();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Direction3D<sp/>&amp;<sp/>dir<sp/>=<sp/>localDirection_;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dirType)</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>YawPitchRoll(<sp/>dir.yaw,<sp/>dir.pitch,<sp/>dir.roll<sp/>);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>YawPitch(<sp/>dir.yaw,<sp/>dir.pitch<sp/>);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>Yaw(<sp/>dir.yaw<sp/>);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isReliable<sp/>&amp;&amp;<sp/>isRelative;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeVolatileDetailedDataToBundle(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle,</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IDAlias<sp/>idAlias,</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isReliable<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2849"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sendAlias<sp/>=<sp/>(idAlias<sp/>!=<sp/>NO_ID_ALIAS);</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isReliable)</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::makeNextMessageReliableArgs::start(</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>).isReliable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendAlias)</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppIntInterface::avatarUpdateAliasDetailed<sp/>);</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>idAlias;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppIntInterface::avatarUpdateNoAliasDetailed<sp/>);</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>localPosition_;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>localDirection_;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::destroy()</highlight></codeline>
<codeline lineno="2881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inDestroy_)</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/>inDestroy_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>in<sp/>case<sp/>it<sp/>is<sp/>deleted<sp/>while<sp/>setting<sp/>dead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pThis<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!isDestroyed_<sp/>);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moved<sp/>to<sp/>after<sp/>the<sp/>onDestroy<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;setDestroyed();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>the<sp/>recording<sp/>state<sp/>for<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell" kindref="compound">Cell</ref><sp/>*<sp/>pRealCell<sp/>=<sp/>this-&gt;isReal()<sp/>?<sp/>&amp;this-&gt;cell()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isReal())</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>We<sp/>may<sp/>want<sp/>to<sp/>add<sp/>an<sp/>option<sp/>so<sp/>that<sp/>we<sp/>do<sp/>not<sp/>always<sp/>send<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>database<sp/>information<sp/>to<sp/>the<sp/>base<sp/>entity<sp/>if<sp/>it<sp/>is<sp/>not<sp/>going<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>to<sp/>the<sp/>database.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onDestroy&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityDelegate_)</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityDelegate_-&gt;onDestroy();</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;hasBase())</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;sendCellEntityLostToBase())</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::destroy(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>gracefully<sp/>inform<sp/>base<sp/>entity<sp/>of<sp/>destroy.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inform<sp/>base<sp/>entity<sp/>ungracefully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>pReal_-&gt;channel().bundle();</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::setClientArgs<sp/>setClientArgs<sp/>=<sp/>{<sp/>id_<sp/>};</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>setClientArgs;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppIntInterface::cellEntityLost<sp/>);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;channel().send();</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setDestroyed();</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;deleteGhosts();</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cell().entityDestroyed(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;convertRealToGhost();</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>a<sp/>cell<sp/>only<sp/>entity<sp/>then<sp/>add<sp/>the<sp/>id<sp/>to<sp/>our<sp/>recycled<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list.<sp/>Else,<sp/>let<sp/>the<sp/>base<sp/>take<sp/>care<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;hasBase())</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldReturnID_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>shouldn&apos;t<sp/>be<sp/>in<sp/>there<sp/>but<sp/>is<sp/>a<sp/>sanity<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population_.forgetRealChannel(<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onGhostDestroyed&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onGhostDestroyed();</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>where<sp/>the<sp/>ghost<sp/>thought<sp/>the<sp/>real<sp/>is<sp/>in<sp/>case<sp/>a<sp/>message<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>received<sp/>for<sp/>this<sp/>entity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRealChannel_)</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population_.rememberRealChannel(<sp/>id_,<sp/>*pRealChannel_<sp/>);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setDestroyed();</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntityDelegate_<sp/>=<sp/>IEntityDelegatePtr();</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"></highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pControllers_<sp/>);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_-&gt;removeEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChunk_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).removeEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>any<sp/>entity<sp/>extras<sp/>(for<sp/>the<sp/>first<sp/>time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s_entityExtraInfo().size();<sp/>i++)</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>extras_[i];</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extras_[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>out<sp/>pRealChannel_,<sp/>otherwise<sp/>we<sp/>may<sp/>have<sp/>a<sp/>dangling<sp/>pointer<sp/>to<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destroyed<sp/>CellAppChannel<sp/>in<sp/>the<sp/>event<sp/>of<sp/>CellApp<sp/>death.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/>pRealChannel_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;clearPythonProperties();</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/>inDestroy_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRealCell<sp/>&amp;&amp;<sp/>pRealCell-&gt;pReplayData())</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRealCell-&gt;pReplayData()-&gt;<ref refid="class_replay_data_collector_1a29f4776e7dfdc1dcc2a612465ffdb46f" kindref="member">deleteEntity</ref>(<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>has<sp/>any<sp/>create<sp/>ghost<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().bufferedGhostMessages().</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playNewLifespanFor(<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setDestroyed()</highlight></codeline>
<codeline lineno="3008"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isDestroyed_)</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isDestroyed_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--g_numEntities;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::createReal()</highlight></codeline>
<codeline lineno="3021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_real_entity" kindref="compound">RealEntity</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onEntityPositionUpdatable(<sp/></highlight><highlight class="comment">/*isUpdatable*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::destroyReal()</highlight></codeline>
<codeline lineno="3037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_-&gt;destroy(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RealEntity::destroy<sp/>calls<sp/>&apos;delete<sp/>this&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onEntityPositionUpdatable(<sp/></highlight><highlight class="comment">/*isUpdatable*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"></highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::offloadReal()</highlight></codeline>
<codeline lineno="3055"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>one<sp/>time<sp/>where<sp/>we<sp/>have<sp/>both<sp/>a<sp/>pRealChannel_<sp/>and<sp/>a<sp/>pReal_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pReal_<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pRealChannel_<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_-&gt;destroy(<sp/>&amp;(nextRealAddr_)<sp/>);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RealEntity::destroy<sp/>calls<sp/>&apos;delete<sp/>this&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onEntityPositionUpdatable(<sp/></highlight><highlight class="comment">/*isUpdatable*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight><highlight class="comment">//serp:<sp/>todo:<sp/>use<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight><highlight class="comment">/*static<sp/>int<sp/>DelegateEntityInit(PyObject<sp/>*self,<sp/>PyObject<sp/>*args,<sp/>PyObject<sp/>*kwds)</highlight></codeline>
<codeline lineno="3071"><highlight class="comment">{</highlight></codeline>
<codeline lineno="3072"><highlight class="comment"><sp/><sp/><sp/><sp/>initproc<sp/>superInit<sp/>=<sp/>self-&gt;ob_type-&gt;tp_base-&gt;tp_init;</highlight></codeline>
<codeline lineno="3073"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>result<sp/>=<sp/>superInit<sp/>==<sp/>NULL<sp/>:<sp/>0<sp/>:<sp/>(*superInit)(self,<sp/>args,<sp/>kwds);</highlight></codeline>
<codeline lineno="3074"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(result<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3075"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3076"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="3077"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3078"><highlight class="comment"></highlight></codeline>
<codeline lineno="3079"><highlight class="comment"><sp/><sp/><sp/><sp/>Entity*<sp/>pEntity<sp/>=<sp/>static_cast&lt;Entity*&gt;(self);</highlight></codeline>
<codeline lineno="3080"><highlight class="comment"><sp/><sp/><sp/><sp/>pEntity-&gt;callDelegateInit();</highlight></codeline>
<codeline lineno="3081"><highlight class="comment"></highlight></codeline>
<codeline lineno="3082"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="3083"><highlight class="comment">}</highlight></codeline>
<codeline lineno="3084"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::createEntityDelegate(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>templateID<sp/>)</highlight></codeline>
<codeline lineno="3093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;pType()-&gt;createDelegate(</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>this-&gt;spaceID(),<sp/>templateID,<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="3099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::onPositionChanged()</highlight></codeline>
<codeline lineno="3103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onEntityPositionUpdated();</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::clearPythonProperties()</highlight></codeline>
<codeline lineno="3116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>detach<sp/>all<sp/>our<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>properties_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pObject<sp/>=<sp/>properties_[i];</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pObject)</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propIndex(<sp/>i<sp/>)-&gt;dataType()-&gt;detach(<sp/>pObject<sp/>);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>properties_.clear();</highlight></codeline>
<codeline lineno="3128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::adjustForDeadBaseApp(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BackupHash<sp/>&amp;<sp/>backupHash<sp/>)</highlight></codeline>
<codeline lineno="3136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAddr_<sp/>=<sp/>backupHash.addressFor(<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pReal())</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pReal()-&gt;channel().reset(<sp/>baseAddr_<sp/>);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pReal()-&gt;pWitness()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pReal()-&gt;disableWitness();</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>serves<sp/>a<sp/>dual<sp/>purpose,<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>base<sp/>is<sp/>up-to<sp/>date<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>entity&apos;s<sp/>position<sp/>and<sp/>to<sp/>generate<sp/>traffic<sp/>to<sp/>see<sp/>if<sp/>we<sp/>get<sp/>a<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;informBaseOfAddress(<sp/>CellApp::instance().networkInterface().address(),</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;space().</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::informBaseOfAddress(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldSendNow<sp/>)</highlight></codeline>
<codeline lineno="3161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Move<sp/>this<sp/>to<sp/>RealEntity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;hasBase())</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>pReal_-&gt;channel().bundle();</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::setClientArgs<sp/>&amp;<sp/>setClientArgs<sp/>=</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::setClientArgs::start(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setClientArgs.id<sp/>=<sp/>id_;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>base<sp/>knowing<sp/>where<sp/>we<sp/>are<sp/>is<sp/>considered<sp/>to<sp/>be<sp/>critical.<sp/><sp/>In</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>particular,<sp/>if<sp/>the<sp/>base<sp/>doesn&apos;t<sp/>know<sp/>about<sp/>this<sp/>real<sp/>it<sp/>may<sp/>try<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>this<sp/>entity<sp/>somewhere<sp/>else<sp/>following<sp/>a<sp/>cellapp<sp/>crash<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>cause<sp/>the<sp/>!pOtherGhost-&gt;isReal()<sp/>assertion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::currentCellArgs<sp/>&amp;<sp/>currentCellArgs<sp/>=</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppIntInterface::currentCellArgs::start(</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle,<sp/>Mercury::RELIABLE_CRITICAL<sp/>);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentCellArgs.newSpaceID<sp/>=<sp/>spaceID;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentCellArgs.newCellAddr<sp/>=<sp/>addr;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldSendNow)</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;channel().send();</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::writeCellMessageToBundle(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle,</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>*<sp/>pDescription,</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptTuple<sp/>args<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3204"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::runScriptMethod<sp/>);</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>uint16(pDescription-&gt;internalIndex());</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>sourceEntityID;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptTuple<sp/>remainingArgs<sp/>=<sp/>pDescription-&gt;extractSourceEntityID(</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args,<sp/>sourceEntityID<sp/>);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDataSource<sp/>source(<sp/>remainingArgs<sp/>);</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>succeeded<sp/>=<sp/>pDescription-&gt;addToServerStream(<sp/>source,<sp/>bundle,<sp/></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceEntityID<sp/>);</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!succeeded)</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::writeCellMessageToBundle(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>to<sp/>stream<sp/>for<sp/>method<sp/>%s.%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name(),<sp/>pDescription-&gt;name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>If<sp/>adding<sp/>to<sp/>the<sp/>stream<sp/>fails,<sp/>we<sp/>should<sp/>not<sp/>leave<sp/>the<sp/>bundle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>bad<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>succeeded;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>Entity::realAddr()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3239"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Should<sp/>this<sp/>check<sp/>for<sp/>isDestroyed_?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pRealChannel_<sp/>?</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRealChannel_-&gt;addr()<sp/>:</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().networkInterface().address();</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::checkIfZombied(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>dyingAddr<sp/>)</highlight></codeline>
<codeline lineno="3257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isDestroyed()<sp/>||<sp/>this-&gt;isReal())</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zombied<sp/>if<sp/>next<sp/>real<sp/>is<sp/>dying<sp/>or<sp/>dead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextRealAddr_<sp/>!=<sp/>Mercury::Address::NONE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nextRealAddr_<sp/>==<sp/>dyingAddr<sp/>||</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppChannels::instance().hasRecentlyDied(<sp/>nextRealAddr_<sp/>)))</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>current<sp/>real<sp/>is<sp/>healthy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRealChannel_<sp/>&amp;&amp;<sp/>pRealChannel_-&gt;addr()<sp/>!=<sp/>dyingAddr)</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextRealAddr_<sp/>!=<sp/>Mercury::Address::NONE)</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::checkIfZombied:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Recovering<sp/>zombie<sp/>(%u)<sp/>by<sp/>updating<sp/>current<sp/>real<sp/>%s<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;to<sp/>next<sp/>real<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRealChannel_<sp/>?</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRealChannel_-&gt;addr().c_str()<sp/>:<sp/>Mercury::Address::NONE.c_str(),</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRealAddr_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRealChannel_<sp/>=<sp/>CellAppChannels::instance().get(<sp/>nextRealAddr_<sp/>);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::sendMessageToReal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>*<sp/>pDescription,</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptTuple<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="3304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TRACE_MSG(<sp/>&quot;Entity::sendMessageToReal:<sp/>Method<sp/>=<sp/>%s.<sp/>Entity<sp/>=<sp/>%d\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;name().c_str(),<sp/>this-&gt;id()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isRealToScript()<sp/>);</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>entity<sp/>might<sp/>actually<sp/>be<sp/>real<sp/>but<sp/>we<sp/>are<sp/>just<sp/>pretending<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>ghost<sp/>(because<sp/>of<sp/>treatAllOtherEntitiesAsGhosts),<sp/>we<sp/>may<sp/>need<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>message<sp/>on<sp/>a<sp/>channel<sp/>to<sp/>this<sp/>app.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::UDPChannel<sp/>&amp;<sp/>channel<sp/>=<sp/>pRealChannel_<sp/>?</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRealChannel_-&gt;channel()<sp/>:</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::getChannel(<sp/>CellApp::instance().networkInterface().address()<sp/>);</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>channel<sp/>);</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;writeCellMessageToBundle(</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender.bundle(),<sp/>pDescription,<sp/>args<sp/>);</highlight></codeline>
<codeline lineno="3322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::writeClientMessageToBundle(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle,</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityID<sp/>entityID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>&amp;<sp/>description,</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOStream<sp/>&amp;<sp/>argstream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>callingMode<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="3335"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::callClientMethod<sp/>);</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>entityID;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>uint8(<sp/>callingMode<sp/>);</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>uint16(<sp/>description.internalIndex()<sp/>);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.transfer(<sp/>argstream,<sp/>argstream.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::sendToClientViaReal(<sp/>EntityID<sp/>entityID,</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>&amp;<sp/>description,<sp/>MemoryOStream<sp/>&amp;<sp/>argStream,</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isForOwn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isForOthers,</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExposedForReplay<sp/>)</highlight></codeline>
<codeline lineno="3365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TRACE_MSG(<sp/>&quot;Entity::sendToClientViaReal:<sp/>Method<sp/>=<sp/>%s.<sp/>Entity<sp/>=<sp/>%d\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>pDescription.name().c_str(),<sp/>this-&gt;id()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>callingMode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isForOwn)</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callingMode<sp/>=<sp/>MSG_FOR_OWN_CLIENT;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isForOthers)</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callingMode<sp/>|=<sp/>MSG_FOR_OTHER_CLIENTS;</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isExposedForReplay)</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callingMode<sp/>|=<sp/>MSG_FOR_REPLAY;</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;writeClientMessageToBundle(<sp/>pRealChannel_-&gt;bundle(),</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityID,<sp/>description,<sp/>argStream,<sp/>callingMode<sp/>);</highlight></codeline>
<codeline lineno="3390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::physicallyPossible(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position3D<sp/>&amp;<sp/>newPosition,<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pVehicle,</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>propMove<sp/>)</highlight></codeline>
<codeline lineno="3401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>see<sp/>if<sp/>the<sp/>vehicles<sp/>involved<sp/>are<sp/>ok<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pVehicle<sp/>!=<sp/>pVehicle_)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!this-&gt;validateAvatarVehicleUpdate(<sp/>pVehicle<sp/>))</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>out<sp/>where<sp/>we<sp/>are<sp/>moving<sp/>from<sp/>and<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>srcPos<sp/>=<sp/>globalPosition_;</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/>srcPos.y<sp/>+=<sp/>0.1f;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>lPos(<sp/>newPosition.x,<sp/>newPosition.y,<sp/>newPosition.z<sp/>);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>dstPos<sp/>=<sp/>(pVehicle<sp/>==<sp/>NULL)<sp/>?<sp/>lPos<sp/>:</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>(<sp/>*pVehicle<sp/>).transform().applyPoint(<sp/>lPos<sp/>);</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/>dstPos.y<sp/>+=<sp/>0.1f;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>we<sp/>are<sp/>not<sp/>moving<sp/>too<sp/>fast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>nowTime<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>delTime<sp/>=<sp/>std::min(<sp/>stampsPerSecond(),</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nowTime<sp/>-<sp/>physicsLastValidated_<sp/>);</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>physicsLastValidated_<sp/>=<sp/>nowTime;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>move<sp/>every<sp/>1s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delTimeD<sp/>=<sp/>stampsToSeconds(<sp/>delTime<sp/>)<sp/>*<sp/>propMove;</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle_<sp/>==<sp/>pVehicle)</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delDistSqr<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delVertDist<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topSpeedY_<sp/>&gt;<sp/>0.f)</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>a(<sp/>localPosition_<sp/>);</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>b(<sp/>lPos<sp/>);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>y-axis<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delVertDist<sp/>=<sp/>fabs(<sp/>b.y<sp/>-<sp/>a.y<sp/>);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.y<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.y<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>now<sp/>only<sp/>takes<sp/>into<sp/>account<sp/>X-Z<sp/>plane<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delDistSqr<sp/>=<sp/>ServerUtil::distSqrBetween(<sp/>a,<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>distance<sp/>is<sp/>against<sp/>all<sp/>axes<sp/>(XYZ)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delDistSqr<sp/>=<sp/>ServerUtil::distSqrBetween(<sp/>localPosition_,<sp/>lPos<sp/>);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxDist<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(topSpeed_<sp/>*<sp/>delTimeD);</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxVertDist<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(topSpeedY_<sp/>*<sp/>delTimeD);</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>a<sp/>small<sp/>physics<sp/>debt<sp/>to<sp/>cope<sp/>with<sp/>network<sp/>jitter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delDistSqr<sp/>&gt;<sp/>maxDist<sp/>*<sp/>maxDist)</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>doing<sp/>the<sp/>square<sp/>roots<sp/>unless<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exceededBy<sp/>=<sp/>sqrtf(<sp/>delDistSqr<sp/>)<sp/>-<sp/>maxDist;</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsNetworkJitterDebt_<sp/>+=<sp/>exceededBy<sp/>/<sp/>topSpeed_;</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsNetworkJitterDebt_<sp/>&gt;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppConfig::maxPhysicsNetworkJitter())</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(topSpeedY_<sp/>&gt;<sp/>0.f<sp/>&amp;&amp;<sp/>delVertDist<sp/>&gt;<sp/>maxVertDist)</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exceededBy<sp/>=<sp/>delVertDist<sp/>-<sp/>maxVertDist;</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsNetworkJitterDebt_<sp/>+=<sp/>exceededBy<sp/>/<sp/>topSpeedY_;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsNetworkJitterDebt_<sp/>&gt;</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppConfig::maxPhysicsNetworkJitter())</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsNetworkJitterDebt_<sp/>&gt;<sp/>0.f)</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>doing<sp/>the<sp/>square<sp/>roots<sp/>unless<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exceededBy<sp/>=<sp/>sqrtf(<sp/>delDistSqr<sp/>)<sp/>-<sp/>maxDist;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsNetworkJitterDebt_<sp/>+=<sp/>exceededBy<sp/>/<sp/>topSpeed_;</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(but<sp/>make<sp/>sure<sp/>the<sp/>account<sp/>does<sp/>not<sp/>go<sp/>into<sp/>credit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsNetworkJitterDebt_<sp/>&lt;<sp/>0.f)</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsNetworkJitterDebt_<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(if<sp/>we<sp/>are<sp/>not<sp/>moving<sp/>the<sp/>full<sp/>distance,<sp/>move<sp/>time<sp/>on<sp/>such<sp/>that<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>specified<sp/>proportion<sp/>of<sp/>it<sp/>has<sp/>appeared<sp/>to<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propMove<sp/>&lt;<sp/>1.f)</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsLastValidated_<sp/>-=<sp/>int64(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(delTime)<sp/>*<sp/>(1.0-propMove));</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>the<sp/>game<sp/>wants<sp/>to<sp/>reject<sp/>it<sp/>(before<sp/>we<sp/>get<sp/>tricky<sp/>with<sp/>chunks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_customPhysicsValidator<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(*g_customPhysicsValidator)(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>lPos,<sp/>pVehicle,<sp/>delTimeD<sp/>))</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChunk_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>may<sp/>be<sp/>in<sp/>a<sp/>client-only<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Should<sp/>look<sp/>up<sp/>the<sp/>space<sp/>data<sp/>to<sp/>determine<sp/>which<sp/>areas<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mapped,<sp/>and<sp/>determine<sp/>whether<sp/>this<sp/>is<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>we<sp/>allow<sp/>it<sp/>for<sp/>now<sp/>because<sp/>otherwise<sp/>player-controlled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entities<sp/>with<sp/>topSpeed<sp/>set<sp/>aren&apos;t<sp/>able<sp/>to<sp/>move<sp/>in<sp/>client-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spaces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;pChunkSpace())<sp/>{</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight><highlight class="stringliteral">&quot;Entity::physicallyPossible(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>supported<sp/>in<sp/>physical<sp/>space<sp/>of<sp/>this<sp/>entity.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_);</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChunk_-&gt;contains(<sp/>srcPos<sp/>))</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>pCChunk<sp/>=<sp/>this-&gt;pChunkSpace()-&gt;findChunkFromPoint(<sp/>srcPos<sp/>);</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCChunk<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight><highlight class="stringliteral">&quot;Entity::physicallyPossible(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OMG!<sp/>We<sp/>are<sp/>lost<sp/>in<sp/>the<sp/>(chunk)<sp/>space.<sp/>Cannot<sp/>find<sp/>starting<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;point<sp/>(%f,%f,%f)<sp/>in<sp/>any<sp/>chunks.<sp/>Abort!!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>srcPos.x,<sp/>srcPos.y,<sp/>srcPos.z<sp/>);</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCChunk<sp/>!=<sp/>pChunk_)</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight><highlight class="stringliteral">&quot;Entity::physicallyPossible:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>%u<sp/>starting<sp/>point<sp/>(%f,%f,%f)<sp/>is<sp/>not<sp/>in<sp/>current<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;chunk<sp/>%s<sp/>but<sp/>in<sp/>chunk<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>id_,</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcPos.x,<sp/>srcPos.y,<sp/>srcPos.z,</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCChunk-&gt;identifier().c_str());</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>that<sp/>their<sp/>line<sp/>is<sp/>in<sp/>the<sp/>same<sp/>chunk...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pChunk_-&gt;hasInternalChunks()<sp/>&amp;&amp;<sp/>pChunk_-&gt;contains(<sp/>dstPos<sp/>))</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>pNewChunk<sp/>=<sp/>pChunk_-&gt;space()-&gt;findChunkFromPointExact(<sp/>dstPos<sp/>);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewChunk<sp/>==<sp/>pChunk_)</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dprintf(<sp/>&quot;Changed<sp/>chunks\n&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...or<sp/>that<sp/>it<sp/>passes<sp/>through<sp/>a<sp/>portal<sp/>into<sp/>another<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>pLChunk<sp/>=<sp/>pChunk_;</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/>srcPos<sp/>=<sp/>pLChunk-&gt;transformInverse().applyPoint(<sp/>srcPos<sp/>);</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/>dstPos<sp/>=<sp/>pLChunk-&gt;transformInverse().applyPoint(<sp/>dstPos<sp/>);</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::vector&lt;<sp/>Chunk<sp/>*<sp/>&gt;<sp/>previousChunks;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ok,<sp/>ok<sp/>let&apos;s<sp/>just<sp/>do<sp/>a<sp/>proper<sp/>BFS<sp/>to<sp/>find<sp/>out<sp/>we<sp/>can</highlight></codeline>
<codeline lineno="3566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>traverse<sp/>through<sp/>multiple<sp/>chunks</highlight></codeline>
<codeline lineno="3567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(traverseChunks(<sp/>pLChunk,<sp/>pNewChunk,<sp/>srcPos,<sp/>dstPos,<sp/>previousChunks<sp/>))</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/>srcPos<sp/>=<sp/>pLChunk-&gt;transform().applyPoint(<sp/>srcPos<sp/>);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>dstPos<sp/>=<sp/>pLChunk-&gt;transform().applyPoint(<sp/>dstPos<sp/>);</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>rare<sp/>extreme<sp/>cases<sp/>where<sp/>at<sp/>a<sp/>common<sp/>vertex<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shared<sp/>by<sp/>four<sp/>adjacent<sp/>chunks,<sp/>floating<sp/>point<sp/>error<sp/>may<sp/>cause<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>previous<sp/>validated<sp/>position<sp/>becomes<sp/>invalid.<sp/>In<sp/>this<sp/>case,<sp/>we<sp/>give</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entity<sp/>a<sp/>small<sp/>nudge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>for<sp/>entity<sp/>not<sp/>on<sp/>a<sp/>vehicle<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>find<sp/>a<sp/>better<sp/>solution?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle<sp/>==<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstPos<sp/>==<sp/>srcPos)</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>ldir;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ldir.setPitchYaw(<sp/>localDirection_.pitch,</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localDirection_.yaw<sp/>+<sp/>0.25f<sp/>*<sp/>MATH_PI<sp/>);</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::physicallyPossible(%u):<sp/>unable<sp/>to<sp/>move.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Nudge<sp/>it<sp/>bit.\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPosition_<sp/>+=<sp/>ldir<sp/>*<sp/>0.01;</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateGlobalPosition();</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>a<sp/>position<sp/>correction<sp/>by<sp/>return<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::physicallyPossible(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;entity<sp/>attempted<sp/>the<sp/>impossible<sp/>(%f,%f,%f)<sp/>to<sp/>(%f,%f,%f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>srcPos.x,<sp/>srcPos.y,<sp/>srcPos.z,<sp/>dstPos.x,<sp/>dstPos.y,<sp/>dstPos.z<sp/>);</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::traverseChunks(<sp/>Chunk<sp/>*<sp/>pCurChunk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Chunk<sp/>*<sp/>pDstChunk,</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>cSrcPos,<sp/>Vector3<sp/>cDstPos,</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::vector&lt;<sp/>Chunk<sp/>*<sp/>&gt;<sp/>&amp;<sp/>visitedChunks<sp/>)</highlight></codeline>
<codeline lineno="3605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>revisitPreviousChunks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::vector&lt;<sp/>Chunk<sp/>*<sp/>&gt;<sp/>pendingChunks;</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDstChunk<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCurChunk<sp/>==<sp/>pDstChunk)</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/>Chunk::piterator<sp/>pit<sp/>=<sp/>pCurChunk-&gt;pbegin();</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/>Chunk::piterator<sp/>pnd<sp/>=<sp/>pCurChunk-&gt;pend();</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pit<sp/>!=<sp/>pnd;<sp/>pit++)</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revisitPreviousChunks<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ChunkBoundary::Portal<sp/>&amp;<sp/>portal<sp/>=<sp/>(*pit);</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!portal.hasChunk()<sp/>||<sp/>!portal.pChunk-&gt;isBound())</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dprintf(<sp/>&quot;Portal<sp/>has<sp/>no<sp/>corresponding<sp/>chunk<sp/>or<sp/>chunk<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;not<sp/>bound\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!portal.permissive)</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dprintf(<sp/>&quot;Rejected<sp/>since<sp/>not<sp/>permissive\n&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>the<sp/>line<sp/>actually<sp/>goes<sp/>through<sp/>this<sp/>portal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PlaneEq<sp/>&amp;<sp/>plane<sp/>=<sp/>portal.plane;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dsrc<sp/>=<sp/>plane.distanceTo(<sp/>cSrcPos<sp/>);</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ddst<sp/>=<sp/>plane.distanceTo(<sp/>cDstPos<sp/>);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dsrc*ddst<sp/>&gt;<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>equiv<sp/>test<sp/>to<sp/>above<sp/>I<sp/>hope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>ipt3D<sp/>=<sp/>plane.intersectRay(<sp/>cSrcPos,<sp/>cDstPos-cSrcPos<sp/>);</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipt3D<sp/>-=<sp/>portal.origin;</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>ipt2D(<sp/>portal.uAxis.dotProduct(<sp/>ipt3D<sp/>),</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portal.vAxis.dotProduct(<sp/>ipt3D<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>fpt<sp/>=<sp/>portal.points.back();</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>npts<sp/>=<sp/>portal.points.size();</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>npts;<sp/>i++)</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>tpt<sp/>=<sp/>portal.points[i];</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>ipt2D<sp/>is<sp/>&apos;inside&apos;<sp/>ftp<sp/>-&gt;<sp/>tpt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>perpdir(<sp/>tpt.y-fpt.y,<sp/>-(tpt.x-fpt.x)<sp/>);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(perpdir.dotProduct(<sp/>ipt2D-fpt<sp/>)<sp/>&gt;<sp/>0.f)</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpt<sp/>=<sp/>tpt;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>npts)</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dprintf(<sp/>&quot;Rejected<sp/>since<sp/>(%f,%f)<sp/>on<sp/>wrong<sp/>side<sp/>of<sp/>edge<sp/>%d\n&quot;,</highlight></codeline>
<codeline lineno="3666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ipt2D.x,<sp/>ipt2D.y,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="3667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>npts;<sp/>i++)</highlight></codeline>
<codeline lineno="3668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>tpt<sp/>=<sp/>portal.points[i];</highlight></codeline>
<codeline lineno="3670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector2<sp/>perpdir(<sp/>tpt.y-fpt.y,<sp/>-(tpt.x-fpt.x)<sp/>);</highlight></codeline>
<codeline lineno="3671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dprintf(<sp/>&quot;fpt<sp/>(%f,%f)<sp/>tpt<sp/>(%f,%f)<sp/>=&gt;<sp/>%f\n&quot;,</highlight></codeline>
<codeline lineno="3672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpt.x,<sp/>fpt.y,<sp/>tpt.x,<sp/>tpt.y,</highlight></codeline>
<codeline lineno="3673"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perpdir.dotProduct(<sp/>ipt2D-fpt<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpt<sp/>=<sp/>tpt;</highlight></codeline>
<codeline lineno="3675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>didn&apos;t<sp/>go<sp/>through<sp/>that<sp/>portal,<sp/>keep<sp/>looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ok<sp/>we<sp/>went<sp/>through<sp/>that<sp/>portal,<sp/>excellent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>are<sp/>allowed<sp/>to<sp/>do<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>could<sp/>call<sp/>a<sp/>callback<sp/>attached<sp/>to<sp/>this<sp/>portal<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dprintf(<sp/>&quot;Accepted!\n&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>is<sp/>a<sp/>normal<sp/>transition<sp/>then,<sp/>we<sp/>are<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portal.pChunk<sp/>!=<sp/>pDstChunk)<sp/></highlight><highlight class="comment">//<sp/>not<sp/>there<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>pNChunk<sp/>=<sp/>portal.pChunk;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"></highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BW::vector&lt;Chunk*&gt;::iterator<sp/>i<sp/>=<sp/>visitedChunks.begin();</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>!=<sp/>visitedChunks.end();<sp/>i++)</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNChunk<sp/>==<sp/>*i)</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dprintf(</highlight><highlight class="stringliteral">&quot;hit<sp/>previously<sp/>visited<sp/>chunk<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNChunk-&gt;identifier().c_str());</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revisitPreviousChunks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!revisitPreviousChunks)</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pendingChunks.push_back(<sp/>pNChunk<sp/>);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dprintf(</highlight><highlight class="stringliteral">&quot;Can<sp/>reach<sp/>target<sp/>chunk<sp/>%s<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDstChunk-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurChunk-&gt;identifier().c_str());</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(status<sp/>||<sp/>pendingChunks.empty()))</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>srcPos;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>dstPos;</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>pNChunk<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitedChunks.push_back(<sp/>pCurChunk<sp/>);</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BW::vector&lt;Chunk*&gt;::iterator<sp/>iter<sp/>=<sp/>pendingChunks.begin();</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>pendingChunks.end();<sp/>iter++)</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNChunk<sp/>=<sp/>*iter;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcPos<sp/>=<sp/>pCurChunk-&gt;transform().applyPoint(<sp/>cSrcPos<sp/>);</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstPos<sp/>=<sp/>pCurChunk-&gt;transform().applyPoint(<sp/>cDstPos<sp/>);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcPos<sp/>=<sp/>pNChunk-&gt;transformInverse().applyPoint(<sp/>srcPos<sp/>);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstPos<sp/>=<sp/>pNChunk-&gt;transformInverse().applyPoint(<sp/>dstPos<sp/>);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dprintf(<sp/></highlight><highlight class="stringliteral">&quot;traversing<sp/>portal<sp/>from<sp/>%s<sp/>to<sp/>%s,target<sp/>chunk<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCurChunk-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNChunk-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDstChunk-&gt;identifier().c_str());</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(traverseChunks(<sp/>pNChunk,<sp/>pDstChunk,<sp/>srcPos,<sp/>dstPos,<sp/>visitedChunks<sp/>))</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitedChunks.pop_back();</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity<sp/>onPassengerAlightAttempt</highlight></codeline>
<codeline lineno="3753"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3754"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>vehicle<sp/>when<sp/>a<sp/>entity</highlight></codeline>
<codeline lineno="3755"><highlight class="comment"><sp/>*<sp/><sp/>controlled<sp/>by<sp/>a<sp/>client<sp/>attempts<sp/>to<sp/>get<sp/>off<sp/>it,<sp/>if<sp/>physics<sp/>checking</highlight></codeline>
<codeline lineno="3756"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>enabled<sp/>for<sp/>that<sp/>entity.<sp/>If<sp/>the<sp/>method<sp/>returns<sp/>True,<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="3757"><highlight class="comment"><sp/>*<sp/><sp/>operation<sp/>is<sp/>permitted.<sp/>If<sp/>the<sp/>method<sp/>returns<sp/>anything<sp/>else,</highlight></codeline>
<codeline lineno="3758"><highlight class="comment"><sp/>*<sp/><sp/>including<sp/>an<sp/>exception,<sp/>then<sp/>the<sp/>operation<sp/>is<sp/>not<sp/>permitted<sp/>and</highlight></codeline>
<codeline lineno="3759"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>physics<sp/>correction<sp/>will<sp/>be<sp/>sent.</highlight></codeline>
<codeline lineno="3760"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>method<sp/>may<sp/>be<sp/>called<sp/>on<sp/>a<sp/>ghost<sp/>vehicle,<sp/>so<sp/>it<sp/>must<sp/>take<sp/>care</highlight></codeline>
<codeline lineno="3761"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>rely<sp/>on<sp/>only<sp/>ghosted<sp/>properties.<sp/>Also,<sp/>the<sp/>position<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="3762"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>making<sp/>the<sp/>attempt<sp/>must<sp/>not<sp/>be<sp/>interfered<sp/>with<sp/>-<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="3763"><highlight class="comment"><sp/>*<sp/><sp/>method<sp/>should<sp/>do<sp/>is<sp/>return<sp/>True<sp/>or<sp/>False.</highlight></codeline>
<codeline lineno="3764"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>the<sp/>operation<sp/>can<sp/>still<sp/>be<sp/>failed<sp/>at<sp/>a<sp/>number<sp/>of<sp/>points</highlight></codeline>
<codeline lineno="3765"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>later<sp/>physics<sp/>checks,<sp/>even<sp/>if<sp/>your<sp/>method<sp/>returns<sp/>True.</highlight></codeline>
<codeline lineno="3766"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight><highlight class="comment">/*~<sp/>callback<sp/>Entity<sp/>onPassengerBoardAttempt</highlight></codeline>
<codeline lineno="3768"><highlight class="comment"><sp/>*<sp/><sp/>@components{<sp/>cell<sp/>}</highlight></codeline>
<codeline lineno="3769"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>present,<sp/>this<sp/>method<sp/>is<sp/>called<sp/>on<sp/>a<sp/>vehicle<sp/>when<sp/>a<sp/>entity</highlight></codeline>
<codeline lineno="3770"><highlight class="comment"><sp/>*<sp/><sp/>controlled<sp/>by<sp/>a<sp/>client<sp/>attempts<sp/>to<sp/>board<sp/>it,<sp/>if<sp/>physics<sp/>checking</highlight></codeline>
<codeline lineno="3771"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>enabled<sp/>for<sp/>that<sp/>entity.<sp/>If<sp/>the<sp/>method<sp/>returns<sp/>True,<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="3772"><highlight class="comment"><sp/>*<sp/><sp/>operation<sp/>is<sp/>permitted.<sp/>If<sp/>the<sp/>method<sp/>returns<sp/>anything<sp/>else,</highlight></codeline>
<codeline lineno="3773"><highlight class="comment"><sp/>*<sp/><sp/>including<sp/>an<sp/>exception,<sp/>then<sp/>the<sp/>operation<sp/>is<sp/>not<sp/>permitted<sp/>and</highlight></codeline>
<codeline lineno="3774"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>physics<sp/>correction<sp/>will<sp/>be<sp/>sent.</highlight></codeline>
<codeline lineno="3775"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>method<sp/>may<sp/>be<sp/>called<sp/>on<sp/>a<sp/>ghost<sp/>vehicle,<sp/>so<sp/>it<sp/>must<sp/>take<sp/>care</highlight></codeline>
<codeline lineno="3776"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>rely<sp/>on<sp/>only<sp/>ghosted<sp/>properties.<sp/>Also,<sp/>the<sp/>position<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="3777"><highlight class="comment"><sp/>*<sp/><sp/>entity<sp/>making<sp/>the<sp/>attempt<sp/>must<sp/>not<sp/>be<sp/>interfered<sp/>with<sp/>-<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="3778"><highlight class="comment"><sp/>*<sp/><sp/>method<sp/>should<sp/>do<sp/>is<sp/>return<sp/>True<sp/>or<sp/>False.</highlight></codeline>
<codeline lineno="3779"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>the<sp/>operation<sp/>can<sp/>still<sp/>be<sp/>failed<sp/>at<sp/>a<sp/>number<sp/>of<sp/>points</highlight></codeline>
<codeline lineno="3780"><highlight class="comment"><sp/>*<sp/><sp/>by<sp/>later<sp/>physics<sp/>checks,<sp/>even<sp/>if<sp/>your<sp/>method<sp/>returns<sp/>True.</highlight></codeline>
<codeline lineno="3781"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3782"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>is<sp/>not<sp/>a<sp/>good<sp/>place<sp/>to<sp/>synchronise<sp/>boarding<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="3783"><highlight class="comment"><sp/>*<sp/><sp/>single-seated<sp/>vehicle,<sp/>since<sp/>it<sp/>may<sp/>be<sp/>called<sp/>simultaneously</highlight></codeline>
<codeline lineno="3784"><highlight class="comment"><sp/>*<sp/><sp/>from<sp/>two<sp/>different<sp/>cells.<sp/>If<sp/>you<sp/>need<sp/>to<sp/>enforce<sp/>such<sp/>a<sp/>rule,</highlight></codeline>
<codeline lineno="3785"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>should<sp/>have<sp/>a<sp/>separate<sp/>reservation<sp/>step<sp/>which<sp/>sets<sp/>a<sp/>ghosted</highlight></codeline>
<codeline lineno="3786"><highlight class="comment"><sp/>*<sp/><sp/>property<sp/>to<sp/>the<sp/>(id<sp/>of<sp/>the)<sp/>entity<sp/>that<sp/>has<sp/>permission<sp/>to<sp/>ride<sp/>it.</highlight></codeline>
<codeline lineno="3787"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>can<sp/>then<sp/>check<sp/>that<sp/>the<sp/>entity<sp/>attempting<sp/>to<sp/>board</highlight></codeline>
<codeline lineno="3788"><highlight class="comment"><sp/>*<sp/><sp/>does<sp/>indeed<sp/>hold<sp/>the<sp/>reservation.</highlight></codeline>
<codeline lineno="3789"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="3795"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::validateAvatarVehicleUpdate(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pNewVehicle<sp/>)</highlight></codeline>
<codeline lineno="3796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*pVehicle_<sp/>);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pMethod<sp/>=</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_GetAttrString(<sp/>pVehicle_,<sp/></highlight><highlight class="stringliteral">&quot;onPassengerAlightAttempt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMethod<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>result<sp/>=<sp/>Script::ask(</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethod,<sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,<sp/>(PyObject*)</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::validateAvatarVehicleUpdate(alight):<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::setAnswer(<sp/>result,<sp/>valid,</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::validateAvatarVehicleUpdate(alight)<sp/>result&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewVehicle<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*pNewVehicle<sp/>);</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pMethod<sp/>=</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_GetAttrString(<sp/>pNewVehicle,<sp/></highlight><highlight class="stringliteral">&quot;onPassengerBoardAttempt&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMethod<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>result<sp/>=<sp/>Script::ask(</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethod,<sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,<sp/>(PyObject*)</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::validateAvatarVehicleUpdate(board):<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::setAnswer(<sp/>result,<sp/>valid,</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::validateAvatarVehicleUpdate(board)<sp/>result&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valid)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::updateInternalsForNewPositionOfReal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>oldPosition,</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isVehicleMovement<sp/>)</highlight></codeline>
<codeline lineno="3861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/>++volatileUpdateNumber_;</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppInterface::ghostPositionUpdateArgs<sp/>ghostArgs;</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/>ghostArgs.pos<sp/>=<sp/>Position3D(<sp/>localPosition_<sp/>);</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/>ghostArgs.isOnGround<sp/>=<sp/>isOnGround_;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>We<sp/>could<sp/>store<sp/>the<sp/>compressed<sp/>pitch<sp/>and<sp/>yaw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/>ghostArgs.dir.set(</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localDirection_.yaw,<sp/>localDirection_.pitch,<sp/>localDirection_.roll<sp/>);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/>ghostArgs.updateNumber<sp/>=<sp/>volatileUpdateNumber_;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntity::Haunts::iterator<sp/>iter<sp/>=<sp/>pReal_-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>pReal_-&gt;hauntsEnd())</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>iter-&gt;bundle();</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::ghostPositionUpdateArgs<sp/>&amp;<sp/>rGhostPositionUpdate<sp/>=</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::ghostPositionUpdateArgs::start(<sp/>bundle,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rGhostPositionUpdate<sp/>=<sp/>ghostArgs;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>onNoise<sp/>may<sp/>be<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>real<sp/>about<sp/>it<sp/>for<sp/>velocity<sp/>calcns,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_-&gt;newPosition(<sp/>globalPosition_<sp/>);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;cell().pReplayData())</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cell().pReplayData()-&gt;queueEntityVolatile(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>internals<sp/>for<sp/>new<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateInternalsForNewPosition(<sp/>oldPosition,<sp/>isVehicleMovement<sp/>);</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::updateInternalsForNewPosition(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>oldPosition,</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isVehicleMovement<sp/>)</highlight></codeline>
<codeline lineno="3914"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT_DEV(<sp/>isValidPosition(<sp/>globalPosition_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/>START_PROFILE(<sp/>SHUFFLE_ENTITY_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>no<sp/>controllers<sp/>are<sp/>cancelled<sp/>while<sp/>doing<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(And<sp/>that<sp/>no<sp/>triggers<sp/>are<sp/>added/deleted/modified!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>upper<sp/>triggers<sp/>should<sp/>move<sp/>first<sp/>or<sp/>lower<sp/>ones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>increaseX<sp/>=<sp/>(oldPosition.x<sp/>&lt;<sp/>globalPosition_.x);</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>increaseZ<sp/>=<sp/>(oldPosition.z<sp/>&lt;<sp/>globalPosition_.z);</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>the<sp/>leading<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Triggers::iterator<sp/>it<sp/>=<sp/>triggers_.begin();<sp/>it<sp/>!=<sp/>triggers_.end();<sp/>it++)</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;shuffleXThenZExpand(<sp/>increaseX,<sp/>increaseZ,</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldPosition.x,<sp/>oldPosition.z<sp/>);</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>the<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/>pRangeListNode_-&gt;shuffleXThenZ(<sp/>oldPosition.x,<sp/>oldPosition.z<sp/>);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shuffle<sp/>the<sp/>trailing<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Triggers::reverse_iterator<sp/>it<sp/>=<sp/>triggers_.rbegin();</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>triggers_.rend();<sp/>it++)</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;shuffleXThenZContract(<sp/>increaseX,<sp/>increaseZ,</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldPosition.x,<sp/>oldPosition.z<sp/>);</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Even<sp/>with<sp/>this<sp/>sorting<sp/>this<sp/>is<sp/>broken<sp/>if<sp/>there<sp/>is<sp/>&gt;1<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>same<sp/>range<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>trigger<sp/>event<sp/>calls<sp/>must<sp/>not<sp/>modify<sp/>any<sp/>triggers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Script<sp/>calls<sp/>can<sp/>easily<sp/>be<sp/>delayed<sp/>by<sp/>use<sp/>of<sp/>the<sp/>callbacksPermitted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mechanism<sp/>invoked<sp/>above<sp/>(and<sp/>below)<sp/>...<sp/>just<sp/>gotta<sp/>make<sp/>sure<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>C++<sp/>functions<sp/>do<sp/>not<sp/>fiddle<sp/>around<sp/>with<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"></highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>passenger&apos;s<sp/>position<sp/>and<sp/>shuffle<sp/>its<sp/>triggers<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>chance<sp/>that<sp/>the<sp/>passenger<sp/>could<sp/>go<sp/>out<sp/>of<sp/>and<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>the<sp/>triggers<sp/>of<sp/>the<sp/>vehicle<sp/>(and<sp/>vice<sp/>versa),<sp/>but<sp/>since<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>keep<sp/>the<sp/>range<sp/>list<sp/>in<sp/>sorted<sp/>order<sp/>with<sp/>all<sp/>its<sp/>virtual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>functions,<sp/>we<sp/>have<sp/>no<sp/>other<sp/>choice<sp/>at<sp/>this<sp/>stage.<sp/>It&apos;s<sp/>no<sp/>big<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>AoI<sp/>but<sp/>for<sp/>proximity<sp/>controllers<sp/>it<sp/>might<sp/>be<sp/>a<sp/>pain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ideally<sp/>it<sp/>would<sp/>go:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>expand<sp/>all<sp/>triggers<sp/>including<sp/>those<sp/>of<sp/>passengers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>move<sp/>self<sp/>and<sp/>passengers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>contract<sp/>all<sp/>triggers<sp/>including<sp/>those<sp/>of<sp/>passengers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>.exists(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>(<sp/>*this<sp/>).</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateInternalsForNewPosition(<sp/>oldPosition<sp/>);</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>the<sp/>range<sp/>list<sp/>is<sp/>sorted<sp/>every<sp/>so<sp/>often</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64<sp/>lastSortedCheck<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timestamp()<sp/>-<sp/>lastSortedCheck<sp/>&gt;<sp/>stampsPerSecond())</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSortedCheck<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;space().rangeList().isSorted())</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::updateInternalsForNewPosition(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Range<sp/>list<sp/>is<sp/>not<sp/>sorted<sp/>after<sp/>spot<sp/>check\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;space().debugRangeList();</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!</highlight><highlight class="stringliteral">&quot;range<sp/>list<sp/>unsorted&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/>STOP_PROFILE(<sp/>SHUFFLE_ENTITY_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>you&apos;ve<sp/>crossed<sp/>into<sp/>a<sp/>new<sp/>Chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;checkChunkCrossing();</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>history<sp/>event<sp/>if<sp/>we&apos;re<sp/>not<sp/>volatile<sp/>at<sp/>any<sp/>distance,<sp/>or<sp/>if<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>non-volatile<sp/>position<sp/>that<sp/>has<sp/>been<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isVehicleMovement<sp/>&amp;&amp;<sp/>(!this-&gt;volatileInfo().hasVolatile(<sp/>0.f<sp/>)<sp/>||</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!this-&gt;volatileInfo().shouldSendPosition()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(oldPosition<sp/>!=<sp/>globalPosition_))))</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addDetailedPositionToHistory(<sp/></highlight><highlight class="comment">/*<sp/>isLocalOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"></highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isVehicleMovement)</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;onPositionChanged();</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::checkChunkCrossing()</highlight></codeline>
<codeline lineno="4014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ToDo:<sp/>if<sp/>chunks<sp/>are<sp/>not<sp/>supported,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>function<sp/>should<sp/>not<sp/>be<sp/>called<sp/>at<sp/>all?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;pChunkSpace())<sp/>{</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>offsetPosition(<sp/>globalPosition_.x,<sp/>globalPosition_.y<sp/>+<sp/>0.1f,</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.z<sp/>);</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>it<sp/>its<sp/>first<sp/>chunk<sp/>if<sp/>it<sp/>isn&apos;t<sp/>yet<sp/>in<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChunk_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;nextInChunk()<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;prevInChunk()<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"></highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_<sp/>=<sp/>this-&gt;pChunkSpace()-&gt;findChunkFromPointExact(<sp/>offsetPosition<sp/>);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChunk_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).addEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stillInChunk<sp/>=<sp/>pChunk_-&gt;contains(<sp/>offsetPosition<sp/>);</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stillInChunk<sp/>&amp;&amp;<sp/>!pChunk_-&gt;hasInternalChunks())</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/>&quot;(%f,<sp/>%f,<sp/>%f)<sp/>is<sp/>still<sp/>in<sp/>chunk<sp/>%s\n&quot;,</highlight></codeline>
<codeline lineno="4043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetPosition.x,<sp/>offsetPosition.y,<sp/>offsetPosition.z,</highlight></codeline>
<codeline lineno="4044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_-&gt;identifier().c_str()<sp/>);</highlight></codeline>
<codeline lineno="4045"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>chunk<sp/>that<sp/>we<sp/>want<sp/>to<sp/>be<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>pNewChunk<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//always<sp/>check<sp/>portals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>throughPortal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>to<sp/>hold<sp/>possible<sp/>candidates<sp/>that<sp/>are<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>indoor<sp/>chunks<sp/>have<sp/>priority</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>pOutsideChunk<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ChunkBoundary::Portal<sp/>*<sp/>portalPassed<sp/>=<sp/>NULL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Chunk::piterator<sp/>iter<sp/>=<sp/>pChunk_-&gt;pbegin();</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>pChunk_-&gt;pend();</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++)</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ChunkBoundary::Portal<sp/>&amp;<sp/>portal<sp/>=<sp/>(*iter);</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portal.hasChunk())</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Chunk<sp/>*<sp/>chunk<sp/>=<sp/>portal.pChunk;</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk-&gt;contains(<sp/>offsetPosition<sp/>))</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throughPortal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>portalPassed<sp/>=<sp/>&amp;portal;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk-&gt;isOutsideChunk())</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOutsideChunk<sp/>=<sp/>chunk;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/>&quot;Changed<sp/>Chunks:<sp/>Entity<sp/>%d<sp/>gone<sp/>through<sp/>portal<sp/>[%s]<sp/>from<sp/>%s<sp/>to<sp/>inside<sp/>%s<sp/>(%6.3f,<sp/>%6.3f,<sp/>%6.3f)\n&quot;,</highlight></codeline>
<codeline lineno="4079"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)this-&gt;id(),</highlight></codeline>
<codeline lineno="4080"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portal.label.c_str(),</highlight></codeline>
<codeline lineno="4081"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="4082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="4083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.x,</highlight></codeline>
<codeline lineno="4084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.y,</highlight></codeline>
<codeline lineno="4085"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.z</highlight></codeline>
<codeline lineno="4086"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4087"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewChunk<sp/>=<sp/>chunk;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(throughPortal)</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>outside<sp/>chunk<sp/>but<sp/>no<sp/>inside<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewChunk<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>pOutsideChunk<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewChunk<sp/>=<sp/>pOutsideChunk;</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/>&quot;Changed<sp/>Chunks:<sp/>Entity<sp/>%d<sp/>gone<sp/>through<sp/>portal<sp/>[%s]<sp/>from<sp/>%s<sp/>to<sp/>%s<sp/>(%6.3f,<sp/>%6.3f,<sp/>%6.3f)\n&quot;,</highlight></codeline>
<codeline lineno="4103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)this-&gt;id(),</highlight></codeline>
<codeline lineno="4104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portalPassed-&gt;label.c_str(),</highlight></codeline>
<codeline lineno="4105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="4106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOutsideChunk-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="4107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.x,</highlight></codeline>
<codeline lineno="4108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.y,</highlight></codeline>
<codeline lineno="4109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.z</highlight></codeline>
<codeline lineno="4110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!stillInChunk)</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>do<sp/>this<sp/>a<sp/>better<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>not<sp/>found<sp/>check<sp/>the<sp/>whole<sp/>universe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pNewChunk<sp/>==<sp/>NULL<sp/>);<sp/></highlight><highlight class="comment">//<sp/>for<sp/>sanity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewChunk<sp/>=<sp/>this-&gt;pChunkSpace()-&gt;findChunkFromPointExact(</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offsetPosition<sp/>);</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/>&quot;Changed<sp/>Chunks:<sp/>Entity<sp/>%d<sp/>teleported<sp/>or<sp/>cheated<sp/>from<sp/>%s<sp/>to<sp/>%s<sp/>(%6.3f,<sp/>%6.3f,<sp/>%6.3f)\n&quot;,</highlight></codeline>
<codeline lineno="4122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int)this-&gt;id(),</highlight></codeline>
<codeline lineno="4123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="4124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk-&gt;identifier().c_str(),</highlight></codeline>
<codeline lineno="4125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.x,</highlight></codeline>
<codeline lineno="4126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.y,</highlight></codeline>
<codeline lineno="4127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_.z</highlight></codeline>
<codeline lineno="4128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewChunk<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight><highlight class="stringliteral">&quot;Entity::checkChunkCrossing:<sp/>Attempt<sp/>to<sp/>cross<sp/>into&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>non-existing<sp/>chunk.<sp/>Physics<sp/>checking<sp/>should<sp/>be&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;turned<sp/>on<sp/>for<sp/>entity<sp/>%d.\n&quot;</highlight><highlight class="normal">,<sp/>id_);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>chunks<sp/>if<sp/>they<sp/>are<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewChunk<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pNewChunk<sp/>!=<sp/>pChunk_)</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).removeEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pChunk_<sp/>=<sp/>pNewChunk;</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).addEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"></highlight></codeline>
<codeline lineno="4154"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::relocated()</highlight></codeline>
<codeline lineno="4155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tell<sp/>all<sp/>our<sp/>extras<sp/>about<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s_entityExtraInfo().size();<sp/>i++)</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extras_[i]<sp/>!=<sp/>NULL)<sp/>extras_[i]-&gt;relocated();</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4168"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::destroyZombie()</highlight></codeline>
<codeline lineno="4169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isReal())</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::destroyZombie(%u):<sp/>The<sp/>zombie<sp/>is<sp/>real.\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;convertRealToGhost();</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;destroy();</highlight></codeline>
<codeline lineno="4179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"></highlight></codeline>
<codeline lineno="4186"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::reloadScript()</highlight></codeline>
<codeline lineno="4187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntityType_<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>pEntityType_-&gt;typeID()<sp/>);</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityType_<sp/>);</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"></highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;__class__&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PyObject<sp/>*)pEntityType_-&gt;pPyType()<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::reloadScript(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>__class__<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::migrate()</highlight></codeline>
<codeline lineno="4206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>new<sp/>type<sp/>and<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>the<sp/>same<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pOldType<sp/>=<sp/>pEntityType_;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pNewType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>pOldType-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNewType<sp/>||<sp/>(pNewType-&gt;typeID()<sp/>!=<sp/>pOldType-&gt;typeID()))</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::migrate(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[type<sp/>%s]<sp/>has<sp/>been<sp/>made<sp/>obsolete<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(absent<sp/>or<sp/>type<sp/>id<sp/>mismatch<sp/>%d<sp/>=&gt;<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pOldType-&gt;name(),<sp/>pOldType-&gt;typeID(),</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewType?pNewType-&gt;typeID():-1<sp/>);</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>we&apos;re<sp/>not<sp/>simply<sp/>reloading<sp/>scripts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNewType<sp/>!=<sp/>pOldType)</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>our<sp/>type,<sp/>and<sp/>set<sp/>the<sp/>old<sp/>type<sp/>for<sp/>the<sp/>new<sp/>one<sp/>if<sp/>not<sp/>yet<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_<sp/>=<sp/>pNewType;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNewType-&gt;old(<sp/>pOldType<sp/>);</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TRACE_MSG(<sp/>&quot;Entity::migrate(%lu):<sp/>Old<sp/>PyType<sp/>%08X<sp/>New<sp/>PyType<sp/>%08X\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>id_,<sp/>pOldType-&gt;pPyType(),<sp/>pNewType-&gt;pPyType()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"></highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>we<sp/>can&apos;t<sp/>smoothly<sp/>set<sp/>in<sp/>the<sp/>script<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pNewEntity<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_SetAttrString(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;__class__&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PyObject<sp/>*)pEntityType_-&gt;pPyType()<sp/>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>class<sp/>by<sp/>some<sp/>other<sp/>means<sp/>...<sp/>hmmm,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>think<sp/>I<sp/>need<sp/>to<sp/>ask<sp/>Murf<sp/>about<sp/>this<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>possibly<sp/>create<sp/>a<sp/>new<sp/>entity<sp/>and<sp/>replace<sp/>our<sp/>entry<sp/>with<sp/>it...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>for<sp/>now<sp/>just<sp/>delete<sp/>the<sp/>entity<sp/>(!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::migrate(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[type<sp/>%s]<sp/>has<sp/>been<sp/>made<sp/>obsolete<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(could<sp/>not<sp/>change<sp/>__class__<sp/>to<sp/>new<sp/>class)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pEntityType_-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_<sp/>=<sp/>pOldType;</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>could<sp/>traverse<sp/>properties<sp/>and<sp/>migrate<sp/>them<sp/>before<sp/>or<sp/>after<sp/>migrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call,<sp/>or<sp/>maybe<sp/>provide<sp/>a<sp/>method<sp/>to<sp/>do<sp/>so,<sp/>and/or<sp/>do<sp/>it<sp/>if<sp/>no<sp/>onMigrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>migrate<sp/>method<sp/>if<sp/>it<sp/>has<sp/>one<sp/>(not<sp/>calling<sp/>delegate<sp/>as<sp/>it&apos;s<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Python<sp/>API-internal)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>newEntity<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_entity" kindref="compound">Entity</ref>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pNewEntity<sp/>);<sp/></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>newEntity<sp/>);</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>Entity::callbacksPermitted()<sp/>);</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/>newEntity.callback(<sp/></highlight><highlight class="stringliteral">&quot;onMigrate&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(</highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,(PyObject*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;onMigrate&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="comment">/*okIfFnNull*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>are<sp/>done!<sp/>sweet!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::migratedAll()</highlight></codeline>
<codeline lineno="4272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isDestroyed_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>onMigratedAll<sp/>method<sp/>if<sp/>it<sp/>has<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delegate<sp/>isn&apos;t<sp/>called<sp/>as<sp/>it&apos;s<sp/>a<sp/>BW<sp/>Python<sp/>API-internal<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>Entity::callbacksPermitted()<sp/>);</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onMigratedAll&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="4283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Entity<sp/>-<sp/>Message<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::avatarUpdateImplicit(</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::avatarUpdateImplicitArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="4295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>There<sp/>is<sp/>a<sp/>race-condition<sp/>here.<sp/>The<sp/>baseapp<sp/>is<sp/>sent<sp/>the<sp/>modward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>message<sp/>when<sp/>the<sp/>controlledByRef<sp/>is<sp/>changed<sp/>but<sp/>there<sp/>can<sp/>still<sp/>be<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>wire<sp/>which<sp/>either<sp/>has<sp/>or<sp/>will<sp/>make<sp/>it<sp/>past<sp/>the<sp/>baseapp<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wards<sp/>has<sp/>been<sp/>changed.<sp/>We<sp/>probably<sp/>should<sp/>put<sp/>a<sp/>check<sp/>there,<sp/>but<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>insufficient<sp/>information<sp/>in<sp/>this<sp/>context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pReal_-&gt;controlledByRef().id<sp/>!=<sp/>senderID)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_-&gt;controlledByRef().id<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>corrections<sp/>to<sp/>be<sp/>acked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsCorrections_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isValidPosition(<sp/>args.pos<sp/>))</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::avatarUpdateImplicit(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%f,%f,%f)<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>position<sp/>for<sp/>this<sp/>entity\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>args.pos.x,<sp/>args.pos.y,<sp/>args.pos.z<sp/>);</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"></highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>physics<sp/>checking<sp/>is<sp/>enabled<sp/>then<sp/>make<sp/>sure<sp/>that<sp/>move<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isZero(<sp/>topSpeed_<sp/>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!this-&gt;physicallyPossible(<sp/>args.pos,<sp/>pVehicle_<sp/>))</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ok<sp/>that<sp/>made<sp/>no<sp/>sense,<sp/>so<sp/>tell<sp/>the<sp/>client<sp/>where<sp/>to<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;sendPhysicsCorrection();</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>do<sp/>common<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;avatarUpdateCommon(<sp/>args.pos,<sp/>args.dir,<sp/>isOnGround_,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;avatarUpdateCommon(<sp/>args.pos,<sp/>args.dir,<sp/>isOnGround_,<sp/>args.refNum<sp/>);</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::avatarUpdateExplicit(</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::avatarUpdateExplicitArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="4347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>curVehicleID<sp/>=<sp/>this-&gt;vehicleID();</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isValidPosition(<sp/>args.pos<sp/>))</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::avatarUpdateExplicit(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%f,%f,%f)<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>position<sp/>for<sp/>this<sp/>entity\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>args.pos.x,<sp/>args.pos.y,<sp/>args.pos.z<sp/>);</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onGround<sp/>=<sp/>(args.flags<sp/>&amp;<sp/>AVATAR_UPDATE_EXPLICT_FLAG_ONGROUND);</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>comment<sp/>in<sp/>avatarUpdateImplicit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pReal-&gt;controlledByRef().id<sp/>!=<sp/>senderID)<sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_-&gt;controlledByRef().id<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsCorrections_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"></highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>physicsError<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>physics<sp/>checking<sp/>is<sp/>enabled<sp/>then<sp/>make<sp/>sure<sp/>the<sp/>move<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isZero(<sp/>topSpeed_<sp/>))</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pUseVehicle<sp/>=<sp/>pVehicle_;</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.vehicleID<sp/>!=<sp/>curVehicleID)</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pUseVehicle<sp/>=<sp/>CellApp::instance().findEntity(<sp/>args.vehicleID<sp/>);</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsError<sp/>=<sp/>!this-&gt;physicallyPossible(<sp/>args.pos,<sp/>pUseVehicle<sp/>);</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"></highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>vehicles<sp/>if<sp/>it<sp/>wants<sp/>to<sp/>be<sp/>in<sp/>a<sp/>different<sp/>vehicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!physicsError<sp/>&amp;&amp;<sp/>args.vehicleID<sp/>!=<sp/>curVehicleID)</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>off<sp/>any<sp/>vehicle<sp/>we<sp/>are<sp/>currently<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PassengerExtra::instance(<sp/>*this<sp/>).alightVehicleForReal(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>print<sp/>it<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsError<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>on<sp/>any<sp/>vehicle<sp/>we<sp/>should<sp/>now<sp/>be<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.vehicleID<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PassengerExtra::instance(<sp/>*this<sp/>).boardVehicle(</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.vehicleID,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>print<sp/>it<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsError<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pReal()<sp/>&amp;&amp;<sp/>this-&gt;pReal()-&gt;pWitness())</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pReal()-&gt;pWitness()-&gt;vehicleChanged();</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>was<sp/>a<sp/>problem<sp/>with<sp/>that<sp/>move<sp/>(including<sp/>changing<sp/>vehicles),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>let<sp/>the<sp/>client<sp/>know<sp/>where<sp/>it<sp/>stands<sp/>(or<sp/>rides...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(physicsError)</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;sendPhysicsCorrection();</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"></highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>perform<sp/>the<sp/>common<sp/>pose<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;avatarUpdateCommon(<sp/>args.pos,<sp/>args.dir,<sp/>onGround,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;avatarUpdateCommon(<sp/>args.pos,<sp/>args.dir,<sp/>onGround,<sp/>args.refNum<sp/>);</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::hasVolatilePosition()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="4440"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>is<sp/>true<sp/>if<sp/>-only<sp/>direction-<sp/>is<sp/>volatile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;volatileInfo().hasVolatile(<sp/>0.f<sp/>);</highlight></codeline>
<codeline lineno="4443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::avatarUpdateCommon(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position3D<sp/>&amp;<sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>YawPitchRoll<sp/>&amp;<sp/>dir,</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onGround,<sp/>uint8<sp/>refNum<sp/>)</highlight></codeline>
<codeline lineno="4452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ProfileVal<sp/>localProfile(<sp/></highlight><highlight class="stringliteral">&quot;avatarUpdate&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/>START_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>not<sp/>volatile<sp/>at<sp/>any<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;hasVolatilePosition())</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::avatarUpdateCommon(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Moving<sp/>an<sp/>entity<sp/>without<sp/>volatile<sp/>position.<sp/>Should<sp/>%s<sp/>have<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;volatile<sp/>position?\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>information<sp/>in<sp/>this<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/>localPosition_.set(<sp/>pos.x,<sp/>pos.y,<sp/>pos.z<sp/>);</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/>dir.get(<sp/>localDirection_.yaw,<sp/>localDirection_.pitch,<sp/>localDirection_.roll<sp/>);</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/>isOnGround_<sp/>=<sp/>onGround;</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>ghosts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateGlobalPosition();</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>ghosts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInGlobalCoords<sp/>=<sp/>this-&gt;updateGlobalPosition();</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>of<sp/>entity<sp/>witness<sp/>of<sp/>new<sp/>relative<sp/>position<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pReal()-&gt;pWitness())</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isInGlobalCoords)</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pReal()-&gt;pWitness()-&gt;updateReferencePosition(<sp/>refNum<sp/>);</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pReal()-&gt;pWitness()-&gt;cancelReferencePosition();</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VOLATILE_POSITIONS_ARE_ABSOLUTE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/>STOP_PROFILE_WITH_DATA(<sp/>localProfile,<sp/>pReal_-&gt;numHaunts()<sp/>);</highlight></codeline>
<codeline lineno="4493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ackPhysicsCorrection()</highlight></codeline>
<codeline lineno="4501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>physicsCorrections_<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::ackPhysicsCorrection(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>physics<sp/>correction<sp/>acknowledgement<sp/>from<sp/>client<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;or<sp/>integer<sp/>wraparound.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"></highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--physicsCorrections_<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsLastValidated_<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>physicsNetworkJitterDebt_<sp/>=<sp/>CellAppConfig::maxPhysicsNetworkJitter();</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::onload(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="4527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ProfileVal<sp/>localProfile(<sp/></highlight><highlight class="stringliteral">&quot;onloadEntity&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>TRANSIENT_LOAD_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/>START_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"></highlight></codeline>
<codeline lineno="4532"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_FAULT_TOLERANCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_crashOnOnload)</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityPopulation::const_iterator<sp/>iter<sp/>=<sp/>Entity::population().begin();</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>Entity::population().end())</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::onload:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;id<sp/>=<sp/>%lu,<sp/>isReal<sp/>=<sp/>%d,<sp/>isDestroyed<sp/>=<sp/>%d,<sp/>realAddr<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;id(),</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;isReal(),</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;isDestroyed(),</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;realAddr().c_str()<sp/>);</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"></highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!</highlight><highlight class="stringliteral">&quot;Entity::onload:<sp/>Crash<sp/>on<sp/>onload&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>teleportFailure<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>teleportFailure;</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>data.remainingLength();</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"></highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onEnteringCell&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onEnteringCell();</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"></highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;convertGhostToReal(<sp/>data,<sp/>teleportFailure<sp/>?<sp/>&amp;srcAddr<sp/>:<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"></highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DEBUG_MSG(<sp/>&quot;Entity::onload(<sp/>%d<sp/>)\n&quot;,<sp/>id_<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/>STOP_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>duration<sp/>=<sp/>localProfile.lastTime();</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(duration<sp/>&gt;<sp/>g_profileOnloadTimeLevel)</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputEntityPerfWarning(<sp/></highlight><highlight class="stringliteral">&quot;Profile<sp/>onload/timeWarningLevel<sp/>exceeded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stampsToSeconds(<sp/>duration<sp/>),<sp/>dataSize<sp/>);</highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataSize<sp/>&gt;<sp/>g_profileOnloadSizeLevel)</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputEntityPerfWarning(<sp/></highlight><highlight class="stringliteral">&quot;Profile<sp/>onload/sizeWarningLevel<sp/>exceeded&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>stampsToSeconds(<sp/>duration<sp/>),<sp/>dataSize<sp/>);</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(teleportFailure)</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>haunt<sp/>to<sp/>the<sp/>failed<sp/>destination<sp/>as<sp/>the<sp/>ghost<sp/>did<sp/>not<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealEntity::Haunts::iterator<sp/>iHaunt<sp/>=<sp/>pReal_-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iHaunt<sp/>!=<sp/>pReal_-&gt;hauntsEnd())</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iHaunt-&gt;channel().addr()<sp/>==<sp/>srcAddr)</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;delHaunt(<sp/>iHaunt<sp/>);</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iHaunt;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;cell().pReplayData())</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cell().pReplayData()-&gt;addEntityState(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onTeleportFailure&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onTeleportFailure();</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"></highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight></codeline>
<codeline lineno="4624"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::createGhost(<sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>)</highlight></codeline>
<codeline lineno="4625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::createGhost<sp/>);</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>this-&gt;cell().space().id();</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;writeGhostDataToStream(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="4629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"></highlight></codeline>
<codeline lineno="4631"><highlight class="normal"></highlight></codeline>
<codeline lineno="4635"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::convertGhostToReal(<sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>*<sp/>pBadHauntAddr<sp/>)</highlight></codeline>
<codeline lineno="4637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/>++numTimesRealOffloaded_;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>entity<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>zero<sp/>refcount<sp/>when<sp/>between<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>if<sp/>the<sp/>entity<sp/>destroys<sp/>itself<sp/>in<sp/>this<sp/>call.<sp/>Actually,<sp/>let&apos;s<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>script<sp/>callbacks<sp/>too<sp/>so<sp/>it<sp/>can&apos;t<sp/>do<sp/>anything<sp/>potentially<sp/>even<sp/>worse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pCopy<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Throw<sp/>away<sp/>the<sp/>channel<sp/>to<sp/>the<sp/>(former)<sp/>real<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pRealChannel_<sp/>);</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/>pRealChannel_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>work<sp/>of<sp/>creating<sp/>the<sp/>real<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;readRealDataFromStreamForOnload(<sp/>data,<sp/>pBadHauntAddr<sp/>);</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>it<sp/>to<sp/>the<sp/>cell&apos;s<sp/>collection<sp/>of<sp/>reals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cell().addRealEntity(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*shouldSendNow:*/</highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((globalPosition_<sp/>!=<sp/>INVALID_POSITION)<sp/>&amp;&amp;<sp/>this-&gt;cell().pReplayData())</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Teleports<sp/>with<sp/>invalid<sp/>positions<sp/>will<sp/>be<sp/>handled<sp/>later<sp/>after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>onTeleportSuccess()<sp/>has<sp/>been<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"></highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cell().pReplayData()-&gt;addEntityState(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;relocated();</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"></highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>this<sp/>to<sp/>happen<sp/>before<sp/>other<sp/>callbacks<sp/>have<sp/>a<sp/>chance<sp/>to<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>want<sp/>to<sp/>stop<sp/>callbacks<sp/>here<sp/>but<sp/>we<sp/>also<sp/>do<sp/>not<sp/>yet<sp/>want<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replay<sp/>any<sp/>queued<sp/>callbacks<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_callbackBuffer_.enableHighPriorityBuffering();</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onEnteredCell&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onEnteredCell();</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"></highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_callbackBuffer_.disableHighPriorityBuffering();</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"></highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>the<sp/>scripting<sp/>environment<sp/>have<sp/>its<sp/>way<sp/>with<sp/>the<sp/>entity<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>could<sp/>destroy<sp/>it,<sp/>offload<sp/>(teleport)<sp/>it,<sp/>whatever.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"></highlight></codeline>
<codeline lineno="4690"><highlight class="normal"></highlight></codeline>
<codeline lineno="4695"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::readRealDataFromStreamForOnload(<sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>*<sp/>pBadHauntAddr<sp/>)</highlight></codeline>
<codeline lineno="4697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/>CompressionIStream<sp/>compressionStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;readRealDataFromStreamForOnloadInternal(<sp/>compressionStream,</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBadHauntAddr<sp/>);</highlight></codeline>
<codeline lineno="4701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"></highlight></codeline>
<codeline lineno="4703"><highlight class="normal"></highlight></codeline>
<codeline lineno="4708"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::readRealDataFromStreamForOnloadInternal(<sp/>BinaryIStream<sp/>&amp;<sp/>data,</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>*<sp/>pBadHauntAddr<sp/>)</highlight></codeline>
<codeline lineno="4710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>we<sp/>remove<sp/>the<sp/>information<sp/>from<sp/>the<sp/>bundle<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>order<sp/>as<sp/>offload.<sp/>First<sp/>we<sp/>do<sp/>the<sp/>Entity,<sp/>then<sp/>the<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>related<sp/>stuff<sp/>and<sp/>then<sp/>the<sp/>real<sp/>stuff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4714"><highlight class="normal"></highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>read<sp/>off<sp/>the<sp/>real<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pType-&gt;convertToRealScript(<sp/>this,<sp/>data<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_.size()<sp/>==<sp/>pEntityType_-&gt;propCountGhost()<sp/>);</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/>properties_.insert(<sp/>properties_.end(),</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propCountGhostPlusReal()-properties_.size(),</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject()<sp/>);</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>pEntityType_-&gt;propCountGhost();<sp/>i<sp/>&lt;<sp/>properties_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataDescription<sp/>*<sp/>pDataDescr<sp/>=<sp/>pEntityType_-&gt;propIndex(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pDataDescr<sp/>);</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pType()-&gt;isDelegatedProperty(<sp/>pDataDescr<sp/>))</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>pEntityDelegate_-&gt;updateProperty(<sp/>data,<sp/>*pDataDescr,<sp/></highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isPersistentOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>&amp;<sp/>dt<sp/>=<sp/>*pDataDescr-&gt;dataType();</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptDataSink<sp/>sink;</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>dt.createFromStream(<sp/>data,<sp/>sink,</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isPersistentOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>value<sp/>=<sp/>sink.finalise();</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[i]<sp/>=<sp/>dt.attach(<sp/>value,<sp/>&amp;propertyOwner_,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>properties_[i]<sp/>);</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"></highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/>TOKEN_CHECK(<sp/>data,<sp/></highlight><highlight class="stringliteral">&quot;RealProps&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finally<sp/>take<sp/>off<sp/>the<sp/>real<sp/>entity<sp/>data,<sp/>and<sp/>use<sp/>that<sp/>to<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>RealEntity<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;createReal();</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"></highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_VERIFY(!pReal_-&gt;init(<sp/>data,<sp/>CREATE_REAL_FROM_OFFLOAD,</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>channelVersion<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>Mercury::SEQ_NULL,</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBadHauntAddr<sp/>));</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>any<sp/>BASE_AND_CLIENT<sp/>data<sp/>exposed<sp/>for<sp/>recording.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;readBasePropertiesExposedForReplayFromStream(<sp/>data<sp/>))</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::readRealDataFromStreamForOnloadInternal&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%u):<sp/>Error<sp/>streaming<sp/>off<sp/>exposed<sp/>base<sp/>entity<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;properties\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"></highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>real<sp/>controllers<sp/>now<sp/>that<sp/>pReal_<sp/>has<sp/>been<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;startRealControllers();</highlight></codeline>
<codeline lineno="4764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"></highlight></codeline>
<codeline lineno="4766"><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::callback(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>methodName<sp/>)</highlight></codeline>
<codeline lineno="4771"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>SCRIPT_CALL_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"></highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callback(</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methodName,<sp/>PyTuple_New(<sp/>0<sp/>),<sp/>methodName,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>okIfFnNull<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"></highlight></codeline>
<codeline lineno="4779"><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostPositionUpdate(</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::ghostPositionUpdateArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="4786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;ghostPositionUpdate&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/>volatileUpdateNumber_++;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/>localPosition_.set(<sp/>args.pos.x,<sp/>args.pos.y,<sp/>args.pos.z<sp/>);</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/>isOnGround_<sp/>=<sp/>args.isOnGround;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/>args.dir.get(</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localDirection_.yaw,<sp/>localDirection_.pitch,<sp/>localDirection_.roll<sp/>);</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/>volatileUpdateNumber_<sp/>=<sp/>args.updateNumber;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"></highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateGlobalPosition();</highlight></codeline>
<codeline lineno="4800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"></highlight></codeline>
<codeline lineno="4802"><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostHistoryEvent(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="4809"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"></highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/>++lastEventNumber_;</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/>EventNumber<sp/>newNumber<sp/>=<sp/>this-&gt;eventHistory().addFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>newNumber<sp/>==<sp/>lastEventNumber_<sp/>);</highlight></codeline>
<codeline lineno="4816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"></highlight></codeline>
<codeline lineno="4818"><highlight class="normal"></highlight></codeline>
<codeline lineno="4823"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostSetReal(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::ghostSetRealArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="4824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;ghostSetReal&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/>NumTimesRealOffloadedType<sp/>expected<sp/>=<sp/>numTimesRealOffloaded_<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"></highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.numTimesRealOffloaded<sp/>!=<sp/>expected)</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::ghostSetReal(<sp/>%u<sp/>):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>subsequence<sp/>id.<sp/>Expected<sp/>%d.<sp/>Got<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>expected,<sp/>args.numTimesRealOffloaded<sp/>);</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"></highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_buffered_ghost_messages" kindref="compound">BufferedGhostMessages</ref><sp/>&amp;<sp/>bufferedMessages<sp/>=</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellApp::instance().bufferedGhostMessages();</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_buffered_ghost_message" kindref="compound">BufferedGhostMessage</ref><sp/>*<sp/>pMsg<sp/>=</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufferedGhostMessageFactory::createGhostSetRealMessage(<sp/>id_,<sp/>args<sp/>);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufferedMessages.<ref refid="class_buffered_ghost_messages_1ad98569b83c897912ff007c55bfee2be3" kindref="member">delaySubsequence</ref>(<sp/>id_,<sp/>args.owner,<sp/>pMsg<sp/>);</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"></highlight></codeline>
<codeline lineno="4843"><highlight class="normal"><sp/><sp/><sp/><sp/>numTimesRealOffloaded_<sp/>=<sp/>args.numTimesRealOffloaded;</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"></highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>nextRealAddr_<sp/>==<sp/>args.owner<sp/>);</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/>pRealChannel_<sp/>=<sp/>CellAppChannels::instance().get(<sp/>args.owner<sp/>);</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/>nextRealAddr_<sp/>=<sp/>Mercury::Address::NONE;</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;relocated();</highlight></codeline>
<codeline lineno="4852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"></highlight></codeline>
<codeline lineno="4854"><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostSetNextReal(</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::ghostSetNextRealArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="4862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>nextRealAddr_<sp/>==<sp/>Mercury::Address::NONE<sp/>);</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>args.nextRealAddr<sp/>!=<sp/>Mercury::Address::NONE<sp/>);</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"></highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>last<sp/>message<sp/>from<sp/>our<sp/>current<sp/>real,<sp/>so<sp/>now<sp/>we<sp/>will<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accept<sp/>GHOST_ONLY<sp/>messages<sp/>from<sp/>nextRealAddr_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/>nextRealAddr_<sp/>=<sp/>args.nextRealAddr;</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"></highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Play<sp/>any<sp/>buffered<sp/>messages<sp/>for<sp/>this<sp/>ghost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().bufferedGhostMessages().playSubsequenceFor(<sp/>id_,</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextRealAddr_<sp/>);</highlight></codeline>
<codeline lineno="4873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"></highlight></codeline>
<codeline lineno="4880"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::delGhost()</highlight></codeline>
<codeline lineno="4881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;deleteGhost&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>TRANSIENT_LOAD_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"></highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;destroy();</highlight></codeline>
<codeline lineno="4888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"></highlight></codeline>
<codeline lineno="4890"><highlight class="normal"></highlight></codeline>
<codeline lineno="4895"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostVolatileInfo(</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::ghostVolatileInfoArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="4897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/>volatileInfo_<sp/>=<sp/>args.volatileInfo;</highlight></codeline>
<codeline lineno="4899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"></highlight></codeline>
<codeline lineno="4901"><highlight class="normal"></highlight></codeline>
<codeline lineno="4906"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostControllerCreate(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="4907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;createGhost(<sp/>data,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight></codeline>
<codeline lineno="4911"><highlight class="normal"></highlight></codeline>
<codeline lineno="4916"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostControllerDelete(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="4917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;deleteGhost(<sp/>data,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"></highlight></codeline>
<codeline lineno="4926"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostControllerUpdate(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="4927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;updateGhost(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="4929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"></highlight></codeline>
<codeline lineno="4936"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::visitControllers(<sp/><ref refid="class_controllers_visitor" kindref="compound">ControllersVisitor</ref><sp/>&amp;<sp/>visitor<sp/>)</highlight></codeline>
<codeline lineno="4937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pControllers_-&gt;visitAll(<sp/>visitor<sp/>);</highlight></codeline>
<codeline lineno="4941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"></highlight></codeline>
<codeline lineno="4943"><highlight class="normal"></highlight></codeline>
<codeline lineno="4947"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::witnessCapacity(</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::witnessCapacityArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="4949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:PM<sp/>For<sp/>the<sp/>moment,<sp/>the<sp/>only<sp/>witness<sp/>is<sp/>the<sp/>proxy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>args.witness<sp/>==<sp/>this-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pReal_-&gt;pWitness()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pWitness()-&gt;setWitnessCapacity(<sp/>args.witness,<sp/>args.bps<sp/>);</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"></highlight></codeline>
<codeline lineno="4959"><highlight class="normal"></highlight></codeline>
<codeline lineno="4964"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::ghostedDataUpdate(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="4965"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>dataSize<sp/>=<sp/>data.remainingLength();</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>propertyIndex;</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>propertyIndex;</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"></highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDescription<sp/>*<sp/>pDescription<sp/>=<sp/></highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().property(<sp/>propertyIndex<sp/>);</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pDescription<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"></highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityType_-&gt;isDelegatedProperty(<sp/>pDescription<sp/>))</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Handle<sp/>component<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::ghostedDataUpdate:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>handle<sp/>component<sp/>update\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pOldValue<sp/>=<sp/>ScriptObject::none();</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptList<sp/>pChangePath<sp/>=<sp/>ScriptList();</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSlice<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"></highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>propertyOwner_.setPropertyFromInternalStream(<sp/>data,</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pOldValue,<sp/>&amp;pChangePath,</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;localIndex(),</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;isSlice<sp/>);</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;stats().countReceived(<sp/>dataSize<sp/>);</highlight></codeline>
<codeline lineno="4995"><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::ghostedDataUpdate:<sp/>Failed<sp/>for<sp/>%s.%s<sp/>id<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;name().c_str(),</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;callSetterCallback(</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>),</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOldValue,<sp/>pChangePath,<sp/>isSlice<sp/>);</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight></codeline>
<codeline lineno="5016"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::aoiUpdateSchemeChange(</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::aoiUpdateSchemeChangeArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="5018"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/>aoiUpdateSchemeID_<sp/>=<sp/>args.scheme;</highlight></codeline>
<codeline lineno="5020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"></highlight></codeline>
<codeline lineno="5022"><highlight class="normal"></highlight></codeline>
<codeline lineno="5027"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::delControlledBy(</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::delControlledByArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="5029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"></highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_)</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;delControlledBy(<sp/>args.deadController<sp/>);</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"></highlight></codeline>
<codeline lineno="5043"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::forwardedBaseEntityPacket(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5044"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>srcAddr;</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>srcAddr;</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().networkInterface().processPacketFromStream(<sp/>srcAddr,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="5048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"></highlight></codeline>
<codeline lineno="5050"><highlight class="normal"></highlight></codeline>
<codeline lineno="5055"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::onBaseOffloaded(</highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::onBaseOffloadedArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="5057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>REAL_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pReal_<sp/>);</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAddr_<sp/>=<sp/>args.newBaseAddr;</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"></highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_-&gt;channel().setAddress(<sp/>baseAddr_<sp/>);</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"></highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity(<sp/>%s<sp/>%u<sp/>)::onBaseOffloaded:<sp/>Now<sp/>on<sp/>baseapp<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;name(),<sp/>id_,<sp/>baseAddr_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"></highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(RealEntity::Haunts::iterator<sp/>iter<sp/>=<sp/>pReal_-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>pReal_-&gt;hauntsEnd();</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::onBaseOffloadedForGhostArgs::start(</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;bundle(),<sp/>this-&gt;id()<sp/>).newBaseAddr<sp/>=<sp/>baseAddr_;</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"></highlight></codeline>
<codeline lineno="5083"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::onBaseOffloadedForGhost(</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::onBaseOffloadedForGhostArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="5085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>GHOST_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!pReal_<sp/>);</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"></highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAddr_<sp/>=<sp/>args.newBaseAddr;</highlight></codeline>
<codeline lineno="5090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"></highlight></codeline>
<codeline lineno="5092"><highlight class="normal"></highlight></codeline>
<codeline lineno="5097"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::teleport(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::teleportArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="5098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pReal_<sp/>);</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pThis<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/>pThis-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onTeleport&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onTeleport();</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_)</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;teleport(<sp/>args.dstMailBoxRef<sp/>);</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::teleport(<sp/>%u<sp/>):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>longer<sp/>real<sp/>after<sp/>onTeleport<sp/>callback\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"></highlight></codeline>
<codeline lineno="5123"><highlight class="normal"></highlight></codeline>
<codeline lineno="5127"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::onTeleportSuccess(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pNearbyEntity<sp/>)</highlight></codeline>
<codeline lineno="5128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pThis<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"></highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>s_pRealEntityArg<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/>s_pRealEntityArg<sp/>=<sp/>pNearbyEntity;</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onTeleportSuccess&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,<sp/>pNearbyEntity<sp/>?<sp/>pNearbyEntity<sp/>:<sp/>Py_None<sp/>),</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onTeleportSuccess:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef<sp/>embr;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"></highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pNearbyEntity)</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>PyEntityMailBox::reduceToRef(<sp/>pNearbyEntity,<sp/>&amp;embr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>embr.init();</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"></highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onTeleportSuccess(<sp/>embr<sp/>);</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/><sp/>s_pRealEntityArg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"></highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroyed<sp/>by<sp/>onTeleportSuccess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pThis-&gt;isReal())</highlight></codeline>
<codeline lineno="5160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"></highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pThis-&gt;position()<sp/>==<sp/>INVALID_POSITION)</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pNearbyEntity<sp/>);</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::onTeleportSuccess(<sp/>%u<sp/>):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>position<sp/>was<sp/>not<sp/>set<sp/>in<sp/>onTeleportSuccess.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Setting<sp/>to<sp/>position<sp/>of<sp/>nearby<sp/>entity<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pNearbyEntity-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setGlobalPosition(<sp/>pNearbyEntity-&gt;position()<sp/>);</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"></highlight></codeline>
<codeline lineno="5176"><highlight class="normal"></highlight></codeline>
<codeline lineno="5185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::addDetailedPositionToHistory(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLocalOnly<sp/>)</highlight></codeline>
<codeline lineno="5186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isLocalOnly<sp/>||<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryOStream<sp/>stream;</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>localPosition_<sp/>&lt;&lt;<sp/>localDirection_;</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"></highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::InterfaceElement<sp/>&amp;<sp/>ie<sp/>=</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientInterface::detailedPosition;</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgStreamSize<sp/>=<sp/>ie.streamSize();</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"></highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLocalOnly)</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addHistoryEventLocally(<sp/>ie.id(),<sp/>stream,</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;detailedPositionDescription(),<sp/>msgStreamSize<sp/>);</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;addHistoryEvent(<sp/>ie.id(),<sp/>stream,</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;detailedPositionDescription(),<sp/>msgStreamSize<sp/>);</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"></highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>tell<sp/>ownClient<sp/>directly<sp/>if<sp/>it<sp/>isn&apos;t<sp/>controlling<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pReal_<sp/>!=<sp/>NULL)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pReal_-&gt;pWitness()<sp/>!=<sp/>NULL)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pReal_-&gt;controlledByRef().id<sp/>!=<sp/>id_))</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pWitness()-&gt;sendToClient(<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>ie.id(),<sp/>stream,</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgStreamSize<sp/>);</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pWitness()-&gt;onSendReliablePosition(<sp/>localPosition_,</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localDirection_<sp/>);</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"></highlight></codeline>
<codeline lineno="5221"><highlight class="normal"></highlight></codeline>
<codeline lineno="5227"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::witnessed()</highlight></codeline>
<codeline lineno="5228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"></highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periodsWithoutWitness_<sp/>==<sp/>NOT_WITNESSED_THRESHOLD)</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>Py_True<sp/>);</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ok<sp/>script<sp/>thought<sp/>we<sp/>were<sp/>unwitnessed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onWitnessed&quot;</highlight><highlight class="normal">,<sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,<sp/>Py_True<sp/>),</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onWitnessed(True)<sp/>callback:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"></highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onWitnessed(<sp/></highlight><highlight class="comment">/*isWitnessed*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"></highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/>periodsWithoutWitness_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"></highlight></codeline>
<codeline lineno="5254"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::checkGhostWitnessed()</highlight></codeline>
<codeline lineno="5255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/>periodsWithoutWitness_<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="5258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"></highlight></codeline>
<codeline lineno="5260"><highlight class="normal"></highlight></codeline>
<codeline lineno="5265"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::runScriptMethod(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>methodID;</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>methodID;</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"></highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;runMethodHelper(<sp/>data,<sp/>methodID,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>header.replyID,<sp/>&amp;srcAddr<sp/>);</highlight></codeline>
<codeline lineno="5273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::callBaseMethod(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>methodIndex;</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>methodIndex;</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"></highlight></codeline>
<codeline lineno="5284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseAddr_.ip<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClusterID<sp/>clusterID<sp/>=<sp/>CellApp::instance().clusterID();</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"></highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyEntityMailBox<sp/>*<sp/>pBaseEntityMailBox<sp/>=</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_base_entity_mail_box" kindref="compound">BaseEntityMailBox</ref>(<sp/>pEntityType_,<sp/>clusterID,<sp/>baseAddr_,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBaseEntityMailBox<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::callBaseMethod(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>create<sp/>a<sp/>base<sp/>entity<sp/>mailbox.\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"></highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>*<sp/>pDescription<sp/>=</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().base().internalMethod(<sp/>methodIndex<sp/>);</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"></highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryOStream<sp/>*<sp/>pBOS<sp/>=<sp/>pBaseEntityMailBox-&gt;getStream(</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pDescription<sp/>);</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBOS<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::callBaseMethod(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>stream<sp/>on<sp/>base<sp/>method<sp/>%s.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pDescription-&gt;name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pBaseEntityMailBox<sp/>);</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;stats().countSentToBase(<sp/>data.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBOS-&gt;transfer(<sp/>data,<sp/>data.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBaseEntityMailBox-&gt;sendStream();</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>pBaseEntityMailBox<sp/>);</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::callBaseMethod(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>base<sp/>address<sp/>set.\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"></highlight></codeline>
<codeline lineno="5331"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::callClientMethod(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>entityID;</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>callingMode;</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>methodIndex;</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"></highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>entityID;</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>callingMode;</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>methodIndex;</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"></highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>*<sp/>pDescription<sp/>=</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().client().internalMethod(<sp/>methodIndex<sp/>);</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOStream<sp/>stream;</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream.transfer(<sp/>data,<sp/>data.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"></highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sendToClient(<sp/>entityID,<sp/>*pDescription,<sp/>stream,</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>callingMode<sp/>&amp;<sp/>MSG_FOR_OWN_CLIENT<sp/>)<sp/>!=<sp/>0,</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>callingMode<sp/>&amp;<sp/>MSG_FOR_OTHER_CLIENTS<sp/>)<sp/>!=<sp/>0,</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>callingMode<sp/>&amp;<sp/>MSG_FOR_REPLAY<sp/>)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::callClientMethod(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>client<sp/>method<sp/>index<sp/>%hu<sp/>for<sp/>type<sp/>%s.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>methodIndex,<sp/>this-&gt;pType()-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"></highlight></codeline>
<codeline lineno="5367"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::recordClientMethod(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>methodIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>methodIndex;</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"></highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>*<sp/>pDescription<sp/>=<sp/>pEntityType_-&gt;description().</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client().internalMethod(<sp/>methodIndex<sp/>);</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"></highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDescription)</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::recordClientMethod(<sp/>%s<sp/>%d<sp/>):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>method<sp/>with<sp/>internal<sp/>index<sp/>%hu\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pType()-&gt;name(),<sp/>id_,<sp/>methodIndex<sp/>);</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"></highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;cell().pReplayData())</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cell().pReplayData()-&gt;addEntityMethod(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*pDescription,</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>);</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"></highlight></codeline>
<codeline lineno="5396"><highlight class="normal"></highlight></codeline>
<codeline lineno="5397"><highlight class="normal"></highlight></codeline>
<codeline lineno="5402"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::recordClientProperties(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>edesc<sp/>=<sp/>pEntityType_-&gt;description();</highlight></codeline>
<codeline lineno="5405"><highlight class="normal"></highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/>exposedForReplayClientProperties_<sp/>=<sp/>ScriptDict::create();</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"></highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/>edesc.readStreamToDict(<sp/>data,<sp/>EntityDescription::BASE_DATA,</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposedForReplayClientProperties_<sp/>);</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"></highlight></codeline>
<codeline lineno="5411"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>exposedForReplayClientProperties_.size()<sp/>);</highlight></codeline>
<codeline lineno="5412"><highlight class="normal"></highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_replay_data_collector" kindref="compound">ReplayDataCollector</ref><sp/>*<sp/>pReplayData<sp/>=<sp/>this-&gt;cell().pReplayData();</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReplayData)</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReplayData-&gt;<ref refid="class_replay_data_collector_1a400962f16b7c9d3d9bddf63f330be63e" kindref="member">addEntityProperties</ref>(<sp/>*<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposedForReplayClientProperties_<sp/>);</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"></highlight></codeline>
<codeline lineno="5421"><highlight class="normal"></highlight></codeline>
<codeline lineno="5425"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::runExposedMethod(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"></highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>methodID;</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>methodID;</highlight></codeline>
<codeline lineno="5431"><highlight class="normal"></highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;runMethodHelper(<sp/>data,<sp/>methodID,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"></highlight></codeline>
<codeline lineno="5435"><highlight class="normal"></highlight></codeline>
<codeline lineno="5444"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::runMethodHelper(<sp/>BinaryIStream<sp/>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>methodID,</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExposed,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>replyID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>*<sp/>pReplyAddr<sp/>)</highlight></codeline>
<codeline lineno="5446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ProfileVal<sp/>localProfile(<sp/></highlight><highlight class="stringliteral">&quot;scriptMessage&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/>START_PROFILE(<sp/>localProfile<sp/>);</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"></highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>Entity::callbacksPermitted()<sp/>);</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"></highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>sourceID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>*<sp/>pMethodDescription<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"></highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isExposed)</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>sourceID;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"></highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ExposedMethodMessageRange<sp/>&amp;<sp/>range<sp/>=</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppExtInterface::Range::cellEntityMethodRange;</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"></highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethodDescription<sp/>=</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().cell().exposedMethodFromMsgID(<sp/>methodID,</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"></highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMethodDescription<sp/>!=<sp/>NULL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethodDescription-&gt;isExposedToOwnClientOnly())</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(id_<sp/>!=<sp/>sourceID)</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::runMethodHelper.<sp/>Blocked<sp/>method<sp/>%s<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;on<sp/>entity<sp/>%u<sp/>from<sp/>client<sp/>%u.<sp/>Method<sp/>is<sp/>exposed<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;as<sp/>OWN_CLIENT.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethodDescription<sp/>?</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethodDescription-&gt;name().c_str()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&lt;not<sp/>found&gt;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>sourceID<sp/>);</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"></highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"></highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STOP_PROFILE(<sp/>localProfile<sp/>)</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethodDescription<sp/>=</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().cell().internalMethod(<sp/>methodID<sp/>);</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"></highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMethodDescription-&gt;isExposed())</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>sourceID;</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"></highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMethodDescription<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"></highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityMethodPtr<sp/>pEntityMethod<sp/>=<sp/></highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getEntityMethod(<sp/>*pMethodDescription<sp/>);</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityMethod<sp/>);</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityMethod-&gt;call(<sp/>data,<sp/>sourceID,<sp/>replyID,<sp/>pReplyAddr,<sp/></highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CellApp::instance().networkInterface()<sp/>);</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"></highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::runMethodHelper(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Do<sp/>not<sp/>have%s<sp/>method<sp/>with<sp/>type<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isExposed<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;<sp/>exposed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methodID<sp/>);</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"></highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><sp/>STOP_PROFILE_WITH_CHECK(<sp/>localProfile<sp/>)</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;\tin<sp/>Entity::runExposedMethod(%u).<sp/>Method<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pMethodDescription<sp/>?</highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pMethodDescription-&gt;name().c_str()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&lt;not<sp/>found&gt;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"></highlight></codeline>
<codeline lineno="5529"><highlight class="normal"></highlight></codeline>
<codeline lineno="5535"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::enableWitness(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pReal_<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"></highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_-&gt;enableWitness(<sp/>data,<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="5541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"></highlight></codeline>
<codeline lineno="5543"><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::requestEntityUpdate(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pReal_<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"></highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pReal_-&gt;pWitness()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityID<sp/>id;</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>id;</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"></highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>data.remainingLength();</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"></highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pWitness()-&gt;requestEntityUpdate(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(EventNumber<sp/>*)data.retrieve(<sp/>length<sp/>),</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(EventNumber)<sp/>);</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"></highlight></codeline>
<codeline lineno="5565"><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Entity<sp/>script<sp/>related<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5569"><highlight class="normal"></highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight></codeline>
<codeline lineno="5576"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::isRealToScript()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5577"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;isReal()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!CellAppConfig::treatAllOtherEntitiesAsGhosts()<sp/>||</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s_pTreatAsReal<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s_pTreatAsReal<sp/>==<sp/>NULL)<sp/>||</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s_pRealEntityArg<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="5583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"></highlight></codeline>
<codeline lineno="5585"><highlight class="normal"></highlight></codeline>
<codeline lineno="5591"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::onOwnedPropertyChanged(<sp/>PropertyChange<sp/>&amp;<sp/>change<sp/>)</highlight></codeline>
<codeline lineno="5592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDescription<sp/>*<sp/>pDescription<sp/>=</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propIndex(<sp/>change.rootIndex()<sp/>);</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;onOwnedPropertyChanged(<sp/>pDescription,<sp/>change<sp/>);</highlight></codeline>
<codeline lineno="5596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"></highlight></codeline>
<codeline lineno="5598"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::onOwnedPropertyChanged(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDescription<sp/>*<sp/>pDescription,</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyChange<sp/>&amp;<sp/>change<sp/>)</highlight></codeline>
<codeline lineno="5600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_AttributeError,<sp/></highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>change<sp/>defined<sp/>property<sp/>%s.%s<sp/>on<sp/>ghost<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pType()-&gt;name(),<sp/>pDescription-&gt;name().c_str(),<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"></highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;cell().pReplayData())</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cell().pReplayData()-&gt;addEntityProperty(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*pDescription,</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change<sp/>);</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"></highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription-&gt;isGhostedData())</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>data<sp/>is<sp/>for<sp/>other<sp/>clients,<sp/>add<sp/>an<sp/>event<sp/>to<sp/>our<sp/>history.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription-&gt;isOtherClientData())</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription-&gt;shouldSendLatestOnly()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change.isNestedChange())</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::onOwnedPropertyChanged(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s.%s<sp/>has<sp/>SendLatestOnly<sp/>enabled<sp/>and<sp/>was<sp/>partially<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;changed.<sp/>Sending<sp/>full<sp/>property.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name(),</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY_DEV(</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyOwner_.changeOwnedProperty(</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[<sp/>pDescription-&gt;localIndex()<sp/>],</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[<sp/>pDescription-&gt;localIndex()<sp/>],</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pDescription-&gt;dataType(),</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;localIndex(),</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>forceChange:<sp/>*/</highlight><highlight class="normal"><sp/>true<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"></highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"></highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOStream<sp/>stream;</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>streamSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"></highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::MessageID<sp/>msgID<sp/>=</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addChangeToExternalStream(<sp/>change,<sp/>stream,</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pDescription,<sp/>&amp;streamSize<sp/>);</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"></highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDescription-&gt;checkForOversizeLength(<sp/>stream.size(),<sp/>id_<sp/>))</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_publicClientStats.trackEvent(<sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;name(),<sp/>stream.size(),<sp/>streamSize<sp/>);</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"></highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>history<sp/>event<sp/>for<sp/>clients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_history_event" kindref="compound">HistoryEvent</ref><sp/>*<sp/>pEvent<sp/>=</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;addHistoryEvent(<sp/>msgID,<sp/>stream,</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pDescription,<sp/>streamSize,<sp/>pDescription-&gt;detailLevel()<sp/>);</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"></highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertyEventStamps_.set(<sp/>*pDescription,<sp/>pEvent-&gt;<ref refid="class_history_event_1a196d360cb4c1f4196b379a1526a8db95" kindref="member">number</ref>()<sp/>);</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"></highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>new<sp/>data<sp/>to<sp/>all<sp/>our<sp/>ghosts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealEntity::Haunts::iterator<sp/>iter<sp/>=<sp/>pReal_-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="5665"><highlight class="normal"></highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>pReal_-&gt;hauntsEnd())</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>iter-&gt;bundle();</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ENABLE_WATCHERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldBundleSize<sp/>=<sp/>bundle.size();</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::ghostedDataUpdate<sp/>);</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"></highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>this-&gt;id();</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>int32(<sp/>pDescription-&gt;index()<sp/>);</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"></highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change.addToInternalStream(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"></highlight></codeline>
<codeline lineno="5679"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ENABLE_WATCHERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;stats().countSentToGhosts(<sp/>bundle.size()<sp/>-<sp/>oldBundleSize<sp/>);</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;stats().countSentToGhosts(<sp/>bundle.size()<sp/>-<sp/>oldBundleSize<sp/>);</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5683"><highlight class="normal"></highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"></highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>data<sp/>is<sp/>for<sp/>our<sp/>own<sp/>client,<sp/>add<sp/>it<sp/>to<sp/>our<sp/>bundle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription-&gt;isOwnClientData()<sp/>&amp;&amp;<sp/>pReal_-&gt;pWitness()<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemoryOStream<sp/>stream;</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>streamSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"></highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::MessageID<sp/>messageID<sp/>=<sp/>this-&gt;addChangeToExternalStream(<sp/>change,</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream,<sp/>*pDescription,<sp/>&amp;streamSize<sp/>);</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"></highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pDescription-&gt;checkForOversizeLength(<sp/>stream.size(),<sp/>id_<sp/>))</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"></highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_privateClientStats.trackEvent(<sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;name(),<sp/>stream.size(),<sp/>streamSize<sp/>);</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"></highlight></codeline>
<codeline lineno="5705"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ENABLE_WATCHERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;stats().countSentToOwnClient(<sp/>stream.size()<sp/>);</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;stats().countSentToOwnClient(<sp/>stream.size()<sp/>);</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pWitness()-&gt;sendToClient(<sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>messageID,<sp/>stream,</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streamSize<sp/>);</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"></highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"></highlight></codeline>
<codeline lineno="5716"><highlight class="normal"></highlight></codeline>
<codeline lineno="5720"><highlight class="normal">Mercury::MessageID<sp/>Entity::addChangeToExternalStream(</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PropertyChange<sp/>&amp;<sp/>change,<sp/>BinaryOStream<sp/>&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDescription<sp/>&amp;<sp/>dataDescription,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>pStreamSize<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5723"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ExposedPropertyMessageRange<sp/>&amp;<sp/>messageRange<sp/>=</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientInterface::Range::entityPropertyRange;</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"></highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/><sp/>int16<sp/>msgID<sp/>=<sp/>messageRange.msgIDFromExposedID(</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDescription.clientServerFullIndex()<sp/>);</highlight></codeline>
<codeline lineno="5729"><highlight class="normal"></highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((msgID<sp/>==<sp/>-1)<sp/>||<sp/>change.isNestedChange())</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::InterfaceElement<sp/>&amp;<sp/>ie<sp/>=</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change.isSlice()<sp/>?</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientInterface::sliceEntityProperty<sp/>:</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClientInterface::nestedEntityProperty;</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgID<sp/>=<sp/>ie.id();</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"></highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pStreamSize<sp/>=<sp/>ie.streamSize();</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"></highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change.addToExternalStream(<sp/>stream,</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDescription.clientServerFullIndex(),</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propCountClientServer()<sp/>);</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pStreamSize<sp/>=<sp/>dataDescription.streamSize();</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>change.addValueToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"></highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Mercury::MessageID(<sp/>msgID<sp/>);</highlight></codeline>
<codeline lineno="5752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"></highlight></codeline>
<codeline lineno="5754"><highlight class="normal"></highlight></codeline>
<codeline lineno="5759"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::getTopLevelOwner(<sp/>PropertyChange<sp/>&amp;<sp/>change,</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PropertyOwnerBase<sp/>*&amp;<sp/>rpTopLevelOwner<sp/>)</highlight></codeline>
<codeline lineno="5761"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataDescription<sp/>*<sp/>pDescription<sp/>=</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propIndex(<sp/>change.rootIndex()<sp/>);</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"></highlight></codeline>
<codeline lineno="5767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Modifying<sp/>property<sp/>%s<sp/>on<sp/>a<sp/>ghost<sp/>%s<sp/>is<sp/>not<sp/>allowed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;name().c_str(),</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pType()-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"></highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/>rpTopLevelOwner<sp/>=<sp/>&amp;propertyOwner_;</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"></highlight></codeline>
<codeline lineno="5778"><highlight class="normal"></highlight></codeline>
<codeline lineno="5784"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Entity::getNumOwnedProperties()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5785"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>pEntityType_-&gt;propCountGhostPlusReal();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>only<sp/>used<sp/>when<sp/>sending<sp/>messages<sp/>to<sp/>the<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>therefore,<sp/>we<sp/>want<sp/>to<sp/>use<sp/>its<sp/>property<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pEntityType_-&gt;propCountClientServer();</highlight></codeline>
<codeline lineno="5790"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"></highlight></codeline>
<codeline lineno="5792"><highlight class="normal"></highlight></codeline>
<codeline lineno="5796"><highlight class="normal">PropertyOwnerBase<sp/>*<sp/>Entity::getChildPropertyOwner(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5797"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(<sp/>ref<sp/>)<sp/>&gt;=<sp/>properties_.size())</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"></highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/>PropertyOwnerBase<sp/>*<sp/>pVassal<sp/>=</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;propIndex(<sp/>ref<sp/>)-&gt;dataType()-&gt;asOwner(<sp/>properties_[ref]<sp/>);</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pVassal;</highlight></codeline>
<codeline lineno="5806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"></highlight></codeline>
<codeline lineno="5808"><highlight class="normal"></highlight></codeline>
<codeline lineno="5812"><highlight class="normal">ScriptObject<sp/>Entity::setOwnedProperty(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ref,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="5813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/>DataDescription*<sp/>pDataDesc<sp/>=<sp/>pEntityType_-&gt;propIndex(<sp/>ref<sp/>);</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/>DataType<sp/>&amp;<sp/>dt<sp/>=<sp/>*pDataDesc-&gt;dataType();</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"></highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reconstruct<sp/>the<sp/>python<sp/>value<sp/>from<sp/>the<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDataSink<sp/>sink;</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dt.createFromStream(<sp/>data,<sp/>sink,<sp/></highlight><highlight class="comment">/*<sp/>isPersistentOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject();</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>pNewValue<sp/>=<sp/>sink.finalise();</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"></highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pNewValue)</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pNewValue;</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"></highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>detach<sp/>the<sp/>old<sp/>value<sp/>and<sp/>attach<sp/>the<sp/>new<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>&amp;<sp/>pSlotRef<sp/>=<sp/>properties_[ref];</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>pOldValue<sp/>=<sp/>pSlotRef;</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSlotRef<sp/>!=<sp/>pNewValue)<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hey,<sp/>it<sp/>could<sp/>happen!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt.detach(<sp/>pSlotRef<sp/>);</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSlotRef<sp/>=<sp/>dt.attach(<sp/>pNewValue,<sp/>&amp;propertyOwner_,<sp/>ref<sp/>);</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"></highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pOldValue;</highlight></codeline>
<codeline lineno="5841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"></highlight></codeline>
<codeline lineno="5843"><highlight class="normal"></highlight></codeline>
<codeline lineno="5847"><highlight class="normal">ScriptObject<sp/></highlight></codeline>
<codeline lineno="5848"><highlight class="normal">Entity::propertyByDataDescription(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataDescription<sp/>*<sp/>pDataDescr<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="5849"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pDataDescr<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"></highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityType_-&gt;isDelegatedProperty(<sp/>pDataDescr<sp/>))</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"></highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>result<sp/>=<sp/>PyDelegate::getAttribute(<sp/></highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pEntityDelegate_,</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pDataDescr<sp/>);</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"></highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::printError();</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"></highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"></highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>localIndex<sp/>=<sp/>pDataDescr-&gt;localIndex();</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uint(localIndex)<sp/>&lt;<sp/>properties_.size())</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>properties_[localIndex];</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"></highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject();</highlight></codeline>
<codeline lineno="5875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"></highlight></codeline>
<codeline lineno="5877"><highlight class="normal"></highlight></codeline>
<codeline lineno="5882"><highlight class="normal">ScriptObject<sp/>Entity::pyGetAttribute(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptString<sp/>&amp;<sp/>attrObj<sp/>)</highlight></codeline>
<codeline lineno="5883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/>PROFILER_SCOPED(<sp/>Entity_pyGetAttribute<sp/>);</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>attr<sp/>=<sp/>attrObj.c_str();</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"></highlight></codeline>
<codeline lineno="5887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isDestroyed_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp(<sp/>attr,<sp/></highlight><highlight class="stringliteral">&quot;isDestroyed&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp(<sp/>attr,<sp/></highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Entity.%s<sp/>cannot<sp/>be<sp/>accessed<sp/>since<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>entity<sp/>id<sp/>%d<sp/>is<sp/>destroyed&quot;</highlight><highlight class="normal">,<sp/>attr,<sp/>pEntityType_-&gt;name(),<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject();</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"></highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>treatAsReal<sp/>=<sp/>this-&gt;isRealToScript();</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"></highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pMethod<sp/>=</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().cell().find(<sp/>attr<sp/>);</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"></highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pMethod)</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ghost<sp/>methods<sp/>return<sp/>an<sp/>object<sp/>that<sp/>calls<sp/>the<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!treatAsReal)</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_real_caller" kindref="compound">RealCaller</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pMethod<sp/>),</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"></highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;getEntityMethod(<sp/>*pMethod<sp/>);</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"></highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>it<sp/>is<sp/>a<sp/>property<sp/>of<sp/>this<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/>DataDescription<sp/>*<sp/>pDescription<sp/>=<sp/>pEntityType_-&gt;description(<sp/>attr<sp/>);</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"></highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>!isDestroyed_<sp/>&amp;&amp;<sp/>pDescription-&gt;isCellData())</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!treatAsReal<sp/>&amp;&amp;<sp/>!pDescription-&gt;isGhostedData())</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Entity.%s<sp/>cannot<sp/>be<sp/>accessed<sp/>since<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>entity<sp/>id<sp/>%d<sp/>is<sp/>a<sp/>ghost&quot;</highlight><highlight class="normal">,<sp/>attr,<sp/>pEntityType_-&gt;name(),<sp/>id_);</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject();</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"></highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityType_-&gt;isDelegatedProperty(<sp/>pDescription<sp/>))</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyDelegate::getAttribute(<sp/>*pEntityDelegate_,<sp/>*pDescription<sp/>);</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5931"><highlight class="normal"></highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>localIndex<sp/>=<sp/>pDescription-&gt;localIndex();</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uint(localIndex)<sp/>&lt;<sp/>properties_.size())</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>properties_[localIndex];</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"></highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>a<sp/>mailbox<sp/>is<sp/>sought</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((streq(<sp/>attr,<sp/></highlight><highlight class="stringliteral">&quot;client&quot;</highlight><highlight class="normal"><sp/>)<sp/>||<sp/>streq(<sp/>attr,<sp/></highlight><highlight class="stringliteral">&quot;ownClient&quot;</highlight><highlight class="normal"><sp/>)))</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pReal_<sp/>||<sp/>pReal_-&gt;pWitness())</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_client" kindref="compound">PyClient</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_AttributeError,</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>%d<sp/>does<sp/>not<sp/>have<sp/>a<sp/>witness<sp/>and<sp/>so<sp/>no<sp/>attribute<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>attr<sp/>);</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject();</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(streq(<sp/>attr,<sp/></highlight><highlight class="stringliteral">&quot;otherClients&quot;</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_client" kindref="compound">PyClient</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(streq(<sp/>attr,<sp/></highlight><highlight class="stringliteral">&quot;allClients&quot;</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_client" kindref="compound">PyClient</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*isForOwn:*/</highlight><highlight class="normal"><sp/>!pReal_<sp/>||<sp/>pReal_-&gt;pWitness(),</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isForOthers:*/</highlight><highlight class="normal"><sp/>true<sp/>),</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"></highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(streq(<sp/>attr,<sp/></highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal"><sp/>)<sp/>&amp;&amp;<sp/>(baseAddr_.ip<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClusterID<sp/>clusterID<sp/>=<sp/>CellApp::instance().clusterID();</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_base_entity_mail_box" kindref="compound">BaseEntityMailBox</ref>(<sp/>pEntityType_,<sp/>clusterID,<sp/>baseAddr_,<sp/>id_<sp/>),</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"></highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>the<sp/>controller<sp/>constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(treatAsReal<sp/>&amp;&amp;<sp/>attr[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>attr[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>attr[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>ret<sp/>=<sp/><ref refid="class_controller_1a59b8e5ee7602267120c203e2d73a4aad" kindref="member">Controller::factory</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>attr+3<sp/>);</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="5981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject(<sp/>ret,<sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>pResult<sp/>=<sp/>PyObjectPlus::pyGetAttribute(<sp/>attrObj<sp/>);</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>a<sp/>ghost<sp/>and<sp/>a<sp/>valid<sp/>method<sp/>to<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5989"><highlight class="normal"></highlight></codeline>
<codeline lineno="5990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pResult<sp/>&amp;&amp;<sp/>!this-&gt;isRealToScript()<sp/>&amp;&amp;<sp/>PyMethod_Check(<sp/>pResult.get()<sp/>))</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isGhost<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pIsGhost<sp/>=<sp/>pResult.getAttribute(<sp/></highlight><highlight class="stringliteral">&quot;isGhost&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorClear()<sp/>);</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"></highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pIsGhost)</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isGhost<sp/>=<sp/>pIsGhost.isTrue(<sp/>ScriptErrorClear()<sp/>);</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isGhost)</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::pyGetAttribute:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Accessing<sp/>method<sp/>&apos;%s&apos;<sp/>on<sp/>ghost<sp/>entity<sp/>%d<sp/>that<sp/>is<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;decorated<sp/>with<sp/>@bwdecorators.callableOnGhost&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>id_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"></highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CellAppConfig::enforceGhostDecorators())</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_AttributeError,</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Method<sp/>&apos;%s&apos;<sp/>is<sp/>not<sp/>callable<sp/>on<sp/>ghost<sp/>entity<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>id_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScriptObject();</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"></highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pResult;</highlight></codeline>
<codeline lineno="6019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"></highlight></codeline>
<codeline lineno="6021"><highlight class="normal"></highlight></codeline>
<codeline lineno="6026"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::pySetAttribute(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptString<sp/>&amp;<sp/>attrObj,</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>&amp;<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="6028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>attr<sp/>=<sp/>attrObj.c_str();</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attr[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>set<sp/>Entity.%s<sp/>of<sp/>%s<sp/>%s<sp/>entity<sp/>id<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr,</highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;isDestroyed()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;destroyed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;ghost&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;name(),<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6041"><highlight class="normal"></highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>not<sp/>real<sp/>then<sp/>only<sp/>let<sp/>the<sp/>base<sp/>class<sp/>do<sp/>stuff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>sure<sp/>if<sp/>we<sp/>should<sp/>even<sp/>allow<sp/>this<sp/>in<sp/>fact...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(required<sp/>by<sp/>updater<sp/>to<sp/>set<sp/>__class__<sp/>on<sp/>ghosts<sp/>at<sp/>the<sp/>moment)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;PyObjectPlus::pySetAttribute(<sp/>attrObj,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"></highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>it&apos;s<sp/>one<sp/>of<sp/>the<sp/>entity&apos;s<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/><sp/><sp/>DataDescription<sp/>*<sp/>pDescription<sp/>=<sp/>pEntityType_-&gt;description(<sp/>attr<sp/>);</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"></highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityType_-&gt;isDelegatedProperty(<sp/>pDescription<sp/>))</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pEntityDelegate_<sp/>);</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyDelegate::setAttribute(<sp/>*pEntityDelegate_,<sp/>*pDescription,<sp/></highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/></highlight><highlight class="comment">/*isPersistentOnly*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6057"><highlight class="normal"></highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pDescription-&gt;isCellData())</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDescription-&gt;isIdentifier())</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOTICE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Identifier<sp/>property<sp/>%s.%s<sp/>was<sp/>changed<sp/>for<sp/>entity<sp/>%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(this<sp/>new<sp/>value<sp/>may<sp/>already<sp/>exist<sp/>in<sp/>the<sp/>database,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;causing<sp/>database<sp/>writes<sp/>to<sp/>fail<sp/>later)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;name(),<sp/>pDescription-&gt;name().c_str(),</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"></highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cellIndex<sp/>=<sp/>pDescription-&gt;localIndex();</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pOldValue<sp/>=<sp/>properties_[cellIndex];</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"></highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DataType<sp/>&amp;<sp/>dataType<sp/>=<sp/>*pDescription-&gt;dataType();</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"></highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!propertyOwner_.changeOwnedProperty(</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties_[<sp/>cellIndex<sp/>],</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>dataType,<sp/>cellIndex<sp/>))</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyErr_Occurred())</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::pySetAttribute(%d):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>set<sp/>%s.%s<sp/>to<sp/>incorrect<sp/>type<sp/>-<sp/>%s.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDescription-&gt;name().c_str(),</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.typeNameOfObject()<sp/>);</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"></highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>set<sp/>Entity.%s<sp/>of<sp/>%s<sp/>entity<sp/>%d<sp/>to<sp/>wrong<sp/>type&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attr,<sp/>pEntityType_-&gt;name(),<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"></highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StringSet&lt;ConstPolicy&gt;<sp/>&amp;<sp/>attributeSet<sp/>=</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_buildEntityDictInitTimeJob.attributeSet();</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"></highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attributeSet.find(<sp/>attr<sp/>)<sp/>==<sp/>attributeSet.end()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!pEntityType_-&gt;description().isTempProperty(<sp/>attr<sp/>))</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::pySetAttribute(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s.%s<sp/>is<sp/>not<sp/>a<sp/>def<sp/>file<sp/>property<sp/>or<sp/>temp<sp/>property.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>will<sp/>be<sp/>lost<sp/>if<sp/>offloaded\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pEntityType_-&gt;name(),<sp/>attr<sp/>);</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"></highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>let<sp/>the<sp/>base<sp/>class<sp/>have<sp/>the<sp/>scraps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;PyObjectPlus::pySetAttribute(<sp/>attrObj,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="6111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"></highlight></codeline>
<codeline lineno="6113"><highlight class="normal"></highlight></codeline>
<codeline lineno="6117"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::pyAdditionalMembers(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptList<sp/>&amp;<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6118"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pyAdditionalMembers(<sp/>pList<sp/>);</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::pyAdditionalMethods(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptList<sp/>&amp;<sp/>pList<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6129"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_controller_1a4399843065da63b4d68e76bcba1c9b33" kindref="member">Controller::factories</ref>(<sp/>pList,<sp/></highlight><highlight class="stringliteral">&quot;add&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"></highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pyAdditionalMethods(<sp/>pList<sp/>);</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"></highlight></codeline>
<codeline lineno="6138"><highlight class="normal"></highlight></codeline>
<codeline lineno="6142"><highlight class="normal">SpaceID<sp/>Entity::spaceID()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="6143"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpace_-&gt;id();</highlight></codeline>
<codeline lineno="6145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6146"><highlight class="normal"></highlight></codeline>
<codeline lineno="6147"><highlight class="normal"></highlight></codeline>
<codeline lineno="6151"><highlight class="normal">PyObject<sp/>*<sp/>Entity::pyGet_spaceID()</highlight></codeline>
<codeline lineno="6152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace_)</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>this-&gt;spaceID()<sp/>);</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>has<sp/>no<sp/>space%s.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(id_),<sp/>isDestroyed_<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>it<sp/>is<sp/>destroyed&quot;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"></highlight></codeline>
<codeline lineno="6165"><highlight class="normal"></highlight></codeline>
<codeline lineno="6169"><highlight class="normal">PyObject<sp/>*<sp/>Entity::pyGet_aoiUpdateScheme()</highlight></codeline>
<codeline lineno="6170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>name;</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"></highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_ao_i_update_schemes_1a1373215efac7915c04de1b43edbc3db0" kindref="member">AoIUpdateSchemes::getNameFromID</ref>(<sp/>aoiUpdateSchemeID_,<sp/>name<sp/>))</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>%d<sp/>has<sp/>invalid<sp/>scheme<sp/>id<sp/>(%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>aoiUpdateSchemeID_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"></highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>name<sp/>);</highlight></codeline>
<codeline lineno="6182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"></highlight></codeline>
<codeline lineno="6184"><highlight class="normal"></highlight></codeline>
<codeline lineno="6188"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Entity::pySet_aoiUpdateScheme(<sp/>PyObject<sp/>*<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="6189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>attribute<sp/>is<sp/>only<sp/>available<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"></highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>schemeName;</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"></highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/>Script::setData(<sp/>value,<sp/>schemeName,<sp/></highlight><highlight class="stringliteral">&quot;aoiUpdateScheme&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"></highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_ao_i_update_schemes_1a7f4961385e6cd44533eb19b6c6e0cfb1" kindref="member">AoIUpdateSchemes::getIDFromName</ref>(<sp/>schemeName,<sp/>aoiUpdateSchemeID_<sp/>))</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>scheme<sp/>name<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>schemeName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"></highlight></codeline>
<codeline lineno="6210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(RealEntity::Haunts::iterator<sp/>iter<sp/>=<sp/>pReal_-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>pReal_-&gt;hauntsEnd();</highlight></codeline>
<codeline lineno="6212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::aoiUpdateSchemeChangeArgs::start(</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;bundle(),<sp/>this-&gt;id()<sp/>).scheme<sp/>=<sp/>aoiUpdateSchemeID_;</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"></highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="6220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"></highlight></codeline>
<codeline lineno="6222"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"></highlight></codeline>
<codeline lineno="6224"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/script_math.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6225"><highlight class="normal"></highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="6227"><highlight class="normal"></highlight></codeline>
<codeline lineno="6235" refid="class_py_entity_vector3" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_py_entity_vector3" kindref="compound">PyEntityVector3</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>PyVectorRef&lt;<sp/>Vector3<sp/>&gt;</highlight></codeline>
<codeline lineno="6236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_py_entity_vector3" kindref="compound">PyEntityVector3</ref>(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pOwner,</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>*<sp/>pVector,</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(<ref refid="class_entity" kindref="compound">Entity</ref>::*pF)(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>)<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyVectorRef&lt;<sp/>Vector3<sp/>&gt;(<sp/>pOwner,<sp/>pVector<sp/>),</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity_(<sp/>pOwner<sp/>),</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pF_(<sp/>pF<sp/>)</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setVector(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>v<sp/>)</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntity_-&gt;isReal())<sp/></highlight><highlight class="comment">//<sp/>Includes<sp/>destroyed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can<sp/>only<sp/>move<sp/>real<sp/>entities&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"></highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pEntity_.get()-&gt;*pF_)(<sp/>v<sp/>);</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"></highlight></codeline>
<codeline lineno="6260"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pEntity_;</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(<ref refid="class_entity" kindref="compound">Entity</ref>::*pF_)(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>);</highlight></codeline>
<codeline lineno="6263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"></highlight></codeline>
<codeline lineno="6265"><highlight class="normal"></highlight></codeline>
<codeline lineno="6269"><highlight class="normal">PyObject<sp/>*<sp/>Entity::pyGet_position()</highlight></codeline>
<codeline lineno="6270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_entity_vector3" kindref="compound">PyEntityVector3</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;globalPosition_,</highlight></codeline>
<codeline lineno="6272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Entity::setGlobalPosition<sp/>);</highlight></codeline>
<codeline lineno="6273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"></highlight></codeline>
<codeline lineno="6275"><highlight class="normal"></highlight></codeline>
<codeline lineno="6279"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Entity::pySet_position(<sp/>PyObject<sp/>*<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="6280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>attribute<sp/>is<sp/>only<sp/>available<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"></highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>newPosition;</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"></highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/>Script::setData(<sp/>value,<sp/>newPosition,<sp/></highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"></highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isValidPosition(<sp/>newPosition<sp/>))</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setGlobalPosition(<sp/>newPosition<sp/>);</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>position.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"></highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="6306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"></highlight></codeline>
<codeline lineno="6308"><highlight class="normal"></highlight></codeline>
<codeline lineno="6312"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setGlobalPosition(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>newPosition<sp/>)</highlight></codeline>
<codeline lineno="6313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(globalPosition_<sp/>!=<sp/>newPosition)</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>oldPosition(<sp/>globalPosition_<sp/>);</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_<sp/>=<sp/>newPosition;</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateLocalPosition();</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateInternalsForNewPositionOfReal(<sp/>oldPosition<sp/>);</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;sendPhysicsCorrection();</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"></highlight></codeline>
<codeline lineno="6325"><highlight class="normal"></highlight></codeline>
<codeline lineno="6329"><highlight class="normal">PyObject<sp/>*<sp/>Entity::pyGet_direction()</highlight></codeline>
<codeline lineno="6330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_entity_vector3" kindref="compound">PyEntityVector3</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;<sp/>Vector3<sp/>*<sp/>&gt;(<sp/>&amp;globalDirection_<sp/>),</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Entity::setGlobalDirection<sp/>);</highlight></codeline>
<codeline lineno="6334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"></highlight></codeline>
<codeline lineno="6336"><highlight class="normal"></highlight></codeline>
<codeline lineno="6340"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Entity::pySet_direction(<sp/>PyObject<sp/>*<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="6341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>attribute<sp/>is<sp/>only<sp/>available<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"></highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>newValue;</highlight></codeline>
<codeline lineno="6350"><highlight class="normal"></highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/>Script::setData(<sp/>value,<sp/>newValue,<sp/></highlight><highlight class="stringliteral">&quot;direction&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"></highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setGlobalDirection(<sp/>Vector3(<sp/>Angle(<sp/>newValue.x<sp/>),</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Angle(<sp/>newValue.y<sp/>),<sp/>Angle(<sp/>newValue.z<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"></highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="6360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal"></highlight></codeline>
<codeline lineno="6366"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setGlobalDirection(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>newDir<sp/>)</highlight></codeline>
<codeline lineno="6367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3&amp;)globalDirection_<sp/>!=<sp/>newDir<sp/>)</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Vector3&amp;)globalDirection_<sp/>=<sp/>newDir;</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>that<sp/>all<sp/>components<sp/>are<sp/>in<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(especially<sp/>when<sp/>it&apos;s<sp/>used<sp/>by<sp/>vehicles<sp/>for<sp/>a<sp/>transform)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6374"><highlight class="normal"></highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateLocalPosition();</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateInternalsForNewPositionOfReal(<sp/>globalPosition_<sp/>);</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"></highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6380"><highlight class="normal"></highlight></codeline>
<codeline lineno="6381"><highlight class="normal"></highlight></codeline>
<codeline lineno="6386"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::isOnGround(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOnGround<sp/>)</highlight></codeline>
<codeline lineno="6387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOnGround_<sp/>!=<sp/>isOnGround)</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOnGround_<sp/>=<sp/>isOnGround;</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateInternalsForNewPositionOfReal(<sp/>globalPosition_<sp/>);</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"></highlight></codeline>
<codeline lineno="6398"><highlight class="normal">PyObject<sp/>*<sp/>Entity::pyGet_velocity()</highlight></codeline>
<codeline lineno="6399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>attribute<sp/>is<sp/>only<sp/>available<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"></highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>pReal_-&gt;velocity()<sp/>);</highlight></codeline>
<codeline lineno="6408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"></highlight></codeline>
<codeline lineno="6427"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::sendToClient(<sp/>EntityID<sp/>entityID,</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>&amp;<sp/>description,<sp/>MemoryOStream<sp/>&amp;<sp/>argStream,</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isForOwn,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isForOthers,</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExposedForReplay<sp/>)</highlight></codeline>
<codeline lineno="6431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"></highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isForOthers)</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_publicClientStats.trackEvent(<sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.name(),<sp/>argStream.size(),</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.streamSize(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"></highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;addHistoryEvent(<sp/>description.exposedMsgID(),<sp/>argStream,</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description,<sp/>description.streamSize(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>),</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.priority()<sp/>);</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"></highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isForOwn)</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_-&gt;pWitness()<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"></highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argStream.rewind();</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_privateClientStats.trackEvent(<sp/>pEntityType_-&gt;name(),</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.name(),<sp/>argStream.size(),</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.streamSize(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.stats().countSentToOwnClient(<sp/>argStream.size()<sp/>);</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;stats().countSentToOwnClient(<sp/>argStream.size()<sp/>);</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"></highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;pWitness()-&gt;sendToClient(<sp/>entityID,</highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.exposedMsgID(),<sp/>argStream,</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description.streamSize(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"></highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isExposedForReplay<sp/>&amp;&amp;<sp/>this-&gt;cell().pReplayData())</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argStream.rewind();</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cell().pReplayData()-&gt;addEntityMethod(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>description,</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argStream<sp/>);</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"></highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"></highlight></codeline>
<codeline lineno="6477"><highlight class="normal"></highlight></codeline>
<codeline lineno="6484"><highlight class="normal">PyObject<sp/>*<sp/>Entity::py_destroy(<sp/>PyObject<sp/>*<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="6485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>%d<sp/>is<sp/>already<sp/>destroyed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">())<sp/>);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"></highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>destroy<sp/>ghost<sp/>entity<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">())<sp/>);</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"></highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>in<sp/>__init__<sp/>do<sp/>not<sp/>allow<sp/>destroy<sp/>to<sp/>be<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_-&gt;removalHandle()<sp/>==<sp/>NO_ENTITY_REMOVAL_HANDLE)</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>call<sp/>Entity.destroy()<sp/>on<sp/>%d<sp/>from<sp/>inside<sp/>__init__.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Consider<sp/>using<sp/>a<sp/>timer<sp/>callback.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">())<sp/>);</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"></highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;destroy();</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"></highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_RETURN_NONE;</highlight></codeline>
<codeline lineno="6515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"></highlight></codeline>
<codeline lineno="6517"><highlight class="normal"></highlight></codeline>
<codeline lineno="6527"><highlight class="normal">PyObject<sp/>*<sp/>Entity::py_cancel(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="6528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity.cancel()<sp/>not<sp/>available<sp/>on<sp/>ghost<sp/>entities&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"></highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pControllers_-&gt;py_cancel(<sp/>args,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"></highlight></codeline>
<codeline lineno="6539"><highlight class="normal"></highlight></codeline>
<codeline lineno="6544"><highlight class="normal">PyObject<sp/>*<sp/>Entity::py_isReal(<sp/>PyObject<sp/>*<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="6545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyBool_FromLong(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="6547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"></highlight></codeline>
<codeline lineno="6554"><highlight class="normal">PyObject<sp/>*<sp/>Entity::py_isRealToScript(<sp/>PyObject<sp/>*<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="6555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PyBool_FromLong(<sp/>this-&gt;isRealToScript()<sp/>);</highlight></codeline>
<codeline lineno="6557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"></highlight></codeline>
<codeline lineno="6559"><highlight class="normal"></highlight></codeline>
<codeline lineno="6565"><highlight class="normal">PyObject<sp/>*<sp/>Entity::py_clientEntity(<sp/>PyObject<sp/>*<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="6566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity.clientEntity<sp/>not<sp/>available<sp/>on<sp/>ghost<sp/>entities&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"></highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityID<sp/>destID;</highlight></codeline>
<codeline lineno="6575"><highlight class="normal"></highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(<sp/>args,<sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">,<sp/>&amp;destID<sp/>))</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>1<sp/>integer<sp/>argument.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"></highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pDest<sp/>=<sp/>CellApp::instance().findEntity(<sp/>destID<sp/>);</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"></highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDest<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>entity<sp/>%d.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>destID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"></highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_py_client" kindref="compound">PyClient</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*pDest,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"></highlight></codeline>
<codeline lineno="6594"><highlight class="normal"></highlight></codeline>
<codeline lineno="6599"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Entity::pySet_volatileInfo(<sp/>PyObject<sp/>*<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="6600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>attribute<sp/>can<sp/>only<sp/>be<sp/>set<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6607"><highlight class="normal"></highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/>VolatileInfo<sp/>newInfo;</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal<sp/>=</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::setData(<sp/>value,<sp/>newInfo,<sp/></highlight><highlight class="stringliteral">&quot;volatileInfo&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"></highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retVal<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setVolatileInfo(<sp/>newInfo<sp/>);</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"></highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="6618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"></highlight></codeline>
<codeline lineno="6620"><highlight class="normal"></highlight></codeline>
<codeline lineno="6625"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setVolatileInfo(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VolatileInfo<sp/>&amp;<sp/>newInfo<sp/>)</highlight></codeline>
<codeline lineno="6626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal());</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isReal())</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"></highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newInfo<sp/>==<sp/>volatileInfo_)</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newInfo.isLessVolatileThan(<sp/>volatileInfo_<sp/>))</highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addDetailedPositionToHistory(<sp/></highlight><highlight class="comment">/*<sp/>isLocalOnly<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"></highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/>volatileInfo_<sp/>=<sp/>newInfo;</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"></highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntity::Haunts::iterator<sp/>iter<sp/>=<sp/>pReal_-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"></highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>pReal_-&gt;hauntsEnd())</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>iter-&gt;bundle();</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"></highlight></codeline>
<codeline lineno="6651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::ghostVolatileInfoArgs<sp/>&amp;<sp/>rGhostVolatileInfo<sp/>=</highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::ghostVolatileInfoArgs::start(<sp/>bundle,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"></highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rGhostVolatileInfo.volatileInfo<sp/>=<sp/>volatileInfo_;</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"></highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6659"><highlight class="normal"></highlight></codeline>
<codeline lineno="6660"><highlight class="normal"></highlight></codeline>
<codeline lineno="6665"><highlight class="normal">PyObject<sp/>*<sp/>Entity::pyPickleReduce()</highlight></codeline>
<codeline lineno="6666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityMailBoxRef<sp/>embr;</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/><sp/><sp/>PyEntityMailBox::reduceToRef(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;embr<sp/>);</highlight></codeline>
<codeline lineno="6669"><highlight class="normal"></highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pConsArgs<sp/>=<sp/>PyTuple_New(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/>PyTuple_SET_ITEM(<sp/>pConsArgs,<sp/>0,</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyString_FromStringAndSize(<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;embr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(embr)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"></highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pConsArgs;</highlight></codeline>
<codeline lineno="6675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"></highlight></codeline>
<codeline lineno="6677"><highlight class="normal"></highlight></codeline>
<codeline lineno="6681"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::writeToDBRequest(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="6683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;writeToDB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sendDBDataToBase(<sp/>&amp;srcAddr,<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="6686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"></highlight></codeline>
<codeline lineno="6688"><highlight class="normal"></highlight></codeline>
<codeline lineno="6696"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::writeToDB()</highlight></codeline>
<codeline lineno="6697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"></highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntityType_-&gt;description().isPersistent())</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entities<sp/>of<sp/>type<sp/>%s<sp/>cannot<sp/>be<sp/>persisted.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;See<sp/>&lt;Persistent&gt;<sp/>in<sp/>%s.def.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;name(),<sp/>pEntityType_-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"></highlight></codeline>
<codeline lineno="6709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6715"><highlight class="normal"></highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;hasBase())</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity<sp/>with<sp/>a<sp/>base.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"></highlight></codeline>
<codeline lineno="6723"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sendDBDataToBase();</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"></highlight></codeline>
<codeline lineno="6727"><highlight class="normal"></highlight></codeline>
<codeline lineno="6735"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::sendDBDataToBase(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>*<sp/>pReplyAddr,</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ReplyID<sp/>replyID<sp/>)</highlight></codeline>
<codeline lineno="6737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Move<sp/>this<sp/>to<sp/>RealEntity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;pReal()<sp/>);</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"></highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isToBaseEntity<sp/>=<sp/>!pReplyAddr<sp/>||<sp/>(*pReplyAddr<sp/>==<sp/>this-&gt;baseAddr());</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"></highlight></codeline>
<codeline lineno="6743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>sending<sp/>to<sp/>the<sp/>base<sp/>entity,<sp/>use<sp/>the<sp/>entity<sp/>channel,<sp/>otherwise<sp/>just<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>anonymous<sp/>channel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6745"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>isToBaseEntity<sp/>?</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;channel()<sp/>:<sp/>CellApp::getChannel(<sp/>*pReplyAddr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"></highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"></highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>Entity::callbacksPermitted()<sp/>);</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onWriteToDB&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"></highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="6756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onWriteToDB();</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"></highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"></highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReplyAddr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppIntInterface::writeToDB<sp/>);</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>replyID<sp/>);</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"></highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/>pReal_-&gt;writeBackupProperties(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"></highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"></highlight></codeline>
<codeline lineno="6777"><highlight class="normal"></highlight></codeline>
<codeline lineno="6781"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::sendCellEntityLostToBase()</highlight></codeline>
<codeline lineno="6782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Move<sp/>this<sp/>to<sp/>RealEntity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;pReal()<sp/>);</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"></highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>pReal_-&gt;channel()<sp/>);</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"></highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"></highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppIntInterface::cellEntityLost<sp/>);</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"></highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntityDescription<sp/>&amp;<sp/>description<sp/>=<sp/>pEntityType_-&gt;description();</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"></highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>tempDict<sp/>=<sp/>this-&gt;createDictWithProperties(<sp/></highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityDescription::CELL_DATA<sp/>);</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"></highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tempDict)</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::sendCellEntityLostToBase(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>attributes<sp/>to<sp/>dictionary\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!description.addDictionaryToStream(<sp/>tempDict,<sp/>bundle,</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityDescription::CELL_DATA<sp/>))</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::sendCellEntityLostToBase(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>dictionary<sp/>to<sp/>stream\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"></highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>this-&gt;position()<sp/>&lt;&lt;<sp/>this-&gt;direction()<sp/>&lt;&lt;<sp/>this-&gt;space().id();</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"></highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"></highlight></codeline>
<codeline lineno="6819"><highlight class="normal"></highlight></codeline>
<codeline lineno="6823"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::destroyEntity(</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppInterface::destroyEntityArgs<sp/>&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="6825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;destroy();</highlight></codeline>
<codeline lineno="6827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6828"><highlight class="normal"></highlight></codeline>
<codeline lineno="6829"><highlight class="normal"></highlight></codeline>
<codeline lineno="6830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6831"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Entity<sp/>-<sp/>range<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6832"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6833"><highlight class="normal"></highlight></codeline>
<codeline lineno="6839"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::getEntitiesInRange(<sp/><ref refid="class_entity_visitor" kindref="compound">EntityVisitor</ref><sp/>&amp;<sp/>visitor,</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,<sp/>ScriptObject<sp/>pClass,<sp/>ScriptObject<sp/>pActualPos<sp/>)</highlight></codeline>
<codeline lineno="6841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rangeSqr<sp/>=<sp/>range<sp/>*<sp/>range;</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xDist<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"></highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pClass)</highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyString_Check(<sp/>pClass.get()<sp/>))</highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>pTypeStr<sp/>=<sp/>PyString_AsString(<sp/>pClass.get()<sp/>);</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pType<sp/>=<sp/><ref refid="class_entity_type_1a2befd3d7f676fd44b4606963875fa13d" kindref="member">EntityType::getType</ref>(<sp/>pTypeStr<sp/>);</highlight></codeline>
<codeline lineno="6852"><highlight class="normal"></highlight></codeline>
<codeline lineno="6853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pType<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>entity<sp/>type&quot;</highlight><highlight class="normal">,<sp/>pTypeStr<sp/>);</highlight></codeline>
<codeline lineno="6857"><highlight class="normal"></highlight></codeline>
<codeline lineno="6858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pClass.get()<sp/>!=<sp/>Py_None)</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>None<sp/>or<sp/>a<sp/>string<sp/>argument<sp/>to<sp/>indicate<sp/>the<sp/>entity<sp/>type&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6868"><highlight class="normal"></highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector3<sp/>testPos;</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pActualPos<sp/>&amp;&amp;<sp/>(pActualPos.get()<sp/>!=<sp/>Py_None))</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Script::setData(<sp/>pActualPos.get(),<sp/>testPos,<sp/></highlight><highlight class="stringliteral">&quot;actualPosition&quot;</highlight><highlight class="normal"><sp/>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testPos<sp/>=<sp/>globalPosition_;</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"></highlight></codeline>
<codeline lineno="6882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_range_list_node" kindref="compound">RangeListNode</ref>*<sp/>pRLN<sp/>=<sp/>pRangeListNode_-&gt;nextX();</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"></highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((pRLN<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(xDist<sp/>&lt;=<sp/>range))</highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRLN-&gt;isEntity())</highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/><ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pRLN<sp/>);</highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>entityPos<sp/>=<sp/>pEntity-&gt;position();</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"></highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDist<sp/>=<sp/>entityPos.x<sp/>-<sp/>testPos.x;</highlight></codeline>
<codeline lineno="6892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType<sp/>||<sp/>(pType<sp/>==<sp/>pEntity-&gt;pType()))</highlight></codeline>
<codeline lineno="6893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ServerUtil::distSqrBetween(<sp/>testPos,<sp/>entityPos<sp/>)<sp/>&lt;=<sp/>rangeSqr)</highlight></codeline>
<codeline lineno="6895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor.visit(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRLN<sp/>=<sp/>pRLN-&gt;nextX();</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"></highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/><sp/><sp/>pRLN<sp/>=<sp/>pRangeListNode_-&gt;prevX();</highlight></codeline>
<codeline lineno="6904"><highlight class="normal"></highlight></codeline>
<codeline lineno="6905"><highlight class="normal"><sp/><sp/><sp/><sp/>xDist<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="6906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((pRLN<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(xDist<sp/>&lt;=<sp/>range))</highlight></codeline>
<codeline lineno="6907"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRLN-&gt;isEntity())</highlight></codeline>
<codeline lineno="6909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/><ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>pRLN<sp/>);</highlight></codeline>
<codeline lineno="6911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3<sp/>entityPos<sp/>=<sp/>pEntity-&gt;position();</highlight></codeline>
<codeline lineno="6912"><highlight class="normal"></highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xDist<sp/>=<sp/>testPos.x<sp/>-<sp/>entityPos.x;</highlight></codeline>
<codeline lineno="6914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pType<sp/>||<sp/>(pType<sp/>==<sp/>pEntity-&gt;pType()))</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ServerUtil::distSqrBetween(<sp/>testPos,<sp/>entityPos<sp/>)<sp/>&lt;=<sp/>rangeSqr)</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor.visit(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRLN<sp/>=<sp/>pRLN-&gt;prevX();</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"></highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6927"><highlight class="normal"></highlight></codeline>
<codeline lineno="6933"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::destroySpace()</highlight></codeline>
<codeline lineno="6934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"></highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>CellAppConfig::useDefaultSpace()<sp/>&amp;&amp;<sp/>this-&gt;space().</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;destroySpace<sp/>called<sp/>on<sp/>entity<sp/>%d<sp/>in<sp/>default<sp/>space&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(id_)<sp/>);</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;space().requestShutDown();</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"></highlight></codeline>
<codeline lineno="6947"><highlight class="normal"></highlight></codeline>
<codeline lineno="6953"><highlight class="normal">PyObject<sp/>*<sp/>Entity::entitiesInRange(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,<sp/>ScriptObject<sp/>pClass,</highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pActualPos<sp/>)</highlight></codeline>
<codeline lineno="6955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;entitiesInRange&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"></highlight></codeline>
<codeline lineno="6958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isDestroyed_)</highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;entitiesInRange<sp/>called<sp/>on<sp/>destroyed<sp/>entity<sp/>%d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(id_)<sp/>);</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"></highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LocalVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_entity_visitor" kindref="compound">EntityVisitor</ref></highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LocalVisitor()<sp/>:</highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pList_(<sp/>PyList_New(<sp/>0<sp/>),<sp/>ScriptObject::STEAL_REFERENCE<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="6970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~LocalVisitor()<sp/>{}</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"></highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>)</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyList_Append(<sp/>pList_.get(),<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"></highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>getList()</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>pList_.get()<sp/>);</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pList_.get();</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6982"><highlight class="normal"></highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pList_;</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"></highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalVisitor<sp/>visitor;</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"></highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;getEntitiesInRange(<sp/>visitor,<sp/>range,<sp/>pClass,<sp/>pActualPos<sp/>))</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"></highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.getList();</highlight></codeline>
<codeline lineno="6995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"></highlight></codeline>
<codeline lineno="6997"><highlight class="normal"></highlight></codeline>
<codeline lineno="7001"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::addTrigger(<sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>*<sp/>pTrigger<sp/>)</highlight></codeline>
<codeline lineno="7002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7003"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"></highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/>Triggers::iterator<sp/>it;</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"></highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>triggers_.begin();<sp/>it<sp/>!=<sp/>triggers_.end();<sp/>++it)</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*it)-&gt;range()<sp/>&lt;=<sp/>pTrigger-&gt;range())</highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"></highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/>triggers_.insert(<sp/>it,<sp/>pTrigger<sp/>);</highlight></codeline>
<codeline lineno="7016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"></highlight></codeline>
<codeline lineno="7018"><highlight class="normal"></highlight></codeline>
<codeline lineno="7022"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::modTrigger(<sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>*<sp/>pTrigger<sp/>)</highlight></codeline>
<codeline lineno="7023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ideally<sp/>would<sp/>do<sp/>a<sp/>bubble-sort<sp/>kind<sp/>of<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7025"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;delTrigger(<sp/>pTrigger<sp/>);</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;addTrigger(<sp/>pTrigger<sp/>);</highlight></codeline>
<codeline lineno="7027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"></highlight></codeline>
<codeline lineno="7029"><highlight class="normal"></highlight></codeline>
<codeline lineno="7033"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::delTrigger(<sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref><sp/>*<sp/>pTrigger<sp/>)</highlight></codeline>
<codeline lineno="7034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7036"><highlight class="normal"></highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/><sp/><sp/>Triggers::iterator<sp/>found<sp/>=<sp/>std::find(</highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggers_.begin(),<sp/>triggers_.end(),<sp/>pTrigger<sp/>);</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>found<sp/>!=<sp/>triggers_.end()<sp/>);</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/><sp/><sp/>triggers_.erase(<sp/>found<sp/>);</highlight></codeline>
<codeline lineno="7041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"></highlight></codeline>
<codeline lineno="7043"><highlight class="normal"></highlight></codeline>
<codeline lineno="7044"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7045"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Debugging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7046"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7047"><highlight class="normal"></highlight></codeline>
<codeline lineno="7048"><highlight class="normal"></highlight></codeline>
<codeline lineno="7049"><highlight class="normal">PyObject<sp/>*<sp/>Entity::py_debug(<sp/>PyObject<sp/>*<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="7050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRangeListNode_)</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRangeListNode_-&gt;debugRangeX();</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRangeListNode_-&gt;debugRangeZ();</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"></highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_RETURN_NONE;</highlight></codeline>
<codeline lineno="7058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7059"><highlight class="normal"></highlight></codeline>
<codeline lineno="7060"><highlight class="normal"></highlight></codeline>
<codeline lineno="7061"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::debugDump()</highlight></codeline>
<codeline lineno="7062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;\tEntity<sp/>%u.<sp/>refcnt<sp/>=<sp/>%&quot;</highlight><highlight class="normal"><sp/>PRIzd<sp/></highlight><highlight class="stringliteral">&quot;:\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>this-&gt;ob_refcnt<sp/>);</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"></highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pReal_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pReal_-&gt;debugDump();</highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"></highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;chunk<sp/>=<sp/>%s,<sp/>prev=0x%p,<sp/>this=0x%p,<sp/>next=0x%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pChunk_<sp/>?<sp/>pChunk_-&gt;identifier().c_str()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>in<sp/>Chunk&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPrevInChunk_,</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pNextInChunk_<sp/>);</highlight></codeline>
<codeline lineno="7076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7077"><highlight class="normal"></highlight></codeline>
<codeline lineno="7078"><highlight class="normal"></highlight></codeline>
<codeline lineno="7092"><highlight class="normal">ControllerID<sp/>Entity::addController(<sp/><ref refid="class_smart_pointer" kindref="compound">ControllerPtr</ref><sp/>pController,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userArg<sp/>)</highlight></codeline>
<codeline lineno="7093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"></highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ControllerID<sp/>movementID<sp/>=</highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Controller::getExclusiveID(<sp/></highlight><highlight class="stringliteral">&quot;Movement&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"></highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>not<sp/>volatile<sp/>at<sp/>any<sp/>distance,<sp/>warn<sp/>about<sp/>movement<sp/>controllers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;hasVolatilePosition()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pController-&gt;exclusiveID()<sp/>==<sp/>movementID))</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::addController(%u):<sp/>Adding<sp/>movement<sp/>controller<sp/>to<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;an<sp/>entity<sp/>without<sp/>volatile<sp/>position.<sp/>Should<sp/>%s<sp/>have<sp/>a<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;volatile<sp/>position?\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name()<sp/>);</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"></highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isDestroyed()<sp/>);</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"></highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::addController(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Adding<sp/>a<sp/>%s<sp/>(%d)<sp/>to<sp/>ghost<sp/>entity.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>pController-&gt;typeName(),<sp/>pController-&gt;type()<sp/>);</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"></highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>!this-&gt;isDestroyed()<sp/>)</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PyErr_Format(<sp/>PyExc_TypeError,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(</highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::addController(%u):<sp/>added<sp/>to<sp/>destroyed<sp/>entity:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;controllerId<sp/>=<sp/>%d<sp/>type=%s-%d,<sp/>userArg<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(pController-&gt;id()),</highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pController-&gt;typeName(),<sp/>pController-&gt;type(),<sp/>userArg<sp/>);</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"></highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pControllers_-&gt;addController(<sp/>pController,<sp/>userArg,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"></highlight></codeline>
<codeline lineno="7133"><highlight class="normal"></highlight></codeline>
<codeline lineno="7141"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::modController(<sp/><ref refid="class_smart_pointer" kindref="compound">ControllerPtr</ref><sp/>pController<sp/>)</highlight></codeline>
<codeline lineno="7142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7144"><highlight class="normal"></highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"><sp/><sp/><sp/><sp/>pControllers_-&gt;modController(<sp/>pController,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"></highlight></codeline>
<codeline lineno="7149"><highlight class="normal"></highlight></codeline>
<codeline lineno="7158"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::delController(<sp/>ControllerID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>warnOnFailure<sp/>)</highlight></codeline>
<codeline lineno="7159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7161"><highlight class="normal"></highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pControllers_-&gt;delController(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>warnOnFailure<sp/>);</highlight></codeline>
<codeline lineno="7163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"></highlight></codeline>
<codeline lineno="7165"><highlight class="normal"></highlight></codeline>
<codeline lineno="7170"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::removedFromChunk()</highlight></codeline>
<codeline lineno="7171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/>pPrevInChunk_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/>pNextInChunk_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"><sp/><sp/><sp/><sp/>pChunk_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"></highlight></codeline>
<codeline lineno="7177"><highlight class="normal"></highlight></codeline>
<codeline lineno="7181"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::outdoorPropagateNoise(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range,</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>info<sp/>)</highlight></codeline>
<codeline lineno="7184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7186"><highlight class="normal"></highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LocalVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_entity_visitor" kindref="compound">EntityVisitor</ref></highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~LocalVisitor()<sp/>{}</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>)</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entities_.push_back(<sp/>pEntity<sp/>);</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"></highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>BW::vector&lt;<sp/>EntityPtr<sp/>&gt;<sp/>Entities;</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entities<sp/>entities_;</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"></highlight></codeline>
<codeline lineno="7200"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalVisitor<sp/>visitor;</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"></highlight></codeline>
<codeline lineno="7202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;getEntitiesInRange(<sp/>visitor,<sp/>range<sp/>))</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7206"><highlight class="normal"></highlight></codeline>
<codeline lineno="7207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(LocalVisitor::Entities::iterator<sp/>iter<sp/>=<sp/>visitor.entities_.begin();</highlight></codeline>
<codeline lineno="7208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>visitor.entities_.end();</highlight></codeline>
<codeline lineno="7209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="7210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>iter-&gt;get();</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"></highlight></codeline>
<codeline lineno="7213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>(float)sqrt(ServerUtil::distSqrBetween(<sp/>this-&gt;position(),<sp/>pEntity-&gt;position()));</highlight></codeline>
<codeline lineno="7214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>range)</highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntity-&gt;heardNoise(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>range,<sp/>dist,<sp/>event,<sp/><sp/>info<sp/>);</highlight></codeline>
<codeline lineno="7217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"></highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7222"><highlight class="normal"></highlight></codeline>
<codeline lineno="7223"><highlight class="normal"></highlight></codeline>
<codeline lineno="7237"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::makeNoise(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>noiseLevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>info<sp/>)</highlight></codeline>
<codeline lineno="7238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"></highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>propagationRange<sp/>=</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noiseLevel<sp/>*<sp/>NoiseConfig::standardRange();</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pChunk_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pChunk_-&gt;isOutsideChunk())</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;outdoorPropagateNoise(<sp/>propagationRange,event,<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellChunk::instance(<sp/>*pChunk_<sp/>).propagateNoise(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagationRange,<sp/>globalPosition_,</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagationRange,<sp/>event,<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7258"><highlight class="normal"></highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"></highlight></codeline>
<codeline lineno="7268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7269"><highlight class="normal"></highlight></codeline>
<codeline lineno="7270"><highlight class="normal"></highlight></codeline>
<codeline lineno="7281"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::heardNoise(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_entity" kindref="compound">Entity</ref>*<sp/>who,</highlight></codeline>
<codeline lineno="7282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>propRange,</highlight></codeline>
<codeline lineno="7283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance,</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>info<sp/>)</highlight></codeline>
<codeline lineno="7286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7288"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/>&quot;Entity:heardNoise<sp/>Entity<sp/>%d<sp/>heard<sp/>a<sp/>noise<sp/>by<sp/>%d.<sp/>&quot;</highlight></codeline>
<codeline lineno="7289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Distance<sp/>%f,<sp/>propRange<sp/>%f,<sp/>event=%d,<sp/>info=%d\n&quot;,</highlight></codeline>
<codeline lineno="7290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id(),<sp/>who-&gt;id(),<sp/>distance,<sp/>propRange,<sp/>event,<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="7291"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7292"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>SCRIPT_CALL_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="7293"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7294"><highlight class="normal"></highlight></codeline>
<codeline lineno="7295"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onNoise&quot;</highlight><highlight class="normal">,<sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(Offii)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>who,<sp/>propRange,<sp/>distance,<sp/>event,<sp/>info<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;onNoise<sp/>callback:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7297"><highlight class="normal"></highlight></codeline>
<codeline lineno="7298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityMailBoxRef<sp/>embr;</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>PyEntityMailBox::reduceToRef(<sp/></highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;Entity*&gt;(<sp/>who<sp/>),<sp/>&amp;embr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onNoise(<sp/>embr,<sp/>propRange,<sp/>distance,<sp/>event,<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7309"><highlight class="normal"></highlight></codeline>
<codeline lineno="7310"><highlight class="normal"></highlight></codeline>
<codeline lineno="7317"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::isIndoors()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7318"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pChunk_<sp/>&amp;&amp;<sp/>!pChunk_-&gt;isOutsideChunk();</highlight></codeline>
<codeline lineno="7320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"></highlight></codeline>
<codeline lineno="7322"><highlight class="normal"></highlight></codeline>
<codeline lineno="7331"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::isOutdoors()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7332"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pChunk_<sp/>&amp;&amp;<sp/>pChunk_-&gt;isOutsideChunk();</highlight></codeline>
<codeline lineno="7334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"></highlight></codeline>
<codeline lineno="7336"><highlight class="normal"></highlight></codeline>
<codeline lineno="7345"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position3D<sp/>Entity::getGroundPosition()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7346"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pChunkSpace())<sp/>{</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;pChunkSpace()-&gt;findDropPoint(<sp/>this-&gt;position()<sp/>);</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ToDo:<sp/>change<sp/>when<sp/>findDropPoint()<sp/>is<sp/>supported<sp/>on<sp/>all<sp/>physical<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::getGroundPosition():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Physical<sp/>space<sp/>of<sp/>this<sp/>type<sp/>does<sp/>not<sp/>support<sp/>findDropPoint(),<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;returning<sp/>entity<sp/>position\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;position();</highlight></codeline>
<codeline lineno="7355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"></highlight></codeline>
<codeline lineno="7357"><highlight class="normal"></highlight></codeline>
<codeline lineno="7371"><highlight class="normal">PyObject<sp/>*<sp/>Entity::trackEntity(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entityId,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>velocity,</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>period,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userArg<sp/>)</highlight></codeline>
<codeline lineno="7373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7380"><highlight class="normal"></highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">ControllerPtr</ref><sp/>pController<sp/>=</highlight></codeline>
<codeline lineno="7382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_face_entity_controller" kindref="compound">FaceEntityController</ref>(<sp/>entityId,<sp/>velocity,<sp/>period<sp/>);</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"><sp/><sp/><sp/><sp/>ControllerID<sp/>controllerID<sp/>=<sp/>this-&gt;addController(pController,<sp/>userArg);</highlight></codeline>
<codeline lineno="7384"><highlight class="normal"></highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Script::getData(<sp/>controllerID<sp/>);</highlight></codeline>
<codeline lineno="7386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7387"><highlight class="normal"></highlight></codeline>
<codeline lineno="7388"><highlight class="normal"></highlight></codeline>
<codeline lineno="7393"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::setPortalState(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOpen,<sp/>WorldTriangle::Flags<sp/>collisionFlags<sp/>)</highlight></codeline>
<codeline lineno="7394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRealToScript())</highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_TypeError,</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>method<sp/>can<sp/>only<sp/>be<sp/>called<sp/>on<sp/>a<sp/>real<sp/>entity.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"></highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">ControllerPtr</ref><sp/>pController<sp/>=</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_portal_config_controller" kindref="compound">PortalConfigController</ref>(<sp/>isOpen,<sp/>collisionFlags<sp/>);</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;addController(<sp/>pController,<sp/>0<sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(<sp/>PyExc_ValueError,</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>add<sp/>PortalConfigController&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"></highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"></highlight></codeline>
<codeline lineno="7414"><highlight class="normal"></highlight></codeline>
<codeline lineno="7418"><highlight class="normal">PyObject<sp/>*<sp/>Entity::getDict()</highlight></codeline>
<codeline lineno="7419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>pDict<sp/>=<sp/>ScriptDict::create();</highlight></codeline>
<codeline lineno="7421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityTypePtr</ref><sp/>pType<sp/>=<sp/>this-&gt;pType();</highlight></codeline>
<codeline lineno="7422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>pType-&gt;propCountGhostPlusReal();</highlight></codeline>
<codeline lineno="7423"><highlight class="normal"></highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)</highlight></codeline>
<codeline lineno="7425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>propName<sp/>=<sp/>pType-&gt;propIndex(<sp/>i<sp/>)-&gt;name();</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"></highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Can<sp/>we<sp/>do<sp/>without<sp/>creating<sp/>a<sp/>string?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject<sp/>pValue<sp/>=<sp/>this-&gt;pyGetAttribute(<sp/></highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptString::create(<sp/>propName.c_str()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"></highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pValue)</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDict.setItem(<sp/>propName.c_str(),<sp/>pValue,</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptErrorPrint(<sp/></highlight><highlight class="stringliteral">&quot;Entity::getDict:<sp/>&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::clearError();</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"></highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDict.newRef();</highlight></codeline>
<codeline lineno="7444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"></highlight></codeline>
<codeline lineno="7446"><highlight class="normal"></highlight></codeline>
<codeline lineno="7450"><highlight class="normal">EntityExtraMembers<sp/>&amp;<sp/>Entity::s_entityExtraInfo()</highlight></codeline>
<codeline lineno="7451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>EntityExtraMembers<sp/>s_entityExtraMembers;</highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s_entityExtraMembers;</highlight></codeline>
<codeline lineno="7454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"></highlight></codeline>
<codeline lineno="7456"><highlight class="normal"></highlight></codeline>
<codeline lineno="7462"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Entity::registerEntityExtra(</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"><sp/><sp/><sp/><sp/>PyMethodDef<sp/>*<sp/>pMethods,<sp/>PyGetSetDef<sp/>*<sp/>pAttributes<sp/>)</highlight></codeline>
<codeline lineno="7464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>pMethods<sp/>and/or<sp/>pAttributes<sp/>allowed<sp/>to<sp/>be<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/>s_entityExtraInfo().push_back(<sp/><ref refid="class_entity_extra_info" kindref="compound">EntityExtraInfo</ref>(<sp/>pMethods,<sp/>pAttributes<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>s_entityExtraInfo().size()<sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="7468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"></highlight></codeline>
<codeline lineno="7470"><highlight class="normal"></highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><ref refid="class_cell" kindref="compound">Cell</ref><sp/>&amp;<sp/>Entity::cell()</highlight></codeline>
<codeline lineno="7475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace_<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace_-&gt;pCell()<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="7478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Maybe<sp/>put<sp/>this<sp/>back<sp/>in.<sp/>The<sp/>problem<sp/>with<sp/>this<sp/>is<sp/>that<sp/>it<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>an<sp/>entity<sp/>which<sp/>is<sp/>in<sp/>the<sp/>process<sp/>of<sp/>becoming<sp/>real.<sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(pSpace_-&gt;pCell());</highlight></codeline>
<codeline lineno="7483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"></highlight></codeline>
<codeline lineno="7485"><highlight class="normal"></highlight></codeline>
<codeline lineno="7489"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_cell" kindref="compound">Cell</ref><sp/>&amp;<sp/>Entity::cell()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7490"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>(pSpace_<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/>(pSpace_-&gt;pCell()<sp/>!=<sp/>NULL)<sp/>);</highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(pSpace_-&gt;pCell());</highlight></codeline>
<codeline lineno="7494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"></highlight></codeline>
<codeline lineno="7496"><highlight class="normal"></highlight></codeline>
<codeline lineno="7500"><highlight class="normal">ChunkSpace<sp/>*<sp/>Entity::pChunkSpace()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7501"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpace_-&gt;pChunkSpace()<sp/>?<sp/>pSpace_-&gt;pChunkSpace().get()<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="7503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7504"><highlight class="normal"></highlight></codeline>
<codeline lineno="7505"><highlight class="normal"></highlight></codeline>
<codeline lineno="7517"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setVehicle(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pVehicle,<sp/>SetVehicleParam<sp/>keepWho<sp/>)</highlight></codeline>
<codeline lineno="7518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle_<sp/>!=<sp/>pVehicle)</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pVehicle_<sp/>=<sp/>pVehicle;</highlight></codeline>
<codeline lineno="7522"><highlight class="normal"></highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++vehicleChangeNum_;</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"></highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepWho<sp/>==<sp/>KEEP_GLOBAL_POSITION)</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>in<sp/>the<sp/>range<sp/>list<sp/>already<sp/>then<sp/>keeping<sp/>the<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>is<sp/>a<sp/>fine<sp/>idea</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(removalHandle_<sp/>!=<sp/>NO_SPACE_REMOVAL_HANDLE)</highlight></codeline>
<codeline lineno="7530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateLocalPosition();</highlight></codeline>
<codeline lineno="7532"><highlight class="normal"></highlight></codeline>
<codeline lineno="7533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Notify<sp/>the<sp/>witness<sp/>that<sp/>the<sp/>vehicle<sp/>state<sp/>has<sp/>changed.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>necessary<sp/>to<sp/>avoid<sp/>an<sp/>issue<sp/>where<sp/>dismounting<sp/>from<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vehicle<sp/>while<sp/>being<sp/>a<sp/>server<sp/>controlled<sp/>entity<sp/>doesn&apos;t<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>setVehicle<sp/>update<sp/>to<sp/>the<sp/>client.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pReal()<sp/>&amp;&amp;<sp/>this-&gt;pReal()-&gt;pWitness())</highlight></codeline>
<codeline lineno="7538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pReal()-&gt;pWitness()-&gt;vehicleChanged();</highlight></codeline>
<codeline lineno="7540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>but<sp/>if<sp/>we&apos;re<sp/>not<sp/>in<sp/>the<sp/>list<sp/>yet<sp/>then<sp/>we<sp/>must<sp/>be<sp/>a<sp/>ghost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>has<sp/>just<sp/>been<sp/>created<sp/>-<sp/>in<sp/>which<sp/>case<sp/>our<sp/>local<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>in<sp/>fact<sp/>already<sp/>correct<sp/>but<sp/>our<sp/>global<sp/>position<sp/>is<sp/>wrong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>however<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>/<sp/>can&apos;t<sp/>call<sp/>updateGlobalPosition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>it<sp/>assumes<sp/>that<sp/>we&apos;re<sp/>in<sp/>the<sp/>range<sp/>list<sp/>...<sp/>so<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>the<sp/>necessary<sp/>calculations<sp/>right<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>.exists(<sp/>*pVehicle_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix<sp/>&amp;<sp/>m<sp/>=<sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>(<sp/>*pVehicle_<sp/>).transform();</highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_<sp/>=<sp/>m.applyPoint(<sp/>localPosition_<sp/>);</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>What<sp/>do<sp/>we<sp/>do<sp/>here?<sp/>For<sp/>now,<sp/>just<sp/>doing<sp/>yaw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalDirection_.yaw<sp/>=</highlight></codeline>
<codeline lineno="7555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Angle(<sp/>localDirection_.yaw<sp/>+<sp/>pVehicle_-&gt;direction().yaw<sp/>);</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keepWho<sp/>==<sp/>KEEP_LOCAL_POSITION)</highlight></codeline>
<codeline lineno="7559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateGlobalPosition(<sp/></highlight><highlight class="comment">/*<sp/>shouldUpdateGhosts<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isVehicleMovement<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>keepWho<sp/>&gt;=<sp/>IN_LIMBO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="7567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7568"><highlight class="normal"></highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;onPositionChanged();</highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7572"><highlight class="normal"></highlight></codeline>
<codeline lineno="7573"><highlight class="normal"></highlight></codeline>
<codeline lineno="7578"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::updateLocalPosition()</highlight></codeline>
<codeline lineno="7579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>figure<sp/>out<sp/>where<sp/>we<sp/>stand<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPosition_<sp/>=<sp/>globalPosition_;</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localDirection_<sp/>=<sp/>globalDirection_;</highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7587"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>.exists(<sp/>*pVehicle_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix<sp/>m;</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.invert(<sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>(<sp/>*pVehicle_<sp/>).transform()<sp/>);</highlight></codeline>
<codeline lineno="7591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPosition_<sp/>=<sp/>m.applyPoint(<sp/>globalPosition_<sp/>);</highlight></codeline>
<codeline lineno="7592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>What<sp/>do<sp/>we<sp/>do<sp/>here?<sp/>For<sp/>now,<sp/>just<sp/>doing<sp/>yaw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localDirection_.yaw<sp/>=</highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Angle(<sp/>globalDirection_.yaw<sp/>-<sp/>pVehicle_-&gt;direction().yaw<sp/>);</highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7596"><highlight class="normal"></highlight></codeline>
<codeline lineno="7597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>since<sp/>the<sp/>global<sp/>position<sp/>has<sp/>not<sp/>changed<sp/>this<sp/>is<sp/>all<sp/>we<sp/>have<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7599"><highlight class="normal"></highlight></codeline>
<codeline lineno="7604"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::updateGlobalPosition(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldUpdateGhosts,</highlight></codeline>
<codeline lineno="7605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isVehicleMovement<sp/>)</highlight></codeline>
<codeline lineno="7606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>oldPosition<sp/>=<sp/>globalPosition_;</highlight></codeline>
<codeline lineno="7608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInGlobalCoords<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInLimbo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"></highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>figure<sp/>out<sp/>where<sp/>we<sp/>stand<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle_<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>!PassengerExtra::isInLimbo(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="7613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_<sp/>=<sp/>localPosition_;</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalDirection_<sp/>=<sp/>localDirection_;</highlight></codeline>
<codeline lineno="7616"><highlight class="normal"></highlight></codeline>
<codeline lineno="7617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isInGlobalCoords<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVehicle_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>.exists(<sp/>*pVehicle_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix<sp/>&amp;<sp/>m<sp/>=<sp/><ref refid="class_passengers_1aa422568dea408be760e631c16401855d" kindref="member">Passengers::instance</ref>(<sp/>*pVehicle_<sp/>).transform();</highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalPosition_<sp/>=<sp/>m.applyPoint(<sp/>localPosition_<sp/>);</highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>What<sp/>do<sp/>we<sp/>do<sp/>here?<sp/>For<sp/>now,<sp/>just<sp/>doing<sp/>yaw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalDirection_.yaw<sp/>=</highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Angle(<sp/>localDirection_.yaw<sp/>+<sp/>pVehicle_-&gt;direction().yaw<sp/>);</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7629"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::updateGlobalPosition(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>updating<sp/>position<sp/>since<sp/>entity<sp/>is<sp/>in<sp/>limbo\n&quot;</highlight><highlight class="normal">,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isInLimbo<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7634"><highlight class="normal"></highlight></codeline>
<codeline lineno="7635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isInLimbo)</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>shuffle<sp/>to<sp/>reseat<sp/>ourselves<sp/>in<sp/>the<sp/>range<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isReal()<sp/>&amp;&amp;<sp/>shouldUpdateGhosts)</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateInternalsForNewPositionOfReal(<sp/>oldPosition,</highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isVehicleMovement<sp/>);</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;updateInternalsForNewPosition(<sp/>oldPosition,</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isVehicleMovement<sp/>);</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"></highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g_entityMovementCallback)</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*g_entityMovementCallback)(<sp/>oldPosition,<sp/>this<sp/>);</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7654"><highlight class="normal"></highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isInGlobalCoords;</highlight></codeline>
<codeline lineno="7656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7657"><highlight class="normal"></highlight></codeline>
<codeline lineno="7658"><highlight class="normal"></highlight></codeline>
<codeline lineno="7662"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::onVehicleMove()</highlight></codeline>
<codeline lineno="7663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pVehicle_<sp/>);</highlight></codeline>
<codeline lineno="7665"><highlight class="normal"></highlight></codeline>
<codeline lineno="7666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>global<sp/>position<sp/>because<sp/>the<sp/>vehicle<sp/>has<sp/>moved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateGlobalPosition(<sp/></highlight><highlight class="comment">/*<sp/>shouldUpdateGhosts<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>isVehicleMove<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7670"><highlight class="normal"></highlight></codeline>
<codeline lineno="7671"><highlight class="normal"></highlight></codeline>
<codeline lineno="7678"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setPositionAndDirection(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position3D<sp/>&amp;<sp/>position,</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Direction3D<sp/>&amp;<sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="7680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"></highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isReal())</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::setPositionAndDirection(%u):<sp/>I<sp/>am<sp/>a<sp/>ghost\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;isReal()<sp/>);</highlight></codeline>
<codeline lineno="7689"><highlight class="normal"></highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isValidPosition(<sp/>position<sp/>))</highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::setPositionAndDirection(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(%f,%f,%f)<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>position\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>position.x,<sp/>position.y,<sp/>position.z<sp/>);</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7697"><highlight class="normal"></highlight></codeline>
<codeline lineno="7698"><highlight class="normal"><sp/><sp/><sp/><sp/>localPosition_<sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="7699"><highlight class="normal"><sp/><sp/><sp/><sp/>localDirection_<sp/>=<sp/>direction;</highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateGlobalPosition();</highlight></codeline>
<codeline lineno="7701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"></highlight></codeline>
<codeline lineno="7703"><highlight class="normal"></highlight></codeline>
<codeline lineno="7708"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::setAndDropGlobalPositionAndDirection(</highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Position3D<sp/>&amp;<sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Direction3D<sp/>&amp;<sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="7710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>DROP_POSITION<sp/>);</highlight></codeline>
<codeline lineno="7712"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7713"><highlight class="normal"></highlight></codeline>
<codeline lineno="7714"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>pVehicle_<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::setAndDropGlobalPositionAndDirection(%u):<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>set<sp/>position<sp/>while<sp/>on<sp/>vehicle<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>pVehicle_-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"></highlight></codeline>
<codeline lineno="7722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CellAppConfig::shouldNavigationDropPosition())</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;pChunkSpace())<sp/>{</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Position3D<sp/>droppedPosition<sp/>=</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pChunkSpace()-&gt;findDropPoint(<sp/>position<sp/>);</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setPositionAndDirection(<sp/>droppedPosition,<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ToDo:<sp/>change<sp/>when<sp/>findDropPoint()<sp/>is<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//on<sp/>all<sp/>physical<sp/>space<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(</highlight></codeline>
<codeline lineno="7733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity::setAndDropGlobalPositionAndDirection():<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Physical<sp/>space<sp/>of<sp/>this<sp/>type<sp/>does<sp/>not<sp/>support<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;findDropPoint(),<sp/>using<sp/>entity<sp/>position\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setPositionAndDirection(<sp/>position,<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="7737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setPositionAndDirection(<sp/>position,<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"></highlight></codeline>
<codeline lineno="7745"><highlight class="normal"></highlight></codeline>
<codeline lineno="7749"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::shouldBufferMessagesFrom(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7750"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7751"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>addr<sp/>!=<sp/>Mercury::Address::NONE<sp/>);</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"></highlight></codeline>
<codeline lineno="7753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reals<sp/>and<sp/>zombie<sp/>ghosts<sp/>don&apos;t<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pRealChannel_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"></highlight></codeline>
<codeline lineno="7759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>set,<sp/>buffer<sp/>message<sp/>not<sp/>from<sp/>our<sp/>next<sp/>real.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextRealAddr_<sp/>!=<sp/>Mercury::Address::NONE)</highlight></codeline>
<codeline lineno="7761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nextRealAddr_<sp/>!=<sp/>addr;</highlight></codeline>
<codeline lineno="7763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7764"><highlight class="normal"></highlight></codeline>
<codeline lineno="7765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>buffer<sp/>messages<sp/>not<sp/>from<sp/>our<sp/>current<sp/>real.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7767"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;realAddr()<sp/>!=<sp/>addr;</highlight></codeline>
<codeline lineno="7769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7771"><highlight class="normal"></highlight></codeline>
<codeline lineno="7772"><highlight class="normal"></highlight></codeline>
<codeline lineno="7782"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::trimEventHistory(<sp/>GameTime<sp/></highlight><highlight class="comment">/*cleanUpTime*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="7783"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7784"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7785"><highlight class="normal"></highlight></codeline>
<codeline lineno="7786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trim<sp/>the<sp/>event<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7787"><highlight class="normal"><sp/><sp/><sp/><sp/>eventHistory_.trim();</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"></highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>real<sp/>entities<sp/>that<sp/>are<sp/>currently<sp/>considered<sp/>witnessed,<sp/>check<sp/>how<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>has<sp/>been<sp/>since<sp/>they<sp/>have<sp/>been<sp/>witnessed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isReal()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(periodsWithoutWitness_<sp/>!=<sp/>NOT_WITNESSED_THRESHOLD))</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++periodsWithoutWitness_;</highlight></codeline>
<codeline lineno="7795"><highlight class="normal"></highlight></codeline>
<codeline lineno="7796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-one<sp/>witnessed<sp/>this<sp/>real<sp/>entity<sp/>for<sp/>entire<sp/>period<sp/>from<sp/>1<sp/>to<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inform<sp/>the<sp/>ghosts<sp/>to<sp/>check<sp/>whether<sp/>they<sp/>are<sp/>being<sp/>witnessed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periodsWithoutWitness_<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(RealEntity::Haunts::iterator<sp/>iter<sp/>=<sp/>pReal_-&gt;hauntsBegin();</highlight></codeline>
<codeline lineno="7801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>pReal_-&gt;hauntsEnd();</highlight></codeline>
<codeline lineno="7802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="7803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Better<sp/>handling<sp/>of<sp/>prefixed<sp/>empty<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;bundle().startMessage(</highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppInterface::checkGhostWitnessed<sp/>);</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;bundle()<sp/>&lt;&lt;<sp/>id_;</highlight></codeline>
<codeline lineno="7808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7810"><highlight class="normal"></highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-one<sp/>witnessed<sp/>this<sp/>real<sp/>entity<sp/>for<sp/>entire<sp/>period<sp/>from<sp/>2<sp/>to<sp/>3.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>includes<sp/>witnessing<sp/>any<sp/>ghost<sp/>entities.<sp/>This<sp/>entity<sp/>should<sp/>no<sp/>longer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>considered<sp/>as<sp/>being<sp/>witnessed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periodsWithoutWitness_<sp/>==<sp/>NOT_WITNESSED_THRESHOLD)</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(<sp/>Py_False<sp/>);</highlight></codeline>
<codeline lineno="7817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;callback(<sp/></highlight><highlight class="stringliteral">&quot;onWitnessed&quot;</highlight><highlight class="normal">,<sp/>Py_BuildValue(<sp/></highlight><highlight class="stringliteral">&quot;(O)&quot;</highlight><highlight class="normal">,<sp/>Py_False<sp/>),</highlight></codeline>
<codeline lineno="7818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;onWitnessed(False)<sp/>callback:<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7819"><highlight class="normal"></highlight></codeline>
<codeline lineno="7820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>to<sp/>be<sp/>handled<sp/>in<sp/>Entity::callback<sp/>BWT-31859</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="7822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;getCellEntityDelegate())</highlight></codeline>
<codeline lineno="7823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellEntityDelegate-&gt;onWitnessed(<sp/></highlight><highlight class="comment">/*isWitnessed*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"></highlight></codeline>
<codeline lineno="7830"><highlight class="normal"></highlight></codeline>
<codeline lineno="7840"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Entity::callback(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>funcName,<sp/>PyObject<sp/>*<sp/>args,</highlight></codeline>
<codeline lineno="7841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>errorPrefix,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>okIfFnNull<sp/>)</highlight></codeline>
<codeline lineno="7842"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7843"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>SCRIPT_CALL_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="7844"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_THIS_ENTITY_PROFILE;</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"></highlight></codeline>
<codeline lineno="7846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="7847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::callback(%u):<sp/>%sto<sp/>%s<sp/>entity<sp/>%u<sp/>is<sp/>destroyed\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>(errorPrefix<sp/>!=<sp/>NULL)<sp/>?<sp/>errorPrefix<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>funcName,<sp/>id_<sp/>);</highlight></codeline>
<codeline lineno="7850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>args<sp/>);</highlight></codeline>
<codeline lineno="7851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7853"><highlight class="normal"></highlight></codeline>
<codeline lineno="7854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bufferIt<sp/>=<sp/>!(Entity::callbacksPermitted());</highlight></codeline>
<codeline lineno="7855"><highlight class="normal"></highlight></codeline>
<codeline lineno="7856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>we<sp/>are<sp/>running<sp/>in<sp/>the<sp/>context<sp/>of<sp/>another<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nominated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CellAppConfig::treatAllOtherEntitiesAsGhosts()<sp/>&amp;&amp;<sp/>this-&gt;isReal())</highlight></codeline>
<codeline lineno="7859"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_pTreatAsReal<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nominated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_pTreatAsReal<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Entity::nominateRealEntity(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nominated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bufferIt<sp/>=<sp/>true;<sp/><sp/>//<sp/>buffer<sp/>it<sp/>even<sp/>if<sp/>callbacks<sp/>not<sp/>prevented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>except<sp/>we<sp/>can&apos;t<sp/>do<sp/>that<sp/>because<sp/>there<sp/>won&apos;t<sp/>be<sp/>any<sp/>call<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>callbacksPermitted<sp/>to<sp/>execute<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Uncomment<sp/>the<sp/>line<sp/>above<sp/>we<sp/>have<sp/>a<sp/>way<sp/>around<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>problem<sp/>explained<sp/>in<sp/>the<sp/>note<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//else<sp/>already<sp/>nominated<sp/>so<sp/>follow<sp/>normal<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7877"><highlight class="normal"></highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>it<sp/>if<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>funcCallable<sp/>=<sp/>PyObject_GetAttrString(</highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>const_cast&lt;char*&gt;(<sp/>funcName<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="7881"><highlight class="normal"></highlight></codeline>
<codeline lineno="7882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(funcCallable<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7883"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!okIfFnNull)</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::callback(%u):<sp/>[%s<sp/>%u]<sp/>has<sp/>no<sp/>method<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_,<sp/>this-&gt;pType()-&gt;name(),<sp/>id_,<sp/>funcName<sp/>);</highlight></codeline>
<codeline lineno="7888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="7890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nominated)<sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_DECREF(<sp/>args<sp/>);</highlight></codeline>
<codeline lineno="7892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>okIfFnNull;</highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7894"><highlight class="normal"></highlight></codeline>
<codeline lineno="7895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bufferIt)</highlight></codeline>
<codeline lineno="7896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>Script::call(</highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcCallable,<sp/>args,<sp/>errorPrefix,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>okIfFnNull<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="7899"><highlight class="normal"></highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nominated)<sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="7901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="7902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nominated)<sp/>Entity::nominateRealEntityPop();</highlight></codeline>
<codeline lineno="7904"><highlight class="normal"></highlight></codeline>
<codeline lineno="7905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>buffer<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7906"><highlight class="normal"></highlight></codeline>
<codeline lineno="7907"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptObject<sp/>callable(</highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>funcCallable,</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="7910"><highlight class="normal"></highlight></codeline>
<codeline lineno="7911"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptArgs<sp/>arguments(</highlight></codeline>
<codeline lineno="7912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args,</highlight></codeline>
<codeline lineno="7913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptArgs::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="7914"><highlight class="normal"></highlight></codeline>
<codeline lineno="7915"><highlight class="normal"><sp/><sp/><sp/><sp/>s_callbackBuffer_.storeCallback(</highlight></codeline>
<codeline lineno="7916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>callable,<sp/>arguments,<sp/>errorPrefix<sp/>);</highlight></codeline>
<codeline lineno="7917"><highlight class="normal"></highlight></codeline>
<codeline lineno="7918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assume<sp/>it&apos;s<sp/>not<sp/>going<sp/>to<sp/>fail<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7921"><highlight class="normal"></highlight></codeline>
<codeline lineno="7922"><highlight class="normal"></highlight></codeline>
<codeline lineno="7927"><highlight class="normal">ScriptDict<sp/>Entity::createDictWithProperties(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataDomains<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7928"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7929"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>result<sp/>=<sp/>createDictWithAllProperties(<sp/></highlight></codeline>
<codeline lineno="7930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description(),</highlight></codeline>
<codeline lineno="7931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>const_cast&lt;Entity<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="7932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>),</highlight></codeline>
<codeline lineno="7933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityDelegate_.get(),</highlight></codeline>
<codeline lineno="7934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDomains,</highlight></codeline>
<codeline lineno="7935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;getDelegatedProperties()<sp/>);</highlight></codeline>
<codeline lineno="7936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="7937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::createDictWithProperties:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>add<sp/>properties,<sp/>entity<sp/>description<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="7941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7944"><highlight class="normal"></highlight></codeline>
<codeline lineno="7945"><highlight class="normal"></highlight></codeline>
<codeline lineno="7950"><highlight class="normal">ScriptDict<sp/>Entity::createDictWithComponentProperties(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataDomains<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7951"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7952"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>result<sp/>=<sp/>createDictWithAllProperties(<sp/></highlight></codeline>
<codeline lineno="7953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description(),</highlight></codeline>
<codeline lineno="7954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(),</highlight></codeline>
<codeline lineno="7955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityDelegate_.get(),</highlight></codeline>
<codeline lineno="7956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDomains,</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;getDelegatedProperties()<sp/>);</highlight></codeline>
<codeline lineno="7958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="7959"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::createDictWithComponentProperties:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>add<sp/>component<sp/>properties,<sp/>entity<sp/>description<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="7963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7966"><highlight class="normal"></highlight></codeline>
<codeline lineno="7967"><highlight class="normal"></highlight></codeline>
<codeline lineno="7972"><highlight class="normal">ScriptDict<sp/>Entity::createDictWithLocalProperties(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataDomains<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="7973"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7974"><highlight class="normal"><sp/><sp/><sp/><sp/>ScriptDict<sp/>result<sp/>=<sp/>createDictWithAllProperties(<sp/></highlight></codeline>
<codeline lineno="7975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description(),</highlight></codeline>
<codeline lineno="7976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject(<sp/>const_cast&lt;Entity<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="7977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_BORROWED_REFERENCE<sp/>),</highlight></codeline>
<codeline lineno="7978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="7979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDomains,</highlight></codeline>
<codeline lineno="7980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;getDelegatedProperties()<sp/>);</highlight></codeline>
<codeline lineno="7981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="7982"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::createDictWithLocalProperties:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>add<sp/>local<sp/>properties,<sp/>entity<sp/>description<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="7985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityType_-&gt;description().name().c_str()<sp/>);</highlight></codeline>
<codeline lineno="7986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="7988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7989"><highlight class="normal"></highlight></codeline>
<codeline lineno="7990"><highlight class="normal"></highlight></codeline>
<codeline lineno="7995"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>permitted<sp/>)</highlight></codeline>
<codeline lineno="7996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(permitted)</highlight></codeline>
<codeline lineno="7998"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_callbackBuffer_.leaveBufferedSection();</highlight></codeline>
<codeline lineno="8000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8002"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_callbackBuffer_.enterBufferedSection();</highlight></codeline>
<codeline lineno="8004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8006"><highlight class="normal"></highlight></codeline>
<codeline lineno="8007"><highlight class="normal"></highlight></codeline>
<codeline lineno="8009"><highlight class="normal"><ref refid="class_entity_callback_buffer" kindref="compound">EntityCallbackBuffer</ref><sp/>Entity::s_callbackBuffer_;</highlight></codeline>
<codeline lineno="8010"><highlight class="normal"></highlight></codeline>
<codeline lineno="8011"><highlight class="normal"></highlight></codeline>
<codeline lineno="8012"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BW::vector&lt;<sp/>EntityPtr<sp/>&gt;<sp/>s_nominatedEntities;</highlight></codeline>
<codeline lineno="8013"><highlight class="normal"></highlight></codeline>
<codeline lineno="8019"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::nominateRealEntity(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>e<sp/>)</highlight></codeline>
<codeline lineno="8020"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CellAppConfig::treatAllOtherEntitiesAsGhosts())</highlight></codeline>
<codeline lineno="8022"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8025"><highlight class="normal"></highlight></codeline>
<codeline lineno="8026"><highlight class="normal"><sp/><sp/><sp/><sp/>s_nominatedEntities.push_back(<sp/>&amp;e<sp/>);</highlight></codeline>
<codeline lineno="8027"><highlight class="normal"><sp/><sp/><sp/><sp/>s_pTreatAsReal<sp/>=<sp/>&amp;e;</highlight></codeline>
<codeline lineno="8028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8029"><highlight class="normal"></highlight></codeline>
<codeline lineno="8034"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Entity::nominateRealEntityPop()</highlight></codeline>
<codeline lineno="8035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CellAppConfig::treatAllOtherEntitiesAsGhosts())</highlight></codeline>
<codeline lineno="8037"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8040"><highlight class="normal"></highlight></codeline>
<codeline lineno="8041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_nominatedEntities.empty())</highlight></codeline>
<codeline lineno="8042"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRITICAL_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Entity::nominateRealEntityPop:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempt<sp/>to<sp/>pop<sp/>from<sp/>empty<sp/>stack\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="8045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="8046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8047"><highlight class="normal"></highlight></codeline>
<codeline lineno="8048"><highlight class="normal"><sp/><sp/><sp/><sp/>s_nominatedEntities.pop_back();</highlight></codeline>
<codeline lineno="8049"><highlight class="normal"></highlight></codeline>
<codeline lineno="8050"><highlight class="normal"><sp/><sp/><sp/><sp/>s_pTreatAsReal<sp/>=<sp/>s_nominatedEntities.empty()<sp/>?</highlight></codeline>
<codeline lineno="8051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL<sp/>:<sp/>s_nominatedEntities.back().get();</highlight></codeline>
<codeline lineno="8052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8053"><highlight class="normal"></highlight></codeline>
<codeline lineno="8054"><highlight class="normal"></highlight></codeline>
<codeline lineno="8062"><highlight class="comment">//<sp/>float<sp/>Entity::s_maxPhysicsNetworkJitter_<sp/>=<sp/>0.2f;<sp/>//<sp/>200ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8063"><highlight class="normal"></highlight></codeline>
<codeline lineno="8064"><highlight class="normal">CustomPhysicsValidator<sp/>g_customPhysicsValidator<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="8065"><highlight class="normal"></highlight></codeline>
<codeline lineno="8066"><highlight class="normal"></highlight></codeline>
<codeline lineno="8070"><highlight class="normal">EntityMethodPtr<sp/>Entity::getEntityMethod(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MethodDescription<sp/>&amp;<sp/>descr<sp/>)</highlight></codeline>
<codeline lineno="8071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calling<sp/>parent&apos;s<sp/>pyGetAttribute<sp/>because<sp/>ours<sp/>would<sp/>return<sp/>EntityMethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>cause<sp/>infinite<sp/>recursion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ScriptObject<sp/>scriptFunc<sp/>=<sp/></highlight></codeline>
<codeline lineno="8075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;PyObjectPlus::pyGetAttribute(<sp/>ScriptString::create(<sp/>descr.name()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="8076"><highlight class="normal"></highlight></codeline>
<codeline lineno="8077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scriptFunc)</highlight></codeline>
<codeline lineno="8078"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Script::clearError();</highlight></codeline>
<codeline lineno="8080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8081"><highlight class="normal"></highlight></codeline>
<codeline lineno="8082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EntityMethodPtr(</highlight></codeline>
<codeline lineno="8083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EntityMethod(<sp/>scriptFunc,<sp/>pEntityDelegate_,<sp/>descr<sp/>),</highlight></codeline>
<codeline lineno="8084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScriptObject::FROM_NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="8085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8086"><highlight class="normal"></highlight></codeline>
<codeline lineno="8090"><highlight class="normal">BW::ICellEntityDelegate<sp/>*<sp/>Entity::getCellEntityDelegate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="8091"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntityDelegate_)</highlight></codeline>
<codeline lineno="8093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ICellEntityDelegate<sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pCellEntityDelegate<sp/>=<sp/></highlight></codeline>
<codeline lineno="8095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntityDelegate_-&gt;GetCellEntityDelegate();</highlight></codeline>
<codeline lineno="8096"><highlight class="normal"></highlight></codeline>
<codeline lineno="8097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pCellEntityDelegate<sp/>);</highlight></codeline>
<codeline lineno="8098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCellEntityDelegate;</highlight></codeline>
<codeline lineno="8099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8100"><highlight class="normal"></highlight></codeline>
<codeline lineno="8101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="8102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8103"><highlight class="normal"></highlight></codeline>
<codeline lineno="8104"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="8105"><highlight class="normal"></highlight></codeline>
<codeline lineno="8106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>entity.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellapp/entity.cpp"/>
  </compounddef>
</doxygen>
