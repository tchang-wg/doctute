<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_connection_wrapper" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ConnectionWrapper</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ReferenceCount</basecompoundref>
    <derivedcompoundref refid="class_self_reply_wrapper" prot="public" virt="non-virtual">SelfReplyWrapper</derivedcompoundref>
    <derivedcompoundref refid="class_t_c_p_connection_wrapper" prot="public" virt="non-virtual">TCPConnectionWrapper</derivedcompoundref>
    <derivedcompoundref refid="class_u_d_p_connection_wrapper" prot="public" virt="non-virtual">UDPConnectionWrapper</derivedcompoundref>
    <includes refid="connection__wrapper_8hpp" local="no">connection_wrapper.hpp</includes>
    <innerclass refid="class_connection_wrapper_1_1_read_handler" prot="public">ConnectionWrapper::ReadHandler</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502" prot="public" static="no">
        <name>ReceiveStatus</name>
        <enumvalue id="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a46d6c7a5dca63e4d20531b6ff0c297d9" prot="public">
          <name>RECEIVE_FAILURE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a5c5c0e1eed380ddab0ee5987c2de71ea" prot="public">
          <name>RECEIVE_DATA_ERROR</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502aaaacb0831ad832ab2a4638585c5b2c0c" prot="public">
          <name>RECEIVE_IN_PROGRESS</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a4b108c3950121b1cc0b5d73c63d235cd" prot="public">
          <name>RECEIVE_SUCCESS</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="34" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506" prot="public" static="no">
        <name>SendStatus</name>
        <enumvalue id="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506ae7f522af6f42ac55d54f8f56d86f9d17" prot="public">
          <name>SEND_FAILURE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506a50a0aca7b72d6d728b9b3244e3c3d8a8" prot="public">
          <name>SEND_IN_PROGRESS</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506a5b98951c666199ac68cae12b7bdc8c1c" prot="public">
          <name>SEND_SUCCESS</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="42" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="class_connection_wrapper_1a0f18ea193128c62ec31a9776840bf8e9" prot="public" static="no">
        <name>@10</name>
        <enumvalue id="class_connection_wrapper_1a0f18ea193128c62ec31a9776840bf8e9a2ed04db7bb71e673d0be238c2865cb61" prot="public">
          <name>MAX_BUFFER_SIZE</name>
          <initializer>= 32678</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="50" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_connection_wrapper_1aa0aaf803a6acc8cf31aee2ba7f773525" prot="protected" static="no" mutable="no">
        <type><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ReadHandler</ref> *</type>
        <definition>ReadHandler* ConnectionWrapper::pReadHandler_</definition>
        <argsstring></argsstring>
        <name>pReadHandler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="127" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_connection_wrapper_1a81e87269c2f2d69a48cc9ffc4d771a07" prot="protected" static="no" mutable="no">
        <type>u_int32_t</type>
        <definition>u_int32_t ConnectionWrapper::networkAddr_</definition>
        <argsstring></argsstring>
        <name>networkAddr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="128" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_connection_wrapper_1a21bba3bb96b40ccd97e4beee8ca4d9ea" prot="protected" static="no" mutable="no">
        <type>u_int16_t</type>
        <definition>u_int16_t ConnectionWrapper::networkPort_</definition>
        <argsstring></argsstring>
        <name>networkPort_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="129" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_connection_wrapper_1a148b9a810bad2b953b18a26a460fb5c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConnectionWrapper::ConnectionWrapper</definition>
        <argsstring>(ReadHandler *pReadHandler)</argsstring>
        <name>ConnectionWrapper</name>
        <param>
          <type><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ReadHandler</ref> *</type>
          <declname>pReadHandler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pReadHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ReadHandler</ref> for notifying when a frame has been fully received. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="60" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1ab3834408026d5b58f72b33e60b69dd04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConnectionWrapper::ConnectionWrapper</definition>
        <argsstring>(ReadHandler *pReadHandler, u_int32_t networkAddr, u_int16_t networkPort)</argsstring>
        <name>ConnectionWrapper</name>
        <param>
          <type><ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ReadHandler</ref> *</type>
          <declname>pReadHandler</declname>
        </param>
        <param>
          <type>u_int32_t</type>
          <declname>networkAddr</declname>
        </param>
        <param>
          <type>u_int16_t</type>
          <declname>networkPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pReadHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="class_connection_wrapper_1_1_read_handler" kindref="compound">ReadHandler</ref> for notifying when a frame has been fully received. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="74" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1ae516e3e8d68202075cb99e2d363da95f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ConnectionWrapper::getSocketAddress</definition>
        <argsstring>(sockaddr_in &amp;sin)</argsstring>
        <name>getSocketAddress</name>
        <param>
          <type>sockaddr_in &amp;</type>
          <declname>sin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Populate the given socket address object with details of the host that this wrapper is communicating with.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sin</parametername>
</parameternamelist>
<parameterdescription>
<para>The socket address object to update </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="89" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="89" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1ae0d99af2aa3eb5329c0a24db14e4b035" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u_int32_t</type>
        <definition>u_int32_t ConnectionWrapper::networkAddr</definition>
        <argsstring>() const </argsstring>
        <name>networkAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="97" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1a0d25df1d2592cb158de6b0a1ad8653c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>u_int16_t</type>
        <definition>u_int16_t ConnectionWrapper::networkPort</definition>
        <argsstring>() const </argsstring>
        <name>networkPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="98" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1acc58a5b99dea29164f25ec7d81c190f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>ReceiveStatus</type>
        <definition>virtual ReceiveStatus ConnectionWrapper::recv</definition>
        <argsstring>()=0</argsstring>
        <name>recv</name>
        <reimplementedby refid="class_t_c_p_connection_wrapper_1acad76e9c23f2c1bb0f35286be8e441ab">recv</reimplementedby>
        <reimplementedby refid="class_u_d_p_connection_wrapper_1a2eaf8407dba0ef0a394ff11be07dbc15">recv</reimplementedby>
        <reimplementedby refid="class_self_reply_wrapper_1a4244892b7d8fad5a5a790ccd82142671">recv</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the actual work of receiving data from the socket.</para><para><simplesect kind="return"><para>ConnectionWrapper::ReceiveStatus </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1ab1981d0dc34fe0008a06f9367d72d5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>SendStatus</type>
        <definition>virtual SendStatus ConnectionWrapper::send</definition>
        <argsstring>(BinaryIStream &amp;input)=0</argsstring>
        <name>send</name>
        <reimplementedby refid="class_t_c_p_connection_wrapper_1a5972acfc9a3c2e1cdf5c7b179a98335a">send</reimplementedby>
        <reimplementedby refid="class_u_d_p_connection_wrapper_1ae70e3b1cd4441febc6c94fdd8c976144">send</reimplementedby>
        <reimplementedby refid="class_self_reply_wrapper_1af8ed259093dc94a398fc734d5bd5dc80">send</reimplementedby>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes or buffers the given input data to send to the connection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input data stream.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if queued or sent, otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1ac687550868ca61c0017f24cbbb6dd435" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool ConnectionWrapper::allowOversizedPackets</definition>
        <argsstring>() const  =0</argsstring>
        <name>allowOversizedPackets</name>
        <reimplementedby refid="class_t_c_p_connection_wrapper_1a6a8d758167ba6b222733041d696cfb6a">allowOversizedPackets</reimplementedby>
        <reimplementedby refid="class_u_d_p_connection_wrapper_1a1ad329462cdf64e2db357ce77ac00e60">allowOversizedPackets</reimplementedby>
        <reimplementedby refid="class_self_reply_wrapper_1a8934adb8fa95a1c64806a2865f586073">allowOversizedPackets</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the socket type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_connection_wrapper_1af2d8fd83bce3b1099d378be9acca50b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int ConnectionWrapper::sendfd</definition>
        <argsstring>() const  =0</argsstring>
        <name>sendfd</name>
        <reimplementedby refid="class_t_c_p_connection_wrapper_1aacd9c1486e0142de79893edcaaa1da14">sendfd</reimplementedby>
        <reimplementedby refid="class_u_d_p_connection_wrapper_1aa9bdb4bc328f9981897cbd067715691d">sendfd</reimplementedby>
        <reimplementedby refid="class_self_reply_wrapper_1aeb5fec50450ac2975718fdf1ea43b6d6">sendfd</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the file descriptor of the endpoint that is used for sending </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/connection_wrapper.hpp" line="124" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_connection_wrapper" kindref="compound">ConnectionWrapper</ref> is a transport-agnostic abstract interface providing a method of receiving and sending messages received via endpoints registered with a <ref refid="class_connection_wrapper_mgr" kindref="compound">ConnectionWrapperMgr</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="822">
        <label>UDPConnectionWrapper</label>
        <link refid="class_u_d_p_connection_wrapper"/>
        <childnode refid="818" relation="public-inheritance">
        </childnode>
      </node>
      <node id="819">
        <label>ReferenceCount</label>
      </node>
      <node id="820">
        <label>SelfReplyWrapper</label>
        <link refid="class_self_reply_wrapper"/>
        <childnode refid="818" relation="public-inheritance">
        </childnode>
      </node>
      <node id="818">
        <label>ConnectionWrapper</label>
        <link refid="class_connection_wrapper"/>
        <childnode refid="819" relation="public-inheritance">
        </childnode>
      </node>
      <node id="821">
        <label>TCPConnectionWrapper</label>
        <link refid="class_t_c_p_connection_wrapper"/>
        <childnode refid="818" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="825">
        <label>ConnectionWrapper::ReadHandler</label>
        <link refid="class_connection_wrapper_1_1_read_handler"/>
      </node>
      <node id="824">
        <label>ReferenceCount</label>
      </node>
      <node id="823">
        <label>ConnectionWrapper</label>
        <link refid="class_connection_wrapper"/>
        <childnode refid="824" relation="public-inheritance">
        </childnode>
        <childnode refid="825" relation="usage">
          <edgelabel>pReadHandler_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tools/bwmachined/connection_wrapper.hpp" line="21" column="1" bodyfile="tools/bwmachined/connection_wrapper.hpp" bodystart="20" bodyend="130"/>
    <listofallmembers>
      <member refid="class_connection_wrapper_1ac687550868ca61c0017f24cbbb6dd435" prot="public" virt="pure-virtual"><scope>ConnectionWrapper</scope><name>allowOversizedPackets</name></member>
      <member refid="class_connection_wrapper_1a148b9a810bad2b953b18a26a460fb5c6" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>ConnectionWrapper</name></member>
      <member refid="class_connection_wrapper_1ab3834408026d5b58f72b33e60b69dd04" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>ConnectionWrapper</name></member>
      <member refid="class_connection_wrapper_1ae516e3e8d68202075cb99e2d363da95f" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>getSocketAddress</name></member>
      <member refid="class_connection_wrapper_1a0f18ea193128c62ec31a9776840bf8e9a2ed04db7bb71e673d0be238c2865cb61" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>MAX_BUFFER_SIZE</name></member>
      <member refid="class_connection_wrapper_1ae0d99af2aa3eb5329c0a24db14e4b035" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>networkAddr</name></member>
      <member refid="class_connection_wrapper_1a81e87269c2f2d69a48cc9ffc4d771a07" prot="protected" virt="non-virtual"><scope>ConnectionWrapper</scope><name>networkAddr_</name></member>
      <member refid="class_connection_wrapper_1a0d25df1d2592cb158de6b0a1ad8653c5" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>networkPort</name></member>
      <member refid="class_connection_wrapper_1a21bba3bb96b40ccd97e4beee8ca4d9ea" prot="protected" virt="non-virtual"><scope>ConnectionWrapper</scope><name>networkPort_</name></member>
      <member refid="class_connection_wrapper_1aa0aaf803a6acc8cf31aee2ba7f773525" prot="protected" virt="non-virtual"><scope>ConnectionWrapper</scope><name>pReadHandler_</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a5c5c0e1eed380ddab0ee5987c2de71ea" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>RECEIVE_DATA_ERROR</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a46d6c7a5dca63e4d20531b6ff0c297d9" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>RECEIVE_FAILURE</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502aaaacb0831ad832ab2a4638585c5b2c0c" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>RECEIVE_IN_PROGRESS</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502a4b108c3950121b1cc0b5d73c63d235cd" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>RECEIVE_SUCCESS</name></member>
      <member refid="class_connection_wrapper_1ae00ad8699a9af54be4959386dd931502" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>ReceiveStatus</name></member>
      <member refid="class_connection_wrapper_1acc58a5b99dea29164f25ec7d81c190f9" prot="public" virt="pure-virtual"><scope>ConnectionWrapper</scope><name>recv</name></member>
      <member refid="class_connection_wrapper_1ab1981d0dc34fe0008a06f9367d72d5d2" prot="public" virt="pure-virtual"><scope>ConnectionWrapper</scope><name>send</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506ae7f522af6f42ac55d54f8f56d86f9d17" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>SEND_FAILURE</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506a50a0aca7b72d6d728b9b3244e3c3d8a8" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>SEND_IN_PROGRESS</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506a5b98951c666199ac68cae12b7bdc8c1c" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>SEND_SUCCESS</name></member>
      <member refid="class_connection_wrapper_1af2d8fd83bce3b1099d378be9acca50b9" prot="public" virt="pure-virtual"><scope>ConnectionWrapper</scope><name>sendfd</name></member>
      <member refid="class_connection_wrapper_1a6ae5b42c2f528732378b4e6bd58b8506" prot="public" virt="non-virtual"><scope>ConnectionWrapper</scope><name>SendStatus</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
