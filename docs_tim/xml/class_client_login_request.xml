<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_client_login_request" kind="class" language="C++" prot="public">
    <compoundname>ClientLoginRequest</compoundname>
    <includes refid="client__login__request_8hpp" local="no">client_login_request.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_client_login_request_1a746d02ca3c6c717899102657f0aace90" prot="private" static="no" mutable="no">
        <type>uint64</type>
        <definition>uint64 ClientLoginRequest::creationTime_</definition>
        <argsstring></argsstring>
        <name>creationTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="70" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_client_login_request_1ae90b790db368a55dae38b77dfc4565a6" prot="private" static="no" mutable="no">
        <type>ServerLogOnParamsPtr</type>
        <definition>ServerLogOnParamsPtr ClientLoginRequest::pParams_</definition>
        <argsstring></argsstring>
        <name>pParams_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="71" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_client_login_request_1a29409151930327405658156632c732e4" prot="private" static="no" mutable="no">
        <type>Mercury::Channel *</type>
        <definition>Mercury::Channel* ClientLoginRequest::pChannel_</definition>
        <argsstring></argsstring>
        <name>pChannel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="72" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_client_login_request_1ab784ec762e67547a3463fe26215a103a" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string ClientLoginRequest::challengeType_</definition>
        <argsstring></argsstring>
        <name>challengeType_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="73" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_client_login_request_1a9ef50a85877751a9991acc38054ebb3f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ClientLoginRequest::didFailChallenge_</definition>
        <argsstring></argsstring>
        <name>didFailChallenge_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="74" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_client_login_request_1a2eb0bb2b597032ff15e7de588f9e8c42" prot="private" static="no" mutable="no">
        <type><ref refid="class_smart_pointer" kindref="compound">LoginChallengePtr</ref></type>
        <definition>LoginChallengePtr ClientLoginRequest::pLoginChallenge_</definition>
        <argsstring></argsstring>
        <name>pLoginChallenge_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="75" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_client_login_request_1a79a23941adb4313485db8c557c20bade" prot="private" static="no" mutable="no">
        <type>LoginReplyRecord</type>
        <definition>LoginReplyRecord ClientLoginRequest::replyRecord_</definition>
        <argsstring></argsstring>
        <name>replyRecord_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="76" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_client_login_request_1a09dd8ddd9d34765ab76799d36f9af00b" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string ClientLoginRequest::serverMsg_</definition>
        <argsstring></argsstring>
        <name>serverMsg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="77" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_client_login_request_1ae335937d25d46bd3264f30e4e0aaa091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE ClientLoginRequest::ClientLoginRequest</definition>
        <argsstring>()</argsstring>
        <name>ClientLoginRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="31" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="16" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a957e6ea2f3c0956d00a3b946c88d1b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ClientLoginRequest::~ClientLoginRequest</definition>
        <argsstring>()</argsstring>
        <name>~ClientLoginRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="32" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1ab026dbf0f3d3b42f828b06062d540edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::setLoginChallenge</definition>
        <argsstring>(const BW::string &amp;challengeType, LoginChallengePtr pLoginChallenge)</argsstring>
        <name>setLoginChallenge</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>challengeType</declname>
        </param>
        <param>
          <type><ref refid="class_smart_pointer" kindref="compound">LoginChallengePtr</ref></type>
          <declname>pLoginChallenge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the login challenge issued for this client. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="34" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="39" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a62be6a7c6cba368491e4d9f9262743ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; ClientLoginRequest::challengeType</definition>
        <argsstring>() const </argsstring>
        <name>challengeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="36" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a802716e38876f2e0e94b8b42cd1ec354" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>LoginChallenge *</type>
        <definition>LoginChallenge* ClientLoginRequest::pLoginChallenge</definition>
        <argsstring>()</argsstring>
        <name>pLoginChallenge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="37" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1adb4e59942bf16cf6ba8acdb680cd5209" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ClientLoginRequest::didFailChallenge</definition>
        <argsstring>() const </argsstring>
        <name>didFailChallenge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="39" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a244fab0f248ad1c52729bf0305d7f84d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::didFailChallenge</definition>
        <argsstring>(bool value)</argsstring>
        <name>didFailChallenge</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="40" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a03e5065b304d7456aad4b1a9d4f7c151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::clearChallenge</definition>
        <argsstring>()</argsstring>
        <name>clearChallenge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method clears the challenge for this login request. This is usually because it was completed and verified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="42" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a4ee5d10eaaec17cc89e0edc76ec6d646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::setData</definition>
        <argsstring>(const LoginReplyRecord &amp;record, const BW::string &amp;serverMsg)</argsstring>
        <name>setData</name>
        <param>
          <type>const LoginReplyRecord &amp;</type>
          <declname>record</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>serverMsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the data of this cached object, and is called when the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> replies. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="45" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a11b7c98090b397c968f1eb1e1b753b91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ClientLoginRequest::isTooOld</definition>
        <argsstring>() const </argsstring>
        <name>isTooOld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether or not this cache is too old to use. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="48" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a3bd39e043370f03577d4f7da39288f8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ClientLoginRequest::hasPendingChallenge</definition>
        <argsstring>() const </argsstring>
        <name>hasPendingChallenge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="50" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a20a95e74058568f720784e082d92eb17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ClientLoginRequest::isPendingAuthentication</definition>
        <argsstring>() const </argsstring>
        <name>isPendingAuthentication</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns true if this login is pending, i.e. we are waiting on the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> to tell us whether or not the login is successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="51" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a43fb5842980b4dd44a36e44fd360dc94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::pParams</definition>
        <argsstring>(ServerLogOnParamsPtr pParams)</argsstring>
        <name>pParams</name>
        <param>
          <type>ServerLogOnParamsPtr</type>
          <declname>pParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="53" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1ad254640b1e45b9ac85957b2517cc7160" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ServerLogOnParamsPtr</type>
        <definition>ServerLogOnParamsPtr ClientLoginRequest::pParams</definition>
        <argsstring>() const </argsstring>
        <name>pParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="54" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1acb8f90765a477d4dbf5a43f55c08ebcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::writeLoginChallengeToStream</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>writeLoginChallengeToStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the login challenge for this request to the given stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="56" column="1" bodyfile="loginapp/client_login_request.cpp" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1afc6b5fc4725d6e0a04f8ba95e5ef8609" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::writeSuccessResultToStream</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>writeSuccessResultToStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="58" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1acba78f3d3b4fe57d4c0800b282f7323a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mercury::Channel *</type>
        <definition>Mercury::Channel* ClientLoginRequest::pChannel</definition>
        <argsstring>()</argsstring>
        <name>pChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="62" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1aca783408ca2b0d0376d57f5953e6d4a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::pChannel</definition>
        <argsstring>(Mercury::Channel *pChannel)</argsstring>
        <name>pChannel</name>
        <param>
          <type>Mercury::Channel *</type>
          <declname>pChannel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="63" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_client_login_request_1a208aac53d8b5dbcdfd8d5a366db524a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ClientLoginRequest::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method re-initialises the cache object to indicate that it is pending. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="loginapp/client_login_request.hpp" line="67" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class holds state about a client login request. </para>    </detaileddescription>
    <location file="loginapp/client_login_request.hpp" line="29" column="1" bodyfile="loginapp/client_login_request.hpp" bodystart="28" bodyend="78"/>
    <listofallmembers>
      <member refid="class_client_login_request_1a62be6a7c6cba368491e4d9f9262743ba" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>challengeType</name></member>
      <member refid="class_client_login_request_1ab784ec762e67547a3463fe26215a103a" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>challengeType_</name></member>
      <member refid="class_client_login_request_1a03e5065b304d7456aad4b1a9d4f7c151" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>clearChallenge</name></member>
      <member refid="class_client_login_request_1ae335937d25d46bd3264f30e4e0aaa091" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>ClientLoginRequest</name></member>
      <member refid="class_client_login_request_1a746d02ca3c6c717899102657f0aace90" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>creationTime_</name></member>
      <member refid="class_client_login_request_1adb4e59942bf16cf6ba8acdb680cd5209" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>didFailChallenge</name></member>
      <member refid="class_client_login_request_1a244fab0f248ad1c52729bf0305d7f84d" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>didFailChallenge</name></member>
      <member refid="class_client_login_request_1a9ef50a85877751a9991acc38054ebb3f" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>didFailChallenge_</name></member>
      <member refid="class_client_login_request_1a3bd39e043370f03577d4f7da39288f8d" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>hasPendingChallenge</name></member>
      <member refid="class_client_login_request_1a20a95e74058568f720784e082d92eb17" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>isPendingAuthentication</name></member>
      <member refid="class_client_login_request_1a11b7c98090b397c968f1eb1e1b753b91" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>isTooOld</name></member>
      <member refid="class_client_login_request_1acba78f3d3b4fe57d4c0800b282f7323a" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pChannel</name></member>
      <member refid="class_client_login_request_1aca783408ca2b0d0376d57f5953e6d4a2" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pChannel</name></member>
      <member refid="class_client_login_request_1a29409151930327405658156632c732e4" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pChannel_</name></member>
      <member refid="class_client_login_request_1a802716e38876f2e0e94b8b42cd1ec354" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pLoginChallenge</name></member>
      <member refid="class_client_login_request_1a2eb0bb2b597032ff15e7de588f9e8c42" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pLoginChallenge_</name></member>
      <member refid="class_client_login_request_1a43fb5842980b4dd44a36e44fd360dc94" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pParams</name></member>
      <member refid="class_client_login_request_1ad254640b1e45b9ac85957b2517cc7160" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pParams</name></member>
      <member refid="class_client_login_request_1ae90b790db368a55dae38b77dfc4565a6" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>pParams_</name></member>
      <member refid="class_client_login_request_1a79a23941adb4313485db8c557c20bade" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>replyRecord_</name></member>
      <member refid="class_client_login_request_1a208aac53d8b5dbcdfd8d5a366db524a1" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>reset</name></member>
      <member refid="class_client_login_request_1a09dd8ddd9d34765ab76799d36f9af00b" prot="private" virt="non-virtual"><scope>ClientLoginRequest</scope><name>serverMsg_</name></member>
      <member refid="class_client_login_request_1a4ee5d10eaaec17cc89e0edc76ec6d646" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>setData</name></member>
      <member refid="class_client_login_request_1ab026dbf0f3d3b42f828b06062d540edd" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>setLoginChallenge</name></member>
      <member refid="class_client_login_request_1acb8f90765a477d4dbf5a43f55c08ebcc" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>writeLoginChallengeToStream</name></member>
      <member refid="class_client_login_request_1afc6b5fc4725d6e0a04f8ba95e5ef8609" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>writeSuccessResultToStream</name></member>
      <member refid="class_client_login_request_1a957e6ea2f3c0956d00a3b946c88d1b22" prot="public" virt="non-virtual"><scope>ClientLoginRequest</scope><name>~ClientLoginRequest</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
