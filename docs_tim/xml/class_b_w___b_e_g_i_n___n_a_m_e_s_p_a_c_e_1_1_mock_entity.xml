<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity" kind="class" language="C++" prot="public">
    <compoundname>BW_BEGIN_NAMESPACE::MockEntity</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a9ff4dda8c009045aa244ec055f587633" prot="private" static="no" mutable="no">
        <type>EntityID</type>
        <definition>EntityID BW_BEGIN_NAMESPACE::MockEntity::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="68" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1aea587a4d14fc676343e3943fdee01581" prot="private" static="no" mutable="no">
        <type>Mercury::Address</type>
        <definition>Mercury::Address BW_BEGIN_NAMESPACE::MockEntity::realAddr_</definition>
        <argsstring></argsstring>
        <name>realAddr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="69" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a60c3f7413f90dc55eed5da472ce8681b" prot="private" static="no" mutable="no">
        <type>Mercury::Address</type>
        <definition>Mercury::Address BW_BEGIN_NAMESPACE::MockEntity::nextRealAddr_</definition>
        <argsstring></argsstring>
        <name>nextRealAddr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="70" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a732584bf697fc42844eb15b035b46736" prot="private" static="no" mutable="no">
        <type>SeqNum</type>
        <definition>SeqNum BW_BEGIN_NAMESPACE::MockEntity::seqNum_</definition>
        <argsstring></argsstring>
        <name>seqNum_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="71" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1afe8618a76f88812f97e33c48f7e6c8ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE::MockEntity::MockEntity</definition>
        <argsstring>(EntityID id, const Mercury::Address &amp;realAddr, SeqNum seqNum)</argsstring>
        <name>MockEntity</name>
        <param>
          <type>EntityID</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>realAddr</declname>
        </param>
        <param>
          <type>SeqNum</type>
          <declname>seqNum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="33" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a5d8e7c8d32b42262dcbe48fbf142ffc2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SeqNum</type>
        <definition>SeqNum BW_BEGIN_NAMESPACE::MockEntity::seqNum</definition>
        <argsstring>() const </argsstring>
        <name>seqNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="43" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a9e4d2da4d11bf97c7e6935adb40bfff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::MockEntity::seqNum</definition>
        <argsstring>(SeqNum num)</argsstring>
        <name>seqNum</name>
        <param>
          <type>SeqNum</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="44" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a5275d9c9560d46622bca65a709c878d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Mercury::Address &amp;</type>
        <definition>const Mercury::Address&amp; BW_BEGIN_NAMESPACE::MockEntity::realAddr</definition>
        <argsstring>() const </argsstring>
        <name>realAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="46" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a85a61e224c7ea14b31236e6f523d4642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::MockEntity::ghostSetReal</definition>
        <argsstring>(const Mercury::Address &amp;addr, SeqNum seqNum, TestApp &amp;app)</argsstring>
        <name>ghostSetReal</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>SeqNum</type>
          <declname>seqNum</declname>
        </param>
        <param>
          <type><ref refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_app" kindref="compound">TestApp</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method hanndles ghostSetReal messages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="48" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="656" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a79470b67993c509b9e0d0ba1bd2a9d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BW_BEGIN_NAMESPACE::MockEntity::ghostSetNextReal</definition>
        <argsstring>(const Mercury::Address &amp;addr, TestApp &amp;app)</argsstring>
        <name>ghostSetNextReal</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_test_app" kindref="compound">TestApp</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method hanndles ghostSetNextReal messages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="51" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="677" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1ae5de8e2eb5a5e6d38fbc22dc36a2b243" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Mercury::Address &amp;</type>
        <definition>const Mercury::Address&amp; BW_BEGIN_NAMESPACE::MockEntity::addrForMessagesFromReal</definition>
        <argsstring>() const </argsstring>
        <name>addrForMessagesFromReal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns where to expect the next message from the real entity to come from. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="57" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="57" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is a fake <ref refid="class_entity" kindref="compound">Entity</ref> class. </para>    </detaileddescription>
    <location file="cellapp/unit_test/test_buffered_ghost_messages.cpp" line="31" column="1" bodyfile="cellapp/unit_test/test_buffered_ghost_messages.cpp" bodystart="30" bodyend="72"/>
    <listofallmembers>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1ae5de8e2eb5a5e6d38fbc22dc36a2b243" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>addrForMessagesFromReal</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a79470b67993c509b9e0d0ba1bd2a9d8c" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>ghostSetNextReal</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a85a61e224c7ea14b31236e6f523d4642" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>ghostSetReal</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a9ff4dda8c009045aa244ec055f587633" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>id_</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1afe8618a76f88812f97e33c48f7e6c8ca" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>MockEntity</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a60c3f7413f90dc55eed5da472ce8681b" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>nextRealAddr_</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a5275d9c9560d46622bca65a709c878d7" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>realAddr</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1aea587a4d14fc676343e3943fdee01581" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>realAddr_</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a5d8e7c8d32b42262dcbe48fbf142ffc2" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>seqNum</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a9e4d2da4d11bf97c7e6935adb40bfff5" prot="public" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>seqNum</name></member>
      <member refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_mock_entity_1a732584bf697fc42844eb15b035b46736" prot="private" virt="non-virtual"><scope>BW_BEGIN_NAMESPACE::MockEntity</scope><name>seqNum_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
