<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cellappmgr_8cpp" kind="file" language="C++">
    <compoundname>cellappmgr.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="cellappmgr_8hpp" local="yes">cellappmgr.hpp</includes>
    <includes refid="gr_2cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <includes refid="cellappmgr__config_8hpp" local="yes">cellappmgr_config.hpp</includes>
    <includes refid="cellappmgr__viewer__server_8hpp" local="yes">cellappmgr_viewer_server.hpp</includes>
    <includes refid="cell__app__death__handler_8hpp" local="yes">cell_app_death_handler.hpp</includes>
    <includes refid="cell__app__groups_8hpp" local="yes">cell_app_groups.hpp</includes>
    <includes refid="cell__app__load__config_8hpp" local="yes">cell_app_load_config.hpp</includes>
    <includes refid="cellappmgr_2login__conditions__config_8hpp" local="yes">login_conditions_config.hpp</includes>
    <includes refid="shutdown__handler_8hpp" local="yes">shutdown_handler.hpp</includes>
    <includes refid="gr_2space_8hpp" local="yes">space.hpp</includes>
    <includes refid="watcher__forwarding__cellapp_8hpp" local="yes">watcher_forwarding_cellapp.hpp</includes>
    <includes refid="space__data__type_8hpp" local="yes">space_data_type.hpp</includes>
    <includes refid="baseappmgr__interface_8hpp" local="yes">baseappmgr/baseappmgr_interface.hpp</includes>
    <includes refid="reviver__interface_8hpp" local="yes">reviver/reviver_interface.hpp</includes>
    <includes refid="cellapp__interface_8hpp" local="yes">cellapp/cellapp_interface.hpp</includes>
    <includes local="yes">cstdmf/debug.hpp</includes>
    <includes local="yes">cstdmf/watcher.hpp</includes>
    <includes local="yes">db/dbapp_interface.hpp</includes>
    <includes local="yes">db/dbappmgr_interface.hpp</includes>
    <includes local="yes">network/bundle.hpp</includes>
    <includes local="yes">network/channel_sender.hpp</includes>
    <includes local="yes">network/endpoint.hpp</includes>
    <includes local="yes">network/event_dispatcher.hpp</includes>
    <includes local="yes">network/machine_guard.hpp</includes>
    <includes local="yes">network/machined_utils.hpp</includes>
    <includes local="yes">network/network_interface.hpp</includes>
    <includes local="yes">network/nub_exception.hpp</includes>
    <includes local="yes">network/portmap.hpp</includes>
    <includes local="yes">network/watcher_nub.hpp</includes>
    <includes local="yes">network/smart_bundles.hpp</includes>
    <includes local="yes">server/bwconfig.hpp</includes>
    <includes local="yes">server/cell_app_init_data.hpp</includes>
    <includes local="yes">server/reviver_subject.hpp</includes>
    <includes local="yes">server/shared_data_type.hpp</includes>
    <includes local="yes">server/real_entity_stream_helper.hpp</includes>
    <includes local="yes">server/time_keeper.hpp</includes>
    <includes local="yes">server/util.hpp</includes>
    <includes local="yes">entitydef/constants.hpp</includes>
    <includes local="yes">pyscript/py_traceback.hpp</includes>
    <includes local="yes">pyscript/py_import_paths.hpp</includes>
    <includes local="yes">resmgr/bwresource.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">functional</includes>
    <includes local="no">time.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes refid="cellappmgr_8ipp" local="yes">cellappmgr.ipp</includes>
    <incdepgraph>
      <node id="13465">
        <label>baseappmgr/baseappmgr_interface.hpp</label>
        <link refid="baseappmgr__interface_8hpp_source"/>
        <childnode refid="13429" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
        <childnode refid="13466" relation="include">
        </childnode>
        <childnode refid="13413" relation="include">
        </childnode>
        <childnode refid="13415" relation="include">
        </childnode>
        <childnode refid="13414" relation="include">
        </childnode>
        <childnode refid="13416" relation="include">
        </childnode>
      </node>
      <node id="13459">
        <label>space_data_type.hpp</label>
        <link refid="space__data__type_8hpp_source"/>
        <childnode refid="13460" relation="include">
        </childnode>
        <childnode refid="13430" relation="include">
        </childnode>
        <childnode refid="13461" relation="include">
        </childnode>
        <childnode refid="13462" relation="include">
        </childnode>
        <childnode refid="13463" relation="include">
        </childnode>
        <childnode refid="13464" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
      </node>
      <node id="13493">
        <label>pyscript/py_traceback.hpp</label>
      </node>
      <node id="13489">
        <label>server/real_entity_stream_helper.hpp</label>
      </node>
      <node id="13475">
        <label>db/dbappmgr_interface.hpp</label>
      </node>
      <node id="13444">
        <label>cellapp.hpp</label>
        <link refid="gr_2cellapp_8hpp_source"/>
        <childnode refid="13434" relation="include">
        </childnode>
        <childnode refid="13410" relation="include">
        </childnode>
        <childnode refid="13440" relation="include">
        </childnode>
      </node>
      <node id="13497">
        <label>functional</label>
      </node>
      <node id="13486">
        <label>server/bwconfig.hpp</label>
      </node>
      <node id="13458">
        <label>server/watcher_forwarding.hpp</label>
      </node>
      <node id="13439">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="13449">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="13434">
        <label>cells.hpp</label>
        <link refid="gr_2cells_8hpp_source"/>
        <childnode refid="13423" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
        <childnode refid="13420" relation="include">
        </childnode>
      </node>
      <node id="13424">
        <label>float.h</label>
      </node>
      <node id="13426">
        <label>cellapps.hpp</label>
        <link refid="cellapps_8hpp_source"/>
        <childnode refid="13423" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
        <childnode refid="13415" relation="include">
        </childnode>
        <childnode refid="13427" relation="include">
        </childnode>
        <childnode refid="13428" relation="include">
        </childnode>
        <childnode refid="13433" relation="include">
        </childnode>
        <childnode refid="13438" relation="include">
        </childnode>
        <childnode refid="13435" relation="include">
        </childnode>
      </node>
      <node id="13441">
        <label>server/manager_app.hpp</label>
      </node>
      <node id="13471">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="13473">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="13408">
        <label>script/first_include.hpp</label>
      </node>
      <node id="13409">
        <label>cellappmgr.hpp</label>
        <link refid="cellappmgr_8hpp_source"/>
        <childnode refid="13410" relation="include">
        </childnode>
        <childnode refid="13417" relation="include">
        </childnode>
        <childnode refid="13426" relation="include">
        </childnode>
        <childnode refid="13420" relation="include">
        </childnode>
        <childnode refid="13435" relation="include">
        </childnode>
        <childnode refid="13439" relation="include">
        </childnode>
        <childnode refid="13411" relation="include">
        </childnode>
        <childnode refid="13440" relation="include">
        </childnode>
        <childnode refid="13415" relation="include">
        </childnode>
        <childnode refid="13441" relation="include">
        </childnode>
        <childnode refid="13442" relation="include">
        </childnode>
        <childnode refid="13443" relation="include">
        </childnode>
      </node>
      <node id="13482">
        <label>network/nub_exception.hpp</label>
      </node>
      <node id="13468">
        <label>network/interface_macros.hpp</label>
      </node>
      <node id="13446">
        <label>network/endpoint.hpp</label>
      </node>
      <node id="13469">
        <label>server/reviver_common.hpp</label>
      </node>
      <node id="13476">
        <label>network/bundle.hpp</label>
      </node>
      <node id="13445">
        <label>cellappmgr_viewer_server.hpp</label>
        <link refid="cellappmgr__viewer__server_8hpp_source"/>
        <childnode refid="13421" relation="include">
        </childnode>
        <childnode refid="13446" relation="include">
        </childnode>
        <childnode refid="13447" relation="include">
        </childnode>
      </node>
      <node id="13457">
        <label>watcher_forwarding_cellapp.hpp</label>
        <link refid="watcher__forwarding__cellapp_8hpp_source"/>
        <childnode refid="13412" relation="include">
        </childnode>
        <childnode refid="13458" relation="include">
        </childnode>
      </node>
      <node id="13470">
        <label>cellapp/cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="13471" relation="include">
        </childnode>
        <childnode refid="13413" relation="include">
        </childnode>
        <childnode refid="13472" relation="include">
        </childnode>
        <childnode refid="13415" relation="include">
        </childnode>
        <childnode refid="13414" relation="include">
        </childnode>
      </node>
      <node id="13481">
        <label>network/network_interface.hpp</label>
      </node>
      <node id="13410">
        <label>cellappmgr_interface.hpp</label>
        <link refid="cellappmgr__interface_8hpp_source"/>
        <childnode refid="13411" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
        <childnode refid="13413" relation="include">
        </childnode>
        <childnode refid="13414" relation="include">
        </childnode>
        <childnode refid="13415" relation="include">
        </childnode>
        <childnode refid="13416" relation="include">
        </childnode>
      </node>
      <node id="13479">
        <label>network/machine_guard.hpp</label>
      </node>
      <node id="13461">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="13466">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="13451">
        <label>cell_app_group.hpp</label>
        <link refid="cell__app__group_8hpp_source"/>
        <childnode refid="13429" relation="include">
        </childnode>
        <childnode refid="13415" relation="include">
        </childnode>
        <childnode refid="13452" relation="include">
        </childnode>
        <childnode refid="13435" relation="include">
        </childnode>
        <childnode refid="13436" relation="include">
        </childnode>
      </node>
      <node id="13442">
        <label>server/services_map.hpp</label>
      </node>
      <node id="13474">
        <label>db/dbapp_interface.hpp</label>
      </node>
      <node id="13415">
        <label>server/common.hpp</label>
      </node>
      <node id="13443">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="13491">
        <label>server/util.hpp</label>
      </node>
      <node id="13480">
        <label>network/machined_utils.hpp</label>
      </node>
      <node id="13425">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="13422">
        <label>cstdmf/polymorphic_watcher.hpp</label>
      </node>
      <node id="13456">
        <label>shutdown_handler.hpp</label>
        <link refid="shutdown__handler_8hpp_source"/>
        <childnode refid="13415" relation="include">
        </childnode>
      </node>
      <node id="13430">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="13419">
        <label>entity_bound_levels.hpp</label>
        <link refid="entity__bound__levels_8hpp_source"/>
        <childnode refid="13420" relation="include">
        </childnode>
        <childnode refid="13421" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
      </node>
      <node id="13448">
        <label>cell_app_death_handler.hpp</label>
        <link refid="cell__app__death__handler_8hpp_source"/>
        <childnode refid="13449" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
        <childnode refid="13436" relation="include">
        </childnode>
      </node>
      <node id="13484">
        <label>network/watcher_nub.hpp</label>
      </node>
      <node id="13453">
        <label>cell_app_load_config.hpp</label>
        <link refid="cell__app__load__config_8hpp_source"/>
        <childnode refid="13454" relation="include">
        </childnode>
      </node>
      <node id="13435">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="13436">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="13423">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="13499">
        <label>sys/types.h</label>
      </node>
      <node id="13490">
        <label>server/time_keeper.hpp</label>
      </node>
      <node id="13460">
        <label>Python.h</label>
      </node>
      <node id="13438">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="13450">
        <label>cell_app_groups.hpp</label>
        <link refid="cell__app__groups_8hpp_source"/>
        <childnode refid="13451" relation="include">
        </childnode>
        <childnode refid="13438" relation="include">
        </childnode>
      </node>
      <node id="13477">
        <label>network/channel_sender.hpp</label>
      </node>
      <node id="13418">
        <label>bsp_node.hpp</label>
        <link refid="bsp__node_8hpp_source"/>
        <childnode refid="13419" relation="include">
        </childnode>
        <childnode refid="13421" relation="include">
        </childnode>
        <childnode refid="13422" relation="include">
        </childnode>
        <childnode refid="13423" relation="include">
        </childnode>
        <childnode refid="13424" relation="include">
        </childnode>
      </node>
      <node id="13463">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="13416">
        <label>server/reviver_subject.hpp</label>
      </node>
      <node id="13428">
        <label>cellapp_comparer.hpp</label>
        <link refid="cellapp__comparer_8hpp_source"/>
        <childnode refid="13429" relation="include">
        </childnode>
        <childnode refid="13430" relation="include">
        </childnode>
        <childnode refid="13420" relation="include">
        </childnode>
        <childnode refid="13431" relation="include">
        </childnode>
      </node>
      <node id="13483">
        <label>network/portmap.hpp</label>
      </node>
      <node id="13427">
        <label>math/ema.hpp</label>
      </node>
      <node id="13488">
        <label>server/shared_data_type.hpp</label>
      </node>
      <node id="13464">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="13431">
        <label>cellappmgr_config.hpp</label>
        <link refid="cellappmgr__config_8hpp_source"/>
        <childnode refid="13432" relation="include">
        </childnode>
      </node>
      <node id="13421">
        <label>math/math_extra.hpp</label>
      </node>
      <node id="13498">
        <label>time.h</label>
      </node>
      <node id="13492">
        <label>entitydef/constants.hpp</label>
      </node>
      <node id="13412">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="13414">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="13452">
        <label>cstddef</label>
      </node>
      <node id="13447">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="13417">
        <label>cell_data.hpp</label>
        <link refid="cell__data_8hpp_source"/>
        <childnode refid="13418" relation="include">
        </childnode>
        <childnode refid="13425" relation="include">
        </childnode>
        <childnode refid="13412" relation="include">
        </childnode>
      </node>
      <node id="13462">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="13467">
        <label>reviver/reviver_interface.hpp</label>
        <link refid="reviver__interface_8hpp_source"/>
        <childnode refid="13468" relation="include">
        </childnode>
        <childnode refid="13469" relation="include">
        </childnode>
      </node>
      <node id="13472">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="13454">
        <label>server/server_app_option.hpp</label>
      </node>
      <node id="13495">
        <label>resmgr/bwresource.hpp</label>
      </node>
      <node id="13429">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="13487">
        <label>server/cell_app_init_data.hpp</label>
      </node>
      <node id="13455">
        <label>login_conditions_config.hpp</label>
        <link refid="cellappmgr_2login__conditions__config_8hpp_source"/>
        <childnode refid="13454" relation="include">
        </childnode>
      </node>
      <node id="13420">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="13413">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="13485">
        <label>network/smart_bundles.hpp</label>
      </node>
      <node id="13407">
        <label>cellappmgr/cellappmgr.cpp</label>
        <link refid="cellappmgr.cpp"/>
        <childnode refid="13408" relation="include">
        </childnode>
        <childnode refid="13409" relation="include">
        </childnode>
        <childnode refid="13444" relation="include">
        </childnode>
        <childnode refid="13431" relation="include">
        </childnode>
        <childnode refid="13445" relation="include">
        </childnode>
        <childnode refid="13448" relation="include">
        </childnode>
        <childnode refid="13450" relation="include">
        </childnode>
        <childnode refid="13453" relation="include">
        </childnode>
        <childnode refid="13455" relation="include">
        </childnode>
        <childnode refid="13456" relation="include">
        </childnode>
        <childnode refid="13433" relation="include">
        </childnode>
        <childnode refid="13457" relation="include">
        </childnode>
        <childnode refid="13459" relation="include">
        </childnode>
        <childnode refid="13465" relation="include">
        </childnode>
        <childnode refid="13467" relation="include">
        </childnode>
        <childnode refid="13470" relation="include">
        </childnode>
        <childnode refid="13473" relation="include">
        </childnode>
        <childnode refid="13423" relation="include">
        </childnode>
        <childnode refid="13474" relation="include">
        </childnode>
        <childnode refid="13475" relation="include">
        </childnode>
        <childnode refid="13476" relation="include">
        </childnode>
        <childnode refid="13477" relation="include">
        </childnode>
        <childnode refid="13446" relation="include">
        </childnode>
        <childnode refid="13478" relation="include">
        </childnode>
        <childnode refid="13479" relation="include">
        </childnode>
        <childnode refid="13480" relation="include">
        </childnode>
        <childnode refid="13481" relation="include">
        </childnode>
        <childnode refid="13482" relation="include">
        </childnode>
        <childnode refid="13483" relation="include">
        </childnode>
        <childnode refid="13484" relation="include">
        </childnode>
        <childnode refid="13485" relation="include">
        </childnode>
        <childnode refid="13486" relation="include">
        </childnode>
        <childnode refid="13487" relation="include">
        </childnode>
        <childnode refid="13416" relation="include">
        </childnode>
        <childnode refid="13488" relation="include">
        </childnode>
        <childnode refid="13489" relation="include">
        </childnode>
        <childnode refid="13490" relation="include">
        </childnode>
        <childnode refid="13491" relation="include">
        </childnode>
        <childnode refid="13492" relation="include">
        </childnode>
        <childnode refid="13493" relation="include">
        </childnode>
        <childnode refid="13494" relation="include">
        </childnode>
        <childnode refid="13495" relation="include">
        </childnode>
        <childnode refid="13496" relation="include">
        </childnode>
        <childnode refid="13497" relation="include">
        </childnode>
        <childnode refid="13498" relation="include">
        </childnode>
        <childnode refid="13499" relation="include">
        </childnode>
      </node>
      <node id="13496">
        <label>algorithm</label>
      </node>
      <node id="13478">
        <label>network/event_dispatcher.hpp</label>
      </node>
      <node id="13440">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="13437">
        <label>memory</label>
      </node>
      <node id="13432">
        <label>server/manager_app_config.hpp</label>
      </node>
      <node id="13411">
        <label>cstdmf/unique_id.hpp</label>
      </node>
      <node id="13433">
        <label>space.hpp</label>
        <link refid="gr_2space_8hpp_source"/>
        <childnode refid="13434" relation="include">
        </childnode>
        <childnode refid="13421" relation="include">
        </childnode>
        <childnode refid="13435" relation="include">
        </childnode>
        <childnode refid="13436" relation="include">
        </childnode>
        <childnode refid="13437" relation="include">
        </childnode>
      </node>
      <node id="13494">
        <label>pyscript/py_import_paths.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_create_entity_reply_handler" prot="public">CreateEntityReplyHandler</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cellappmgr_8cpp_1ac8640e8257a01495ff075bca6f977990" prot="public" static="no" mutable="no">
        <type>BW_BEGIN_NAMESPACE int</type>
        <definition>BW_BEGIN_NAMESPACE int ResMgr_token</definition>
        <argsstring></argsstring>
        <name>ResMgr_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/cellappmgr.cpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellappmgr_8cpp_1a72da1cd47b4ff72db990366aa280ca79" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Math_token</definition>
        <argsstring></argsstring>
        <name>Math_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/cellappmgr.cpp" line="67" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellappmgr_8cpp_1a686450e3b38f5659aacf461bcaf61bca" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int PyScript_token</definition>
        <argsstring></argsstring>
        <name>PyScript_token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/cellappmgr.cpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="cellappmgr_8cpp_1a8e058c3b8acbcff8139be8d56cd59be1" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int s_moduleTokens</definition>
        <argsstring></argsstring>
        <name>s_moduleTokens</name>
        <initializer>=
	Math_token | ResMgr_token | PyScript_token</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellappmgr/cellappmgr.cpp" line="69" column="1" bodyfile="cellappmgr/cellappmgr.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr_viewer_server.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_app_death_handler.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_app_groups.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_app_load_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;login_conditions_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shutdown_handler.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;watcher_forwarding_cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space_data_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseappmgr/baseappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;reviver/reviver_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp/cellapp_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/debug.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db/dbapp_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;db/dbappmgr_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/channel_sender.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/endpoint.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/event_dispatcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/machine_guard.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/machined_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/network_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/nub_exception.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/portmap.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/watcher_nub.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/smart_bundles.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/bwconfig.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/cell_app_init_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/reviver_subject.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/shared_data_type.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/real_entity_stream_helper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/time_keeper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;server/util.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entitydef/constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/py_traceback.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pyscript/py_import_paths.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resmgr/bwresource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">DECLARE_DEBUG_COMPONENT(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResMgr_token;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Math_token;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">extern<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PyScript_token;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">static<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_moduleTokens<sp/>=</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Math_token<sp/>|<sp/>ResMgr_token<sp/>|<sp/>PyScript_token;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CODE_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr.ipp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">BW_SINGLETON_STORAGE(<sp/><ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref><sp/>)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Construction/Destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">bool<sp/><ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>::shouldLoadBalance_<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>::shouldMetaLoadBalance_<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>::<ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref>(<sp/><ref refid="namespace_mercury" kindref="compound">Mercury</ref>::EventDispatcher<sp/>&amp;<sp/>mainDispatcher,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_mercury" kindref="compound">Mercury</ref>::NetworkInterface<sp/>&amp;<sp/>networkInterface<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>ManagerApp(<sp/>mainDispatcher,<sp/>networkInterface<sp/>),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_(<sp/>static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;(<ref refid="class_cell_app_mgr_config" kindref="compound">CellAppMgrConfig</ref>::updateHertz())<sp/>),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>pTimeKeeper_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppMgr_(<sp/>networkInterface<sp/>),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppMgr_(<sp/>networkInterface<sp/>),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_(<sp/>networkInterface<sp/>),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppAddr_(<sp/><ref refid="namespace_mercury" kindref="compound">Mercury</ref>::Address::NONE<sp/>),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppMgrViewerServer_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterUniqueID_(),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>waitingFor_(<sp/>READY_ALL<sp/>),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>lastCellAppID_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSpaceID_(<sp/>NULL_SPACE_ID<sp/>),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>allowNewCellApps_(<sp/>true<sp/>),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>isRecovering_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>hasStarted_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>isShuttingDown_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>haveCellAppsReceivedStartup_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>avgCellAppOverloadStartTime_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>maxCellAppOverloadStartTime_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>lastCellAppDeath_(<sp/><ref refid="namespace_mercury" kindref="compound">Mercury</ref>::Address::NONE<sp/>),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>pShutDownHandler_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppDeathHandlers_(),</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>servicesMap_()</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppMgr_.channel().isLocalRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppMgr_.channel().isRemoteRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppMgr_.channel().isLocalRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppMgr_.channel().isRemoteRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_.channel().isLocalRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_.channel().isRemoteRegular(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="class_cell_app_mgr_1a774e1f705d915307684db5d245a339f6" kindref="member">CellAppMgr::~CellAppMgr</ref>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>loadBalanceTimer_.cancel();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>metaLoadBalanceTimer_.cancel();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>overloadCheckTimer_.cancel();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>gameTimer_.cancel();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>recoveryTimer_.cancel();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pTimeKeeper_;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>pTimeKeeper_=<sp/>NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>all<sp/>the<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>spaceIter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>spaceIter-&gt;second;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceIter++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaces_.clear();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.<ref refid="class_cell_apps_1affdfc4062391cb50a9d4d33b5846f392" kindref="member">deleteAll</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pCellAppMgrViewerServer_;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppMgrViewerServer_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CellAppMgr::init(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>argv<sp/>[]<sp/>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;ManagerApp::init(<sp/>argc,<sp/>argv<sp/>))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!interface_.isGood())</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>network<sp/>interface.<sp/>Unable<sp/>to<sp/>proceed.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRecovery<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>++i)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/>argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-recover&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isRecovery<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<sp/>argv[i],<sp/></highlight><highlight class="stringliteral">&quot;-machined&quot;</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::init:<sp/>Started<sp/>from<sp/>machined\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ReviverSubject::instance().init(<sp/>&amp;interface_,<sp/></highlight><highlight class="stringliteral">&quot;cellAppMgr&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ReviverInterface::CellAppMgrDetachReviver<sp/>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>up<sp/>the<sp/>scripting<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initScript(<sp/></highlight><highlight class="stringliteral">&quot;cellappmgr&quot;</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::init:<sp/>Failed<sp/>to<sp/>init<sp/>script\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_space_data_type_1a571b22799ab17d48dca7354ce9da6603" kindref="member">SpaceDataType::init</ref>())</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;SpaceDataType::init:<sp/>Failed.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;logInternalAddress();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;Is<sp/>Recovery<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>isRecovery<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;True&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;False&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>loadBalanceTimer_<sp/>=</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>Config::loadBalancePeriod()<sp/>*<sp/>1000000.0<sp/>),</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)TIMEOUT_LOAD_BALANCE,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LoadBalance&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config::metaLoadBalancePeriod()<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaLoadBalanceTimer_<sp/>=<sp/>this-&gt;mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<sp/>Config::metaLoadBalancePeriod()<sp/>*<sp/>1000000.0<sp/>),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)TIMEOUT_META_LOAD_BALANCE,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MetaLoadBalance&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>overloadCheckTimer_<sp/>=<sp/>this-&gt;mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000000,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)TIMEOUT_OVERLOAD_CHECK,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;OverloadCheck&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppMgrViewerServer_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_viewer_server" kindref="compound">CellAppMgrViewerServer</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellAppMgrViewerServer_-&gt;<ref refid="class_cell_app_mgr_viewer_server_1ae5b411d4942d478ce88d643dbd5a1206" kindref="member">startup</ref>(<sp/>this-&gt;mainDispatcher(),<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>the<sp/>watcher<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>BW_REGISTER_WATCHER(<sp/></highlight><highlight class="comment">/*id*/</highlight><highlight class="normal"><sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;cellappmgr&quot;</highlight><highlight class="normal">,<sp/>this-&gt;pBWMachineD(),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cellAppMgr&quot;</highlight><highlight class="normal">,<sp/>mainDispatcher_,<sp/>this-&gt;networkInterface().address()<sp/>);<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>watchers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7a3ca59c28338838267daf10612008fb" kindref="member">addWatchers</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pBWMachineD()-&gt;registerBirthListener(<sp/>interface_.address(),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::handleBaseAppMgrBirth,<sp/></highlight><highlight class="stringliteral">&quot;BaseAppMgrInterface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numStartupRetries<sp/>=<sp/>Config::numStartupRetries();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>startupRetryPeriod<sp/>=<sp/>Config::startupRetryPeriod();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pBWMachineD()-&gt;registerBirthListener(<sp/>interface_.address(),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::handleDBAppMgrBirth,<sp/></highlight><highlight class="stringliteral">&quot;DBAppMgrInterface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>dbAppMgrAddr;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Reason<sp/>reason<sp/>=<sp/>this-&gt;pBWMachineD()-&gt;findInterface(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DBAppMgrInterface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*id*/</highlight><highlight class="normal"><sp/>0,<sp/>dbAppMgrAddr,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reason<sp/>!=<sp/>Mercury::REASON_SUCCESS)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::init:<sp/>DBAppMgr<sp/>not<sp/>ready<sp/>yet.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppMgr_.addr(<sp/>dbAppMgrAddr<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::registerWithInterface(<sp/>interface_<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Reason<sp/>reason<sp/>=</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::registerWithMachined(<sp/>this-&gt;pBWMachineD(),</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface_,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reason<sp/>!=<sp/>Mercury::REASON_SUCCESS)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>register<sp/>with<sp/>interface<sp/>(%s).<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Is<sp/>machined<sp/>running?\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::reasonToString(<sp/>reason<sp/>));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Address<sp/>baseAppMgrAddr;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reason<sp/>=<sp/>this-&gt;pBWMachineD()-&gt;findInterface(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseAppMgrInterface&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>baseAppMgrAddr,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numStartupRetries,<sp/>startupRetryPeriod<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reason<sp/>==<sp/>Mercury::REASON_SUCCESS)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseAppMgr_.addr(<sp/>baseAppMgrAddr<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a944d2231409fe41a6c806400dd844a13" kindref="member">ready</ref>(<sp/>READY_BASE_APP_MGR<sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reason<sp/>==<sp/>Mercury::REASON_TIMER_EXPIRED)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>BaseAppMgr<sp/>not<sp/>ready<sp/>yet.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellApp::init:<sp/>Failed<sp/>to<sp/>find<sp/>BaseAppMgr.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pBWMachineD()-&gt;registerBirthListener(<sp/>interface_.address(),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::handleCellAppMgrBirth,<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgrInterface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;pBWMachineD()-&gt;registerDeathListener(<sp/>interface_.address(),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrInterface::handleCellAppDeath,<sp/></highlight><highlight class="stringliteral">&quot;CellAppInterface&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRecovery)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startRecovery();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CellAppMgr::initScript(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>componentName<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>PyImportPaths<sp/>paths;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>paths.expandResPathAndAdd(<sp/>EntityDef::Constants::serverCommonPath()<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Script::init(<sp/>paths,<sp/>componentName<sp/>))</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>Script::initExceptionHook(<sp/>&amp;mainDispatcher_<sp/>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a7a3ca59c28338838267daf10612008fb" kindref="member">CellAppMgr::addWatchers</ref>()</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>Watcher<sp/>&amp;<sp/>rootWatcher<sp/>=<sp/>Watcher::rootWatcher();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ServerApp::addWatchers(<sp/>rootWatcher<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Watch<sp/>what<sp/>we<sp/>know<sp/>about<sp/>cells<sp/>in<sp/>each<sp/>category</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>we<sp/>want<sp/>to<sp/>make<sp/>a<sp/>watcher<sp/>for<sp/>the<sp/>type<sp/>&apos;Spaces&apos;,<sp/>but<sp/>Spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>vectors<sp/>of<sp/>Space*,<sp/>not<sp/>of<sp/>Space.<sp/>So<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>first<sp/>make<sp/>a<sp/>vector<sp/>watcher...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>MapWatcher&lt;Spaces&gt;<sp/>*<sp/>pWatchSpaces<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MapWatcher&lt;Spaces&gt;();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>add<sp/>a<sp/>&apos;BaseDereference&apos;<sp/>watcher<sp/>to<sp/>it<sp/>which<sp/>passes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>all<sp/>its<sp/>functions<sp/>to<sp/>its<sp/>child<sp/>watcher,<sp/>after<sp/>dereferencing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>base<sp/>address.<sp/>Easy!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>pWatchSpaces-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BaseDereferenceWatcher(</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space_1a7b8de0d42c94f14862532957cfcab607" kindref="member">Space::pWatcher</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>rootWatcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;spaces&quot;</highlight><highlight class="normal">,<sp/>pWatchSpaces,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;this-&gt;spaces_<sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>rootWatcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;cellApps&quot;</highlight><highlight class="normal">,<sp/>cellApps_.<ref refid="class_cell_apps_1a430e41233b1f6255de3cbc2dff3efed8" kindref="member">pWatcher</ref>()<sp/>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>rootWatcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;forwardTo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_a_forwarding_watcher" kindref="compound">CAForwardingWatcher</ref>()<sp/>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>spaces<sp/>we<sp/>have<sp/>got</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numSpaces&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;CellAppMgr::numSpaces<sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>cellApps<sp/>do<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numCellApps&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;CellAppMgr::numCellApps<sp/>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>cellApps<sp/>are<sp/>active(numCell<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numActiveCellApps&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_cell_app_mgr_1ad511c3915dc9a33fe85b69f0c750186a" kindref="member">CellAppMgr::numActiveCellApps</ref><sp/>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>how<sp/>many<sp/>cells<sp/>are<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numCells&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_cell_app_mgr_1a1ec9998a9c35ae4add13ee000230702d" kindref="member">CellAppMgr::numCells</ref><sp/>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numSpacesWithLoadedGeometry&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1afa59837097ff3ea21d8605c3705bd1d6" kindref="member">CellAppMgr::numSpacesWithLoadedGeometry</ref><sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Watchers<sp/>for<sp/>load-balancing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/cellsPerSpaceMax&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a103b9d174990e3d1bff818fbe998d923" kindref="member">CellAppMgr::cellsPerSpaceMax</ref><sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/cellsPerMultiCellSpaceAvg&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a6227b28620f8528a15532c19311270b7" kindref="member">CellAppMgr::cellsPerMultiCellSpaceAvg</ref><sp/>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/numPartitions&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a44ba9ff0e4d79e53da90834881579859" kindref="member">CellAppMgr::numPartitions</ref><sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/cellAppGroups&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a7056b3baf730e2fa36450570f8311ea8" kindref="member">CellAppMgr::cellAppGroups</ref><sp/>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/numCells&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a1ec9998a9c35ae4add13ee000230702d" kindref="member">CellAppMgr::numCells</ref><sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/numSpaces&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CellAppMgr::numSpaces<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/numMultiCellSpaces&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1adf7bc53b74a75e43cf9e47149bec46ef" kindref="member">CellAppMgr::numMultiCellSpaces</ref><sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/numMultiMachineSpaces&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a5007b4559a03c7a44da8aa3392c4225c" kindref="member">CellAppMgr::numMultiMachineSpaces</ref><sp/>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/machinesPerMultiCellSpaceAvg&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1af219b70aeb0261e4316d515cf1ffa7c9" kindref="member">CellAppMgr::machinesPerMultiCellSpaceAvg</ref><sp/>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/machinesPerMultiCellSpaceMax&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a44a2f20f9c8caa51aaaba832428ce51c" kindref="member">CellAppMgr::machinesPerMultiCellSpaceMax</ref><sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;loadBalancing/numMachinePartitions&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="class_cell_app_mgr_1a4fd4395085c59910d0966bb4ee47a866" kindref="member">CellAppMgr::numMachinePartitions</ref><sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>watch<sp/>how<sp/>many<sp/>avatars<sp/>we<sp/>think<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;numEntities&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_cell_app_mgr_1a1d34ac9c28d434fac5c3de0d25d5ce6d" kindref="member">CellAppMgr::numEntities</ref><sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;cellAppLoad/min&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_cell_app_mgr_1a0d84fdb4c4dcac0c9b0b8e9adcc1132e" kindref="member">CellAppMgr::minCellAppLoad</ref><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;cellAppLoad/average&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_cell_app_mgr_1a970608d318f58b8ebd6276f2907e0eaf" kindref="member">CellAppMgr::avgCellAppLoad</ref><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;cellAppLoad/max&quot;</highlight><highlight class="normal">,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_cell_app_mgr_1a8342175d52837dbc0f213cbc2ac59333" kindref="member">CellAppMgr::maxCellAppLoad</ref><sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;viewer<sp/>server<sp/>port&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pCellAppMgrViewerServer_,<sp/>&amp;<ref refid="class_cell_app_mgr_viewer_server_1a8f37ce07cc1a8a5e26bf384da18abd1d" kindref="member">CellAppMgrViewerServer::port</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;debugging/shouldLoadBalance&quot;</highlight><highlight class="normal">,<sp/>shouldLoadBalance_<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;debugging/shouldMetaLoadBalance&quot;</highlight><highlight class="normal">,<sp/>shouldMetaLoadBalance_<sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;waitingFor&quot;</highlight><highlight class="normal">,<sp/>waitingFor_<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;hasStarted&quot;</highlight><highlight class="normal">,<sp/>hasStarted_<sp/>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>the<sp/>CellAppMgr<sp/>currently<sp/>recovering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;isRecovering&quot;</highlight><highlight class="normal">,<sp/>isRecovering_,<sp/>Watcher::WT_READ_ONLY<sp/>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_WATCH(<sp/></highlight><highlight class="stringliteral">&quot;stats/maxCellAppTimeout&quot;</highlight><highlight class="normal">,<sp/>cellApps_,<sp/>&amp;<ref refid="class_cell_apps_1a74980708f9a9209e17b0d30c5babebf6" kindref="member">CellApps::maxCellAppTimeout</ref><sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>rootWatcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;baseAppMgr&quot;</highlight><highlight class="normal">,<sp/>Mercury::ChannelOwner::pWatcher(),</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;baseAppMgr_<sp/>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>rootWatcher.addChild(<sp/></highlight><highlight class="stringliteral">&quot;dbAppAlpha&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeWatcher(<sp/>&amp;Mercury::ChannelOwner::addr<sp/>),</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dbAppAlpha_<sp/>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a067e2c816444d283abcdc972a2b649ee" kindref="member">CellAppMgr::controlledShutDown</ref>()</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>sending<sp/>to<sp/>anonymous<sp/>channels<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>interface_.stopPingingAnonymous();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_shut_down_handler_1a40d203908b9b2c1c5c6d4538b610db23" kindref="member">ShutDownHandler::start</ref>(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ad511c3915dc9a33fe85b69f0c750186a" kindref="member">CellAppMgr::numActiveCellApps</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="445"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cellApps_.<ref refid="class_cell_apps_1a19b18a619337a18053ca1a0b41092cf5" kindref="member">numActive</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a1ec9998a9c35ae4add13ee000230702d" kindref="member">CellAppMgr::numCells</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="454"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>cit<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cit<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count+=cit-&gt;second-&gt;numCells();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cit++;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a103b9d174990e3d1bff818fbe998d923" kindref="member">CellAppMgr::cellsPerSpaceMax</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="470"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;second-&gt;numCells()<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>iter-&gt;second-&gt;numCells();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a6227b28620f8528a15532c19311270b7" kindref="member">CellAppMgr::cellsPerMultiCellSpaceAvg</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="494"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSpaces<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a1ec9998a9c35ae4add13ee000230702d" kindref="member">numCells</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCellsThisSpace<sp/>=<sp/>iter-&gt;second-&gt;numCells();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numCellsThisSpace<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++numSpaces;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCells<sp/>+=<sp/>numCellsThisSpace;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(numSpaces<sp/>&gt;<sp/>0)<sp/>?<sp/>float(<sp/>numCells<sp/>)<sp/>/<sp/>numSpaces<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a44ba9ff0e4d79e53da90834881579859" kindref="member">CellAppMgr::numPartitions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="521"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a1ec9998a9c35ae4add13ee000230702d" kindref="member">numCells</ref>()<sp/>-<sp/>this-&gt;numSpaces();</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">BW::string<sp/><ref refid="class_cell_app_mgr_1a7056b3baf730e2fa36450570f8311ea8" kindref="member">CellAppMgr::cellAppGroups</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="531"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_groups" kindref="compound">CellAppGroups</ref><sp/>appGroups(<sp/>cellApps_<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>appGroups.asString();</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1adf7bc53b74a75e43cf9e47149bec46ef" kindref="member">CellAppMgr::numMultiCellSpaces</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="541"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>spaceIter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spaceIter-&gt;second-&gt;cells().size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceIter;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a5007b4559a03c7a44da8aa3392c4225c" kindref="member">CellAppMgr::numMultiMachineSpaces</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="565"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>spaceIter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spaceIter-&gt;second-&gt;numUniqueIPs()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceIter;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1af219b70aeb0261e4316d515cf1ffa7c9" kindref="member">CellAppMgr::machinesPerMultiCellSpaceAvg</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="590"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>machinesCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spaceCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>spaceIter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>&amp;<sp/>space<sp/>=<sp/>*spaceIter-&gt;second;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(space.cells().size()<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>numMachines<sp/>=<sp/>space.<ref refid="class_space_1ad3c8842e5c0debd700a71dd32f0113e8" kindref="member">numUniqueIPs</ref>();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>machinesCount<sp/>+=<sp/>numMachines;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceCount;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceIter;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(spaceCount<sp/>!=<sp/>0)<sp/>?<sp/>float(<sp/>machinesCount<sp/>)/spaceCount<sp/>:<sp/>0.f;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a44a2f20f9c8caa51aaaba832428ce51c" kindref="member">CellAppMgr::machinesPerMultiCellSpaceMax</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="620"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>uint<sp/>maxMachines<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>spaceIter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>numMachines<sp/>=<sp/>spaceIter-&gt;second-&gt;numUniqueIPs();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxMachines<sp/>=<sp/>std::max(<sp/>numMachines,<sp/>maxMachines<sp/>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceIter;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxMachines;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a4fd4395085c59910d0966bb4ee47a866" kindref="member">CellAppMgr::numMachinePartitions</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="643"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cumulativeMachinesPerSpace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>spaceIter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cumulativeMachinesPerSpace<sp/>+=<sp/>spaceIter-&gt;second-&gt;numUniqueIPs();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceIter;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cumulativeMachinesPerSpace<sp/>-<sp/>numSpaces();</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a1d34ac9c28d434fac5c3de0d25d5ce6d" kindref="member">CellAppMgr::numEntities</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="664"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cellApps_.<ref refid="class_cell_apps_1a7ee9f4999df6517127ddbdf2dd60a280" kindref="member">numEntities</ref>();</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a0d84fdb4c4dcac0c9b0b8e9adcc1132e" kindref="member">CellAppMgr::minCellAppLoad</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="673"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cellApps_.<ref refid="class_cell_apps_1a7685293c31db925beb44c948514959ab" kindref="member">minLoad</ref>();</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a970608d318f58b8ebd6276f2907e0eaf" kindref="member">CellAppMgr::avgCellAppLoad</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="682"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cellApps_.<ref refid="class_cell_apps_1aa0c0d491cda87c96283c31d0c2dc1bc8" kindref="member">avgLoad</ref>();</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a8342175d52837dbc0f213cbc2ac59333" kindref="member">CellAppMgr::maxCellAppLoad</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="691"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cellApps_.<ref refid="class_cell_apps_1a63e14e1ee3f23d08e0cdc771b8f47e4b" kindref="member">maxLoad</ref>();</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Helper<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="class_create_entity_reply_handler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_create_entity_reply_handler" kindref="compound">CreateEntityReplyHandler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Mercury::ReplyMessageHandler</highlight></codeline>
<codeline lineno="705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_create_entity_reply_handler" kindref="compound">CreateEntityReplyHandler</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ReplyID<sp/>replyID<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAddr_(<sp/>addr<sp/>),</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replyID_(<sp/>replyID<sp/>)</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleMessage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>source,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/></highlight><highlight class="comment">/*header*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="comment">/*arg*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityID<sp/>id;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>id;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>NULL_ENTITY_ID)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CreateEntityReplyHandler::handleMessage:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>cell<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>source.c_str()<sp/>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(replyID_<sp/>!=<sp/>Mercury::REPLY_ID_NONE)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>CellAppMgr::getChannel(<sp/>srcAddr_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>replyID_<sp/>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>id;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleException(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException<sp/>&amp;<sp/>ne,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CreateEntityReplyHandler::handleException:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>exception<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::reasonToString(<sp/>ne.reason()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>CellAppMgr::getChannel(<sp/>srcAddr_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>replyID_<sp/>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>NULL_ENTITY_ID;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleShuttingDown(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::NubException<sp/>&amp;<sp/>ne,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CreateEntityReplyHandler::handleShuttingDown:<sp/>Ignoring\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/><sp/><sp/><sp/>srcAddr_;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::ReplyID<sp/><sp/><sp/><sp/>replyID_;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">};</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Methods<sp/>that<sp/>handle<sp/>messages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a1aa0b97fa58cf841dfa0a9b4c7e04ef5" kindref="member">CellAppMgr::createEntityInNewSpace</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doesSpaceHavePreferredIP;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>doesSpaceHavePreferredIP;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>preferredIP<sp/>=<sp/>(doesSpaceHavePreferredIP<sp/>?<sp/>srcAddr.ip<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doesSpaceHavePreferredIP)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::createEntityInNewSpace:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>space<sp/>with<sp/>preferred<sp/>IP<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAddr.ipAsString()<sp/>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>spaceDataDefName;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceDataDefName;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!spaceDataDefName.empty())<sp/></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRACE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::createEntityInNewSpace:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>space<sp/>with<sp/>spaceDataDefName<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceDataDefName.c_str()<sp/>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space" kindref="compound">Space</ref>(<sp/>this-&gt;generateSpaceID(),<sp/>spaceDataDefName,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*isNewSpace*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*isFromDB*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>preferredIP<sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace-&gt;addCell())</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addSpace(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::createEntityInNewSpace:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>add<sp/>a<sp/>cell<sp/>to<sp/>space<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>pSpace-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//passing<sp/>pSpace==NULL<sp/>is<sp/>needed<sp/>here<sp/>to<sp/>send<sp/>the<sp/>errors<sp/>(and<sp/>is<sp/>safe)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a44dd32c0e25659620ea7092f075ae497" kindref="member">createEntityCommon</ref>(<sp/>pSpace,<sp/>srcAddr,<sp/>header,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::metaLoadBalance()</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identify<sp/>the<sp/>CellApp<sp/>groups<sp/>used<sp/>in<sp/>meta-load-balancing.<sp/>These<sp/>are<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>groups<sp/>of<sp/>CellApps<sp/>such<sp/>that<sp/>normal<sp/>load-balancing<sp/>can<sp/>balance<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_groups" kindref="compound">CellAppGroups</ref><sp/>appGroups(<sp/>cellApps_<sp/>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mergeThreshold<sp/>=</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a970608d318f58b8ebd6276f2907e0eaf" kindref="member">avgCellAppLoad</ref>()<sp/>+<sp/>CellAppMgrConfig::metaLoadBalanceTolerance();</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>meta-balance<sp/>groups<sp/>need<sp/>to<sp/>be<sp/>joined?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>appGroups.<ref refid="class_cell_app_groups_1aef50874587b3e45f86b89f1d78ff1c75" kindref="member">checkForOverloaded</ref>(<sp/>mergeThreshold<sp/>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>more<sp/>CellApps<sp/>be<sp/>added<sp/>to<sp/>help<sp/>with<sp/>loading?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasLoadingSpaces<sp/>=<sp/>this-&gt;checkLoadingSpaces();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasLoadingSpaces)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>there<sp/>underloaded<sp/>groups<sp/>who<sp/>should<sp/>have<sp/>Cells<sp/>retired?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appGroups.<ref refid="class_cell_app_groups_1aa3f28b0c17699b84ae1da5d855eb86ac" kindref="member">checkForUnderloaded</ref>(<sp/>CellAppLoadConfig::lowerBound()<sp/>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::loadBalance()</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Balance<sp/>all<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldLoadBalance_)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;loadBalance();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>calls<sp/>all<sp/>the<sp/>non-load<sp/>balancing<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>logic<sp/>that<sp/>exists<sp/>in<sp/>Space::loadBalance()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;updateSpaceMetrics();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>done<sp/>after<sp/>balancing<sp/>each<sp/>space<sp/>so<sp/>that<sp/>the<sp/>messages<sp/>to<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CellApp<sp/>are<sp/>aggregated<sp/>into<sp/>a<sp/>single<sp/>bundle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.sendToAll();</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::updateRanges()</highlight></codeline>
<codeline lineno="882"><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Balance<sp/>all<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;updateRanges();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>done<sp/>after<sp/>balancing<sp/>each<sp/>space<sp/>so<sp/>that<sp/>the<sp/>messages<sp/>to<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CellApp<sp/>are<sp/>aggregated<sp/>into<sp/>a<sp/>single<sp/>bundle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.sendToAll();</highlight></codeline>
<codeline lineno="898"><highlight class="normal">}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CellAppMgr::checkLoadingSpaces()</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasLoadingSpaces<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>spaceIter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>spaceIter-&gt;second;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Work<sp/>out<sp/>whether<sp/>more<sp/>cells<sp/>are<sp/>needed<sp/>to<sp/>help<sp/>do<sp/>the<sp/>initial<sp/>chunk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>loading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLoading<sp/>=<sp/>!pSpace-&gt;<ref refid="class_space_1a79df5b6f0d995470363ba9796d308fed" kindref="member">hasLoadedRequiredChunks</ref>();</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasLoadingSpaces<sp/>|=<sp/>isLoading;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>an<sp/>upper<sp/>bound<sp/>on<sp/>the<sp/>number<sp/>of<sp/>loading<sp/>cells<sp/>for<sp/>a<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>minimum<sp/>size<sp/>of<sp/>these<sp/>loading<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needsMoreLoadingCells<sp/>=<sp/>isLoading<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pSpace-&gt;numCells()<sp/>&lt;<sp/>Config::maxLoadingCells())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pSpace-&gt;spaceBounds().area()/pSpace-&gt;numCells()<sp/>&gt;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::minLoadingArea());</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needsMoreLoadingCells)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_data" kindref="compound">CellData</ref><sp/>*<sp/>pCell<sp/>=<sp/>pSpace-&gt;<ref refid="class_space_1ae966d51bc44d667a2ecc9a9af860307a" kindref="member">addCell</ref>();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCell)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::checkLoadingSpaces:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Added<sp/>CellApp<sp/>%u<sp/>to<sp/>Space<sp/>%u.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCell-&gt;cellApp().id(),<sp/>pSpace-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceIter;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hasLoadingSpaces;</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::overloadCheck()</highlight></codeline>
<codeline lineno="951"><highlight class="normal">{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>call<sp/>both<sp/>isAvgOverloaded()<sp/>and<sp/>areAnyOverloaded()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>every<sp/>time<sp/>in<sp/>order<sp/>to<sp/>calculate<sp/>timeouts<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;calculateOverload(</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.isAvgOverloaded(),</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginConditionsConfig::avgOverloadTolerancePeriodInStamps(),</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avgCellAppOverloadStartTime_,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Average<sp/>CellApp<sp/>load<sp/>has<sp/>been<sp/>exceeded&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;calculateOverload(</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.areAnyOverloaded(),</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LoginConditionsConfig::maxOverloadTolerancePeriodInStamps(),</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxCellAppOverloadStartTime_,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>CellApp<sp/>load<sp/>has<sp/>been<sp/>exceeded&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CellAppMgr::calculateOverload(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>areCellAppsOverloaded,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/>tolerancePeriodInStamps,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/>&amp;overloadStartTime,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*warningMsg<sp/>)</highlight></codeline>
<codeline lineno="975"><highlight class="normal">{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOverloaded<sp/>=<sp/>areCellAppsOverloaded;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isOverloaded)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>it<sp/>been<sp/>overloaded<sp/>for<sp/>long<sp/>enough?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>rate<sp/>limiting<sp/>logins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overloadStartTime<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overloadStartTime<sp/>=<sp/>timestamp();</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64<sp/>overloadTime<sp/>=<sp/>timestamp()<sp/>-<sp/>overloadStartTime;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::overloadCheck:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>for<sp/>%0.2f<sp/>seconds.<sp/>Min:<sp/>%.2f.<sp/>Avg:<sp/>%.2f.<sp/>Max:<sp/>%.2f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warningMsg,<sp/>overloadTime/stampsPerSecondD(),</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a0d84fdb4c4dcac0c9b0b8e9adcc1132e" kindref="member">minCellAppLoad</ref>(),</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a970608d318f58b8ebd6276f2907e0eaf" kindref="member">avgCellAppLoad</ref>(),</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a8342175d52837dbc0f213cbc2ac59333" kindref="member">maxCellAppLoad</ref>()<sp/>);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isOverloaded<sp/>=<sp/>(overloadTime<sp/>&gt;=<sp/>tolerancePeriodInStamps);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overloadStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isOverloaded;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1afd2bcdeecddd6a14ee31dda0334cb248" kindref="member">CellAppMgr::createEntity</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::createEntity:<sp/>Invalid<sp/>space<sp/>id<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rely<sp/>on<sp/>createEntityCommon<sp/>to<sp/>send<sp/>the<sp/>error<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;hasHadEntities(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a44dd32c0e25659620ea7092f075ae497" kindref="member">createEntityCommon</ref>(<sp/>pSpace,<sp/>srcAddr,<sp/>header,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a44dd32c0e25659620ea7092f075ae497" kindref="member">CellAppMgr::createEntityCommon</ref>(<sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace,</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::ChannelVersion<sp/>channelVersion<sp/>=<sp/>Mercury::SEQ_NULL;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>channelVersion;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRestore;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>isRestore;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>baseAddr;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>baseAddr;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntityStreamHelper::AddEntityData<sp/>entityData;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>RealEntityStreamHelper::removeEntity(<sp/>data,<sp/>entityData<sp/>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector3<sp/>&amp;<sp/>pos<sp/>=<sp/>entityData.position;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_data" kindref="compound">CellData</ref><sp/>*<sp/>pCellData<sp/>=<sp/>pSpace<sp/>?<sp/>pSpace-&gt;<ref refid="class_space_1a16f6fbe81d9d05cad788bde3976bfec1" kindref="member">findCell</ref>(<sp/>pos.x,<sp/>pos.z<sp/>)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellData)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>pCellData-&gt;cellApp().bundle();</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startRequest(<sp/>CellAppInterface::createEntity,</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_create_entity_reply_handler" kindref="compound">CreateEntityReplyHandler</ref>(<sp/>srcAddr,<sp/>header.replyID<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>pCellData-&gt;space().id();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>channelVersion;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>isRestore;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>baseAddr;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealEntityStreamHelper::addEntity(<sp/>bundle,<sp/>entityData<sp/>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.transfer(<sp/>data,<sp/>data.remainingLength()<sp/>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellData-&gt;cellApp().send();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::createEntity:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>cell<sp/>found<sp/>to<sp/>place<sp/>entity\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.finish();</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>CellAppMgr::getChannel(<sp/>srcAddr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>NULL_ENTITY_ID;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a4793ebae699bb09225fd37a0fa416a4d" kindref="member">CellAppMgr::prepareForRestoreFromDB</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!hasStarted_<sp/>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>time_;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSpaces;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>numSpaces;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Restore<sp/>from<sp/>database:<sp/>gametime=%.1f,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;numSpaces<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;gameTimeInSeconds(),<sp/>numSpaces<sp/>);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numSpaces;<sp/>++i)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>spaceDataDefName;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceDataDefName;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space" kindref="compound">Space</ref>(<sp/>this-&gt;generateSpaceID(<sp/>spaceID<sp/>),</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceDataDefName,<sp/></highlight><highlight class="comment">/*isNewSpace*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">/*isFromDB*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1ade866473f3a998c827d5ed83603c763e" kindref="member">readFromDBStream</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace-&gt;<ref refid="class_space_1ae966d51bc44d667a2ecc9a9af860307a" kindref="member">addCell</ref>())</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addSpace(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::prepareForRestoreFromDB:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>add<sp/>a<sp/>cell<sp/>to<sp/>space<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>pSpace-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>game<sp/>time<sp/>to<sp/>CellApps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.sendGameTime(<sp/>time_<sp/>);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::shutDown(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shutDownOthers<sp/>)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::shutDown:<sp/>shutDownOthers<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>shutDownOthers<sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutDownOthers)</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.shutDownAll();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::shutDown:<sp/>Told<sp/>to<sp/>shut<sp/>down.<sp/>shutDownOthers<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutDownOthers<sp/>);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>isShuttingDown_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;mainDispatcher().breakProcessing();</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::shutDown(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::shutDownArgs<sp/>&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;shutDown(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a067e2c816444d283abcdc972a2b649ee" kindref="member">CellAppMgr::controlledShutDown</ref>(</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::controlledShutDownArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::controlledShutDown:<sp/>stage<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerApp::shutDownStageToString(<sp/>args.stage<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(args.stage)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_TRIGGER:</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a5d35c5e13ff74afed7fcf87f11bd75dd" kindref="member">triggerControlledShutDown</ref>();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SHUTDOWN_REQUEST:</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a067e2c816444d283abcdc972a2b649ee" kindref="member">controlledShutDown</ref>();</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::controlledShutDown:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Stage<sp/>%s<sp/>not<sp/>handled.\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServerApp::shutDownStageToString(<sp/>args.stage<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/><ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">CellAppMgr::findSpace</ref>(<sp/>SpaceID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>don&apos;t<sp/>have<sp/>any<sp/>spaces,<sp/>maybe<sp/>we<sp/>should<sp/>be<sp/>creating<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spaces_.empty()<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!isRecovering_)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config::useDefaultSpace())</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::findSpace:<sp/>Creating<sp/>default<sp/>space.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space" kindref="compound">Space</ref>(<sp/>this-&gt;generateSpaceID(<sp/>1<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace-&gt;<ref refid="class_space_1ae966d51bc44d667a2ecc9a9af860307a" kindref="member">addCell</ref>())</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addSpace(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::findSpace:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>add<sp/>a<sp/>cell<sp/>to<sp/>space<sp/>%u.\n&quot;</highlight><highlight class="normal">,<sp/>pSpace-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bw_safe_delete(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpace;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>SpaceID<sp/>1<sp/>if<sp/>we<sp/>do<sp/>not<sp/>have<sp/>a<sp/>default<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpaceID_<sp/>=<sp/>std::max(<sp/>SpaceID(1),<sp/>lastSpaceID_<sp/>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.find(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>(<sp/>iter<sp/>==<sp/>spaces_.end()<sp/>)<sp/>?<sp/>NULL<sp/>:<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpace;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/><ref refid="class_cell_app_mgr_1a5006aaadab0aecb6c036c9d555299c3a" kindref="member">CellAppMgr::findApp</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1241"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cellApps_.find(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/><ref refid="class_cell_app_mgr_1a0cc0219d8b41e04de0bfb47d8944aee9" kindref="member">CellAppMgr::findAlternateApp</ref>(<sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/>pDeadApp<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1250"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cellApps_.findAlternateApp(<sp/>pDeadApp<sp/>);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a665f7fbbd86cbdcd28cb1b58c4b01159" kindref="member">CellAppMgr::shouldOffload</ref>(</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::shouldOffloadArgs&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;shouldOffload(<sp/>args.enable<sp/>);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a3094e275334c263f32b226d95865391a" kindref="member">CellAppMgr::addApp</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldRetry<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baseAppAddr_<sp/>==<sp/>Mercury::Address::NONE)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>let<sp/>CellApps<sp/>join<sp/>until<sp/>we<sp/>know<sp/>about<sp/>at<sp/>least<sp/>one<sp/>BaseApp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;ProcessIP&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>adding<sp/>CellApp<sp/>at<sp/>%s<sp/>because<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>BaseApp<sp/>yet\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldAdd<sp/>&amp;&amp;<sp/>(dbAppAlpha_.addr()<sp/>==<sp/>Mercury::Address::NONE))</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>let<sp/>CellApps<sp/>join<sp/>until<sp/>we<sp/>know<sp/>which<sp/>DBApp<sp/>is<sp/>the<sp/>Alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;ProcessIP&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>adding<sp/>CellApp<sp/>at<sp/>%s<sp/>because<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>DBApp<sp/>yet\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldAdd<sp/>&amp;&amp;<sp/>!this-&gt;hasClusterID())</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>let<sp/>CellApps<sp/>join<sp/>until<sp/>we<sp/>have<sp/>clusterID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;ProcessIP&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>adding<sp/>CellApp<sp/>at<sp/>%s<sp/>because<sp/>we<sp/>don&apos;t<sp/>have<sp/>clusterID<sp/>yet\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>addr;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>viewerPort;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>MD5::Digest<sp/>cellappDigest;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>addr<sp/>&gt;&gt;<sp/>viewerPort<sp/>&gt;&gt;<sp/>cellappDigest;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>the<sp/>controller<sp/>type<sp/>name<sp/>digest<sp/>info<sp/>between<sp/>different<sp/>cellapps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cellappDigest_.isEmpty())</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellappDigest_<sp/>=<sp/>cellappDigest;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldAdd<sp/>&amp;&amp;<sp/>cellappDigest_<sp/>!=<sp/>cellappDigest)</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>Denying<sp/>CellApp<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>hash<sp/>of<sp/>cellapp<sp/>digest.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldRetry<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>addr<sp/>==<sp/>srcAddr<sp/>);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BW_EVALUATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldAdd<sp/>&amp;&amp;<sp/>!cellApps_.empty())</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>Denying<sp/>CellApp<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Evaluation<sp/>build<sp/>only<sp/>allows<sp/>one<sp/>cell<sp/>app.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldRetry<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldAdd<sp/>&amp;&amp;<sp/>!allowNewCellApps_)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG[<sp/></highlight><highlight class="stringliteral">&quot;ProcessIP&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Denying<sp/>%s<sp/>since<sp/>in<sp/>middle<sp/>of<sp/>update\n&quot;</highlight><highlight class="normal">,<sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldRetry<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldAdd<sp/>&amp;&amp;<sp/>this-&gt;isRecovering())</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG[<sp/></highlight><highlight class="stringliteral">&quot;ProcessIP&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Denying<sp/>%s<sp/>since<sp/>in<sp/>middle<sp/>recovery.\n&quot;</highlight><highlight class="normal">,<sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldAdd<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldRetry<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppInitData<sp/>initData;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shouldAdd)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::ChannelSender<sp/>sender(<sp/>CellAppMgr::getChannel(<sp/>addr<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>sender.bundle();</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shouldRetry)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initData.id<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>reader<sp/>just<sp/>checks<sp/>id<sp/>==<sp/>-1<sp/>as<sp/>a<sp/>sign<sp/>of<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>initData;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a944d2231409fe41a6c806400dd844a13" kindref="member">ready</ref>(<sp/>READY_CELL_APP<sp/>);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.id<sp/>=<sp/>++lastCellAppID_;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.time<sp/>=<sp/>this-&gt;time();</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.baseAppAddr<sp/>=<sp/>baseAppAddr_;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.dbAppAlphaAddr<sp/>=<sp/>dbAppAlpha_.addr();</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.isReady<sp/>=<sp/>hasStarted_;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.timeoutPeriod<sp/>=<sp/>Config::cellAppTimeout();</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.isBootstrap<sp/>=<sp/>cellApps_.empty();</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>initData.clusterID<sp/>=<sp/>this-&gt;clusterID();</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;ProcessIP&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::addApp:<sp/>%u<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initData.id,<sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/>pApp<sp/>=<sp/>cellApps_.add(<sp/>addr,<sp/>viewerPort,<sp/>initData.id<sp/>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>pendingApps_.push_back(<sp/>pApp<sp/>);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>pApp-&gt;bundle();</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>initData;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>shared<sp/>cell<sp/>data<sp/>and<sp/>global<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sharedCellAppData_.empty())</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedData::iterator<sp/>iter<sp/>=<sp/>sharedCellAppData_.begin();</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>sharedCellAppData_.end())</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::setSharedData<sp/>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>SharedDataType(<sp/>SHARED_DATA_TYPE_CELL_APP<sp/>)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;first<sp/>&lt;&lt;<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sharedGlobalData_.empty())</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedData::iterator<sp/>iter<sp/>=<sp/>sharedGlobalData_.begin();</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>sharedGlobalData_.end())</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::setSharedData<sp/>);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>SharedDataType(<sp/>SHARED_DATA_TYPE_GLOBAL<sp/>)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;first<sp/>&lt;&lt;<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!servicesMap_.empty())</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ServicesMap::const_iterator<sp/>iFragment<sp/>=<sp/>servicesMap_.begin();</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iFragment<sp/>!=<sp/>servicesMap_.end())</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::addServiceFragment<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>iFragment-&gt;first<sp/>&lt;&lt;<sp/>iFragment-&gt;second;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iFragment;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>pApp-&gt;send();</highlight></codeline>
<codeline lineno="1440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a407aa46aac5e8855a7b5fc4e0e6339f7" kindref="member">CellAppMgr::recoverCellApp</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>addr;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>viewerPort;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>int32<sp/>cellAppID;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>GameTime<sp/>time;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasReceivedStartup;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>get<sp/>the<sp/>address<sp/>from<sp/>the<sp/>sender<sp/>info<sp/>but<sp/>we&apos;re<sp/>putting<sp/>it<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>addr<sp/>&gt;&gt;<sp/>viewerPort<sp/>&gt;&gt;<sp/>cellAppID<sp/>&gt;&gt;<sp/>time<sp/>&gt;&gt;<sp/>hasReceivedStartup;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasReceivedStartup)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>haveCellAppsReceivedStartup_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::recoverCellApp:<sp/>%s.<sp/>CellApp<sp/>=<sp/>%u,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hasReceivedStartup<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str(),<sp/>cellAppID,<sp/>hasReceivedStartup<sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>get<sp/>this<sp/>message,<sp/>we<sp/>should<sp/>have<sp/>been<sp/>started<sp/>with<sp/>-recover.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here,<sp/>we<sp/>handle<sp/>the<sp/>situation<sp/>where<sp/>this<sp/>was<sp/>not<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRecovering())</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cellApps_.empty())</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::recoverCellApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Recovering<sp/>when<sp/>we<sp/>were<sp/>not<sp/>started<sp/>with<sp/>-recover\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Only<sp/>needed<sp/>if<sp/>we<sp/>added<sp/>a<sp/>default<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaces_.clear();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startRecovery();</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasStarted_<sp/>&amp;&amp;<sp/>haveCellAppsReceivedStartup_)</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>timer<sp/>needs<sp/>to<sp/>be<sp/>started<sp/>when<sp/>the<sp/>CellAppMgr<sp/>has<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>started<sp/>with<sp/>-recover.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startTimer();</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/>pCellApp<sp/>=<sp/>cellApps_.find(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pCellApp)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Do<sp/>better<sp/>with<sp/>the<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastCellAppID_<sp/>=<sp/>std::max(<sp/>cellAppID,<sp/>lastCellAppID_<sp/>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp<sp/>=<sp/>cellApps_.add(<sp/>addr,<sp/>viewerPort,<sp/>cellAppID<sp/>);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::recoverCellApp:<sp/>Already<sp/>recovered<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>of<sp/>the<sp/>shared<sp/>CellApp<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>numEntries;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>numEntries;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>key;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>value;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numEntries;<sp/>++i)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>key<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedCellAppData_[<sp/>key<sp/>]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>of<sp/>the<sp/>shared<sp/>Global<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>numEntries;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>numEntries;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>key;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>value;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numEntries;<sp/>++i)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>key<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedGlobalData_[<sp/>key<sp/>]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>all<sp/>of<sp/>the<sp/>space<sp/>information<sp/>that<sp/>this<sp/>Cell<sp/>Application<sp/>has.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>numSpaces;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>numSpaces;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32<sp/>spaceIndex<sp/>=<sp/>0;<sp/>spaceIndex<sp/>&lt;<sp/>numSpaces;<sp/>++spaceIndex)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>may<sp/>occur<sp/>if<sp/>we<sp/>have<sp/>spaces<sp/>that<sp/>do<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::recoverCellApp:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Only<sp/>read<sp/>%u<sp/>of<sp/>%u<sp/>spaces.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Probably<sp/>due<sp/>to<sp/>a<sp/>space<sp/>with<sp/>no<sp/>cell.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceIndex,<sp/>numSpaces<sp/>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>or<sp/>create<sp/>the<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>spaceDataDefName;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceDataDefName;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space" kindref="compound">Space</ref>(<sp/>this-&gt;generateSpaceID(<sp/>spaceID<sp/>),</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceDataDefName,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;addSpace(<sp/>pSpace<sp/>);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially,<sp/>we<sp/>assume<sp/>that<sp/>we<sp/>don&apos;t<sp/>have<sp/>any<sp/>geometry<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>haven&apos;t<sp/>finished<sp/>loading<sp/>when<sp/>we<sp/>died.<sp/>But<sp/>if<sp/>one<sp/>of<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CellApps<sp/>tells<sp/>us<sp/>that<sp/>there<sp/>were,<sp/>then<sp/>we<sp/>believe<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>lastMappedGeometry;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>lastMappedGeometry;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lastMappedGeometry.empty())</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1aac0115ffe04c82cce6b6fc28da8b64ca" kindref="member">setLastMappedGeometry</ref>(<sp/>lastMappedGeometry<sp/>);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>space<sp/>geometry<sp/>mappings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>geometryMappingAccepted<sp/>=</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a1a6ddc6feb3a66bbbc076d0997535c0f" kindref="member">recoverGeometryMappings</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>artificialMinLoad:<sp/>no<sp/>need<sp/>event<sp/>number<sp/>for<sp/>this<sp/>as<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>follow<sp/>whether<sp/>geometry<sp/>mapping<sp/>accepted<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>artificialMinLoad;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>artificialMinLoad;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometryMappingAccepted)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a3de244c65ba25a764306b13ad340605c" kindref="member">artificialMinLoad</ref>(<sp/>artificialMinLoad<sp/>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>space<sp/>load<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a0730ffaffb0079b2bdf4077a0263a534" kindref="member">recoverLoadBounds</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>space<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a44b6a41f4f07bef9a4e0c2e0db417535" kindref="member">recoverSpaceData</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>recording<sp/>session<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a36bd5bdb3ac648831b7638161c516424" kindref="member">recoverRecording</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>cell<sp/>application<sp/>has<sp/>a<sp/>full<sp/>description<sp/>of<sp/>the<sp/>BSP<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>space<sp/>that<sp/>it<sp/>has.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initially,<sp/>all<sp/>of<sp/>the<sp/>cells<sp/>in<sp/>the<sp/>space<sp/>are<sp/>marked<sp/>as<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>recovered.<sp/>As<sp/>the<sp/>different<sp/>applications<sp/>are<sp/>recovered,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>mark<sp/>is<sp/>cleared.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a0365558d41df67821520ed63d6b47066" kindref="member">recoverCells</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>the<sp/>space<sp/>know<sp/>that<sp/>this<sp/>cell<sp/>application<sp/>is<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a7d530e46de704149c75b2b532feef26d" kindref="member">recoverCell</ref>(<sp/>*pCellApp,<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ac23cd5b3a5736f21e0978127ec9eb7d7" kindref="member">CellAppMgr::delApp</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::delAppArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.delApp(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ae5b8e3bc38e2022746e1cc7210250457" kindref="member">CellAppMgr::setBaseApp</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::setBaseAppArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TRACE_MSG(<sp/>&quot;CellAppMgr::setBaseApp:<sp/>addr<sp/>=<sp/>%s\n&quot;,<sp/>args.addr.c_str()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MF_ASSERT(<sp/>baseAppAddr_.ip<sp/>==<sp/>0<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppAddr_<sp/>=<sp/>args.addr;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitingFor_<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.setBaseApp(<sp/>baseAppAddr_<sp/>);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a944d2231409fe41a6c806400dd844a13" kindref="member">ready</ref>(<sp/>READY_BASE_APP<sp/>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ad1118f26b5a8f0560300ecaf6a2abe60" kindref="member">CellAppMgr::handleCellAppMgrBirth</ref>(</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::handleCellAppMgrBirthArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppMgrBirth:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>args.addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.addr<sp/>!=<sp/>interface_.address())</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;shutDown(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a7550b25f579a904c762b5d0e228b9838" kindref="member">CellAppMgr::handleBaseAppMgrBirth</ref>(</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::handleBaseAppMgrBirthArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG[<sp/></highlight><highlight class="stringliteral">&quot;Network&quot;</highlight><highlight class="normal"><sp/>](<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleBaseAppMgrBirth:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppMgr_.addr(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>already<sp/>be<sp/>ready<sp/>but<sp/>just<sp/>in<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a944d2231409fe41a6c806400dd844a13" kindref="member">ready</ref>(<sp/>READY_BASE_APP_MGR<sp/>);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1aecd9e3fa2c88211d81d2284a5372b9cd" kindref="member">CellAppMgr::handleCellAppDeath</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::handleCellAppDeathArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isShuttingDown_)</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/>pApp<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a5006aaadab0aecb6c036c9d555299c3a" kindref="member">findApp</ref>(<sp/>srcAddr<sp/>);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pApp<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeathArgs:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;From<sp/>CellApp<sp/>%u<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pApp-&gt;id(),<sp/>pApp-&gt;addr().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeathArgs:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;From<sp/>%s<sp/>(machined?)\n&quot;</highlight><highlight class="normal">,<sp/>srcAddr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1aecd9e3fa2c88211d81d2284a5372b9cd" kindref="member">handleCellAppDeath</ref>(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ad25ae80025a8fc92a23a5dbf2394825c" kindref="member">CellAppMgr::ackCellAppDeath</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::ackCellAppDeathArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>CellAppDeathHandlers::iterator<sp/>iter<sp/>=</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellAppDeathHandlers_.find(<sp/>args.deadAddr<sp/>);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>cellAppDeathHandlers_.end())</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>This<sp/>call<sp/>may<sp/>delete<sp/>the<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;clearWaiting(<sp/>srcAddr,<sp/>args.deadAddr<sp/>);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BW::string<sp/>srcAddrStr<sp/>=<sp/>srcAddr.c_str();</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::ackCellAppDeath:<sp/>No<sp/>handler<sp/>for<sp/>%s<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.deadAddr.c_str(),<sp/>srcAddrStr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a3c8c68f6e047a8e8672963b7bc730f50" kindref="member">CellAppMgr::handleBaseAppDeath</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleBaseAppDeath:\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>data.remainingLength();</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>pBlob<sp/>=<sp/>data.retrieve(<sp/>length<sp/>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>all<sp/>the<sp/>CellApps<sp/>know<sp/>about<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.handleBaseAppDeath(<sp/>pBlob,<sp/>length<sp/>);</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>off<sp/>the<sp/>dead<sp/>address<sp/>and<sp/>update<sp/>our<sp/>service<sp/>map<sp/>accordingly,<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>it<sp/>was<sp/>a<sp/>ServiceApp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>MemoryIStream<sp/>temp(<sp/>pBlob,<sp/>length<sp/>);</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>deadBaseAppAddress;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>isService<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>&gt;&gt;<sp/>deadBaseAppAddress<sp/>&gt;&gt;<sp/>isService;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.finish();</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isService)</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>servicesMap_.removeFragmentsForAddress(<sp/>deadBaseAppAddress<sp/>);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>DBAppMgr<sp/>know<sp/>about<sp/>it<sp/>so<sp/>it<sp/>can<sp/>notify<sp/>DBApps<sp/>to<sp/>re-map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbAppMgr_.channel().isEstablished())</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>dbAppMgr_.bundle();</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>DBAppMgrInterface::handleBaseAppDeath<sp/>);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.addBlob(<sp/>pBlob,<sp/>length<sp/>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbAppMgr_.send();</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleBaseAppDeath:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>informing<sp/>DBAppMgr<sp/>since<sp/>none<sp/>known<sp/>at<sp/>the<sp/>moment\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ad3682d3453e0e902ce20660e9c8e818b" kindref="member">CellAppMgr::handleDBAppMgrBirth</ref>(</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::handleDBAppMgrBirthArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppMgr_.addr(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1addb94a96a6a538774a7d174f995e88b2" kindref="member">CellAppMgr::setDBAppAlpha</ref>(<sp/></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::setDBAppAlphaArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>dbAppAlpha_.addr(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.setDBAppAlpha(<sp/>args.addr<sp/>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a944d2231409fe41a6c806400dd844a13" kindref="member">CellAppMgr::ready</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>component<sp/>)</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Cell<sp/>App<sp/>Manager<sp/>is<sp/>ready<sp/>once<sp/>it<sp/>has<sp/>a<sp/>Cell<sp/>App,<sp/>Base<sp/>App<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>App<sp/>Manager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>this<sp/>make<sp/>it<sp/>0?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(component<sp/>==<sp/>waitingFor_)</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isRecovering_<sp/>||<sp/>!haveCellAppsReceivedStartup_)</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr<sp/>is<sp/>ready<sp/>to<sp/>start.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startTimer();</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/>waitingFor_<sp/>&amp;=<sp/>~component;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a7aaf6129c6620546eed7abdd77aacc08" kindref="member">CellAppMgr::setClusterID</ref>(</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::setClusterIDArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="1833"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;clusterID(<sp/>args.clusterID<sp/>);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterUniqueID_<sp/>=<sp/>args.clusterUniqueID;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::setClusterID:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;clusterID(%u),<sp/>clusterUniqueID(%s).\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;clusterID(),</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterUniqueID_.toString().c_str()<sp/>);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a944d2231409fe41a6c806400dd844a13" kindref="member">ready</ref>(<sp/>READY_CLUSTER_ID<sp/>);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ac6d627d6bf2679b77fb55095272a7790" kindref="member">CellAppMgr::startup</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;startTimer();</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>forces<sp/>the<sp/>default<sp/>space<sp/>to<sp/>be<sp/>created<sp/>if<sp/>it<sp/>isn&apos;t<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr<sp/>is<sp/>starting\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>cellApps<sp/>to<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.startAll(<sp/>baseAppAddr_<sp/>);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::startTimer()</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!hasStarted_<sp/>);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/>gameTimer_<sp/>=<sp/>this-&gt;mainDispatcher().addTimer(</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000000/Config::updateHertz(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)TIMEOUT_GAME_TICK,</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GameTick&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/>pTimeKeeper_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TimeKeeper(<sp/>interface_,<sp/>gameTimer_,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_,<sp/>Config::updateHertz()<sp/>);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>hasStarted_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a5d35c5e13ff74afed7fcf87f11bd75dd" kindref="member">CellAppMgr::triggerControlledShutDown</ref>()</highlight></codeline>
<codeline lineno="1884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>baseAppMgr_.bundle();</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>BaseAppMgrInterface::controlledShutDownArgs<sp/>&amp;args<sp/>=</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseAppMgrInterface::controlledShutDownArgs::start(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/>args.stage<sp/>=<sp/>SHUTDOWN_TRIGGER;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/>args.shutDownTime<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>unused<sp/>on<sp/>receiving<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppMgr_.send();</highlight></codeline>
<codeline lineno="1892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1aecd9e3fa2c88211d81d2284a5372b9cd" kindref="member">CellAppMgr::handleCellAppDeath</ref>(<sp/>Mercury::Address<sp/>addr<sp/>)</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!baseAppMgr_.channel().isEstablished())</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseAppMgr<sp/>was<sp/>not<sp/>registered.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/>pDeadApp<sp/>=<sp/>cellApps_.find(<sp/>addr<sp/>);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDeadApp<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastCellAppDeath_<sp/>!=<sp/>addr)</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>Could<sp/>not<sp/>find<sp/>%s.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(It<sp/>may<sp/>already<sp/>have<sp/>been<sp/>removed)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>%s<sp/>already<sp/>killed.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>Sending<sp/>SIGQUIT<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;pBWMachineD()-&gt;sendSignalToApp(<sp/>addr,<sp/>SIGQUIT<sp/>))</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>Failed<sp/>to<sp/>send<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SIGQUIT<sp/>to<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>lastCellAppDeath_<sp/>=<sp/>addr;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cellAppDeathHandlers_.find(<sp/>addr<sp/>)<sp/>!=<sp/>cellAppDeathHandlers_.end())</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Still<sp/>have<sp/>handler<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>the<sp/>other<sp/>handlers<sp/>know<sp/>that<sp/>they<sp/>may<sp/>not<sp/>receive<sp/>a<sp/>reply<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CellApp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppDeathHandlers::iterator<sp/>iter<sp/>=<sp/>cellAppDeathHandlers_.begin();</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>cellAppDeathHandlers_.end())</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>deadAddr<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_app_death_handler" kindref="compound">CellAppDeathHandler</ref><sp/>*<sp/>pHandler<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>This<sp/>call<sp/>may<sp/>delete<sp/>the<sp/>handler.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHandler-&gt;clearWaiting(<sp/>addr,<sp/>deadAddr<sp/>);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>time<sp/>to<sp/>wait<sp/>for<sp/>replies<sp/>from<sp/>all<sp/>CellApps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>MAX_WAIT_ON_CELLAPP_DEATH<sp/>=<sp/>2.f<sp/>*<sp/>Config::cellAppTimeout();</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>object<sp/>will<sp/>send<sp/>the<sp/>notification<sp/>to<sp/>the<sp/>BaseAppMgr<sp/>once<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CellApps<sp/>have<sp/>replied.<sp/><sp/>This<sp/>is<sp/>to<sp/>ensure<sp/>that<sp/>BaseApps<sp/>do<sp/>not<sp/>begin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restoring<sp/>with<sp/>an<sp/>incomplete<sp/>picture<sp/>of<sp/>the<sp/>entity<sp/>population.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>AckCellAppDeathHelper<sp/>in<sp/>cellapp/cellapp.cpp<sp/>for<sp/>more<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app_death_handler" kindref="compound">CellAppDeathHandler</ref><sp/>*<sp/>pCellAppDeathHandler<sp/>=</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_death_handler" kindref="compound">CellAppDeathHandler</ref>(<sp/>addr,</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::secondsToTicks(<sp/>MAX_WAIT_ON_CELLAPP_DEATH,<sp/>1<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>cellAppDeathHandlers_[<sp/>addr<sp/>]<sp/>=<sp/>pCellAppDeathHandler;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>pDeadApp-&gt;<ref refid="class_cell_app_1a71c2e30e5ae34289dd5646bee453a5fd" kindref="member">handleUnexpectedDeath</ref>(<sp/>pCellAppDeathHandler-&gt;stream()<sp/>);</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>the<sp/>dead<sp/>cell<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>pendingApps_.erase(</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove(<sp/>pendingApps_.begin(),<sp/>pendingApps_.end(),<sp/>pDeadApp<sp/>),</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pendingApps_.end()<sp/>);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.handleCellAppDeath(<sp/>addr,<sp/>pCellAppDeathHandler<sp/>);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shutDownServer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>run<sp/>out<sp/>of<sp/>CellApps<sp/>we&apos;re<sp/>in<sp/>a<sp/>very<sp/>bad<sp/>state,<sp/>so<sp/>shut<sp/>down<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>server<sp/>before<sp/>more<sp/>hell<sp/>breaks<sp/>loose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cellApps_.empty()<sp/>&amp;&amp;<sp/>Config::shutDownServerOnBadState())</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;All<sp/>CellApps<sp/>are<sp/>dead,<sp/>starting<sp/>controlled<sp/>shutdown!\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutDownServer<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config::shutDownServerOnCellAppDeath())</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOTICE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::handleCellAppDeath:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;shutDownServerOnCellAppDeath<sp/>is<sp/>enabled.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shutting<sp/>down<sp/>server.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutDownServer<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shutDownServer)</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a5d35c5e13ff74afed7fcf87f11bd75dd" kindref="member">triggerControlledShutDown</ref>();</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a31fdf682e169d64f41d810704852a7ff" kindref="member">CellAppMgr::setSharedData</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/>SharedDataType<sp/>dataType;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>key;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>value;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>dataType<sp/>&gt;&gt;<sp/>key<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>originalSrcAddr<sp/>=<sp/>srcAddr;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Messages<sp/>from<sp/>the<sp/>BaseAppMgr<sp/>will<sp/>contain<sp/>the<sp/>address<sp/>of<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sender<sp/>of<sp/>the<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>Mercury::Address<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>originalSrcAddr;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>data.remainingLength()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>!data.error()<sp/>)</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dataType<sp/>==<sp/>SHARED_DATA_TYPE_CELL_APP)<sp/>||</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_GLOBAL))</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_CELL_APP)</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedCellAppData_[<sp/>key<sp/>]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedGlobalData_[<sp/>key<sp/>]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.setSharedData(<sp/>dataType,<sp/>key,<sp/>value,<sp/>originalSrcAddr<sp/>);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dataType<sp/>==<sp/>SHARED_DATA_TYPE_BASE_APP)<sp/>||</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_GLOBAL))</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>baseAppMgr_.bundle();</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppMgrInterface::setSharedData<sp/>);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>dataType<sp/>&lt;&lt;<sp/>key<sp/>&lt;&lt;<sp/>value<sp/>&lt;&lt;<sp/>originalSrcAddr;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseAppMgr_.send();</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1afa4ce338ac9c0d84a8c79ac1cdd8a26e" kindref="member">CellAppMgr::delSharedData</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>SharedDataType<sp/>dataType;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>key;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>dataType<sp/>&gt;&gt;<sp/>key;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>originalSrcAddr<sp/>=<sp/>srcAddr;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Messages<sp/>from<sp/>the<sp/>BaseAppMgr<sp/>will<sp/>contain<sp/>the<sp/>address<sp/>of<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sender<sp/>of<sp/>the<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>Mercury::Address<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>originalSrcAddr;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>data.remainingLength()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>!data.error()<sp/>)</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dataType<sp/>==<sp/>SHARED_DATA_TYPE_CELL_APP)<sp/>||</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_GLOBAL))</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Check<sp/>that<sp/>this<sp/>is<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_CELL_APP)</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedCellAppData_.erase(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharedGlobalData_.erase(<sp/>key<sp/>);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.delSharedData(<sp/>dataType,<sp/>key,<sp/>originalSrcAddr<sp/>);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dataType<sp/>==<sp/>SHARED_DATA_TYPE_BASE_APP)<sp/>||</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dataType<sp/>==<sp/>SHARED_DATA_TYPE_GLOBAL))</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>baseAppMgr_.bundle();</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>BaseAppMgrInterface::delSharedData<sp/>);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>dataType<sp/>&lt;&lt;<sp/>key<sp/>&lt;&lt;<sp/>originalSrcAddr;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseAppMgr_.send();</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a3e2e07488a31bff2d068b1bcd4c294b3" kindref="member">CellAppMgr::addServiceFragment</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>serviceName;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityMailBoxRef<sp/>fragmentMailBox;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>serviceName<sp/>&gt;&gt;<sp/>fragmentMailBox;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/>servicesMap_.addFragment(<sp/>serviceName,<sp/>fragmentMailBox<sp/>);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.addServiceFragment(<sp/>serviceName,<sp/>fragmentMailBox<sp/>);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1abe8f14de82a517d50d8c899ab1b46c17" kindref="member">CellAppMgr::delServiceFragment</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/>serviceName;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>fragmentAddress;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>serviceName<sp/>&gt;&gt;<sp/>fragmentAddress;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>servicesMap_.removeFragment(<sp/>serviceName,<sp/>fragmentAddress<sp/>);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApps_.delServiceFragment(<sp/>serviceName,<sp/>fragmentAddress<sp/>);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a34b14492118c601157f4bf7d2da5ad27" kindref="member">CellAppMgr::updateSpaceProperty</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a1d2ff728430334aa80d143bd1239fcd0" kindref="member">sendUpdateProperty</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1aba0ba1da897b6d1f86ee35b981a0e566" kindref="member">CellAppMgr::writeSpaceToDB</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::writeSpaceToDBArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>args.spaceID<sp/>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pSpace<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a96cd7281560994d31527a0c719549dad" kindref="member">writeToDB</ref>();</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1aeae031a8808f39ff071e8c971664a7be" kindref="member">CellAppMgr::addSpaceGeometryMapping</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1aeb71a984f5242e6353bfc2a220535828" kindref="member">sendAddGeometryMapping</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ab7b1aac64c2f4a373133517ade065f8c" kindref="member">CellAppMgr::removeSpaceGeometryMapping</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::removeSpaceGeometryMappingArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>args.spaceID<sp/>);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a5db1e9cf73d14b6e2d69a635cdd17f2c" kindref="member">sendRemoveGeometryMapping</ref>(<sp/>args.entryID<sp/>);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ae838d8c54709ce428c0fb513197d250e" kindref="member">CellAppMgr::updateSpaceLoadBounds</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;updateLoadBounds(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a457fcc4661eec6a90966996ff4e252ae" kindref="member">CellAppMgr::updateSpaceArtificialMinLoad</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::updateSpaceArtificialMinLoadArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>args.spaceID<sp/>);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a7a67fe97453ee61e35dd3caa68fe241d" kindref="member">sendUpdateArtificialMinLoad</ref>(<sp/>args.artificialMinLoad<sp/>);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1adc6a7301245e63128e370ff7634e4953" kindref="member">CellAppMgr::notifySpaceStartRecording</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>SpaceID<sp/>spaceID;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>spaceID;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>spaceID<sp/>);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a5a95e4c8acb292875e2619e3e4de886d" kindref="member">sendStartRecording</ref>(<sp/>srcAddr,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a6384037511333376d5e4a406368cc3c8" kindref="member">CellAppMgr::notifySpaceStopRecording</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::notifySpaceStopRecordingArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>args.spaceID<sp/>);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pSpace<sp/>!=<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a3740a84384fdf9ec41f24d0ee9078cbe" kindref="member">sendStopRecording</ref>(<sp/>srcAddr<sp/>);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ab4bf78ae7a1473d5b9b34b587b021ec7" kindref="member">CellAppMgr::shutDownSpace</ref>(</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::shutDownSpaceArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a7ab58c260f0ecde28e0607f5da9553cf" kindref="member">findSpace</ref>(<sp/>args.spaceID<sp/>);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace-&gt;hasHadEntities())</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delay<sp/>shutting<sp/>down<sp/>the<sp/>space<sp/>until<sp/>the<sp/>end<sp/>of<sp/>tick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>don&apos;t<sp/>shutdown<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spacesShuttingDown_.insert(<sp/>args.spaceID<sp/>).second)</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1a0332d0bef3a74bcbef274e1fa0cc8e0f" kindref="member">shutDown</ref>();</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NOTICE_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::shutDownSpace:<sp/>Not<sp/>shutting<sp/>down<sp/>space<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%u<sp/>since<sp/>it<sp/>has<sp/>not<sp/>had<sp/>any<sp/>entities\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::shutDownSpace:<sp/>Could<sp/>not<sp/>find<sp/>space<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.spaceID<sp/>);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a80b4555e74146e98a3cb092888c77334" kindref="member">CellAppMgr::ackBaseAppsShutDown</ref>(</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::ackBaseAppsShutDownArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pShutDownHandler_)</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pShutDownHandler_-&gt;ackBaseApps(<sp/>args.stage<sp/>);</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1acd03b83a9f0cae0d88f74434b5af88f8" kindref="member">CellAppMgr::checkStatus</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="2337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>IF_NOT_MF_ASSERT_DEV(<sp/>addr<sp/>==<sp/>baseAppMgr_.addr()<sp/>)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>reply<sp/>=<sp/>baseAppMgr_.bundle();</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/>reply.startReply(<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>reply<sp/>&lt;&lt;<sp/>uint8(<sp/>waitingFor_<sp/>==<sp/>0<sp/>)<sp/>&lt;&lt;<sp/>cellApps_.size();</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitingFor_<sp/>&amp;<sp/>READY_CELL_APP)</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr<sp/>is<sp/>waiting<sp/>for<sp/>a<sp/>CellApp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitingFor_<sp/>&amp;<sp/>READY_BASE_APP_MGR)</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr<sp/>is<sp/>waiting<sp/>for<sp/>the<sp/>BaseAppMgr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitingFor_<sp/>&amp;<sp/>READY_BASE_APP)</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr<sp/>is<sp/>waiting<sp/>for<sp/>a<sp/>BaseApp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waitingFor_<sp/>&amp;<sp/>READY_CLUSTER_ID)</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr<sp/>is<sp/>waiting<sp/>for<sp/>a<sp/>registered<sp/>clusterID<sp/>from<sp/>BaseAppMgr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/>baseAppMgr_.send();</highlight></codeline>
<codeline lineno="2369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a7e1fe9dec0c380232dfad48b8f28c7ec" kindref="member">CellAppMgr::gameTimeReading</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>srcAddr,</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::UnpackedMessageHeader<sp/>&amp;<sp/>header,</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellAppMgrInterface::gameTimeReadingArgs<sp/>&amp;<sp/>args<sp/>)</highlight></codeline>
<codeline lineno="2379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>reading<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTimeKeeper_)</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tell<sp/>the<sp/>requester<sp/>what<sp/>we<sp/>think<sp/>the<sp/>game<sp/>time<sp/>should<sp/>be....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading<sp/>=<sp/>pTimeKeeper_-&gt;readingNow();</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::gameTimeReading:<sp/>pTimeKeeper_<sp/>is<sp/>NULL.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading<sp/>=<sp/>args.gameTimeReadingContribution;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::AutoSendBundle<sp/>autoBundle(<sp/>this-&gt;networkInterface(),<sp/>srcAddr<sp/>);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>*autoBundle;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startReply(<sp/>header.replyID<sp/>);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>reading;</highlight></codeline>
<codeline lineno="2397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>Private<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal">SpaceID<sp/>CellAppMgr::generateSpaceID(<sp/>SpaceID<sp/>spaceID<sp/>)</highlight></codeline>
<codeline lineno="2409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Get<sp/>a<sp/>better<sp/>scheme<sp/>for<sp/>allocating<sp/>space<sp/>ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spaceID<sp/>==<sp/>NULL_SPACE_ID)</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceID<sp/>=<sp/>++lastSpaceID_;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>spaces_.find(<sp/>spaceID<sp/>)<sp/>==<sp/>spaces_.end()<sp/>);</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSpaceID_<sp/>=<sp/>std::max(<sp/>spaceID,<sp/>lastSpaceID_<sp/>);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spaceID;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::addSpace(<sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pNewSpace<sp/>)</highlight></codeline>
<codeline lineno="2428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/>spaces_[pNewSpace-&gt;id()]<sp/>=<sp/>pNewSpace;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CellAppMgr::startRecovery()</highlight></codeline>
<codeline lineno="2437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isRecovering_)</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>look<sp/>at<sp/>how<sp/>long<sp/>this<sp/>should<sp/>be.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryTimer_<sp/>=</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;mainDispatcher().addOnceOffTimer(<sp/>2000000,<sp/></highlight><highlight class="comment">//<sp/>2<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)TIMEOUT_END_OF_RECOVERY<sp/>);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isRecovering_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a944d2231409fe41a6c806400dd844a13" kindref="member">ready</ref>(<sp/>waitingFor_<sp/>);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::startRecovery:<sp/>Already<sp/>in<sp/>recovery<sp/>mode.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::endRecovery()</highlight></codeline>
<codeline lineno="2461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>isRecovering_<sp/>);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::endRecovery:<sp/>End<sp/>of<sp/>Recovery\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>isRecovering_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space_1aa2d49c80b56e81f75062ca270d64ef83" kindref="member">Space::endRecovery</ref>();</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateRanges();</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;syncSpaceGeometryMappings();</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;syncSpaceArtificialMinLoad();</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;syncSpaceData();</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;syncSpaceRecording();</highlight></codeline>
<codeline lineno="2473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::syncSpaceGeometryMappings()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2480"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;syncGeometryMappings();</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::syncSpaceArtificialMinLoad()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2496"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;sendUpdateArtificialMinLoad(</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;artificialMinLoad()<sp/>);</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::syncSpaceData()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2513"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;syncSpaceData();</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::syncSpaceRecording()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2529"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;syncRecording();</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::handleTimeout(<sp/>TimerHandle<sp/></highlight><highlight class="comment">/*handle*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg<sp/>)</highlight></codeline>
<codeline lineno="2545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pShutDownHandler_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pShutDownHandler_-&gt;isPaused())</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pShutDownHandler_-&gt;checkStatus();</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isShuttingDown_)</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((uintptr)arg)</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BW_EVALUATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_LOAD_BALANCE:</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;isRecovering()<sp/>&amp;&amp;<sp/>hasStarted_)</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;loadBalance();</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_META_LOAD_BALANCE:</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldMetaLoadBalance_<sp/>&amp;&amp;<sp/>hasStarted_)</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;metaLoadBalance();</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_OVERLOAD_CHECK:</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hasStarted_)</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;overloadCheck();</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_GAME_TICK:</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;advanceTime();</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Config::archivePeriodInTicks()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((time_<sp/>%<sp/>Config::archivePeriodInTicks())<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>might<sp/>be<sp/>good<sp/>to<sp/>spread<sp/>this<sp/>out<sp/>over<sp/>time?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a6b1fa0aae896159abaac06aebee45484" kindref="member">writeGameTimeToDB</ref>();</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(Config::archivePeriodInTicks()<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Config::shouldArchiveSpaceData()))</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1a693926ab79e47554df91c551fbc025a1" kindref="member">writeSpacesToDB</ref>();</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.updateCellAppTimeout();</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;checkForDeadCellApps();</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppDeathHandlers::iterator<sp/>iter<sp/>=</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellAppDeathHandlers_.begin();</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>cellAppDeathHandlers_.end())</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_app_death_handler" kindref="compound">CellAppDeathHandler</ref><sp/>*<sp/>pCellAppDeathHandler<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>This<sp/>may<sp/>delete<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellAppDeathHandler-&gt;tick();</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SpaceIDs::iterator<sp/>iter<sp/>=<sp/>spacesShuttingDown_.begin();</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spacesShuttingDown_.end())</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>found<sp/>=<sp/>spaces_.find(<sp/>*iter<sp/>);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>found-&gt;second;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaces_.erase(<sp/>found<sp/>);</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacesShuttingDown_.clear();</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!pendingApps_.empty())</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>it<sp/>off<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/>pApp<sp/>=<sp/>pendingApps_.back();</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pendingApps_.pop_back();</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>cell<sp/>for<sp/>every<sp/>space<sp/>(that<sp/>we<sp/>know<sp/>about)<sp/>that<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>a<sp/>cell<sp/>yet.<sp/>(Should<sp/>only<sp/>be<sp/>needed<sp/>for<sp/>first<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;second-&gt;numCells()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;<ref refid="class_cell_app_1afb3c3cd6e8998e9c5ff945c1f8993015" kindref="member">addCell</ref>(<sp/>*pApp<sp/>);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter++;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.sendCellAppMgrInfo(<sp/>this-&gt;<ref refid="class_cell_app_mgr_1a8342175d52837dbc0f213cbc2ac59333" kindref="member">maxCellAppLoad</ref>()<sp/>);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TIMEOUT_END_OF_RECOVERY:</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryTimer_.clearWithoutCancel();</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;endRecovery();</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellAppMgr::checkForDeadCellApps()</highlight></codeline>
<codeline lineno="2678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>*<sp/>pDeadApp<sp/>=</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cellApps_.checkForDeadCellApps(<sp/>Config::cellAppTimeoutInStamps()<sp/>);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDeadApp)</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>handle<sp/>one<sp/>timeout<sp/>per<sp/>check<sp/>because<sp/>the<sp/>above<sp/>call<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>likely<sp/>change<sp/>the<sp/>collection<sp/>we<sp/>are<sp/>iterating<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::checkForDeadCellApps:<sp/>%s<sp/>has<sp/>timed<sp/>out.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDeadApp-&gt;addr().c_str()<sp/>);</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_cell_app_mgr_1aecd9e3fa2c88211d81d2284a5372b9cd" kindref="member">handleCellAppDeath</ref>(<sp/>pDeadApp-&gt;addr()<sp/>);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1ab4ed13152635492a9a00a1b204c4225c" kindref="member">CellAppMgr::clearCellAppDeathHandler</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/>addr<sp/>)</highlight></codeline>
<codeline lineno="2697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cellAppDeathHandlers_.erase(<sp/>addr<sp/>))</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::clearCellAppDeathHandler:<sp/>No<sp/>handler<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addr.c_str()<sp/>);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a693926ab79e47554df91c551fbc025a1" kindref="member">CellAppMgr::writeSpacesToDB</ref>()</highlight></codeline>
<codeline lineno="2710"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;dbAppAlpha().channel().isEstablished())</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>this-&gt;dbAppAlpha().bundle();</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>iter<sp/>=<sp/>spaces_.begin();</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>spaces_.end())</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>DBAppInterface::writeSpace<sp/>);</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;sendToDB(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;dbAppAlpha().send();</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::writeSpacesToDB:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>known<sp/>DBApp,<sp/>not<sp/>writing<sp/>to<sp/>DB.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1a6b1fa0aae896159abaac06aebee45484" kindref="member">CellAppMgr::writeGameTimeToDB</ref>()</highlight></codeline>
<codeline lineno="2737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;dbAppAlpha().channel().isEstablished())</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>this-&gt;dbAppAlpha().bundle();</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBAppInterface::writeGameTimeArgs<sp/>&amp;<sp/>rWriteGameTime<sp/>=</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBAppInterface::writeGameTimeArgs::start(<sp/>bundle<sp/>);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rWriteGameTime.gameTime<sp/>=<sp/>time_;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;dbAppAlpha().send();</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellAppMgr::writeGameTimeToDB:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>known<sp/>DBApp,<sp/>not<sp/>writing<sp/>to<sp/>DB.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_mgr_1afa59837097ff3ea21d8605c3705bd1d6" kindref="member">CellAppMgr::numSpacesWithLoadedGeometry</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2764"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>Spaces::const_iterator<sp/>spaceIter;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(spaceIter<sp/>=<sp/>spaces_.begin();<sp/>spaceIter<sp/>!=<sp/>spaces_.end();<sp/>spaceIter++)</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spaceIter-&gt;second-&gt;cellsHaveLoadedMappedGeometry())</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="2775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cellappmgr.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellappmgr/cellappmgr.cpp"/>
  </compounddef>
</doxygen>
