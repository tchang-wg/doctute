<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_log_string_interpolator" kind="class" language="C++" prot="public">
    <compoundname>LogStringInterpolator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">FormatStringHandler</basecompoundref>
    <includes refid="log__string__interpolator_8hpp" local="no">log_string_interpolator.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_log_string_interpolator_1a7f96cbf961ee5879e1131b6e2fd42244" prot="protected" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string LogStringInterpolator::formatString_</definition>
        <argsstring></argsstring>
        <name>formatString_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="53" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_log_string_interpolator_1a252b8d6c9c3291bd2d2e1f4f66bc41ce" prot="protected" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string LogStringInterpolator::components_</definition>
        <argsstring></argsstring>
        <name>components_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="54" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_log_string_interpolator_1a0f32f7ec1a448e552bf904485b82fc3a" prot="protected" static="no" mutable="no">
        <type>StringOffsetList</type>
        <definition>StringOffsetList LogStringInterpolator::stringOffsets_</definition>
        <argsstring></argsstring>
        <name>stringOffsets_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="55" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_log_string_interpolator_1af187d95e4a6c5ac0240a6ba1c5cefd95" prot="protected" static="no" mutable="no">
        <type>BW::vector&lt; <ref refid="class_format_data" kindref="compound">FormatData</ref> &gt;</type>
        <definition>BW::vector&lt; FormatData &gt; LogStringInterpolator::fmtData_</definition>
        <argsstring></argsstring>
        <name>fmtData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="56" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_log_string_interpolator_1a2eb8cdda0ca57db4edd8b1a072aab20d" prot="protected" static="no" mutable="no">
        <type>MessageLogger::FormatStringOffsetId</type>
        <definition>MessageLogger::FormatStringOffsetId LogStringInterpolator::fileOffset_</definition>
        <argsstring></argsstring>
        <name>fileOffset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="57" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_log_string_interpolator_1a76c09067b4070d45cfb2a4119d964c65" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool LogStringInterpolator::isOk_</definition>
        <argsstring></argsstring>
        <name>isOk_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="60" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_log_string_interpolator_1a71393337e52fd4899b2d5d430341fc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogStringInterpolator::LogStringInterpolator</definition>
        <argsstring>()</argsstring>
        <name>LogStringInterpolator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="28" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1acd9278dbbdbc7349ea82d1b9f294b63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogStringInterpolator::LogStringInterpolator</definition>
        <argsstring>(const BW::string &amp;formatString)</argsstring>
        <name>LogStringInterpolator</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>formatString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="29" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1acdfaf5aa62ccf61f392a74a545814123" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>LogStringInterpolator::~LogStringInterpolator</definition>
        <argsstring>()</argsstring>
        <name>~LogStringInterpolator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="30" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1ac3eb4e28ae3f943cefb073e11a101e0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool LogStringInterpolator::isOk</definition>
        <argsstring>()</argsstring>
        <name>isOk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="32" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1af100c1a190ca0548f94f6c43f3c47507" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LogStringInterpolator::onString</definition>
        <argsstring>(size_t start, size_t end)</argsstring>
        <name>onString</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="35" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1abe3e0699bae3c72a06c005dc562a1d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void LogStringInterpolator::onToken</definition>
        <argsstring>(char type, int cflags, int min, int max, int flags, uint8 base, int vflags)</argsstring>
        <name>onToken</name>
        <param>
          <type>char</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cflags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>base</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="36" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1a151ae4a28a109233fcecc0c85f762145" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MessageLogger::FormatStringOffsetId</type>
        <definition>MessageLogger::FormatStringOffsetId LogStringInterpolator::fileOffset</definition>
        <argsstring>() const </argsstring>
        <name>fileOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the current offset into the format string file.</para><para><simplesect kind="return"><para>The current read/write offset into the format string file. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="39" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1a94ad6e9c66e786f2dde16a3e0e5717b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LogStringInterpolator::write</definition>
        <argsstring>(FileStream &amp;fs)</argsstring>
        <name>write</name>
        <param>
          <type>FileStream &amp;</type>
          <declname>fs</declname>
          <defname>fileStream</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the broken down format string to the provided FileStream.</para><para><simplesect kind="see"><para><ref refid="class_log_string_interpolator_1aac85bec6844eb68fe532ae3f910e23df" kindref="member">LogStringInterpolator::read</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The FileStream to write the format string data to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the format string details were successfully written, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="40" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="95" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1aac85bec6844eb68fe532ae3f910e23df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogStringInterpolator::read</definition>
        <argsstring>(FileStream &amp;fs)</argsstring>
        <name>read</name>
        <param>
          <type>FileStream &amp;</type>
          <declname>fs</declname>
          <defname>fileStream</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method reads the broken down format string data from a FileStream.</para><para><simplesect kind="see"><para><ref refid="class_log_string_interpolator_1a94ad6e9c66e786f2dde16a3e0e5717b7" kindref="member">LogStringInterpolator::write</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The FileStream to read the format string data from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="41" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1ada403237077cda2788726c1c729bf3fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string &amp; LogStringInterpolator::formatString</definition>
        <argsstring>() const </argsstring>
        <name>formatString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the format string for the current interpolator.</para><para><simplesect kind="return"><para>The format string associated with the log line. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="43" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1a04707977aef918f370b1ea058ee3e1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LogStringInterpolator::streamToLog</definition>
        <argsstring>(LogStringWriter &amp;writer, BinaryIStream &amp;inputStream, MessageLogger::NetworkVersion version=MESSAGE_LOGGER_VERSION)</argsstring>
        <name>streamToLog</name>
        <param>
          <type><ref refid="class_log_string_writer" kindref="compound">LogStringWriter</ref> &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>inputStream</declname>
        </param>
        <param>
          <type>MessageLogger::NetworkVersion</type>
          <declname>version</declname>
          <defval>MESSAGE_LOGGER_VERSION</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="45" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="158" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1a2361b17d810a58e36475b33c0576d9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LogStringInterpolator::streamToString</definition>
        <argsstring>(BinaryIStream &amp;inputStream, BW::string &amp;str, MessageLogger::NetworkVersion version=MESSAGE_LOGGER_VERSION)</argsstring>
        <name>streamToString</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>inputStream</declname>
        </param>
        <param>
          <type>BW::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>MessageLogger::NetworkVersion</type>
          <declname>version</declname>
          <defval>MESSAGE_LOGGER_VERSION</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="49" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="144" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_log_string_interpolator_1af06e7bc0f85a3e912c4f6538066aaaee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Handler</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool LogStringInterpolator::interpolate</definition>
        <argsstring>(Handler &amp;handler, BinaryIStream &amp;inputStream, MessageLogger::NetworkVersion version)</argsstring>
        <name>interpolate</name>
        <param>
          <type>Handler &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>inputStream</declname>
        </param>
        <param>
          <type>MessageLogger::NetworkVersion</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.cpp" line="175" column="1" bodyfile="tools/message_logger/log_string_interpolator.cpp" bodystart="175" bodyend="374"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_log_string_interpolator_1ad2f1a50cb3ddc4d37c86683c51e88547" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Handler</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool LogStringInterpolator::interpolate</definition>
        <argsstring>(Handler &amp;handler, BinaryIStream &amp;is, uint8 version)</argsstring>
        <name>interpolate</name>
        <param>
          <type>Handler &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_string_interpolator.hpp" line="62" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class handles both reading and writing bwlogs. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1811">
        <label>FormatStringHandler</label>
      </node>
      <node id="1810">
        <label>LogStringInterpolator</label>
        <link refid="class_log_string_interpolator"/>
        <childnode refid="1811" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1813">
        <label>FormatStringHandler</label>
      </node>
      <node id="1812">
        <label>LogStringInterpolator</label>
        <link refid="class_log_string_interpolator"/>
        <childnode refid="1813" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tools/message_logger/log_string_interpolator.hpp" line="26" column="1" bodyfile="tools/message_logger/log_string_interpolator.hpp" bodystart="25" bodyend="64"/>
    <listofallmembers>
      <member refid="class_log_string_interpolator_1a252b8d6c9c3291bd2d2e1f4f66bc41ce" prot="protected" virt="non-virtual"><scope>LogStringInterpolator</scope><name>components_</name></member>
      <member refid="class_log_string_interpolator_1a151ae4a28a109233fcecc0c85f762145" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>fileOffset</name></member>
      <member refid="class_log_string_interpolator_1a2eb8cdda0ca57db4edd8b1a072aab20d" prot="protected" virt="non-virtual"><scope>LogStringInterpolator</scope><name>fileOffset_</name></member>
      <member refid="class_log_string_interpolator_1af187d95e4a6c5ac0240a6ba1c5cefd95" prot="protected" virt="non-virtual"><scope>LogStringInterpolator</scope><name>fmtData_</name></member>
      <member refid="class_log_string_interpolator_1ada403237077cda2788726c1c729bf3fd" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>formatString</name></member>
      <member refid="class_log_string_interpolator_1a7f96cbf961ee5879e1131b6e2fd42244" prot="protected" virt="non-virtual"><scope>LogStringInterpolator</scope><name>formatString_</name></member>
      <member refid="class_log_string_interpolator_1ad2f1a50cb3ddc4d37c86683c51e88547" prot="private" virt="non-virtual"><scope>LogStringInterpolator</scope><name>interpolate</name></member>
      <member refid="class_log_string_interpolator_1af06e7bc0f85a3e912c4f6538066aaaee" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>interpolate</name></member>
      <member refid="class_log_string_interpolator_1ac3eb4e28ae3f943cefb073e11a101e0d" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>isOk</name></member>
      <member refid="class_log_string_interpolator_1a76c09067b4070d45cfb2a4119d964c65" prot="private" virt="non-virtual"><scope>LogStringInterpolator</scope><name>isOk_</name></member>
      <member refid="class_log_string_interpolator_1a71393337e52fd4899b2d5d430341fc43" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>LogStringInterpolator</name></member>
      <member refid="class_log_string_interpolator_1acd9278dbbdbc7349ea82d1b9f294b63f" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>LogStringInterpolator</name></member>
      <member refid="class_log_string_interpolator_1af100c1a190ca0548f94f6c43f3c47507" prot="public" virt="virtual"><scope>LogStringInterpolator</scope><name>onString</name></member>
      <member refid="class_log_string_interpolator_1abe3e0699bae3c72a06c005dc562a1d2d" prot="public" virt="virtual"><scope>LogStringInterpolator</scope><name>onToken</name></member>
      <member refid="class_log_string_interpolator_1aac85bec6844eb68fe532ae3f910e23df" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>read</name></member>
      <member refid="class_log_string_interpolator_1a04707977aef918f370b1ea058ee3e1e0" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>streamToLog</name></member>
      <member refid="class_log_string_interpolator_1a2361b17d810a58e36475b33c0576d9eb" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>streamToString</name></member>
      <member refid="class_log_string_interpolator_1a0f32f7ec1a448e552bf904485b82fc3a" prot="protected" virt="non-virtual"><scope>LogStringInterpolator</scope><name>stringOffsets_</name></member>
      <member refid="class_log_string_interpolator_1a94ad6e9c66e786f2dde16a3e0e5717b7" prot="public" virt="non-virtual"><scope>LogStringInterpolator</scope><name>write</name></member>
      <member refid="class_log_string_interpolator_1acdfaf5aa62ccf61f392a74a545814123" prot="public" virt="virtual"><scope>LogStringInterpolator</scope><name>~LogStringInterpolator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
