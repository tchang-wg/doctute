<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_space_branch" kind="class" language="C++" prot="public">
    <compoundname>SpaceBranch</compoundname>
    <basecompoundref refid="class_space_node" prot="public" virt="non-virtual">SpaceNode</basecompoundref>
    <includes refid="space__branch_8hpp" local="no">space_branch.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_space_branch_1a48c335da99aee00c8312c2ac74182e5d" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float SpaceBranch::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="28" column="1" bodyfile="cellapp/space_branch.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_branch_1aa3a77917bdc37508997cc4eb39d516e8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool SpaceBranch::isHorizontal_</definition>
        <argsstring></argsstring>
        <name>isHorizontal_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="29" column="1" bodyfile="cellapp/space_branch.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_branch_1a4e438765bc54eee7e1aa0b042ea75586" prot="private" static="no" mutable="no">
        <type><ref refid="class_space_node" kindref="compound">SpaceNode</ref> *</type>
        <definition>SpaceNode* SpaceBranch::pLeft_</definition>
        <argsstring></argsstring>
        <name>pLeft_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="30" column="1" bodyfile="cellapp/space_branch.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_space_branch_1a9c0de7ae0cd21456dc3702e9384c4f49" prot="private" static="no" mutable="no">
        <type><ref refid="class_space_node" kindref="compound">SpaceNode</ref> *</type>
        <definition>SpaceNode* SpaceBranch::pRight_</definition>
        <argsstring></argsstring>
        <name>pRight_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="31" column="1" bodyfile="cellapp/space_branch.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_space_branch_1a67db701b367c3dc5a5f35c7b3fd37e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE SpaceBranch::SpaceBranch</definition>
        <argsstring>(Space &amp;space, const BW::Rect &amp;rect, BinaryIStream &amp;stream, bool isHorizontal)</argsstring>
        <name>SpaceBranch</name>
        <param>
          <type><ref refid="class_space" kindref="compound">Space</ref> &amp;</type>
          <declname>space</declname>
        </param>
        <param>
          <type>const BW::Rect &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isHorizontal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="18" column="1" bodyfile="cellapp/space_branch.cpp" bodystart="15" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_space_branch_1a7553f03d0dfded15574d541fcf752a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SpaceBranch::~SpaceBranch</definition>
        <argsstring>()</argsstring>
        <name>~SpaceBranch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="20" column="1" bodyfile="cellapp/space_branch.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_space_branch_1a5ffa953c0c905cfbc927729bbee15755" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpaceBranch::deleteTree</definition>
        <argsstring>()</argsstring>
        <name>deleteTree</name>
        <reimplements refid="class_space_node_1ae4ba45c49848acb9d40a4f2e7db05bb2">deleteTree</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method deletes this subtree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="21" column="1" bodyfile="cellapp/space_branch.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_space_branch_1aec879f3215fef14c848318df9ec67d80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_cell_info" kindref="compound">CellInfo</ref> *</type>
        <definition>const CellInfo * SpaceBranch::pCellAt</definition>
        <argsstring>(float x, float z) const </argsstring>
        <name>pCellAt</name>
        <reimplements refid="class_space_node_1ab0793903846ea6f5c66c5c2da848076b">pCellAt</reimplements>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method return the <ref refid="class_cell_info" kindref="compound">CellInfo</ref> at the input point in this subtree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="23" column="1" bodyfile="cellapp/space_branch.cpp" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_space_branch_1acc5acb26315a5d8677ba7e7602065057" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpaceBranch::visitRect</definition>
        <argsstring>(const BW::Rect &amp;rect, CellInfoVisitor &amp;visitor)</argsstring>
        <name>visitRect</name>
        <reimplements refid="class_space_node_1a0e7fba64da7c12bb7170fa552002ca69">visitRect</reimplements>
        <param>
          <type>const BW::Rect &amp;</type>
          <declname>rect</declname>
        </param>
        <param>
          <type><ref refid="class_cell_info_visitor" kindref="compound">CellInfoVisitor</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method visits the cells that overlaps the input rectangle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="24" column="1" bodyfile="cellapp/space_branch.cpp" bodystart="75" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_space_branch_1a43a4183156e23a19748fe2482c20bc76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpaceBranch::addToStream</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>addToStream</name>
        <reimplements refid="class_space_node_1a7797a1ed6c8b79a3255ea16101f95cd3">addToStream</reimplements>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds this subtree to the input stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cellapp/space_branch.hpp" line="25" column="1" bodyfile="cellapp/space_branch.cpp" bodystart="107" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is used to represent an internal node of the BSP. It corresponds to a partitioning plane. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2753">
        <label>SpaceBranch</label>
        <link refid="class_space_branch"/>
        <childnode refid="2754" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2754">
        <label>SpaceNode</label>
        <link refid="class_space_node"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2755">
        <label>SpaceBranch</label>
        <link refid="class_space_branch"/>
        <childnode refid="2756" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2756">
        <label>SpaceNode</label>
        <link refid="class_space_node"/>
      </node>
    </collaborationgraph>
    <location file="cellapp/space_branch.hpp" line="16" column="1" bodyfile="cellapp/space_branch.hpp" bodystart="15" bodyend="32"/>
    <listofallmembers>
      <member refid="class_space_branch_1a43a4183156e23a19748fe2482c20bc76" prot="public" virt="virtual"><scope>SpaceBranch</scope><name>addToStream</name></member>
      <member refid="class_space_branch_1a5ffa953c0c905cfbc927729bbee15755" prot="public" virt="virtual"><scope>SpaceBranch</scope><name>deleteTree</name></member>
      <member refid="class_space_branch_1aa3a77917bdc37508997cc4eb39d516e8" prot="private" virt="non-virtual"><scope>SpaceBranch</scope><name>isHorizontal_</name></member>
      <member refid="class_space_branch_1aec879f3215fef14c848318df9ec67d80" prot="public" virt="virtual"><scope>SpaceBranch</scope><name>pCellAt</name></member>
      <member refid="class_space_branch_1a4e438765bc54eee7e1aa0b042ea75586" prot="private" virt="non-virtual"><scope>SpaceBranch</scope><name>pLeft_</name></member>
      <member refid="class_space_branch_1a48c335da99aee00c8312c2ac74182e5d" prot="private" virt="non-virtual"><scope>SpaceBranch</scope><name>position_</name></member>
      <member refid="class_space_branch_1a9c0de7ae0cd21456dc3702e9384c4f49" prot="private" virt="non-virtual"><scope>SpaceBranch</scope><name>pRight_</name></member>
      <member refid="class_space_branch_1a67db701b367c3dc5a5f35c7b3fd37e82" prot="public" virt="non-virtual"><scope>SpaceBranch</scope><name>SpaceBranch</name></member>
      <member refid="class_space_branch_1acc5acb26315a5d8677ba7e7602065057" prot="public" virt="virtual"><scope>SpaceBranch</scope><name>visitRect</name></member>
      <member refid="class_space_branch_1a7553f03d0dfded15574d541fcf752a12" prot="public" virt="virtual"><scope>SpaceBranch</scope><name>~SpaceBranch</name></member>
      <member refid="class_space_node_1abd850b21e5e11fd4b87d49acd440e1ae" prot="protected" virt="virtual"><scope>SpaceBranch</scope><name>~SpaceNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
