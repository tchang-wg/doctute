<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_server_platform_windows" kind="class" language="C++" prot="public">
    <compoundname>ServerPlatformWindows</compoundname>
    <basecompoundref refid="class_server_platform" prot="public" virt="non-virtual">ServerPlatform</basecompoundref>
    <includes refid="server__platform__windows_8hpp" local="no">server_platform_windows.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_server_platform_windows_1a32568a1a2fc44d268878ad8d9c391447" prot="private" static="no">
        <type>BW::vector&lt; BW::string &gt;</type>
        <definition>typedef BW::vector&lt; BW::string &gt; ServerPlatformWindows::StringList</definition>
        <argsstring></argsstring>
        <name>StringList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="76" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_server_platform_windows_1a50c1dd5936bf81cd933eea1a6ad28a8f" prot="private" static="no" mutable="no">
        <type>FILETIME</type>
        <definition>FILETIME ServerPlatformWindows::prevSysKernel_</definition>
        <argsstring></argsstring>
        <name>prevSysKernel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="95" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1ad8e7a7375ae9a0099b06ab297f73ac9c" prot="private" static="no" mutable="no">
        <type>FILETIME</type>
        <definition>FILETIME ServerPlatformWindows::prevSysUser_</definition>
        <argsstring></argsstring>
        <name>prevSysUser_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="96" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1ade5e994f474ba35fcd5657de4a3e4e48" prot="private" static="no" mutable="no">
        <type>FILETIME</type>
        <definition>FILETIME ServerPlatformWindows::prevProcKernel_</definition>
        <argsstring></argsstring>
        <name>prevProcKernel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="97" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1a1e3d35357e50f3aae22645302165b881" prot="private" static="no" mutable="no">
        <type>FILETIME</type>
        <definition>FILETIME ServerPlatformWindows::prevProcUser_</definition>
        <argsstring></argsstring>
        <name>prevProcUser_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="98" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1a38ebe764c6d2a7d7187d5b9752a07ec3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ServerPlatformWindows::windowsUid_</definition>
        <argsstring></argsstring>
        <name>windowsUid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="101" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1ab7e16a27244015c8c49e575c69b07800" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string ServerPlatformWindows::architecture_</definition>
        <argsstring></argsstring>
        <name>architecture_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="104" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1aba9dc024bacb16ae4a39ced594e03c2d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::hasExtendedStats_</definition>
        <argsstring></argsstring>
        <name>hasExtendedStats_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="106" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1a3ac31e67a57287002dfcc6a50edf5495" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string ServerPlatformWindows::appDataPath_</definition>
        <argsstring></argsstring>
        <name>appDataPath_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="109" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_server_platform_windows_1acf20f771fb9acf2bde29f78c443d5aa6" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string ServerPlatformWindows::stateFileName_</definition>
        <argsstring></argsstring>
        <name>stateFileName_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="110" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_server_platform_windows_1a821c363ecad16f803690bd4e53834464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ServerPlatformWindows::ServerPlatformWindows</definition>
        <argsstring>(BWMachined &amp;machined)</argsstring>
        <name>ServerPlatformWindows</name>
        <param>
          <type><ref refid="class_b_w_machined" kindref="compound">BWMachined</ref> &amp;</type>
          <declname>machined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>machined</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_b_w_machined" kindref="compound">BWMachined</ref> instance to contact when preparing to send data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="16" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="49" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1abdd8a9135b4ec77ab1211c4c797457a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::isProcessRunning</definition>
        <argsstring>(uint16 pid) const </argsstring>
        <name>isProcessRunning</name>
        <reimplements refid="class_server_platform_1a1688fa8cecfa9835e52e16136e15354b">isProcessRunning</reimplements>
        <param>
          <type>uint16</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks whether a given PID is running.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The process ID to check the status of.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the process is running, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="19" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="307" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1acb69df9fc04a21bc228277d9b0ed7060" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::killProcess</definition>
        <argsstring>(uint16 pid, uint8 signal) const </argsstring>
        <name>killProcess</name>
        <reimplements refid="class_server_platform_1a69c35c586999fa5b4d6654ac5947fd7a">killProcess</reimplements>
        <param>
          <type>uint16</type>
          <declname>pid</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method kills a given process with the specified signal</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>The process ID of the process to kill </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal</parametername>
</parameternamelist>
<parameterdescription>
<para>The signal to send to the process</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="20" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="336" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1aaef93c4044daf381aa2a6592798af6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::updateSystemInfo</definition>
        <argsstring>(SystemInfo &amp;systemInfo, ServerInfo *pServerInfo)</argsstring>
        <name>updateSystemInfo</name>
        <reimplements refid="class_server_platform_1a15fdb8647d5051d53f8127e940e0a754">updateSystemInfo</reimplements>
        <param>
          <type><ref refid="struct_system_info" kindref="compound">SystemInfo</ref> &amp;</type>
          <declname>systemInfo</declname>
        </param>
        <param>
          <type>ServerInfo *</type>
          <declname>pServerInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs an explicit update of core system information such as CPU and memory state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The structure to place the updated information into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pServerInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ServerInfo structure to use when performing the update.</para></parameterdescription>
</parameteritem>
</parameterlist>
return true when the update was successful, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="22" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="67" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a3c8416b6d1584044482af31fd39d10a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ServerPlatformWindows::checkCoreDumps</definition>
        <argsstring>(MachineGuardMessage::UserId uid, const BW::string &amp;bwRoot, UserMessage::CoreDumps &amp;coreDumps)</argsstring>
        <name>checkCoreDumps</name>
        <reimplements refid="class_server_platform_1a277f8ad6d827a3e4d91684260ad15d83">checkCoreDumps</reimplements>
        <param>
          <type>MachineGuardMessage::UserId</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>bwRoot</declname>
        </param>
        <param>
          <type>UserMessage::CoreDumps &amp;</type>
          <declname>coreDumps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method fills a list of CoreDumps with core file summaries for any core files and assertions found under bwRoot.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uid</parametername>
</parameternamelist>
<parameterdescription>
<para>The UID of the user the core dump check relates to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bwRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The root directory to search for the core files in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coreDumps</parametername>
</parameternamelist>
<parameterdescription>
<para>The UserMessage::CoreDumps structure to fill with core file summary information. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="25" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a497eefaf2e783333423d54918006a082" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ServerPlatformWindows::updateCPUInfo</definition>
        <argsstring>(SystemInfo &amp;systemInfo)</argsstring>
        <name>updateCPUInfo</name>
        <reimplements refid="class_server_platform_1aded4afecac1625a2c55dca358eb08b51">updateCPUInfo</reimplements>
        <param>
          <type><ref refid="struct_system_info" kindref="compound">SystemInfo</ref> &amp;</type>
          <declname>systemInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs checks against the system information to determine the current CPU load.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The structure to place the updated information into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="31" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="81" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a39789bf89a7a70d5e1ba668babb70ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::canProcessMessageWithUid</definition>
        <argsstring>(int msgUid)</argsstring>
        <name>canProcessMessageWithUid</name>
        <reimplements refid="class_server_platform_1af580d1ba9de576853d9dedb02697e3e0">canProcessMessageWithUid</reimplements>
        <param>
          <type>int</type>
          <declname>msgUid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method determines if a message with a UID attached can be handled by the current platform.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msgUid</parametername>
</parameternamelist>
<parameterdescription>
<para>The UID attached to the inbound message.</para></parameterdescription>
</parameteritem>
</parameterlist>
return true when the message can be handled, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="33" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1ac119e1d31e87fb793c4f7752d660023e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>UserMessage *</type>
        <definition>UserMessage * ServerPlatformWindows::addUserToMapByUid</definition>
        <argsstring>(UserMap *pUserMap, int uid)</argsstring>
        <name>addUserToMapByUid</name>
        <reimplements refid="class_server_platform_1a77f7ed8d5f9b28a903d640facdeb41db">addUserToMapByUid</reimplements>
        <param>
          <type><ref refid="class_user_map" kindref="compound">UserMap</ref> *</type>
          <declname>pUserMap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method looks up and initializes a new user with the provided UID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pUserMap</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="class_user_map" kindref="compound">UserMap</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uid</parametername>
</parameternamelist>
<parameterdescription>
<para>The UID of the user to add to the map.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true when the UserMessage can be populated, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="35" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="171" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1ae92933c8538a12ba9166a06417f3d8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>UserMessage *</type>
        <definition>UserMessage * ServerPlatformWindows::addUserToMapByUsername</definition>
        <argsstring>(UserMap *pUserMap, const char *pUserName)</argsstring>
        <name>addUserToMapByUsername</name>
        <reimplements refid="class_server_platform_1ab47d2102b0e09ecd26f5801b2269d8f6">addUserToMapByUsername</reimplements>
        <param>
          <type><ref refid="class_user_map" kindref="compound">UserMap</ref> *</type>
          <declname>pUserMap</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pUserName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method looks up and initializes a new user with the provided username.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pUserMap</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="class_user_map" kindref="compound">UserMap</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pUserName</parametername>
</parameternamelist>
<parameterdescription>
<para>The username attached to the inbound message.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true when the UserMessage can be populated, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="37" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="188" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1aea5af165bd19b9bd120d8de412b658b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ServerPlatformWindows::notifyNetworkInitialised</definition>
        <argsstring>(uint16 port)</argsstring>
        <name>notifyNetworkInitialised</name>
        <reimplements refid="class_server_platform_1a09f8d535bf0218d34dd3824bd0cea4e7">notifyNetworkInitialised</reimplements>
        <param>
          <type>uint16</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called from BWMachineD when the network initialisation has been finalised.</para><para>This method provides the opportunity for the platform layer to establish any state information needed from the network layer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The primary communication port BWMachineD is using. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="40" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="381" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a0c1f75cff57313a023cab94596f4ce3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; ServerPlatformWindows::stateFileName</definition>
        <argsstring>()</argsstring>
        <name>stateFileName</name>
        <reimplements refid="class_server_platform_1ad8beedf982a8ca4eefe01f48b3fce781">stateFileName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the filename in which to store process states for persistency between execution. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="42" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a4f01d55d27f0b0da208a05819fbe9204" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ServerPlatformWindows::getProcessCpuMem</definition>
        <argsstring>(BW::ProcessInfo &amp;pi, BW::SystemInfo &amp;si)</argsstring>
        <name>getProcessCpuMem</name>
        <reimplements refid="class_server_platform_1a2776a4c3a61c1f857c66dd55faecc11b">getProcessCpuMem</reimplements>
        <param>
          <type>BW::ProcessInfo &amp;</type>
          <declname>pi</declname>
        </param>
        <param>
          <type>BW::SystemInfo &amp;</type>
          <declname>si</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="47" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="390" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a8f5fab0fa446546008f3d8b904906273" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ServerPlatformWindows::getProcessorSpeeds</definition>
        <argsstring>(BW::vector&lt; float &gt; &amp;speeds)</argsstring>
        <name>getProcessorSpeeds</name>
        <reimplements refid="class_server_platform_1ac27ca4dfec20d31d461373fa66cb37e9">getProcessorSpeeds</reimplements>
        <param>
          <type>BW::vector&lt; float &gt; &amp;</type>
          <declname>speeds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="51" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="416" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a4ff6203ff8d0d675e2f8aa6582f5431a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::startProcess</definition>
        <argsstring>(const char *bwBinaryDir, const char *bwResPath, const char *config, const char *binaryName, MachineGuardMessage::UserId uid, uint16 gid, const char *home, BW::vector&lt; const char * &gt; args, PidMessageWithDestination *pPmwd)</argsstring>
        <name>startProcess</name>
        <reimplements refid="class_server_platform_1a83985fc40d6fe41a865ee59c40191977">startProcess</reimplements>
        <param>
          <type>const char *</type>
          <declname>bwBinaryDir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>bwResPath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>binaryName</declname>
        </param>
        <param>
          <type>MachineGuardMessage::UserId</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>uint16</type>
          <declname>gid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>home</declname>
        </param>
        <param>
          <type>BW::vector&lt; const char * &gt;</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="class_message_with_destination" kindref="compound">PidMessageWithDestination</ref> *</type>
          <declname>pPmwd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="57" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="425" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a3c927e53e9689b77fdcd42259db3d466" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::validateProcessInfo</definition>
        <argsstring>(const ProcessInfo &amp;processInfo)</argsstring>
        <name>validateProcessInfo</name>
        <reimplements refid="class_server_platform_1a8dbe87f22c3151cd5eef01a02e5c790a">validateProcessInfo</reimplements>
        <param>
          <type>const <ref refid="struct_process_info" kindref="compound">ProcessInfo</ref> &amp;</type>
          <declname>processInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="67" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="523" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a9ee74004bbf469f7ef439a54a0e573bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::updateProcessStats</definition>
        <argsstring>(ProcessInfo &amp;pi, const SystemInfo &amp;si)</argsstring>
        <name>updateProcessStats</name>
        <reimplements refid="class_server_platform_1accd69fac93d32bd78a2d0cf233cae30a">updateProcessStats</reimplements>
        <param>
          <type><ref refid="struct_process_info" kindref="compound">ProcessInfo</ref> &amp;</type>
          <declname>pi</declname>
        </param>
        <param>
          <type>const <ref refid="struct_system_info" kindref="compound">SystemInfo</ref> &amp;</type>
          <declname>si</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="69" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="546" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1adee6b37535d2bdf6c0f9933c357881d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>BW::string</type>
        <definition>BW::string ServerPlatformWindows::getMachineConfigFileName</definition>
        <argsstring>() const </argsstring>
        <name>getMachineConfigFileName</name>
        <reimplements refid="class_server_platform_1a99be6c9cbf60a4ad5d72923f6c501c5c">getMachineConfigFileName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="72" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="605" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a247a372a5184c8cbc3559073b0c39e76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>BW::string</type>
        <definition>BW::string ServerPlatformWindows::getBigWorldConfigFileName</definition>
        <argsstring>() const </argsstring>
        <name>getBigWorldConfigFileName</name>
        <reimplements refid="class_server_platform_1ac1e75324f9efa9b7b239c0855412619a">getBigWorldConfigFileName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="73" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="610" bodyend="613"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_server_platform_windows_1aa856bcb8b0dc1d010ce6862752a259b6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ServerPlatformWindows::initKernelVersion</definition>
        <argsstring>()</argsstring>
        <name>initKernelVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="78" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a724802d44b18935312f20e6fa2a5b23b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::initArchitecture</definition>
        <argsstring>()</argsstring>
        <name>initArchitecture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine whether we are running on a 64bit machine. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="79" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="205" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a1aedd6b3257b839b3a4c335cceaff2e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ServerPlatformWindows::initAppDataPath</definition>
        <argsstring>()</argsstring>
        <name>initAppDataPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialises the Local AppData path, which is used for saving the state file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="81" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="264" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a3ce4b714c4917ed2e4bbd2d7a79f9653" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64</type>
        <definition>uint64 ServerPlatformWindows::subtractFileTime</definition>
        <argsstring>(const FILETIME &amp;a, const FILETIME &amp;b)</argsstring>
        <name>subtractFileTime</name>
        <param>
          <type>const FILETIME &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const FILETIME &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="83" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="146" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a8d950aa2596234e46f8f6500c32a1279" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ServerPlatformWindows::directoryExists</definition>
        <argsstring>(const BW::string &amp;directoryPath)</argsstring>
        <name>directoryExists</name>
        <reimplements refid="class_server_platform_1a45771fbe5cda9fe043635e025d43e021">directoryExists</reimplements>
        <param>
          <type>const BW::string &amp;</type>
          <declname>directoryPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="85" column="1" bodyfile="tools/bwmachined/server_platform_windows.cpp" bodystart="295" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1af8e9f967a0664a771ee1861f4e208ade" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ServerPlatformWindows::discoverCoreFilesWithin</definition>
        <argsstring>(const BW::string &amp;basePath, UserMessage::CoreDumps &amp;coreDumps)</argsstring>
        <name>discoverCoreFilesWithin</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>basePath</declname>
        </param>
        <param>
          <type>UserMessage::CoreDumps &amp;</type>
          <declname>coreDumps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="87" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_server_platform_windows_1a041c92b20bbb1a223e685baf866d5ffa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool ServerPlatformWindows::checkBinariesExist</definition>
        <argsstring>(MachineGuardMessage::UserId uid, const BW::string &amp;bwRoot, const ProcessSet &amp;processes)</argsstring>
        <name>checkBinariesExist</name>
        <reimplements refid="class_server_platform_1a699ee21e633fd36fb4f19e1c0eac2ad2">checkBinariesExist</reimplements>
        <param>
          <type>MachineGuardMessage::UserId</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>bwRoot</declname>
        </param>
        <param>
          <type>const ProcessSet &amp;</type>
          <declname>processes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks if the binaries in the given set exist under the given BW_ROOT path.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uid</parametername>
</parameternamelist>
<parameterdescription>
<para>The user ID we are checking for (used in log output). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bwRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>The BW_ROOT to check for binaries under. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if there is a binary for each process name in the given set. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bwmachined/server_platform_windows.hpp" line="90" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="90" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements platform operations for Windows. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2638">
        <label>ServerPlatform</label>
        <link refid="class_server_platform"/>
      </node>
      <node id="2637">
        <label>ServerPlatformWindows</label>
        <link refid="class_server_platform_windows"/>
        <childnode refid="2638" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2643">
        <label>WrappedMessageHandler</label>
        <link refid="class_wrapped_message_handler"/>
      </node>
      <node id="2646">
        <label>Listeners&lt; ListenerMessage &gt;</label>
        <link refid="class_listeners"/>
      </node>
      <node id="2641">
        <label>BWMachined</label>
        <link refid="class_b_w_machined"/>
        <childnode refid="2642" relation="public-inheritance">
        </childnode>
        <childnode refid="2643" relation="usage">
          <edgelabel>wrappedMessageHandler_</edgelabel>
        </childnode>
        <childnode refid="2644" relation="usage">
          <edgelabel>syslogHandler_</edgelabel>
        </childnode>
        <childnode refid="2646" relation="usage">
          <edgelabel>deathListeners_</edgelabel>
          <edgelabel>birthListeners_</edgelabel>
        </childnode>
        <childnode refid="2647" relation="usage">
          <edgelabel>systemInfo_</edgelabel>
        </childnode>
        <childnode refid="2640" relation="usage">
          <edgelabel>pServerPlatform_</edgelabel>
        </childnode>
        <childnode refid="2650" relation="usage">
          <edgelabel>users_</edgelabel>
        </childnode>
      </node>
      <node id="2649">
        <label>MaxStat</label>
        <link refid="struct_max_stat"/>
        <childnode refid="2648" relation="usage">
          <edgelabel>val</edgelabel>
          <edgelabel>max</edgelabel>
        </childnode>
      </node>
      <node id="2642">
        <label>Singleton&lt; BWMachined &gt;</label>
      </node>
      <node id="2640">
        <label>ServerPlatform</label>
        <link refid="class_server_platform"/>
        <childnode refid="2641" relation="usage">
          <edgelabel>machined_</edgelabel>
        </childnode>
      </node>
      <node id="2647">
        <label>SystemInfo</label>
        <link refid="struct_system_info"/>
        <childnode refid="2648" relation="usage">
          <edgelabel>packTotIn</edgelabel>
          <edgelabel>packDropOut</edgelabel>
          <edgelabel>packTotOut</edgelabel>
          <edgelabel>packDropIn</edgelabel>
        </childnode>
        <childnode refid="2649" relation="usage">
          <edgelabel>iowait</edgelabel>
          <edgelabel>mem</edgelabel>
        </childnode>
      </node>
      <node id="2639">
        <label>ServerPlatformWindows</label>
        <link refid="class_server_platform_windows"/>
        <childnode refid="2640" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2650">
        <label>UserMap</label>
        <link refid="class_user_map"/>
      </node>
      <node id="2648">
        <label>Stat&lt; uint64 &gt;</label>
        <link refid="class_stat"/>
      </node>
      <node id="2645">
        <label>DebugMessageCallback</label>
      </node>
      <node id="2644">
        <label>SyslogMessageHandler</label>
        <link refid="class_syslog_message_handler"/>
        <childnode refid="2645" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tools/bwmachined/server_platform_windows.hpp" line="14" column="1" bodyfile="tools/bwmachined/server_platform_windows.hpp" bodystart="13" bodyend="111"/>
    <listofallmembers>
      <member refid="class_server_platform_windows_1ac119e1d31e87fb793c4f7752d660023e" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>addUserToMapByUid</name></member>
      <member refid="class_server_platform_windows_1ae92933c8538a12ba9166a06417f3d8ac" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>addUserToMapByUsername</name></member>
      <member refid="class_server_platform_windows_1a3ac31e67a57287002dfcc6a50edf5495" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>appDataPath_</name></member>
      <member refid="class_server_platform_windows_1ab7e16a27244015c8c49e575c69b07800" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>architecture_</name></member>
      <member refid="class_server_platform_1a33a331d1bbd02d5e73f1e60d0b7fdc60" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>bigworldConfFile_</name></member>
      <member refid="class_server_platform_windows_1a39789bf89a7a70d5e1ba668babb70ff9" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>canProcessMessageWithUid</name></member>
      <member refid="class_server_platform_windows_1a041c92b20bbb1a223e685baf866d5ffa" prot="private" virt="virtual"><scope>ServerPlatformWindows</scope><name>checkBinariesExist</name></member>
      <member refid="class_server_platform_windows_1a3c8416b6d1584044482af31fd39d10a0" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>checkCoreDumps</name></member>
      <member refid="class_server_platform_1a03a2e2ebd73192b1b057da6e32a1581b" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>cleanupHandlers</name></member>
      <member refid="class_server_platform_1a712bd3dc2135434c3e8353212f400ba5" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>configDirectoryExists</name></member>
      <member refid="class_server_platform_1a4ab8362df8930381798b2ef061cb81e4" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>CreateServerPlatform</name></member>
      <member refid="class_server_platform_1a98a3404894c8f2300a277d97371593f3" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>determineVersion</name></member>
      <member refid="class_server_platform_windows_1a8d950aa2596234e46f8f6500c32a1279" prot="private" virt="virtual"><scope>ServerPlatformWindows</scope><name>directoryExists</name></member>
      <member refid="class_server_platform_windows_1af8e9f967a0664a771ee1861f4e208ade" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>discoverCoreFilesWithin</name></member>
      <member refid="class_server_platform_1a451a7855334389b6699617c9226efa8b" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>findUserBinaryDirForConfig</name></member>
      <member refid="class_server_platform_windows_1a247a372a5184c8cbc3559073b0c39e76" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>getBigWorldConfigFileName</name></member>
      <member refid="class_server_platform_windows_1adee6b37535d2bdf6c0f9933c357881d6" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>getMachineConfigFileName</name></member>
      <member refid="class_server_platform_windows_1a4f01d55d27f0b0da208a05819fbe9204" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>getProcessCpuMem</name></member>
      <member refid="class_server_platform_windows_1a8f5fab0fa446546008f3d8b904906273" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>getProcessorSpeeds</name></member>
      <member refid="class_server_platform_windows_1aba9dc024bacb16ae4a39ced594e03c2d" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>hasExtendedStats_</name></member>
      <member refid="class_server_platform_windows_1a1aedd6b3257b839b3a4c335cceaff2e4" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>initAppDataPath</name></member>
      <member refid="class_server_platform_windows_1a724802d44b18935312f20e6fa2a5b23b" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>initArchitecture</name></member>
      <member refid="class_server_platform_1a67c3864f0e45099891a62a3e5b049032" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>initConfigSuffixes</name></member>
      <member refid="class_server_platform_windows_1aa856bcb8b0dc1d010ce6862752a259b6" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>initKernelVersion</name></member>
      <member refid="class_server_platform_1a91367f28953366da559374281ee92c95" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>initVersionsProcesses</name></member>
      <member refid="class_server_platform_1ab723dffb26c57d8c3617b60ab5c9ca0a" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>isInitialised</name></member>
      <member refid="class_server_platform_1aadcd5c4f9233446221b6bbaaa8f22ed9" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>isInitialised_</name></member>
      <member refid="class_server_platform_windows_1abdd8a9135b4ec77ab1211c4c797457a5" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>isProcessRunning</name></member>
      <member refid="class_server_platform_windows_1acb69df9fc04a21bc228277d9b0ed7060" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>killProcess</name></member>
      <member refid="class_server_platform_1a42581ff1103889ffdfd73093fbbb9c49" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>machined_</name></member>
      <member refid="class_server_platform_1aba2a5af469803ac8f5d006056c1e8bb3" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>machinedConfFile_</name></member>
      <member refid="class_server_platform_windows_1aea5af165bd19b9bd120d8de412b658b2" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>notifyNetworkInitialised</name></member>
      <member refid="class_server_platform_1af27277a14abcc4f6683a4adc386fb7ef" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>notifyRead</name></member>
      <member refid="class_server_platform_1a6756636332f5e4b5c93e38dd2fcea0d2" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>notifyReadError</name></member>
      <member refid="class_server_platform_1a6a72b769a503e5853bd789050ce6c4ea" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>notifyWrite</name></member>
      <member refid="class_server_platform_1a5bd187d04c1fad6cb420d1facf95165c" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>notifyWriteError</name></member>
      <member refid="class_server_platform_1aefce2a6855f99ff6ba9e8052abc86ee3" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>preparedDebugSuffix_</name></member>
      <member refid="class_server_platform_1a7ebb47a3f912b9302f405afff08e8eb8" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>preparedHybridSuffix_</name></member>
      <member refid="class_server_platform_1a9c9f80923d8466e100d6c102e50564f5" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>preparedOldDebugSuffix_</name></member>
      <member refid="class_server_platform_1a9df0299504f9e82661e67b682b19f2f2" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>preparedOldHybridSuffix_</name></member>
      <member refid="class_server_platform_windows_1ade5e994f474ba35fcd5657de4a3e4e48" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>prevProcKernel_</name></member>
      <member refid="class_server_platform_windows_1a1e3d35357e50f3aae22645302165b881" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>prevProcUser_</name></member>
      <member refid="class_server_platform_windows_1a50c1dd5936bf81cd933eea1a6ad28a8f" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>prevSysKernel_</name></member>
      <member refid="class_server_platform_windows_1ad8e7a7375ae9a0099b06ab297f73ac9c" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>prevSysUser_</name></member>
      <member refid="class_server_platform_1a1f79307e0b01c385913fb76d64b029bb" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>ProcessSet</name></member>
      <member refid="class_server_platform_1a55593626f0e0bba286872bf8ece8b48b" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>s_expiredReadHandlers</name></member>
      <member refid="class_server_platform_1a7e576073bc7068bbdea372ce94391f42" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>s_expiredWriteHandlers</name></member>
      <member refid="class_server_platform_1a40accbaa7b115125539f44cb25df3fcb" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>s_readHandlers</name></member>
      <member refid="class_server_platform_1ad9f6553d44e49d383b8b6f130eba49ac" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>s_writeHandlers</name></member>
      <member refid="class_server_platform_1a20986cb4f1483bf6a702893c9dcb458b" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>ServerPlatform</name></member>
      <member refid="class_server_platform_windows_1a821c363ecad16f803690bd4e53834464" prot="public" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>ServerPlatformWindows</name></member>
      <member refid="class_server_platform_windows_1a4ff6203ff8d0d675e2f8aa6582f5431a" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>startProcess</name></member>
      <member refid="class_server_platform_windows_1a0c1f75cff57313a023cab94596f4ce3e" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>stateFileName</name></member>
      <member refid="class_server_platform_windows_1acf20f771fb9acf2bde29f78c443d5aa6" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>stateFileName_</name></member>
      <member refid="class_server_platform_windows_1a32568a1a2fc44d268878ad8d9c391447" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>StringList</name></member>
      <member refid="class_server_platform_windows_1a3ce4b714c4917ed2e4bbd2d7a79f9653" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>subtractFileTime</name></member>
      <member refid="class_server_platform_windows_1a497eefaf2e783333423d54918006a082" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>updateCPUInfo</name></member>
      <member refid="class_server_platform_windows_1a9ee74004bbf469f7ef439a54a0e573bc" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>updateProcessStats</name></member>
      <member refid="class_server_platform_windows_1aaef93c4044daf381aa2a6592798af6b5" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>updateSystemInfo</name></member>
      <member refid="class_server_platform_windows_1a3c927e53e9689b77fdcd42259db3d466" prot="public" virt="virtual"><scope>ServerPlatformWindows</scope><name>validateProcessInfo</name></member>
      <member refid="class_server_platform_1a533223e9780ead3266c5a8a0dc54afc3" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>VersionsProcesses</name></member>
      <member refid="class_server_platform_1a6a7870c02d151ca927559f8f26dec3cf" prot="protected" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>versionsProcesses_</name></member>
      <member refid="class_server_platform_windows_1a38ebe764c6d2a7d7187d5b9752a07ec3" prot="private" virt="non-virtual"><scope>ServerPlatformWindows</scope><name>windowsUid_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
