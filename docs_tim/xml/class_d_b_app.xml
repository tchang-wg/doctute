<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_d_b_app" kind="class" language="C++" prot="public">
    <compoundname>DBApp</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ReplyHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ReferenceCount</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">ScriptApp</basecompoundref>
    <basecompoundref prot="private" virt="non-virtual">TimerHandler</basecompoundref>
    <basecompoundref prot="private" virt="non-virtual">IGetBaseAppMgrInitDataHandler</basecompoundref>
    <basecompoundref prot="private" virt="non-virtual">IUpdateSecondaryDBsHandler</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Singleton&lt; DBApp &gt;</basecompoundref>
    <includes refid="dbapp_2dbapp_8hpp" local="no">dbapp.hpp</includes>
    <innerclass refid="class_d_b_app_1_1_i_checkout_completion_listener" prot="public">DBApp::ICheckoutCompletionListener</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0" prot="private" static="no">
        <name>InitStateFlags</name>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a2e6eeeb82bc1289a895b7156fa3edc06" prot="private">
          <name>INIT_STATE_NETWORK</name>
          <initializer>= (1 &lt;&lt; 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a558912a6b02b66996c4dde464db9c06c" prot="private">
          <name>INIT_STATE_EXTENSIONS</name>
          <initializer>= (1 &lt;&lt; 1)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a956d2300d4968195991bc5742cce4594" prot="private">
          <name>INIT_STATE_DATABASE_STARTUP</name>
          <initializer>= (1 &lt;&lt; 2)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a7e36934f39397325304d702db6ed8707" prot="private">
          <name>INIT_STATE_APP_ID_REGISTRATION</name>
          <initializer>= (1 &lt;&lt; 3)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ad0e1c06208414737c8f34ffc8477dc0f" prot="private">
          <name>INIT_STATE_BIRTH_DEATH_LISTENERS</name>
          <initializer>= (1 &lt;&lt; 4)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ae94ba9e03c75eeda9b775da930e16e95" prot="private">
          <name>INIT_STATE_WATCHERS</name>
          <initializer>= (1 &lt;&lt; 5)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0aa6db2ae75dd3e1db0fd28fccec9e8dbd" prot="private">
          <name>INIT_STATE_CONFIG</name>
          <initializer>= (1 &lt;&lt; 6)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a519c7a495b630405f58db39cec182f16" prot="private">
          <name>INIT_STATE_GAME_SPECIFIC</name>
          <initializer>= (1 &lt;&lt; 7)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ab29eb473fd9f771fb8b4e11623a3ed4c" prot="private">
          <name>INIT_STATE_SCRIPT_APP_READY</name>
          <initializer>= (1 &lt;&lt; 8)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a1b50301d7c82f51aec58242625a60eae" prot="private">
          <name>INIT_STATE_NON_ALPHA_MASK</name>
          <initializer>=
			(INIT_STATE_SCRIPT_APP_READY &lt;&lt; 1) - 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a1752e18b99874fe73e6e68e260f7d348" prot="private">
          <name>INIT_STATE_SECONDARY_DBS</name>
          <initializer>= (1 &lt;&lt; 9)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ad15cb40f8be9b0191d6c4de3aa063cd1" prot="private">
          <name>INIT_STATE_SPACE_DATA_RESTORE</name>
          <initializer>= (1 &lt;&lt; 10)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0aa5420c3923536c3a4563dcb754ea686e" prot="private">
          <name>INIT_STATE_AUTO_LOADING</name>
          <initializer>= (1 &lt;&lt; 11)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flags for initialisation, used for checking whether a certain initialisation step has completed that is not easily verifiable otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="575" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="574" bodyend="590"/>
      </memberdef>
      <memberdef kind="enum" id="class_d_b_app_1a87fe73427e032654182d7c29f8061462" prot="private" static="no">
        <name>TimeOutType</name>
        <enumvalue id="class_d_b_app_1a87fe73427e032654182d7c29f8061462a5118f36fdaec64ea8de26acd742dee0d" prot="private">
          <name>TIMEOUT_GAME_TICK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a87fe73427e032654182d7c29f8061462a2167d3a66a517ac97a08d284aac9fe1a" prot="private">
          <name>TIMEOUT_STATUS_CHECK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_d_b_app_1a87fe73427e032654182d7c29f8061462a5cb991eb451c1385ee5c1acde30959e9" prot="private">
          <name>TIMEOUT_DELAYED_STARTUP_MSG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="597" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="596" bodyend="601"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1ab005a1699ed0952b684368db4e29dacb" prot="private" static="no">
        <type>BW::map&lt; EntityKey, <ref refid="class_relogon_attempt_handler" kindref="compound">RelogonAttemptHandler</ref> * &gt;</type>
        <definition>typedef BW::map&lt; EntityKey, RelogonAttemptHandler * &gt; DBApp::PendingAttempts</definition>
        <argsstring></argsstring>
        <name>PendingAttempts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="607" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1a9d5ddf80c1db5ff5f9e21fb249a5783d" prot="private" static="no">
        <type>BW::set&lt; EntityKey &gt;</type>
        <definition>typedef BW::set&lt; EntityKey &gt; DBApp::EntityKeySet</definition>
        <argsstring></argsstring>
        <name>EntityKeySet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="609" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1af1011c85506e149f1170f0919e7821ea" prot="private" static="no">
        <type>BW::multimap&lt; EntityKey, <ref refid="class_d_b_app_1_1_i_checkout_completion_listener" kindref="compound">ICheckoutCompletionListener</ref> * &gt;</type>
        <definition>typedef BW::multimap&lt; EntityKey, ICheckoutCompletionListener * &gt; DBApp::CheckoutCompletionListeners</definition>
        <argsstring></argsstring>
        <name>CheckoutCompletionListeners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="613" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1ad6818a371b7e36317ba1f8e3bf1e8c2e" prot="private" static="no">
        <type>BW::map&lt; Mercury::Address, BackupHash &gt;</type>
        <definition>typedef BW::map&lt; Mercury::Address, BackupHash &gt; DBApp::MailBoxRemapInfo</definition>
        <argsstring></argsstring>
        <name>MailBoxRemapInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="619" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1a4b9ee901e45a8b78c761c1188b3076de" prot="private" static="no">
        <type>BW::unordered_map&lt; EntityTypeID, DatabaseID &gt;</type>
        <definition>typedef BW::unordered_map&lt; EntityTypeID, DatabaseID &gt; DBApp::EntityTypesMaxDBIDs</definition>
        <argsstring></argsstring>
        <name>EntityTypesMaxDBIDs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="631" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1a1b0ba13833cd023a0046b76d844b6f65" prot="private" static="no">
        <type>BW::unordered_set&lt; ShardGUID &gt;</type>
        <definition>typedef BW::unordered_set&lt; ShardGUID &gt; DBApp::ShardGUIDSet</definition>
        <argsstring></argsstring>
        <name>ShardGUIDSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="634" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1abe295ec2862c48701f0e5003c548e492" prot="private" static="no">
        <type>BW::unordered_map&lt; EntityID, DatabaseID &gt;</type>
        <definition>typedef BW::unordered_map&lt; EntityID, DatabaseID &gt; DBApp::EntityIDDBIDMap</definition>
        <argsstring></argsstring>
        <name>EntityIDDBIDMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="641" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_b_app_1a24de36a7289f6b7716307434b74554f4" prot="private" static="no">
        <type>BW::unordered_map&lt; EntityKey, uint &gt;</type>
        <definition>typedef BW::unordered_map&lt; EntityKey, uint &gt; DBApp::EntityKeyCounts</definition>
        <argsstring></argsstring>
        <name>EntityKeyCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="644" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="644" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_d_b_app_1af01a655198c9e38547bba53703b307b7" prot="public" static="no">
        <type><ref refid="class_d_b_app_config" kindref="compound">DBAppConfig</ref></type>
        <definition>typedef DBAppConfig DBApp::Config</definition>
        <argsstring></argsstring>
        <name>Config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="74" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_d_b_app_1ac9d76c92b15a315d4fbe789eb9657800" prot="private" static="no" mutable="no">
        <type>DBAppID</type>
        <definition>DBAppID DBApp::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="553" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a96b1b209118ae0c7906b1a8f0f5b1e1b" prot="private" static="no" mutable="no">
        <type>StorageShardDescriptor</type>
        <definition>StorageShardDescriptor DBApp::shardDescriptor_</definition>
        <argsstring></argsstring>
        <name>shardDescriptor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="554" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a84bd4b64e748272e71d2ba9d5243bb66" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DBApp::isAlpha_</definition>
        <argsstring></argsstring>
        <name>isAlpha_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="555" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1ad91c9f1ddcf8a03d3ad09e477f11d552" prot="private" static="no" mutable="no">
        <type>DatabaseGateway</type>
        <definition>DatabaseGateway DBApp::databaseGateway_</definition>
        <argsstring></argsstring>
        <name>databaseGateway_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="556" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a5cdd356f70cd1cf5194e4bb6eda0ee10" prot="private" static="no" mutable="no">
        <type><ref refid="class_entity_data_balancer" kindref="compound">EntityDataBalancer</ref> *</type>
        <definition>EntityDataBalancer* DBApp::pEntityDataBalancer_</definition>
        <argsstring></argsstring>
        <name>pEntityDataBalancer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="557" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a61d148ff97998d82776b95292a1e8fdd" prot="private" static="no" mutable="no">
        <type>EntityDefs *</type>
        <definition>EntityDefs* DBApp::pEntityDefs_</definition>
        <argsstring></argsstring>
        <name>pEntityDefs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="559" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a2e4cbb708f1547219c50f0a30ab118ce" prot="private" static="no" mutable="no">
        <type>IDatabase *</type>
        <definition>IDatabase* DBApp::pDatabase_</definition>
        <argsstring></argsstring>
        <name>pDatabase_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="560" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a96d8ee95c8846659829a1cded77fc98b" prot="private" static="no" mutable="no">
        <type>BillingSystem *</type>
        <definition>BillingSystem* DBApp::pBillingSystem_</definition>
        <argsstring></argsstring>
        <name>pBillingSystem_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="561" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1aebf9fbda03f5d6954d1b5316bd2bf6cc" prot="private" static="no" mutable="no">
        <type>DBStatus</type>
        <definition>DBStatus DBApp::status_</definition>
        <argsstring></argsstring>
        <name>status_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="563" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a61ca431497521ec953e2070832b080c3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DBApp::hasStartupMessage_</definition>
        <argsstring></argsstring>
        <name>hasStartupMessage_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="565" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a309b4236ecd6f294d5f3e68dd017db20" prot="private" static="no" mutable="no">
        <type><ref refid="class_d_b_app_mgr_gateway" kindref="compound">DBAppMgrGateway</ref></type>
        <definition>DBAppMgrGateway DBApp::dbAppMgr_</definition>
        <argsstring></argsstring>
        <name>dbAppMgr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="567" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1abf0281aef0302ffa75f90ac2af786eab" prot="private" static="no" mutable="no">
        <type><ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref></type>
        <definition>BaseAppMgr DBApp::baseAppMgr_</definition>
        <argsstring></argsstring>
        <name>baseAppMgr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="569" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a3299625bf3127c6556a62e5a941f81b6" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 DBApp::initState_</definition>
        <argsstring></argsstring>
        <name>initState_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="592" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a322f62db4062d962512cd99aabd895ef" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DBApp::shouldAlphaResetGameServerState_</definition>
        <argsstring></argsstring>
        <name>shouldAlphaResetGameServerState_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="594" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a974ebcc117d4a3fe8fdf9d22e4b93aed" prot="private" static="no" mutable="no">
        <type>TimerHandle</type>
        <definition>TimerHandle DBApp::statusCheckTimer_</definition>
        <argsstring></argsstring>
        <name>statusCheckTimer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="603" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a25a81be8128da5b5bd20e7ce9ecadf8f" prot="private" static="no" mutable="no">
        <type>TimerHandle</type>
        <definition>TimerHandle DBApp::gameTimer_</definition>
        <argsstring></argsstring>
        <name>gameTimer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="604" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a90ab7b1157ac2e85ce02488f2ec955d8" prot="private" static="no" mutable="no">
        <type>PendingAttempts</type>
        <definition>PendingAttempts DBApp::pendingAttempts_</definition>
        <argsstring></argsstring>
        <name>pendingAttempts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="608" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a342c4a109c386e94a877e6f282865afa" prot="private" static="no" mutable="no">
        <type>EntityKeySet</type>
        <definition>EntityKeySet DBApp::inProgCheckouts_</definition>
        <argsstring></argsstring>
        <name>inProgCheckouts_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="610" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a22fe76c475de4f9b9bbbdf4a2881104a" prot="private" static="no" mutable="no">
        <type>CheckoutCompletionListeners</type>
        <definition>CheckoutCompletionListeners DBApp::checkoutCompletionListeners_</definition>
        <argsstring></argsstring>
        <name>checkoutCompletionListeners_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="614" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a059757a30884d12540fc2d57b237c8f5" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DBApp::curLoad_</definition>
        <argsstring></argsstring>
        <name>curLoad_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="616" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1ae8d431d20ef3d7875ee01bb1fe2f2ba3" prot="private" static="no" mutable="no">
        <type>uint64</type>
        <definition>uint64 DBApp::overloadStartTime_</definition>
        <argsstring></argsstring>
        <name>overloadStartTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="617" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a797bf1929824c7d451cfdec7129e5775" prot="private" static="no" mutable="no">
        <type>MailBoxRemapInfo</type>
        <definition>MailBoxRemapInfo DBApp::mailBoxRemapInfo_</definition>
        <argsstring></argsstring>
        <name>mailBoxRemapInfo_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="620" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a4cc8e2bbd4cb4e79b60395683daa2c4d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DBApp::mailBoxRemapCheckCount_</definition>
        <argsstring></argsstring>
        <name>mailBoxRemapCheckCount_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="621" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a54d1a9014634d235e7641e5ddb42681c" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string DBApp::secondaryDBPrefix_</definition>
        <argsstring></argsstring>
        <name>secondaryDBPrefix_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="623" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a038cf2d3d336e9df20e3baa7a0cd184d" prot="private" static="no" mutable="no">
        <type>uint</type>
        <definition>uint DBApp::secondaryDBIndex_</definition>
        <argsstring></argsstring>
        <name>secondaryDBIndex_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="624" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1ab1e02c1614c88af6d8cf5c05d481e2e6" prot="private" static="no" mutable="no">
        <type>std::auto_ptr&lt; <ref refid="class_consolidator" kindref="compound">Consolidator</ref> &gt;</type>
        <definition>std::auto_ptr&lt; Consolidator &gt; DBApp::pConsolidator_</definition>
        <argsstring></argsstring>
        <name>pConsolidator_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="626" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a3d3664307d2ef937559ec97d3cfcc74d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DBApp::shouldCacheLogOnRecords_</definition>
        <argsstring></argsstring>
        <name>shouldCacheLogOnRecords_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="628" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1afa221526adf1d5f38f722ebc37d1cda8" prot="private" static="no" mutable="no">
        <type><ref refid="class_log_on_records_cache" kindref="compound">LogOnRecordsCache</ref></type>
        <definition>LogOnRecordsCache DBApp::logOnRecordsCache_</definition>
        <argsstring></argsstring>
        <name>logOnRecordsCache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="629" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1addf41c3748dbc56ed95ea5de84ed4dd4" prot="private" static="no" mutable="no">
        <type>EntityTypesMaxDBIDs</type>
        <definition>EntityTypesMaxDBIDs DBApp::entityTypesMaxDBIDs_</definition>
        <argsstring></argsstring>
        <name>entityTypesMaxDBIDs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="632" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a63c32f40a1b5dc5b847acd54728b8ea6" prot="private" static="no" mutable="no">
        <type>ShardGUIDSet</type>
        <definition>ShardGUIDSet DBApp::recentlyRemovedStorageShards_</definition>
        <argsstring></argsstring>
        <name>recentlyRemovedStorageShards_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="635" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1ab47b9556c22f0264a070d3c93ac6a4a0" prot="private" static="no" mutable="no">
        <type><ref refid="class_buffered_put_entity_requests" kindref="compound">BufferedPutEntityRequests</ref></type>
        <definition>BufferedPutEntityRequests DBApp::bufferedPutEntityRequests_</definition>
        <argsstring></argsstring>
        <name>bufferedPutEntityRequests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="637" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="637" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1ad19b102c15295aa107c1275be3ebefe4" prot="private" static="no" mutable="no">
        <type><ref refid="class_buffered_requests" kindref="compound">BufferedRequests</ref></type>
        <definition>BufferedRequests DBApp::bufferedRequests_</definition>
        <argsstring></argsstring>
        <name>bufferedRequests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="639" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="639" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1aa73290dd685f40dae1be7b4edb8b131a" prot="private" static="no" mutable="no">
        <type>EntityIDDBIDMap</type>
        <definition>EntityIDDBIDMap DBApp::pendingNewInsertions_</definition>
        <argsstring></argsstring>
        <name>pendingNewInsertions_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="642" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a4c86fa8dd0ae8d2aae2af670dce98fa3" prot="private" static="no" mutable="no">
        <type>EntityKeyCounts</type>
        <definition>EntityKeyCounts DBApp::outstandingEntityWrites_</definition>
        <argsstring></argsstring>
        <name>outstandingEntityWrites_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="645" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a9d6af7bbf24d53d0a4ce0b23022e3e86" prot="private" static="no" mutable="no">
        <type><ref refid="class_account_name_d_b_i_d_cache" kindref="compound">AccountNameDBIDCache</ref></type>
        <definition>AccountNameDBIDCache DBApp::accountNameDBIDCache_</definition>
        <argsstring></argsstring>
        <name>accountNameDBIDCache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="647" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a4147ba4ce9fc5e62d977fb6f690cb045" prot="private" static="no" mutable="no">
        <type><ref refid="class_recent_transfers_cache" kindref="compound">RecentTransfersCache</ref></type>
        <definition>RecentTransfersCache DBApp::recentTransfersCache_</definition>
        <argsstring></argsstring>
        <name>recentTransfersCache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="648" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1aa549aec59686bf3913ef74b2f4a4401c" prot="private" static="no" mutable="no">
        <type>Mercury::ChannelOwner</type>
        <definition>Mercury::ChannelOwner DBApp::channelOwner_</definition>
        <argsstring></argsstring>
        <name>channelOwner_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="91" column="1" bodyfile="dbappmgr/dbapp.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1aa37ae2585fb2d18574fe4e5954bae136" prot="private" static="no" mutable="no">
        <type>StorageShardPtr</type>
        <definition>StorageShardPtr DBApp::pStorageShard_</definition>
        <argsstring></argsstring>
        <name>pStorageShard_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="92" column="1" bodyfile="dbappmgr/dbapp.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a95a715c5504cba42e2b5da980910d177" prot="private" static="no" mutable="no">
        <type>WatcherNub &amp;</type>
        <definition>WatcherNub&amp; DBApp::watcherNub_</definition>
        <argsstring></argsstring>
        <name>watcherNub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/consolidate_dbs/dbapp.hpp" line="31" column="1" bodyfile="tools/consolidate_dbs/dbapp.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a6a4fb319dde810057d44da92c12b877d" prot="private" static="no" mutable="no">
        <type>Mercury::Address</type>
        <definition>Mercury::Address DBApp::addr_</definition>
        <argsstring></argsstring>
        <name>addr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/consolidate_dbs/dbapp.hpp" line="32" column="1" bodyfile="tools/consolidate_dbs/dbapp.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_b_app_1a70a01b825d320b48f5b8acaca3315030" prot="private" static="no" mutable="no">
        <type>const BWMachineDNetwork *</type>
        <definition>const BWMachineDNetwork* DBApp::pBWMachineD_</definition>
        <argsstring></argsstring>
        <name>pBWMachineD_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/consolidate_dbs/dbapp.hpp" line="33" column="1" bodyfile="tools/consolidate_dbs/dbapp.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_d_b_app_1aeb83361a3f1cdd690b8f8400301b45cb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class RelogonAttemptHandler</definition>
        <argsstring></argsstring>
        <name>RelogonAttemptHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="606" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="606" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_b_app_1a4f44698cf564cb50ab59e092946c0a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DBApp::DBApp</definition>
        <argsstring>(Mercury::EventDispatcher &amp;dispatcher, Mercury::NetworkInterface &amp;interface)</argsstring>
        <name>DBApp</name>
        <param>
          <type>Mercury::EventDispatcher &amp;</type>
          <declname>dispatcher</declname>
          <defname>mainDispatcher</defname>
        </param>
        <param>
          <type>Mercury::NetworkInterface &amp;</type>
          <declname>interface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mainDispatcher</parametername>
</parameternamelist>
<parameterdescription>
<para>The main dispatcher instance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interface</parametername>
</parameternamelist>
<parameterdescription>
<para>The network interface. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="76" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="323" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a049f8f51d89ee5a038d948d4552b6177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DBApp::~DBApp</definition>
        <argsstring>()</argsstring>
        <name>~DBApp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="78" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="372" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aae295586f21e573327b45524729cd5b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>DBAppID</type>
        <definition>DBAppID DBApp::id</definition>
        <argsstring>() const </argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="82" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aa6e0ed8518072647cd79fb8fd4bb1ea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_b_app_mgr_gateway" kindref="compound">DBAppMgrGateway</ref> &amp;</type>
        <definition>DBAppMgrGateway&amp; DBApp::dbAppMgr</definition>
        <argsstring>()</argsstring>
        <name>dbAppMgr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> gateway instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="87" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a214720624bdfbb4594b2a43d88cfcc84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref> &amp;</type>
        <definition>BaseAppMgr&amp; DBApp::baseAppMgr</definition>
        <argsstring>()</argsstring>
        <name>baseAppMgr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the channel to the <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="92" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ada1004e349ea8ad632b9e3b0c8e6a471" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const EntityDefs &amp;</type>
        <definition>const EntityDefs&amp; DBApp::entityDefs</definition>
        <argsstring>() const </argsstring>
        <name>entityDefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the entity definitions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="96" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a54746dea5526023f3cd62d2946603e5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IDatabase &amp;</type>
        <definition>IDatabase&amp; DBApp::database</definition>
        <argsstring>()</argsstring>
        <name>database</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="102" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1afb95f364286147e0012c1d9d671fb730" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>BillingSystem *</type>
        <definition>BillingSystem* DBApp::pBillingSystem</definition>
        <argsstring>()</argsstring>
        <name>pBillingSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="103" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ad37baf879a631a41afbef13652ad10aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::hasStartBegun</definition>
        <argsstring>(bool hasStartBegun)</argsstring>
        <name>hasStartBegun</name>
        <param>
          <type>bool</type>
          <declname>hasStartBegun</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets whether we have started. It is used so that the server can be started from a watcher. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="105" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5675" bodyend="5681"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a3817d52c3868350630febdfdbbf00a8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::hasStartBegun</definition>
        <argsstring>() const </argsstring>
        <name>hasStartBegun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether we have started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="108" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a5430c12fbd3410627e18b852e3911319" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::isReady</definition>
        <argsstring>() const </argsstring>
        <name>isReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether we are ready to start. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="114" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae0bd4649e69fd08f9f7cbd05b9f5d885" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::isConsolidating</definition>
        <argsstring>() const </argsstring>
        <name>isConsolidating</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns true if we should be consolidating secondary DBs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="120" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab72aa04844dcaf20ef9c50cbfb822804" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::isAlpha</definition>
        <argsstring>() const </argsstring>
        <name>isAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns true if we are DBApp-Alpha of our shard.</para><para>This method returns true if this <ref refid="class_d_b_app" kindref="compound">DBApp</ref> is the DBApp-Alpha for the storage-shard it is allocated to. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="123" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a3223304d82f93084cba9ab569dd39384" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::isShardAlpha</definition>
        <argsstring>() const </argsstring>
        <name>isShardAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns true if our storage shard is Shard-Alpha. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="126" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1abffa609ceee3291dc2de95d8136979d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const StorageShardDescriptor &amp;</type>
        <definition>const StorageShardDescriptor&amp; DBApp::shardDescriptor</definition>
        <argsstring>() const </argsstring>
        <name>shardDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the storage-shard descriptor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="132" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae555fd98dde2079ab18d32c4a52ab2f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DatabaseGateway &amp;</type>
        <definition>DatabaseGateway&amp; DBApp::databaseGateway</definition>
        <argsstring>()</argsstring>
        <name>databaseGateway</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the database gateway. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="138" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a5bbc41340a40f79b634c8588d0ff5381" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const StorageShardHash &amp;</type>
        <definition>const StorageShardHash&amp; DBApp::storageShardHash</definition>
        <argsstring>() const </argsstring>
        <name>storageShardHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the shard hash. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="141" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a6de557eb916b350b96c921b622d222b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::hasMailBoxRemapping</definition>
        <argsstring>() const </argsstring>
        <name>hasMailBoxRemapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="146" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a92983eb18f54de08f4b641d9f54a97d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::remapMailBox</definition>
        <argsstring>(EntityMailBoxRef &amp;mailBox) const </argsstring>
        <name>remapMailBox</name>
        <param>
          <type>EntityMailBoxRef &amp;</type>
          <declname>mailBox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method changes the address of input mailbox to cater for recent <ref refid="class_base_app" kindref="compound">BaseApp</ref> death. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="147" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5584" bodyend="5597"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a5f761741a852689754f9e91be7ff5a36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::shouldCacheLogOnRecords</definition>
        <argsstring>() const </argsstring>
        <name>shouldCacheLogOnRecords</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="149" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a17fcf769d6da6cec7cc3c29600080fda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_log_on_records_cache" kindref="compound">LogOnRecordsCache</ref> &amp;</type>
        <definition>LogOnRecordsCache&amp; DBApp::logOnRecordsCache</definition>
        <argsstring>()</argsstring>
        <name>logOnRecordsCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="150" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a245368d6e2ae4b48a5dde8615e4050ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::entityKeyHasOutstandingWrite</definition>
        <argsstring>(const EntityKey &amp;key) const </argsstring>
        <name>entityKeyHasOutstandingWrite</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks the given entity key to see if it has outstanding writes to the database.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity database key.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if there is an outstanding entity write for the given key, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="153" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3127" bodyend="3130"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a6aa5d8ac474ce740ec020557159eb1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::checkOutstandingWritesForDirtyShards</definition>
        <argsstring>()</argsstring>
        <name>checkOutstandingWritesForDirtyShards</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called to inform the <ref refid="class_entity_data_balancer" kindref="compound">EntityDataBalancer</ref> instance of any transfers currently outstanding that on completion will need to be transferred to another storage-shard. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="154" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3138" bodyend="3147"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a757ed1464b9e97198210c7db4a8c77ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::onDBAppMgrRegistrationCompleted</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>onDBAppMgrRegistrationCompleted</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the portion of init after registering with the <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The initialisation data from the <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="165" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="712" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1afa138791b5ec80c1206ce0ad1ec66c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onGetStorageShardGUIDCompleted</definition>
        <argsstring>()</argsstring>
        <name>onGetStorageShardGUIDCompleted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the operation to retrieve the complementary storage-shard GUID has completed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="166" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="992" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1acbeb5cb28f74755fb998fb7567b6aa08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onDatabaseStartup</definition>
        <argsstring>(bool didSucceed)</argsstring>
        <name>onDatabaseStartup</name>
        <param>
          <type>bool</type>
          <declname>didSucceed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the database has finished starting up.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>didSucceed</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then database startup was successful, otherwise false. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="167" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1091" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a36c92858c2046a03369107bf03faabfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onEntitiesAutoLoadCompleted</definition>
        <argsstring>(bool didAutoLoad)</argsstring>
        <name>onEntitiesAutoLoadCompleted</name>
        <param>
          <type>bool</type>
          <declname>didAutoLoad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called by <ref refid="class_entity_auto_loader" kindref="compound">EntityAutoLoader</ref> if the entity auto-loading has finished successfully.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>didAutoLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether at least one entity was auto-loaded from the database. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="168" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1913" bodyend="1935"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a25ea5d5273062ba436ea39c45fdb1350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onEntitiesAutoLoadError</definition>
        <argsstring>()</argsstring>
        <name>onEntitiesAutoLoadError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called by <ref refid="class_entity_auto_loader" kindref="compound">EntityAutoLoader</ref> if the entity auto-loading fails. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="169" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1900" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ad8e3a1f259dc987e90094304b7e88aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onConsolidateProcessEnd</definition>
        <argsstring>(bool isOK)</argsstring>
        <name>onConsolidateProcessEnd</name>
        <param>
          <type>bool</type>
          <declname>isOK</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the consolidation process exits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="170" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2179" bodyend="2210"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ac79aa81d6bf59d1c99b3806eb313fd70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onGetStorageShardsDescriptorsError</definition>
        <argsstring>()</argsstring>
        <name>onGetStorageShardsDescriptorsError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles an error when we fail to retrieve the storage-shards meta-data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="171" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1525" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a6d13fc0ac016235c7ae53eed171f60eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onInitShardAlpha</definition>
        <argsstring>()</argsstring>
        <name>onInitShardAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called to continue initialisation after Shard-Alpha-specific initialisation has been completed (or skipped). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="172" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1535" bodyend="1555"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a04f5a4f5cf14355355e9c480782eb1df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onStatusCheck</definition>
        <argsstring>(bool isOK)</argsstring>
        <name>onStatusCheck</name>
        <param>
          <type>bool</type>
          <declname>isOK</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the replies from the checkStatus requests.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isOK</parametername>
</parameternamelist>
<parameterdescription>
<para>The result from the checkStatus request. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="173" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2218" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae0490df7a059c810d13911d2d5aedc6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::startSystemControlledShutdown</definition>
        <argsstring>()</argsstring>
        <name>startSystemControlledShutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts a controlled shutdown for the entire system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="175" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3060" bodyend="3076"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a544b5d835a55697a5b999197d05f157f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::shutDownNicely</definition>
        <argsstring>()</argsstring>
        <name>shutDownNicely</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts shutting down <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="176" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3082" bodyend="3104"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1af995274d7d9955b4472f2ff42edeee9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::shutDown</definition>
        <argsstring>()</argsstring>
        <name>shutDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method shuts this process down. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="177" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3110" bodyend="3115"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a90f9b94a68b5af3d218c618e57f965fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onEntityWriteStarted</definition>
        <argsstring>(const EntityKey &amp;key)</argsstring>
        <name>onEntityWriteStarted</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when an entity write starts.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity database key. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="179" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3155" bodyend="3159"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a91af6adb571f032740f1a25130a01cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onEntityWriteCompleted</definition>
        <argsstring>(const EntityKey &amp;key)</argsstring>
        <name>onEntityWriteCompleted</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when an entity write completes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity database key. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="180" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3167" bodyend="3198"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a353a56c2ca544703fbd6883d7d0e8655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::removeFromCache</definition>
        <argsstring>(const EntityDBKey &amp;key)</argsstring>
        <name>removeFromCache</name>
        <param>
          <type>const EntityDBKey &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method removes the given cache key from the account name to DBID cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity database key. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="181" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3207" bodyend="3210"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a1da2f0a0d43a9349b4ad0e68a760104b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::removeFromCache</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>removeFromCache</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message from another <ref refid="class_d_b_app" kindref="compound">DBApp</ref> to remove a name-DBID record from cache.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Binary data including the entity key. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="182" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3219" bodyend="3224"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae689a776668452fe0286af82c9e53c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::getEntity</definition>
        <argsstring>(EntityDBKey entityKey, BinaryOStream *pStream, bool shouldGetBaseEntityLocation, bool shouldGetGameTime, IDatabase::IGetEntityHandler &amp;handler)</argsstring>
        <name>getEntity</name>
        <param>
          <type>EntityDBKey</type>
          <declname>entityKey</declname>
        </param>
        <param>
          <type>BinaryOStream *</type>
          <declname>pStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldGetBaseEntityLocation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldGetGameTime</declname>
        </param>
        <param>
          <type>IDatabase::IGetEntityHandler &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is meant to be called instead of IDatabase::getEntity() so that we can wrap the handler before passing it to IDatabase.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entityKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity database key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pStream</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the entity property data should be streamed to on success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shouldGetBaseEntityLocation</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then the entity base mailbox will be returned if the entity has been checked out. If false, then NULL will be returned through the callback pBaseEntityLocation argument. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shouldGetGameTime</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then the game time when the record was written out to the database will be returned, otherwise it is false, and 0 is passed back to the callback as the gameTime argument. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="187" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3492" bodyend="3551"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a5da8401f1ba01eace703630d98a6c62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::putEntity</definition>
        <argsstring>(const EntityKey &amp;ekey, EntityID entityID, BinaryIStream *pStream, const EntityMailBoxRef *pBaseMailBox, bool removeBaseMailBox, bool putExplicitID, bool isTransfer, UpdateAutoLoad updateAutoLoad, IDatabase::IPutEntityHandler &amp;handler, GameTime checkGameTime=0)</argsstring>
        <name>putEntity</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>ekey</declname>
          <defname>entityKey</defname>
        </param>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <param>
          <type>BinaryIStream *</type>
          <declname>pStream</declname>
        </param>
        <param>
          <type>const EntityMailBoxRef *</type>
          <declname>pBaseMailBox</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>removeBaseMailBox</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>putExplicitID</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isTransfer</declname>
        </param>
        <param>
          <type>UpdateAutoLoad</type>
          <declname>updateAutoLoad</declname>
        </param>
        <param>
          <type>IDatabase::IPutEntityHandler &amp;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>GameTime</type>
          <declname>checkGameTime</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is meant to be called instead of IDatabase::putEntity() so that we can transform the mailbox before passing it to IDatabase.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entityKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity database key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entityID</parametername>
</parameternamelist>
<parameterdescription>
<para>The checked out entity ID, or 0 if not checked out. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pStream</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity data, or NULL if the entity data should not be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pBaseMailBox</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL, the checkout location will be updated to this value, otherwise, it is not updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>removeBaseMailBox</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then the checkout location will be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>putExplicitID</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then this is a new entity write that uses an explicit database ID. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isTransfer</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, then this is an entity transfer. Otherwise, this is an entity update or a new entity write. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>updateAutoLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>The update auto-load flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkGameTime</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-zero, this is the game time of the record being written. If the game time is earlier than already exists, the existing record is not updated, but success is returned back to the handler callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="193" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3680" bodyend="3790"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a71792b0ad61c699c263bb630cab494cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::setBaseEntityLocation</definition>
        <argsstring>(const EntityKey &amp;entityKey, const EntityMailBoxRef &amp;mailBox, IDatabase::IPutEntityHandler &amp;handler)</argsstring>
        <name>setBaseEntityLocation</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>entityKey</declname>
        </param>
        <param>
          <type>const EntityMailBoxRef &amp;</type>
          <declname>mailBox</declname>
        </param>
        <param>
          <type>IDatabase::IPutEntityHandler &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets checkout data for an entity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="204" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3897" bodyend="3906"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a0ed54234c4749f2b504d5952530f2e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::clearBaseEntityLocation</definition>
        <argsstring>(const EntityKey &amp;entityKey, IDatabase::IPutEntityHandler &amp;handler)</argsstring>
        <name>clearBaseEntityLocation</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>entityKey</declname>
        </param>
        <param>
          <type>IDatabase::IPutEntityHandler &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method clears the checkout data for an entity. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="208" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3912" bodyend="3918"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ad58afaa043a7cabe6756a1f0fb9806d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::delEntity</definition>
        <argsstring>(const EntityDBKey &amp;ekey, EntityID entityID, IDatabase::IDelEntityHandler &amp;handler)</argsstring>
        <name>delEntity</name>
        <param>
          <type>const EntityDBKey &amp;</type>
          <declname>ekey</declname>
        </param>
        <param>
          <type>EntityID</type>
          <declname>entityID</declname>
        </param>
        <param>
          <type>IDatabase::IDelEntityHandler &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is meant to be called instead of IDatabase::delEntity() so that we can muck around with stuff before passing it to IDatabase. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="211" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4005" bodyend="4010"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a71e500a02be5122b6d769c0889863b9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EntityDefs &amp;</type>
        <definition>EntityDefs&amp; DBApp::swapEntityDefs</definition>
        <argsstring>(EntityDefs &amp;entityDefs)</argsstring>
        <name>swapEntityDefs</name>
        <param>
          <type>EntityDefs &amp;</type>
          <declname>entityDefs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method swaps the current entity definitions with the given ones.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entityDefs</parametername>
</parameternamelist>
<parameterdescription>
<para>The new entity definitions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The old entity definitions. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="221" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="221" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1abcc51df98cd72b3509eb84dcea7c5b59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::callWatcher</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>callWatcher</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method receives a forwarded watcher set request from the <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> and performs the operation on the current <ref refid="class_d_b_app" kindref="compound">DBApp</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srcAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>The address from which this request originated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>The mercury header. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data stream containing the watcher data to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="228" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4025" bodyend="4038"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a68e0f749c691fa01526d1a6da6e97911" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::defaultEntityToStrm</definition>
        <argsstring>(EntityTypeID typeID, const BW::string &amp;name, BinaryOStream &amp;strm) const </argsstring>
        <name>defaultEntityToStrm</name>
        <param>
          <type>EntityTypeID</type>
          <declname>typeID</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="232" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4226" bodyend="4250"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a324d5371494c161a791e90793a183e5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_relogon_attempt_handler" kindref="compound">RelogonAttemptHandler</ref> *</type>
        <definition>RelogonAttemptHandler* DBApp::getInProgRelogonAttempt</definition>
        <argsstring>(EntityTypeID typeID, DatabaseID dbID)</argsstring>
        <name>getInProgRelogonAttempt</name>
        <param>
          <type>EntityTypeID</type>
          <declname>typeID</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="247" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="247" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a8ef56498143b3dd387daed9303091628" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onStartRelogonAttempt</definition>
        <argsstring>(EntityTypeID typeID, DatabaseID dbID, RelogonAttemptHandler *pHandler)</argsstring>
        <name>onStartRelogonAttempt</name>
        <param>
          <type>EntityTypeID</type>
          <declname>typeID</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <param>
          <type><ref refid="class_relogon_attempt_handler" kindref="compound">RelogonAttemptHandler</ref> *</type>
          <declname>pHandler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="256" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="256" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a1b99772001cd43e9dfe916b12556460e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onCompleteRelogonAttempt</definition>
        <argsstring>(EntityTypeID typeID, DatabaseID dbID)</argsstring>
        <name>onCompleteRelogonAttempt</name>
        <param>
          <type>EntityTypeID</type>
          <declname>typeID</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="264" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1afe554a189b11334b21995785e390341e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::onStartEntityCheckout</definition>
        <argsstring>(const EntityKey &amp;entityKey)</argsstring>
        <name>onStartEntityCheckout</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>entityKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method registers a pending check-out process being under way for the entity with the given ID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entityKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity key of the entity being checked out.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if there was not pending checkout for the same entity pre-existing. False if there was. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="278" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a54d01f2e1e287dd4532fc32b3bd538d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::onCompleteEntityCheckout</definition>
        <argsstring>(const EntityKey &amp;entityKey, const EntityMailBoxRef *pBaseRef)</argsstring>
        <name>onCompleteEntityCheckout</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>entityKey</declname>
          <defname>key</defname>
        </param>
        <param>
          <type>const EntityMailBoxRef *</type>
          <declname>pBaseRef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is the called when an entity that is being checked out has completed the checkout process. <ref refid="class_d_b_app_1afe554a189b11334b21995785e390341e" kindref="member">onStartEntityCheckout()</ref> should&apos;ve been called to mark the start of the operation. pBaseRef is the base mailbox of the now checked out entity. pBaseRef should be NULL if the checkout operation failed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="284" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5691" bodyend="5710"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1af7b8e880523261369ffe2c4355c7b52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::registerCheckoutCompletionListener</definition>
        <argsstring>(const EntityKey &amp;entityKey, ICheckoutCompletionListener &amp;listener)</argsstring>
        <name>registerCheckoutCompletionListener</name>
        <param>
          <type>const EntityKey &amp;</type>
          <declname>entityKey</declname>
        </param>
        <param>
          <type><ref refid="class_d_b_app_1_1_i_checkout_completion_listener" kindref="compound">ICheckoutCompletionListener</ref> &amp;</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method registers listener to be called when the entity identified by typeID and dbID completes its checkout process. This function will false and not register the listener if the entity is not currently in the process of being checked out.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entityKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>The checkout completion callback handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="305" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5721" bodyend="5734"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a2ae07de6badf08f6a434170b67063f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::controlledShutDown</definition>
        <argsstring>(const DBAppInterface::controlledShutDownArgs &amp;args)</argsstring>
        <name>controlledShutDown</name>
        <param>
          <type>const DBAppInterface::controlledShutDownArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles telling us to shut down in a controlled manner. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="311" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3230" bodyend="3257"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a4f73652c14f571563637521d7d183779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::handleBaseAppMgrBirth</definition>
        <argsstring>(const DBAppInterface::handleBaseAppMgrBirthArgs &amp;args)</argsstring>
        <name>handleBaseAppMgrBirth</name>
        <param>
          <type>const DBAppInterface::handleBaseAppMgrBirthArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when a new <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref> is started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="315" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2979" bodyend="2996"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a6341dcd81046d9a369b03871ec97547a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::handleDBAppMgrBirth</definition>
        <argsstring>(const DBAppInterface::handleDBAppMgrBirthArgs &amp;args)</argsstring>
        <name>handleDBAppMgrBirth</name>
        <param>
          <type>const DBAppInterface::handleDBAppMgrBirthArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when a new <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> is started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="318" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3002" bodyend="3026"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1acf9a8b05771bbc9b8362fba3fe720e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::handleDBAppMgrDeath</definition>
        <argsstring>(const DBAppInterface::handleDBAppMgrDeathArgs &amp;args)</argsstring>
        <name>handleDBAppMgrDeath</name>
        <param>
          <type>const DBAppInterface::handleDBAppMgrDeathArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when a <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> dies. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="320" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3032" bodyend="3045"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a19a42f77994efd686e20e4fd19f12efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::shutDown</definition>
        <argsstring>(const DBAppInterface::shutDownArgs &amp;args)</argsstring>
        <name>shutDown</name>
        <param>
          <type>const DBAppInterface::shutDownArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the shutDown message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="323" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3051" bodyend="3054"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a492c49600498c4bcba541d2642a330a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::logOn</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>logOn</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a logOn request. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="327" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4047" bodyend="4057"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab5654ef45c5b519a1d971259d6765077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::logOn</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, Mercury::ReplyID replyID, ServerLogOnParamsPtr pParams, const Mercury::Address &amp;addrForProxy)</argsstring>
        <name>logOn</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>Mercury::ReplyID</type>
          <declname>replyID</declname>
        </param>
        <param>
          <type>ServerLogOnParamsPtr</type>
          <declname>pParams</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addrForProxy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method attempts to log on a player. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="331" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4063" bodyend="4123"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a0b4ca49749b73be0d2108ab9c6307dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onLogOnLoggedOnUser</definition>
        <argsstring>(EntityTypeID typeID, DatabaseID dbID, ServerLogOnParamsPtr pParams, const Mercury::Address &amp;proxyAddr, const Mercury::Address &amp;replyAddr, Mercury::ReplyID replyID, const EntityMailBoxRef *pExistingBase, const BW::string &amp;dataForClient, const BW::string &amp;dataForBaseEntity)</argsstring>
        <name>onLogOnLoggedOnUser</name>
        <param>
          <type>EntityTypeID</type>
          <declname>typeID</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <param>
          <type>ServerLogOnParamsPtr</type>
          <declname>pParams</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>proxyAddr</declname>
          <defname>clientAddr</defname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>replyAddr</declname>
        </param>
        <param>
          <type>Mercury::ReplyID</type>
          <declname>replyID</declname>
        </param>
        <param>
          <type>const EntityMailBoxRef *</type>
          <declname>pExistingBase</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>dataForClient</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>dataForBaseEntity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when there is a log on request for an entity that is already logged on. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="336" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4160" bodyend="4214"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a0291a9c9f97356a992081f5e5d7ce918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onEntityLogOff</definition>
        <argsstring>(EntityTypeID typeID, DatabaseID dbID)</argsstring>
        <name>onEntityLogOff</name>
        <param>
          <type>EntityTypeID</type>
          <declname>typeID</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when we&apos;ve just logged off an entity.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typeID</parametername>
</parameternamelist>
<parameterdescription>
<para>The type ID of the logged off entity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dbID</parametername>
</parameternamelist>
<parameterdescription>
<para>The database ID of the logged off entity. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="343" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4413" bodyend="4425"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a353406a4b8390953e71901568d836360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::calculateOverloaded</definition>
        <argsstring>(bool isOverloaded)</argsstring>
        <name>calculateOverloaded</name>
        <param>
          <type>bool</type>
          <declname>isOverloaded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs checks to see whether we should see ourselves as being overloaded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="345" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4130" bodyend="4153"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aaf8e89075507f6fbd2145fcc8bf02375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::sendLogOnFailure</definition>
        <argsstring>(Mercury::ReplyID replyID, const Mercury::Address &amp;dstAddr, LogOnStatus reason, const char *pDescription=NULL)</argsstring>
        <name>sendLogOnFailure</name>
        <param>
          <type>Mercury::ReplyID</type>
          <declname>replyID</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>dstAddr</declname>
        </param>
        <param>
          <type>LogOnStatus</type>
          <declname>reason</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pDescription</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This helper method sends a failure reply for a logOn request. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="347" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4256" bodyend="4276"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aea16331e72598f27f12bf037200040e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::authenticateAccount</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>authenticateAccount</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message to authenticate a username and password. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="351" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4431" bodyend="4449"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a90da3a484bddd78744076a37b55709a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::getEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>getEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message to lookup an entity&apos;s data from the database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="355" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4728" bodyend="4856"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab25d066a27e486d1fb42ad6613236e7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::loadEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>loadEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
          <defname>input</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message to load an entity from the database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="359" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4862" bodyend="4920"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ada7be85d51063c7d57f7eacf66339048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onEntityLogOff</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, const DBAppInterface::onEntityLogOffArgs &amp;args)</argsstring>
        <name>onEntityLogOff</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const DBAppInterface::onEntityLogOffArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the onEntityLogOff message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="363" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4926" bodyend="4931"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a7c55fadbbe4557bf198188de58ec5f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::writeEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>writeEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the writeEntity mercury message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="367" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4282" bodyend="4353"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aa1a8c255da2a1874d2c15f9c197f020a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::transferEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>transferEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a request to transfer an entity from one storage-shard to another. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="371" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4360" bodyend="4404"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1abfb1c3e25e3ee2827c84368f5d8968b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::deleteEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, const DBAppInterface::deleteEntityArgs &amp;args)</argsstring>
        <name>deleteEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const DBAppInterface::deleteEntityArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This message deletes the specified entity from the local database if it exists and is not checked out.</para><para>On success, an empty reply is sent. If the entity is currently active, its mailbox is returned. If the entity did not exist, a single false boolean value is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="375" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4942" bodyend="4960"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a8ab7699d761ce8bdd3e713570dadca74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::lookUpEntity</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, const DBAppInterface::lookUpEntityArgs &amp;args)</argsstring>
        <name>lookUpEntity</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const DBAppInterface::lookUpEntityArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This message looks up the specified entity if it exists and is checked out and returns a mailbox to it. If it is not checked out it returns an empty message. If it does not exist, it returns -1 as an int32. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="379" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4968" bodyend="4986"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1abe3dece0c25099e1818aa54a0b5438ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::lookUpEntityByName</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>lookUpEntityByName</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This message looks up the specified entity if it exists and is checked out and returns a mailbox to it. If it is not checked out it returns an empty message. If it does not exist, it returns -1 as an int32. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="382" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="4994" bodyend="5017"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a4f2d12093fac5e2011db3c5e3aa9818e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::lookUpDBIDByName</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>lookUpDBIDByName</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This message looks up the DBID of the entity. The DBID will be 0 if the entity does not exist. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="385" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5024" bodyend="5046"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a28b2aa3fd5d83779860f988d17ea910a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::lookUpEntity</definition>
        <argsstring>(EntityDBKey &amp;ekey, BinaryOStream &amp;bos)</argsstring>
        <name>lookUpEntity</name>
        <param>
          <type>EntityDBKey &amp;</type>
          <declname>ekey</declname>
        </param>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>bos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ac45f79b980cce944d47608c647473088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::lookUpEntities</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>lookUpEntities</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This message (expected to be a request) looks up entities based on matching a property value with a query string.</para><para>The reply consists of the number of entities (int) followed by the database ID and mailbox location for each entity. The mailbox IP address and entity ID will be 0 to indicate that it has not been checked out.</para><para>On error, -1 is passed as the number of entities. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="390" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5059" bodyend="5083"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab4e1c2a2b9812e5ac5590ccf849f4f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::executeRawCommand</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>executeRawCommand</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method executaes a raw database command specific to the present implementation of the database interface. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="395" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5185" bodyend="5203"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1abb0f13900255a29851a4e66ddced628a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::putIDs</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>putIDs</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
          <defname>input</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method stores some previously used ID&apos;s into the database </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="399" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5208" bodyend="5218"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a96260463060881de0939a966d7f62f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::getIDs</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>getIDs</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
          <defname>input</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method grabs some more ID&apos;s from the database </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="403" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5293" bodyend="5313"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a9ec74239f8f647a30bb39fd3223f3583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::persistStorageShardAddition</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>persistStorageShardAddition</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a request for the storage-shards meta-data to be updated to include a newly added storage-shard. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="407" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5407" bodyend="5419"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae15a9bc0917173be03b88854454db711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::persistStorageShardRetirement</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, const DBAppInterface::persistStorageShardRetirementArgs &amp;args)</argsstring>
        <name>persistStorageShardRetirement</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const DBAppInterface::persistStorageShardRetirementArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a request for the storage-shards meta-data to be updated to retire an existing storage-shard. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="411" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5511" bodyend="5519"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a13a14e08a072315c54139e94a949a3a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::writeSpace</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>writeSpace</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes information about the spaces to the database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="415" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5525" bodyend="5530"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1afe930247687df535dba4073a5dd7b135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::writeGameTime</definition>
        <argsstring>(const DBAppInterface::writeGameTimeArgs &amp;args)</argsstring>
        <name>writeGameTime</name>
        <param>
          <type>const DBAppInterface::writeGameTimeArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method writes the game time to the database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="419" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5603" bodyend="5606"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab403221f6c1c2f4b42f7f74b48db65bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::handleBaseAppDeath</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>handleBaseAppDeath</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message from the <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref> informing us that a <ref refid="class_base_app" kindref="compound">BaseApp</ref> has died. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="421" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5537" bodyend="5567"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a297a0e3a5281e57ae1d08ab0d67ee0a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::secondaryDBRegistration</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>secondaryDBRegistration</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a secondary database registration message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="423" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2304" bodyend="2311"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a34c079b70dc79ed38ce3eff0fa2cd0f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::updateSecondaryDBs</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>updateSecondaryDBs</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles an update secondary database registration message. Secondary databases registered by a <ref refid="class_base_app" kindref="compound">BaseApp</ref> not in the provided list are deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="427" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2319" bodyend="2327"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a25529eca14b81b6aa1f6baa1fc9c16a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::getSecondaryDBDetails</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>getSecondaryDBDetails</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the request to get information for creating a new secondary database. It replies with the name of the new database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="431" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2334" bodyend="2357"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a485b2fab5628a17bb66717f4dbb8c7f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::barrierDBAppHash</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header)</argsstring>
        <name>barrierDBAppHash</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message from <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> to mark that there will be shards under transition in the cluster. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="435" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2542" bodyend="2548"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a1b451f3bfa2ff009e09f1f53095d0e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::updateDBAppHash</definition>
        <argsstring>(BinaryIStream &amp;data)</argsstring>
        <name>updateDBAppHash</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles an update from <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> when the DB App hash has changed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data stream. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="438" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2557" bodyend="2628"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a835750e7cab1800bb84165b9461870be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::persistTransitionCompletions</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header, BinaryIStream &amp;data)</argsstring>
        <name>persistTransitionCompletions</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a request from <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> to update the persistent storage-shard statuses. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="440" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2706" bodyend="2742"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a290171687b269b2ad070fffb18dd9c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::setClusterID</definition>
        <argsstring>(const DBAppInterface::setClusterIDArgs &amp;args)</argsstring>
        <name>setClusterID</name>
        <param>
          <type>const DBAppInterface::setClusterIDArgs &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a setClusterID message from <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> for the <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="444" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2748" bodyend="2755"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab783d15fceaea415b8252d207b768020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::startup</definition>
        <argsstring>(const Mercury::Address &amp;srcAddr, const Mercury::UnpackedMessageHeader &amp;header)</argsstring>
        <name>startup</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>srcAddr</declname>
        </param>
        <param>
          <type>const Mercury::UnpackedMessageHeader &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a message from <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> for the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> to startup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="446" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2761" bodyend="2777"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a3b37a81b9f6e2ba741eb7575edaac327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE DBApp::DBApp</definition>
        <argsstring>(Mercury::NetworkInterface &amp;interface, const Mercury::Address &amp;addr, DBAppID id, StorageShard &amp;storageShard, bool hasConnectedToDB)</argsstring>
        <name>DBApp</name>
        <param>
          <type>Mercury::NetworkInterface &amp;</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>DBAppID</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_storage_shard" kindref="compound">StorageShard</ref> &amp;</type>
          <declname>storageShard</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasConnectedToDB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interface</parametername>
</parameternamelist>
<parameterdescription>
<para>The application network interface. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The DBAppID for this <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storageShard</parametername>
</parameternamelist>
<parameterdescription>
<para>The storage shard this <ref refid="class_d_b_app" kindref="compound">DBApp</ref> has been allocated to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hasConnectedToDB</parametername>
</parameternamelist>
<parameterdescription>
<para>Has this <ref refid="class_d_b_app" kindref="compound">DBApp</ref> connected to database or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="32" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="19" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a7a2e88f4f2c708cc583aeba3c74c3fdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_storage_shard" kindref="compound">StorageShard</ref> *</type>
        <definition>StorageShard* DBApp::pStorageShard</definition>
        <argsstring>()</argsstring>
        <name>pStorageShard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor for the storage shard that this <ref refid="class_d_b_app" kindref="compound">DBApp</ref> is allocated to. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="37" column="1" bodyfile="dbappmgr/dbapp.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aae295586f21e573327b45524729cd5b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>DBAppID</type>
        <definition>DBAppID DBApp::id</definition>
        <argsstring>() const </argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the ID for this <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="42" column="1" bodyfile="dbappmgr/dbapp.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aef556d6232f94193a663658644a0b345" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Mercury::Address &amp;</type>
        <definition>const Mercury::Address&amp; DBApp::address</definition>
        <argsstring>() const </argsstring>
        <name>address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor for the channel address to this <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="45" column="1" bodyfile="dbappmgr/dbapp.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a9dfa54c0a26d375f361fb83409c57164" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mercury::ChannelOwner &amp;</type>
        <definition>Mercury::ChannelOwner&amp; DBApp::channelOwner</definition>
        <argsstring>()</argsstring>
        <name>channelOwner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accessor for the channel owner to this <ref refid="class_d_b_app" kindref="compound">DBApp</ref> . </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="48" column="1" bodyfile="dbappmgr/dbapp.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aa876d8f8851661988c3e38c48336a8b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string &amp; DBApp::storageShardName</definition>
        <argsstring>() const </argsstring>
        <name>storageShardName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the storage-shard name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="50" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1abeb6c9b9d5479b65c0061a854bc1dd90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ShardGUID</type>
        <definition>ShardGUID DBApp::storageShardGUID</definition>
        <argsstring>() const </argsstring>
        <name>storageShardGUID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns GUID of the corresponding storage shard. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="51" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a1a01ea607c17fb31139c365885d1c2fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string DBApp::storageShardGUIDString</definition>
        <argsstring>() const </argsstring>
        <name>storageShardGUIDString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the storage-shard GUID as a human-readable string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="52" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a621c70a774cc3af312a0f58abb956732" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string DBApp::storageShardStatusString</definition>
        <argsstring>() const </argsstring>
        <name>storageShardStatusString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the storage-shard status as a human-readable string. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="53" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ad79e14403a8d8945b853de41f6f1d78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::storageShardStatus</definition>
        <argsstring>(StorageShardDescriptor::Status status)</argsstring>
        <name>storageShardStatus</name>
        <param>
          <type>StorageShardDescriptor::Status</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the status of the corresponding storage shard.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>The status to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="54" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a3a6ef250e7188583794802170f35e6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::resetStorageShard</definition>
        <argsstring>()</argsstring>
        <name>resetStorageShard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method resets the status and GUID of the corresponding storage shard. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="55" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab72aa04844dcaf20ef9c50cbfb822804" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::isAlpha</definition>
        <argsstring>() const </argsstring>
        <name>isAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a9ff31b5ca22d916bead50ca39fabe0fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::isPendingAddition</definition>
        <argsstring>() const </argsstring>
        <name>isPendingAddition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a7a9b45fc49a720e9766652143b6f93e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::updateDBAppHash</definition>
        <argsstring>(MemoryOStream &amp;shardHashData, bool shouldAlphaResetGameServerState)</argsstring>
        <name>updateDBAppHash</name>
        <param>
          <type>MemoryOStream &amp;</type>
          <declname>shardHashData</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>shouldAlphaResetGameServerState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends an update for the given <ref refid="class_d_b_app" kindref="compound">DBApp</ref> hash to this <ref refid="class_d_b_app" kindref="compound">DBApp</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shardHashData</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash to send. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shouldAlphaResetGameServerState</parametername>
</parameternamelist>
<parameterdescription>
<para>For the DBApp-Alpha, if this is true, then it should reset the game server state, otherwise it has no effect if false or for non-Alpha DBApps. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="60" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="255" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a366108181580768eca1c0c5f600e8bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RANDOM_ACCESS_ITERATOR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DBApp::persistTransitionCompletions</definition>
        <argsstring>(RANDOM_ACCESS_ITERATOR begin, RANDOM_ACCESS_ITERATOR end)</argsstring>
        <name>persistTransitionCompletions</name>
        <param>
          <type>RANDOM_ACCESS_ITERATOR</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>RANDOM_ACCESS_ITERATOR</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a message to persist completions of transitions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The start of a range of transitioning storage-shard GUIDs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="64" column="1" bodyfile="dbappmgr/dbapp.hpp" bodystart="103" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae3be8a321845341cdd5d4405e8b66d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::handleDeath</definition>
        <argsstring>()</argsstring>
        <name>handleDeath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the death of this <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="67" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aacebce4bee8e682869f562dbd315c5ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::controlledShutDown</definition>
        <argsstring>(ShutDownStage stage=SHUTDOWN_REQUEST)</argsstring>
        <name>controlledShutDown</name>
        <param>
          <type>ShutDownStage</type>
          <declname>stage</declname>
          <defval>SHUTDOWN_REQUEST</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method informs the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> to shut down. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="68" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ac77762391289f14a7aa42644228f982c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::setClusterID</definition>
        <argsstring>(ClusterID clusterID)</argsstring>
        <name>setClusterID</name>
        <param>
          <type>ClusterID</type>
          <declname>clusterID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends clusterID to the <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="70" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a470a6d59968d8a57a4b656fb1f72739c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::startup</definition>
        <argsstring>()</argsstring>
        <name>startup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method informs the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> to startup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="72" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab6971651d1e7975521f3381a0215e401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::requestPersistStorageShardAddition</definition>
        <argsstring>(const StorageShardDescriptor &amp;descriptor, Mercury::ReplyMessageHandler &amp;handler)</argsstring>
        <name>requestPersistStorageShardAddition</name>
        <param>
          <type>const StorageShardDescriptor &amp;</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>Mercury::ReplyMessageHandler &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method requests that this <ref refid="class_d_b_app" kindref="compound">DBApp</ref>&apos;s storage-shard have its addition status persisted to the database.</para><para>This must only be called for A-status storage-shards.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>A descriptor of the storage-shard to persist the addition for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>Reply handler of the request. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="74" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="111" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aef7290832f89a513b046e2a7c1cc211d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::requestPersistStorageShardRetirement</definition>
        <argsstring>(const StorageShardDescriptor &amp;descriptor, Mercury::ReplyMessageHandler &amp;handler)</argsstring>
        <name>requestPersistStorageShardRetirement</name>
        <param>
          <type>const StorageShardDescriptor &amp;</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type>Mercury::ReplyMessageHandler &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method informs the corresponding <ref refid="class_d_b_app" kindref="compound">DBApp</ref>, which should be the DBApp-Alpha for Shard-Alpha, to retire a shard from the database.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>guid</parametername>
</parameternamelist>
<parameterdescription>
<para>ShardGUID of the storage shard to be retired. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>Reply handler of the request. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="78" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="144" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1af55ebb083009ec38686bd14253f001e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::retireApp</definition>
        <argsstring>()</argsstring>
        <name>retireApp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles a retirement message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="85" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab8953f27e438fecd92076459c0f4f57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::barrierDBAppHash</definition>
        <argsstring>(Mercury::ReplyMessageHandler *handler)</argsstring>
        <name>barrierDBAppHash</name>
        <param>
          <type>Mercury::ReplyMessageHandler *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method informs the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> that there will be shards under transition in the cluster.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Message handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="87" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="238" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ac4fe3806208220e53d73591d25071239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE DBApp::DBApp</definition>
        <argsstring>(WatcherNub &amp;watcherNub, const BWMachineDNetwork *pBWMachineD)</argsstring>
        <name>DBApp</name>
        <param>
          <type>WatcherNub &amp;</type>
          <declname>watcherNub</declname>
        </param>
        <param>
          <type>const BWMachineDNetwork *</type>
          <declname>pBWMachineD</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watcherNub</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pBWMachineD</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_b_w_machined" kindref="compound">BWMachined</ref> interface to use when querying. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/consolidate_dbs/dbapp.hpp" line="21" column="1" bodyfile="tools/consolidate_dbs/dbapp.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a9bba67f68174aae411bf2cb8daec8d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise this <ref refid="class_d_b_app" kindref="compound">DBApp</ref> instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/consolidate_dbs/dbapp.hpp" line="23" column="1" bodyfile="tools/consolidate_dbs/dbapp.cpp" bodystart="36" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab2b6192287941386485b6242cce053a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::setStatus</definition>
        <argsstring>(const BW::string &amp;status)</argsstring>
        <name>setStatus</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets <ref refid="class_d_b_app" kindref="compound">DBApp</ref> detailed status watcher. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/consolidate_dbs/dbapp.hpp" line="25" column="1" bodyfile="tools/consolidate_dbs/dbapp.cpp" bodystart="66" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aa82c3c81b79f4460212d5ff718defda7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::onProcessStatsMessage</definition>
        <argsstring>(ProcessStatsMessage &amp;psm, uint32 addr)</argsstring>
        <name>onProcessStatsMessage</name>
        <param>
          <type>ProcessStatsMessage &amp;</type>
          <declname>psm</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called to provide us with information about the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> running on our cluster. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/consolidate_dbs/dbapp.hpp" line="28" column="1" bodyfile="tools/consolidate_dbs/dbapp.cpp" bodystart="93" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_d_b_app_1a681d8008ac8731e73921b44839a67d4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Mercury::UDPChannel &amp;</type>
        <definition>static Mercury::UDPChannel&amp; DBApp::getChannel</definition>
        <argsstring>(const Mercury::Address &amp;addr)</argsstring>
        <name>getChannel</name>
        <param>
          <type>const Mercury::Address &amp;</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the channel for the given address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="159" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae6dd1c9e239095e13dc85db1c2afb066" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void DBApp::setBaseRefToLoggingOn</definition>
        <argsstring>(EntityMailBoxRef &amp;baseRef, EntityTypeID entityTypeID)</argsstring>
        <name>setBaseRefToLoggingOn</name>
        <param>
          <type>EntityMailBoxRef &amp;</type>
          <declname>baseRef</declname>
        </param>
        <param>
          <type>EntityTypeID</type>
          <declname>entityTypeID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets the given mailBox to &quot;pending base creation&quot; state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="239" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="239" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a8c4c98f1ede8e111caff84be7620858a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref></type>
        <definition>WatcherPtr DBApp::pWatcher</definition>
        <argsstring>()</argsstring>
        <name>pWatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the watcher for <ref refid="class_d_b_app" kindref="compound">DBApp</ref> instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbappmgr/dbapp.hpp" line="82" column="1" bodyfile="dbappmgr/dbapp.cpp" bodystart="271" bodyend="286"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_d_b_app_1a0bf5091fe51b0f1cc9f42856cafbd93d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::init</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>init</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="450" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="397" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a657c4cef413fe645ca882fcdc1699123" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initNetwork</definition>
        <argsstring>()</argsstring>
        <name>initNetwork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the network.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="453" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="422" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a434d2e99b66ebb79ea45fb0b76ccda07" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initBaseAppMgr</definition>
        <argsstring>()</argsstring>
        <name>initBaseAppMgr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises our connection to <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref>, and determines our recovery start-up mode.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="454" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="451" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a2c21e7a5721906bba298716a2361e3e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initScript</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>initScript</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the script layer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of command line arguments in argv. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>The command line arguments, which may contain res paths.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="455" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="503" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a9c4383f25e0f868ca2c36ca747d35cbc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initEntityDefs</definition>
        <argsstring>()</argsstring>
        <name>initEntityDefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method reads the entity definitions.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="456" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="561" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae84db91762f0e7cb333be6e18c22ef81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initExtensions</definition>
        <argsstring>()</argsstring>
        <name>initExtensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method loads any extensions (which live in shared libraries).</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="457" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="592" bodyend="608"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a9485d8c951a030d87475e94654645396" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initDatabaseCreation</definition>
        <argsstring>()</argsstring>
        <name>initDatabaseCreation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method creates the database implementation object.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="458" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="616" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aab0a7263b3340fc2ca3a7677e47b11f0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initDBAppMgrAsync</definition>
        <argsstring>()</argsstring>
        <name>initDBAppMgrAsync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method finds <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> and registers this <ref refid="class_d_b_app" kindref="compound">DBApp</ref> with it, retrieving back a <ref refid="class_d_b_app" kindref="compound">DBApp</ref> ID and the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> hash.</para><para>When registration completes, <ref refid="class_d_b_app_1a757ed1464b9e97198210c7db4a8c77ed" kindref="member">DBApp::onDBAppMgrRegistrationCompleted()</ref> will be called.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="459" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="676" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a3e00ab599741ce74abe63b45c4c25fa7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initAppIDRegistration</definition>
        <argsstring>()</argsstring>
        <name>initAppIDRegistration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs initialisation for our newly received <ref refid="class_d_b_app" kindref="compound">DBApp</ref> ID.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>Need to register to <ref refid="class_b_w_machined" kindref="compound">BWMachined</ref> as early as possible because <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> replies on <ref refid="class_d_b_app" kindref="compound">DBApp</ref> death notifications from <ref refid="class_b_w_machined" kindref="compound">BWMachined</ref> to manage DBApps.</para>        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="463" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="773" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a18ebebccd98373e45829174d178d7fed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initDatabaseStartup</definition>
        <argsstring>()</argsstring>
        <name>initDatabaseStartup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts up the database.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="464" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="908" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab251a2422234fb787e8f84cf8e1555c0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initEntityTypesMaxDBIDs</definition>
        <argsstring>()</argsstring>
        <name>initEntityTypesMaxDBIDs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the entity type maximum DBID mapping, used for allocating new DBIDs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="467" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1071" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ad2dc895ff25820e783b7c47f7d26320a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initBirthDeathListeners</definition>
        <argsstring>()</argsstring>
        <name>initBirthDeathListeners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method registers any required birth and death listeners with machined.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="471" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1154" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a4892a7143ddee47922ba53fc79fa2f63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initWatchers</definition>
        <argsstring>()</argsstring>
        <name>initWatchers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises watchers.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="472" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1196" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a4dd71d9f1e3653cec2e8b453e898f7e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initConfig</definition>
        <argsstring>()</argsstring>
        <name>initConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method does any initialisation related to setting up state based on configuration data in bw.xml.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="473" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1281" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aeffa516005e409d168eeaf257ba61177" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initGameSpecific</definition>
        <argsstring>()</argsstring>
        <name>initGameSpecific</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises any special game-specific initialisation that is required.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="474" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1311" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a57fc37cd0590f7dc9c2c07ccc21b8d50" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initBillingSystem</definition>
        <argsstring>()</argsstring>
        <name>initBillingSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the connection with the billing system.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="475" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1328" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ad250123e2997d1045003b0fcea402d5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initDBAppAlpha</definition>
        <argsstring>()</argsstring>
        <name>initDBAppAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> Alpha. This can be called at initialisation, or when a non-Alpha <ref refid="class_d_b_app" kindref="compound">DBApp</ref> is promoted to Alpha.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="477" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1347" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ac457355f1bbf0d19b663e63c0b9ce6d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initAcquireDBLock</definition>
        <argsstring>()</argsstring>
        <name>initAcquireDBLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method acquires the db lock, so another Bigworld process ( like consolidate_dbs ) won&apos;t use the database for exclusive actions ( like consolidate_dbs <ndash/>clear ) when <ref refid="class_d_b_app" kindref="compound">DBApp</ref> Alpha is running. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="480" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1395" bodyend="1399"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a74e6baa09b7601f904fb2f37dea21332" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initShardAlpha</definition>
        <argsstring>()</argsstring>
        <name>initShardAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method retrieves shards meta-data from Shard-Alpha to send back to <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref>.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="482" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1505" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a043779d5ae671dfd78e29f2803ddedb4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::initSecondaryDBPrefix</definition>
        <argsstring>()</argsstring>
        <name>initSecondaryDBPrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the prefix should for the secondary database files. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="485" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1624" bodyend="1669"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1adcb4f7b5d56a36650e043894b9cf524d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initResetGameServerState</definition>
        <argsstring>()</argsstring>
        <name>initResetGameServerState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method resets the game server state, performing any first-time initialisation that needs to run from DBApp-Alpha, that should only be run once per server run.</para><para><simplesect kind="return"><para>false on error, true otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="488" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1565" bodyend="1575"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a6bf57105a0a32ba236b9700846f721e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initSecondaryDBsAsync</definition>
        <argsstring>()</argsstring>
        <name>initSecondaryDBsAsync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts the process for initialising the secondary DBs, and is asynchronous.</para><para>On completion, onSecondaryDBsInitCompleted() will be called on success.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="489" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1586" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aae11c628e4e6586f09159f485308a065" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::onSecondaryDBsInitCompleted</definition>
        <argsstring>()</argsstring>
        <name>onSecondaryDBsInitCompleted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method continues initialisation after secondary DBs have been initialised successfully.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="490" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1678" bodyend="1692"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a5a484629adc39f5ba9a7962f64c520d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initBaseAppMgrInitData</definition>
        <argsstring>()</argsstring>
        <name>initBaseAppMgrInitData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method kicks off sending game init data to <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref> from the database.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="491" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1701" bodyend="1716"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a7554af272ac0fd1b608cbc86736662f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initDatabaseResetGameServerState</definition>
        <argsstring>()</argsstring>
        <name>initDatabaseResetGameServerState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method resets per-server-run state in the databases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="492" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1722" bodyend="1727"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ac946a21fb7b4c2a58c34bdfd70138b67" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initWaitForAppsToBecomeReadyAsync</definition>
        <argsstring>()</argsstring>
        <name>initWaitForAppsToBecomeReadyAsync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts the waiting for other apps to become ready.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="493" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1735" bodyend="1749"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae6cb14c628e409c520b00c73aa9e0329" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onAppsReady</definition>
        <argsstring>()</argsstring>
        <name>onAppsReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the other requisite server components have started up, and are waiting for the server to &quot;start&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="495" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1756" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a0346a4e5b30dc10159775616bf088c86" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initSendSpaceData</definition>
        <argsstring>()</argsstring>
        <name>initSendSpaceData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method loads stored space data from the database to give to <ref refid="class_cell_app_mgr" kindref="compound">CellAppMgr</ref> (via <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref>).</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="497" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1843" bodyend="1869"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a0616a4e236f3b6de34d0c2050ab5921c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initEntityAutoLoadingAsync</definition>
        <argsstring>()</argsstring>
        <name>initEntityAutoLoadingAsync</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the loading of game state from the database. This includes auto-loaded entities and space data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="498" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1875" bodyend="1894"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a0b3a6ab925dd359e2a59e57b07bfca74" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initEntityDataBalancer</definition>
        <argsstring>()</argsstring>
        <name>initEntityDataBalancer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises the auto-balancer for persistent entity data.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="499" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2006" bodyend="2037"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aa14522ffd404f201a4376415578136a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initNotifyServerStartup</definition>
        <argsstring>(bool didAutoLoad)</argsstring>
        <name>initNotifyServerStartup</name>
        <param>
          <type>bool</type>
          <declname>didAutoLoad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method signals to the rest of the server that all components have started, and to start running the game code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>didAutoLoad</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether at least one entity was auto-loaded from the database. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="503" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2047" bodyend="2062"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1af5c154035abca44cdfb603e67c1ccd25" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initTimers</definition>
        <argsstring>()</argsstring>
        <name>initTimers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sets up required timers.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="505" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2070" bodyend="2089"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a2671fd23d68c3ae1db8f969122705ad0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::initScriptAppReady</definition>
        <argsstring>()</argsstring>
        <name>initScriptAppReady</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method tells the script layer that this app is ready.</para><para><simplesect kind="return"><para>true on success, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="506" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1807" bodyend="1834"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a7e72e64709f129a73d004ca5568465de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onInitCompleted</definition>
        <argsstring>()</argsstring>
        <name>onInitCompleted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when initialisation has completed successfully.</para><para>On initialisation failure, the app/server should shutdown as gracefully as it can. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="507" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2098" bodyend="2109"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a978237f65e50fc6839072531846cfcd9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::startup</definition>
        <argsstring>(bool isOnStartupMessage)</argsstring>
        <name>startup</name>
        <param>
          <type>bool</type>
          <declname>isOnStartupMessage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method attempts to startup the <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. The attempt will only succeed if the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> has completed initialization and a startup message from <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> has been recieved.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isOnStartupMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>When true, flags this startup attempt is triggered by a <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref> startup message. When false, flags this startup attempt is triggered by the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> completing initialization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="509" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2791" bodyend="2822"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a1107bc55b3da6e8e9a79dba9561299a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onRunComplete</definition>
        <argsstring>()</argsstring>
        <name>onRunComplete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is run when the runloop has finished. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="511" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3263" bodyend="3267"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a1aa0044bcf2cac2b69894b26afb44de5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::finalise</definition>
        <argsstring>()</argsstring>
        <name>finalise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs some clean-up at the end of the shut down process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="513" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3273" bodyend="3279"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a3ed350a2b697cf35a48dad4a0ac2a2c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::addWatchers</definition>
        <argsstring>(Watcher &amp;watcher)</argsstring>
        <name>addWatchers</name>
        <param>
          <type>Watcher &amp;</type>
          <declname>watcher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds the watchers associated with this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="515" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="1220" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab6ff3dba26edf4b475cd60fcf5919440" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::endMailBoxRemapping</definition>
        <argsstring>()</argsstring>
        <name>endMailBoxRemapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method ends the mailbox remapping for a dead <ref refid="class_base_app" kindref="compound">BaseApp</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="517" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5573" bodyend="5577"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a6f668f352e9f2abab3c27a78fdd7d14e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::sendBaseAppMgrInitData</definition>
        <argsstring>()</argsstring>
        <name>sendBaseAppMgrInitData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gathers initialisation data to send to <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="519" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5612" bodyend="5619"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a0da4161276f1fc8921fe28aacdff2a87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::checkPendingLoginAttempts</definition>
        <argsstring>()</argsstring>
        <name>checkPendingLoginAttempts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks whether there are any relogin attempts that are too old. This is attempting to track down a problem where it looks as though entries are being left in the pendingAttempts_ table. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="521" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2944" bodyend="2968"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a95bc7ea6079c6e00052dd116bf8c4c6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::checkStatus</definition>
        <argsstring>()</argsstring>
        <name>checkStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles the timer event to check the <ref refid="class_d_b_app" kindref="compound">DBApp</ref> status. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="523" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2874" bodyend="2936"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a09775b5caa47d60d162bed88d515f6f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DatabaseID</type>
        <definition>DatabaseID DBApp::allocateNewDBID</definition>
        <argsstring>(EntityTypeID entityTypeID)</argsstring>
        <name>allocateNewDBID</name>
        <param>
          <type>EntityTypeID</type>
          <declname>entityTypeID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method allocates a new Database ID for the given entity type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entityTypeID</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity type ID.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new DatabaseID, or 0 if none could be allocated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="525" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3561" bodyend="3600"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ab003ce1e5a5e7a46f222c4a5c8dc57e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::updateForExplicitDBID</definition>
        <argsstring>(EntityTypeID entityTypeID, DatabaseID dbID)</argsstring>
        <name>updateForExplicitDBID</name>
        <param>
          <type>EntityTypeID</type>
          <declname>entityTypeID</declname>
        </param>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method updates the entity types maximum DBID mapping with the given explicit DBID for the given entity type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entityTypeID</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity type ID. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dbID</parametername>
</parameternamelist>
<parameterdescription>
<para>The explicit database ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="526" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3610" bodyend="3618"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a56c7e22d557a75f8ea928df486e9c45a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::queueTransferCycleForDBID</definition>
        <argsstring>(DatabaseID dbID)</argsstring>
        <name>queueTransferCycleForDBID</name>
        <param>
          <type>DatabaseID</type>
          <declname>dbID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks final destination for the given DBID, and queues a transfer cycle for it with the <ref refid="class_entity_data_balancer" kindref="compound">EntityDataBalancer</ref> instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbID</parametername>
</parameternamelist>
<parameterdescription>
<para>The entity database ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="528" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="3627" bodyend="3653"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a39b3a745cd8c71deb50977b326d1b621" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::consolidateData</definition>
        <argsstring>()</argsstring>
        <name>consolidateData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method starts the data consolidation process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="531" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2115" bodyend="2145"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a46eec179df224cad33a594a44b341f89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::startConsolidationProcess</definition>
        <argsstring>()</argsstring>
        <name>startConsolidationProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method runs an external command to consolidate data from secondary databases.</para><para><simplesect kind="return"><para>true if a new consolidation process was started, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="532" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2154" bodyend="2173"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1af2080f8c05cd36ccefa9b9d3e258beeb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DBApp::sendRemoveDBCmd</definition>
        <argsstring>(uint32 destIP, const BW::string &amp;dbLocation)</argsstring>
        <name>sendRemoveDBCmd</name>
        <param>
          <type>uint32</type>
          <declname>destIP</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>dbLocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method sends a message to the destination <ref refid="class_b_w_machined" kindref="compound">BWMachined</ref> that will cause the database at dbLocation to be removed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="533" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2829" bodyend="2846"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1ae63610111788e2857ff9776823a7ca34" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ManagerAppGateway *</type>
        <definition>ManagerAppGateway* DBApp::pManagerAppGateway</definition>
        <argsstring>()</argsstring>
        <name>pManagerAppGateway</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="536" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="536" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a45ea90112201bf95d661b8e3ed7963e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::handleTimeout</definition>
        <argsstring>(TimerHandle handle, void *arg)</argsstring>
        <name>handleTimeout</name>
        <param>
          <type>TimerHandle</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method handles timer events. It is called every second. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="542" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2852" bodyend="2868"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1a643278ddedae2cd552eae30244738289" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onUpdateSecondaryDBsComplete</definition>
        <argsstring>(const IDatabase::SecondaryDBEntries &amp;removedEntries)</argsstring>
        <name>onUpdateSecondaryDBsComplete</name>
        <param>
          <type>const IDatabase::SecondaryDBEntries &amp;</type>
          <declname>removedEntries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes secondary databases whose registration have just been removed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="545" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="2363" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="class_d_b_app_1aae3fd131868ad8b09a2d8419e5eea6eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DBApp::onGetBaseAppMgrInitDataComplete</definition>
        <argsstring>(GameTime gameTime, const UniqueID &amp;clusterUniqueID)</argsstring>
        <name>onGetBaseAppMgrInitDataComplete</name>
        <param>
          <type>GameTime</type>
          <declname>gameTime</declname>
        </param>
        <param>
          <type>const UniqueID &amp;</type>
          <declname>clusterUniqueID</declname>
          <defname>uniqueID</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends initialisation data to <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp/dbapp.hpp" line="549" column="1" bodyfile="dbapp/dbapp.cpp" bodystart="5646" bodyend="5668"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is used to implement the main singleton object that represents this application.</para><para>This class represents the <ref refid="class_d_b_app_mgr" kindref="compound">DBAppMgr</ref>&apos;s view of a <ref refid="class_d_b_app" kindref="compound">DBApp</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="973">
        <label>DBApp</label>
        <link refid="class_d_b_app"/>
        <childnode refid="974" relation="public-inheritance">
        </childnode>
        <childnode refid="975" relation="public-inheritance">
        </childnode>
        <childnode refid="976" relation="public-inheritance">
        </childnode>
        <childnode refid="977" relation="private-inheritance">
        </childnode>
        <childnode refid="978" relation="private-inheritance">
        </childnode>
        <childnode refid="979" relation="private-inheritance">
        </childnode>
        <childnode refid="980" relation="public-inheritance">
        </childnode>
      </node>
      <node id="976">
        <label>ScriptApp</label>
      </node>
      <node id="980">
        <label>Singleton&lt; DBApp &gt;</label>
      </node>
      <node id="975">
        <label>ReferenceCount</label>
      </node>
      <node id="977">
        <label>TimerHandler</label>
      </node>
      <node id="978">
        <label>IDatabase::IGetBaseAppMgrInitDataHandler</label>
      </node>
      <node id="979">
        <label>IDatabase::IUpdateSecondaryDBsHandler</label>
      </node>
      <node id="974">
        <label>MachineGuardMessage::ReplyHandler</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="981">
        <label>DBApp</label>
        <link refid="class_d_b_app"/>
        <childnode refid="982" relation="public-inheritance">
        </childnode>
        <childnode refid="983" relation="public-inheritance">
        </childnode>
        <childnode refid="984" relation="public-inheritance">
        </childnode>
        <childnode refid="985" relation="private-inheritance">
        </childnode>
        <childnode refid="986" relation="private-inheritance">
        </childnode>
        <childnode refid="987" relation="private-inheritance">
        </childnode>
        <childnode refid="988" relation="public-inheritance">
        </childnode>
      </node>
      <node id="984">
        <label>ScriptApp</label>
      </node>
      <node id="988">
        <label>Singleton&lt; DBApp &gt;</label>
      </node>
      <node id="983">
        <label>ReferenceCount</label>
      </node>
      <node id="985">
        <label>TimerHandler</label>
      </node>
      <node id="986">
        <label>IDatabase::IGetBaseAppMgrInitDataHandler</label>
      </node>
      <node id="987">
        <label>IDatabase::IUpdateSecondaryDBsHandler</label>
      </node>
      <node id="982">
        <label>MachineGuardMessage::ReplyHandler</label>
      </node>
    </collaborationgraph>
    <location file="dbapp/dbapp.hpp" line="70" column="1" bodyfile="dbapp/dbapp.hpp" bodystart="65" bodyend="649"/>
    <listofallmembers>
      <member refid="class_d_b_app_1a9d6af7bbf24d53d0a4ce0b23022e3e86" prot="private" virt="non-virtual"><scope>DBApp</scope><name>accountNameDBIDCache_</name></member>
      <member refid="class_d_b_app_1a6a4fb319dde810057d44da92c12b877d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>addr_</name></member>
      <member refid="class_d_b_app_1aef556d6232f94193a663658644a0b345" prot="public" virt="non-virtual"><scope>DBApp</scope><name>address</name></member>
      <member refid="class_d_b_app_1a3ed350a2b697cf35a48dad4a0ac2a2c4" prot="private" virt="non-virtual"><scope>DBApp</scope><name>addWatchers</name></member>
      <member refid="class_d_b_app_1a09775b5caa47d60d162bed88d515f6f3" prot="private" virt="non-virtual"><scope>DBApp</scope><name>allocateNewDBID</name></member>
      <member refid="class_d_b_app_1aea16331e72598f27f12bf037200040e2" prot="public" virt="non-virtual"><scope>DBApp</scope><name>authenticateAccount</name></member>
      <member refid="class_d_b_app_1a485b2fab5628a17bb66717f4dbb8c7f1" prot="public" virt="non-virtual"><scope>DBApp</scope><name>barrierDBAppHash</name></member>
      <member refid="class_d_b_app_1ab8953f27e438fecd92076459c0f4f57e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>barrierDBAppHash</name></member>
      <member refid="class_d_b_app_1a214720624bdfbb4594b2a43d88cfcc84" prot="public" virt="non-virtual"><scope>DBApp</scope><name>baseAppMgr</name></member>
      <member refid="class_d_b_app_1abf0281aef0302ffa75f90ac2af786eab" prot="private" virt="non-virtual"><scope>DBApp</scope><name>baseAppMgr_</name></member>
      <member refid="class_d_b_app_1ab47b9556c22f0264a070d3c93ac6a4a0" prot="private" virt="non-virtual"><scope>DBApp</scope><name>bufferedPutEntityRequests_</name></member>
      <member refid="class_d_b_app_1ad19b102c15295aa107c1275be3ebefe4" prot="private" virt="non-virtual"><scope>DBApp</scope><name>bufferedRequests_</name></member>
      <member refid="class_d_b_app_1a353406a4b8390953e71901568d836360" prot="public" virt="non-virtual"><scope>DBApp</scope><name>calculateOverloaded</name></member>
      <member refid="class_d_b_app_1abcc51df98cd72b3509eb84dcea7c5b59" prot="public" virt="non-virtual"><scope>DBApp</scope><name>callWatcher</name></member>
      <member refid="class_d_b_app_1a9dfa54c0a26d375f361fb83409c57164" prot="public" virt="non-virtual"><scope>DBApp</scope><name>channelOwner</name></member>
      <member refid="class_d_b_app_1aa549aec59686bf3913ef74b2f4a4401c" prot="private" virt="non-virtual"><scope>DBApp</scope><name>channelOwner_</name></member>
      <member refid="class_d_b_app_1af1011c85506e149f1170f0919e7821ea" prot="private" virt="non-virtual"><scope>DBApp</scope><name>CheckoutCompletionListeners</name></member>
      <member refid="class_d_b_app_1a22fe76c475de4f9b9bbbdf4a2881104a" prot="private" virt="non-virtual"><scope>DBApp</scope><name>checkoutCompletionListeners_</name></member>
      <member refid="class_d_b_app_1a6aa5d8ac474ce740ec020557159eb1b1" prot="public" virt="non-virtual"><scope>DBApp</scope><name>checkOutstandingWritesForDirtyShards</name></member>
      <member refid="class_d_b_app_1a0da4161276f1fc8921fe28aacdff2a87" prot="private" virt="non-virtual"><scope>DBApp</scope><name>checkPendingLoginAttempts</name></member>
      <member refid="class_d_b_app_1a95bc7ea6079c6e00052dd116bf8c4c6a" prot="private" virt="non-virtual"><scope>DBApp</scope><name>checkStatus</name></member>
      <member refid="class_d_b_app_1a0ed54234c4749f2b504d5952530f2e6e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>clearBaseEntityLocation</name></member>
      <member refid="class_d_b_app_1af01a655198c9e38547bba53703b307b7" prot="public" virt="non-virtual"><scope>DBApp</scope><name>Config</name></member>
      <member refid="class_d_b_app_1a39b3a745cd8c71deb50977b326d1b621" prot="private" virt="non-virtual"><scope>DBApp</scope><name>consolidateData</name></member>
      <member refid="class_d_b_app_1a2ae07de6badf08f6a434170b67063f80" prot="public" virt="non-virtual"><scope>DBApp</scope><name>controlledShutDown</name></member>
      <member refid="class_d_b_app_1aacebce4bee8e682869f562dbd315c5ea" prot="public" virt="non-virtual"><scope>DBApp</scope><name>controlledShutDown</name></member>
      <member refid="class_d_b_app_1a059757a30884d12540fc2d57b237c8f5" prot="private" virt="non-virtual"><scope>DBApp</scope><name>curLoad_</name></member>
      <member refid="class_d_b_app_1a54746dea5526023f3cd62d2946603e5a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>database</name></member>
      <member refid="class_d_b_app_1ae555fd98dde2079ab18d32c4a52ab2f9" prot="public" virt="non-virtual"><scope>DBApp</scope><name>databaseGateway</name></member>
      <member refid="class_d_b_app_1ad91c9f1ddcf8a03d3ad09e477f11d552" prot="private" virt="non-virtual"><scope>DBApp</scope><name>databaseGateway_</name></member>
      <member refid="class_d_b_app_1a4f44698cf564cb50ab59e092946c0a19" prot="public" virt="non-virtual"><scope>DBApp</scope><name>DBApp</name></member>
      <member refid="class_d_b_app_1a3b37a81b9f6e2ba741eb7575edaac327" prot="public" virt="non-virtual"><scope>DBApp</scope><name>DBApp</name></member>
      <member refid="class_d_b_app_1ac4fe3806208220e53d73591d25071239" prot="public" virt="non-virtual"><scope>DBApp</scope><name>DBApp</name></member>
      <member refid="class_d_b_app_1aa6e0ed8518072647cd79fb8fd4bb1ea1" prot="public" virt="non-virtual"><scope>DBApp</scope><name>dbAppMgr</name></member>
      <member refid="class_d_b_app_1a309b4236ecd6f294d5f3e68dd017db20" prot="private" virt="non-virtual"><scope>DBApp</scope><name>dbAppMgr_</name></member>
      <member refid="class_d_b_app_1a68e0f749c691fa01526d1a6da6e97911" prot="public" virt="non-virtual"><scope>DBApp</scope><name>defaultEntityToStrm</name></member>
      <member refid="class_d_b_app_1ad58afaa043a7cabe6756a1f0fb9806d0" prot="public" virt="non-virtual"><scope>DBApp</scope><name>delEntity</name></member>
      <member refid="class_d_b_app_1abfb1c3e25e3ee2827c84368f5d8968b9" prot="public" virt="non-virtual"><scope>DBApp</scope><name>deleteEntity</name></member>
      <member refid="class_d_b_app_1ab6ff3dba26edf4b475cd60fcf5919440" prot="private" virt="non-virtual"><scope>DBApp</scope><name>endMailBoxRemapping</name></member>
      <member refid="class_d_b_app_1ada1004e349ea8ad632b9e3b0c8e6a471" prot="public" virt="non-virtual"><scope>DBApp</scope><name>entityDefs</name></member>
      <member refid="class_d_b_app_1abe295ec2862c48701f0e5003c548e492" prot="private" virt="non-virtual"><scope>DBApp</scope><name>EntityIDDBIDMap</name></member>
      <member refid="class_d_b_app_1a24de36a7289f6b7716307434b74554f4" prot="private" virt="non-virtual"><scope>DBApp</scope><name>EntityKeyCounts</name></member>
      <member refid="class_d_b_app_1a245368d6e2ae4b48a5dde8615e4050ca" prot="public" virt="non-virtual"><scope>DBApp</scope><name>entityKeyHasOutstandingWrite</name></member>
      <member refid="class_d_b_app_1a9d5ddf80c1db5ff5f9e21fb249a5783d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>EntityKeySet</name></member>
      <member refid="class_d_b_app_1a4b9ee901e45a8b78c761c1188b3076de" prot="private" virt="non-virtual"><scope>DBApp</scope><name>EntityTypesMaxDBIDs</name></member>
      <member refid="class_d_b_app_1addf41c3748dbc56ed95ea5de84ed4dd4" prot="private" virt="non-virtual"><scope>DBApp</scope><name>entityTypesMaxDBIDs_</name></member>
      <member refid="class_d_b_app_1ab4e1c2a2b9812e5ac5590ccf849f4f5d" prot="public" virt="non-virtual"><scope>DBApp</scope><name>executeRawCommand</name></member>
      <member refid="class_d_b_app_1a1aa0044bcf2cac2b69894b26afb44de5" prot="private" virt="non-virtual"><scope>DBApp</scope><name>finalise</name></member>
      <member refid="class_d_b_app_1a25a81be8128da5b5bd20e7ce9ecadf8f" prot="private" virt="non-virtual"><scope>DBApp</scope><name>gameTimer_</name></member>
      <member refid="class_d_b_app_1a681d8008ac8731e73921b44839a67d4f" prot="public" virt="non-virtual"><scope>DBApp</scope><name>getChannel</name></member>
      <member refid="class_d_b_app_1ae689a776668452fe0286af82c9e53c0a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>getEntity</name></member>
      <member refid="class_d_b_app_1a90da3a484bddd78744076a37b55709a9" prot="public" virt="non-virtual"><scope>DBApp</scope><name>getEntity</name></member>
      <member refid="class_d_b_app_1a96260463060881de0939a966d7f62f9f" prot="public" virt="non-virtual"><scope>DBApp</scope><name>getIDs</name></member>
      <member refid="class_d_b_app_1a324d5371494c161a791e90793a183e5e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>getInProgRelogonAttempt</name></member>
      <member refid="class_d_b_app_1a25529eca14b81b6aa1f6baa1fc9c16a5" prot="public" virt="non-virtual"><scope>DBApp</scope><name>getSecondaryDBDetails</name></member>
      <member refid="class_d_b_app_1ab403221f6c1c2f4b42f7f74b48db65bf" prot="public" virt="non-virtual"><scope>DBApp</scope><name>handleBaseAppDeath</name></member>
      <member refid="class_d_b_app_1a4f73652c14f571563637521d7d183779" prot="public" virt="non-virtual"><scope>DBApp</scope><name>handleBaseAppMgrBirth</name></member>
      <member refid="class_d_b_app_1a6341dcd81046d9a369b03871ec97547a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>handleDBAppMgrBirth</name></member>
      <member refid="class_d_b_app_1acf9a8b05771bbc9b8362fba3fe720e1b" prot="public" virt="non-virtual"><scope>DBApp</scope><name>handleDBAppMgrDeath</name></member>
      <member refid="class_d_b_app_1ae3be8a321845341cdd5d4405e8b66d1c" prot="public" virt="non-virtual"><scope>DBApp</scope><name>handleDeath</name></member>
      <member refid="class_d_b_app_1a45ea90112201bf95d661b8e3ed7963e2" prot="private" virt="non-virtual"><scope>DBApp</scope><name>handleTimeout</name></member>
      <member refid="class_d_b_app_1a6de557eb916b350b96c921b622d222b4" prot="public" virt="non-virtual"><scope>DBApp</scope><name>hasMailBoxRemapping</name></member>
      <member refid="class_d_b_app_1ad37baf879a631a41afbef13652ad10aa" prot="public" virt="non-virtual"><scope>DBApp</scope><name>hasStartBegun</name></member>
      <member refid="class_d_b_app_1a3817d52c3868350630febdfdbbf00a8d" prot="public" virt="non-virtual"><scope>DBApp</scope><name>hasStartBegun</name></member>
      <member refid="class_d_b_app_1a61ca431497521ec953e2070832b080c3" prot="private" virt="non-virtual"><scope>DBApp</scope><name>hasStartupMessage_</name></member>
      <member refid="class_d_b_app_1aae295586f21e573327b45524729cd5b2" prot="public" virt="non-virtual"><scope>DBApp</scope><name>id</name></member>
      <member refid="class_d_b_app_1aae295586f21e573327b45524729cd5b2" prot="public" virt="non-virtual"><scope>DBApp</scope><name>id</name></member>
      <member refid="class_d_b_app_1ac9d76c92b15a315d4fbe789eb9657800" prot="private" virt="non-virtual"><scope>DBApp</scope><name>id_</name></member>
      <member refid="class_d_b_app_1a0bf5091fe51b0f1cc9f42856cafbd93d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>init</name></member>
      <member refid="class_d_b_app_1a9bba67f68174aae411bf2cb8daec8d11" prot="public" virt="non-virtual"><scope>DBApp</scope><name>init</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a7e36934f39397325304d702db6ed8707" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_APP_ID_REGISTRATION</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0aa5420c3923536c3a4563dcb754ea686e" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_AUTO_LOADING</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ad0e1c06208414737c8f34ffc8477dc0f" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_BIRTH_DEATH_LISTENERS</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0aa6db2ae75dd3e1db0fd28fccec9e8dbd" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_CONFIG</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a956d2300d4968195991bc5742cce4594" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_DATABASE_STARTUP</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a558912a6b02b66996c4dde464db9c06c" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_EXTENSIONS</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a519c7a495b630405f58db39cec182f16" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_GAME_SPECIFIC</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a2e6eeeb82bc1289a895b7156fa3edc06" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_NETWORK</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a1b50301d7c82f51aec58242625a60eae" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_NON_ALPHA_MASK</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ab29eb473fd9f771fb8b4e11623a3ed4c" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_SCRIPT_APP_READY</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0a1752e18b99874fe73e6e68e260f7d348" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_SECONDARY_DBS</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ad15cb40f8be9b0191d6c4de3aa063cd1" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_SPACE_DATA_RESTORE</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0ae94ba9e03c75eeda9b775da930e16e95" prot="private" virt="non-virtual"><scope>DBApp</scope><name>INIT_STATE_WATCHERS</name></member>
      <member refid="class_d_b_app_1ac457355f1bbf0d19b663e63c0b9ce6d0" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initAcquireDBLock</name></member>
      <member refid="class_d_b_app_1a3e00ab599741ce74abe63b45c4c25fa7" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initAppIDRegistration</name></member>
      <member refid="class_d_b_app_1a434d2e99b66ebb79ea45fb0b76ccda07" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initBaseAppMgr</name></member>
      <member refid="class_d_b_app_1a5a484629adc39f5ba9a7962f64c520d8" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initBaseAppMgrInitData</name></member>
      <member refid="class_d_b_app_1a57fc37cd0590f7dc9c2c07ccc21b8d50" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initBillingSystem</name></member>
      <member refid="class_d_b_app_1ad2dc895ff25820e783b7c47f7d26320a" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initBirthDeathListeners</name></member>
      <member refid="class_d_b_app_1a4dd71d9f1e3653cec2e8b453e898f7e8" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initConfig</name></member>
      <member refid="class_d_b_app_1a9485d8c951a030d87475e94654645396" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initDatabaseCreation</name></member>
      <member refid="class_d_b_app_1a7554af272ac0fd1b608cbc86736662f6" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initDatabaseResetGameServerState</name></member>
      <member refid="class_d_b_app_1a18ebebccd98373e45829174d178d7fed" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initDatabaseStartup</name></member>
      <member refid="class_d_b_app_1ad250123e2997d1045003b0fcea402d5f" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initDBAppAlpha</name></member>
      <member refid="class_d_b_app_1aab0a7263b3340fc2ca3a7677e47b11f0" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initDBAppMgrAsync</name></member>
      <member refid="class_d_b_app_1a0616a4e236f3b6de34d0c2050ab5921c" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initEntityAutoLoadingAsync</name></member>
      <member refid="class_d_b_app_1a0b3a6ab925dd359e2a59e57b07bfca74" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initEntityDataBalancer</name></member>
      <member refid="class_d_b_app_1a9c4383f25e0f868ca2c36ca747d35cbc" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initEntityDefs</name></member>
      <member refid="class_d_b_app_1ab251a2422234fb787e8f84cf8e1555c0" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initEntityTypesMaxDBIDs</name></member>
      <member refid="class_d_b_app_1ae84db91762f0e7cb333be6e18c22ef81" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initExtensions</name></member>
      <member refid="class_d_b_app_1aeffa516005e409d168eeaf257ba61177" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initGameSpecific</name></member>
      <member refid="class_d_b_app_1a657c4cef413fe645ca882fcdc1699123" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initNetwork</name></member>
      <member refid="class_d_b_app_1aa14522ffd404f201a4376415578136a2" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initNotifyServerStartup</name></member>
      <member refid="class_d_b_app_1adcb4f7b5d56a36650e043894b9cf524d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initResetGameServerState</name></member>
      <member refid="class_d_b_app_1a2c21e7a5721906bba298716a2361e3e3" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initScript</name></member>
      <member refid="class_d_b_app_1a2671fd23d68c3ae1db8f969122705ad0" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initScriptAppReady</name></member>
      <member refid="class_d_b_app_1a043779d5ae671dfd78e29f2803ddedb4" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initSecondaryDBPrefix</name></member>
      <member refid="class_d_b_app_1a6bf57105a0a32ba236b9700846f721e9" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initSecondaryDBsAsync</name></member>
      <member refid="class_d_b_app_1a0346a4e5b30dc10159775616bf088c86" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initSendSpaceData</name></member>
      <member refid="class_d_b_app_1a74e6baa09b7601f904fb2f37dea21332" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initShardAlpha</name></member>
      <member refid="class_d_b_app_1a3299625bf3127c6556a62e5a941f81b6" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initState_</name></member>
      <member refid="class_d_b_app_1a78cb35cf8d98015dd712abbfb54e7ec0" prot="private" virt="non-virtual"><scope>DBApp</scope><name>InitStateFlags</name></member>
      <member refid="class_d_b_app_1af5c154035abca44cdfb603e67c1ccd25" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initTimers</name></member>
      <member refid="class_d_b_app_1ac946a21fb7b4c2a58c34bdfd70138b67" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initWaitForAppsToBecomeReadyAsync</name></member>
      <member refid="class_d_b_app_1a4892a7143ddee47922ba53fc79fa2f63" prot="private" virt="non-virtual"><scope>DBApp</scope><name>initWatchers</name></member>
      <member refid="class_d_b_app_1a342c4a109c386e94a877e6f282865afa" prot="private" virt="non-virtual"><scope>DBApp</scope><name>inProgCheckouts_</name></member>
      <member refid="class_d_b_app_1ab72aa04844dcaf20ef9c50cbfb822804" prot="public" virt="non-virtual"><scope>DBApp</scope><name>isAlpha</name></member>
      <member refid="class_d_b_app_1ab72aa04844dcaf20ef9c50cbfb822804" prot="public" virt="non-virtual"><scope>DBApp</scope><name>isAlpha</name></member>
      <member refid="class_d_b_app_1a84bd4b64e748272e71d2ba9d5243bb66" prot="private" virt="non-virtual"><scope>DBApp</scope><name>isAlpha_</name></member>
      <member refid="class_d_b_app_1ae0bd4649e69fd08f9f7cbd05b9f5d885" prot="public" virt="non-virtual"><scope>DBApp</scope><name>isConsolidating</name></member>
      <member refid="class_d_b_app_1a9ff31b5ca22d916bead50ca39fabe0fc" prot="public" virt="non-virtual"><scope>DBApp</scope><name>isPendingAddition</name></member>
      <member refid="class_d_b_app_1a5430c12fbd3410627e18b852e3911319" prot="public" virt="non-virtual"><scope>DBApp</scope><name>isReady</name></member>
      <member refid="class_d_b_app_1a3223304d82f93084cba9ab569dd39384" prot="public" virt="non-virtual"><scope>DBApp</scope><name>isShardAlpha</name></member>
      <member refid="class_d_b_app_1ab25d066a27e486d1fb42ad6613236e7d" prot="public" virt="non-virtual"><scope>DBApp</scope><name>loadEntity</name></member>
      <member refid="class_d_b_app_1a492c49600498c4bcba541d2642a330a7" prot="public" virt="non-virtual"><scope>DBApp</scope><name>logOn</name></member>
      <member refid="class_d_b_app_1ab5654ef45c5b519a1d971259d6765077" prot="public" virt="non-virtual"><scope>DBApp</scope><name>logOn</name></member>
      <member refid="class_d_b_app_1a17fcf769d6da6cec7cc3c29600080fda" prot="public" virt="non-virtual"><scope>DBApp</scope><name>logOnRecordsCache</name></member>
      <member refid="class_d_b_app_1afa221526adf1d5f38f722ebc37d1cda8" prot="private" virt="non-virtual"><scope>DBApp</scope><name>logOnRecordsCache_</name></member>
      <member refid="class_d_b_app_1a4f2d12093fac5e2011db3c5e3aa9818e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>lookUpDBIDByName</name></member>
      <member refid="class_d_b_app_1ac45f79b980cce944d47608c647473088" prot="public" virt="non-virtual"><scope>DBApp</scope><name>lookUpEntities</name></member>
      <member refid="class_d_b_app_1a8ab7699d761ce8bdd3e713570dadca74" prot="public" virt="non-virtual"><scope>DBApp</scope><name>lookUpEntity</name></member>
      <member refid="class_d_b_app_1a28b2aa3fd5d83779860f988d17ea910a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>lookUpEntity</name></member>
      <member refid="class_d_b_app_1abe3dece0c25099e1818aa54a0b5438ca" prot="public" virt="non-virtual"><scope>DBApp</scope><name>lookUpEntityByName</name></member>
      <member refid="class_d_b_app_1a4cc8e2bbd4cb4e79b60395683daa2c4d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>mailBoxRemapCheckCount_</name></member>
      <member refid="class_d_b_app_1ad6818a371b7e36317ba1f8e3bf1e8c2e" prot="private" virt="non-virtual"><scope>DBApp</scope><name>MailBoxRemapInfo</name></member>
      <member refid="class_d_b_app_1a797bf1929824c7d451cfdec7129e5775" prot="private" virt="non-virtual"><scope>DBApp</scope><name>mailBoxRemapInfo_</name></member>
      <member refid="class_d_b_app_1ae6cb14c628e409c520b00c73aa9e0329" prot="private" virt="non-virtual"><scope>DBApp</scope><name>onAppsReady</name></member>
      <member refid="class_d_b_app_1a54d01f2e1e287dd4532fc32b3bd538d2" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onCompleteEntityCheckout</name></member>
      <member refid="class_d_b_app_1a1b99772001cd43e9dfe916b12556460e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onCompleteRelogonAttempt</name></member>
      <member refid="class_d_b_app_1ad8e3a1f259dc987e90094304b7e88aed" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onConsolidateProcessEnd</name></member>
      <member refid="class_d_b_app_1acbeb5cb28f74755fb998fb7567b6aa08" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onDatabaseStartup</name></member>
      <member refid="class_d_b_app_1a757ed1464b9e97198210c7db4a8c77ed" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onDBAppMgrRegistrationCompleted</name></member>
      <member refid="class_d_b_app_1a36c92858c2046a03369107bf03faabfa" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onEntitiesAutoLoadCompleted</name></member>
      <member refid="class_d_b_app_1a25ea5d5273062ba436ea39c45fdb1350" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onEntitiesAutoLoadError</name></member>
      <member refid="class_d_b_app_1a0291a9c9f97356a992081f5e5d7ce918" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onEntityLogOff</name></member>
      <member refid="class_d_b_app_1ada7be85d51063c7d57f7eacf66339048" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onEntityLogOff</name></member>
      <member refid="class_d_b_app_1a91af6adb571f032740f1a25130a01cff" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onEntityWriteCompleted</name></member>
      <member refid="class_d_b_app_1a90f9b94a68b5af3d218c618e57f965fb" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onEntityWriteStarted</name></member>
      <member refid="class_d_b_app_1aae3fd131868ad8b09a2d8419e5eea6eb" prot="private" virt="non-virtual"><scope>DBApp</scope><name>onGetBaseAppMgrInitDataComplete</name></member>
      <member refid="class_d_b_app_1afa138791b5ec80c1206ce0ad1ec66c64" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onGetStorageShardGUIDCompleted</name></member>
      <member refid="class_d_b_app_1ac79aa81d6bf59d1c99b3806eb313fd70" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onGetStorageShardsDescriptorsError</name></member>
      <member refid="class_d_b_app_1a7e72e64709f129a73d004ca5568465de" prot="private" virt="non-virtual"><scope>DBApp</scope><name>onInitCompleted</name></member>
      <member refid="class_d_b_app_1a6d13fc0ac016235c7ae53eed171f60eb" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onInitShardAlpha</name></member>
      <member refid="class_d_b_app_1a0b4ca49749b73be0d2108ab9c6307dba" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onLogOnLoggedOnUser</name></member>
      <member refid="class_d_b_app_1aa82c3c81b79f4460212d5ff718defda7" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onProcessStatsMessage</name></member>
      <member refid="class_d_b_app_1a1107bc55b3da6e8e9a79dba9561299a9" prot="private" virt="non-virtual"><scope>DBApp</scope><name>onRunComplete</name></member>
      <member refid="class_d_b_app_1aae11c628e4e6586f09159f485308a065" prot="private" virt="non-virtual"><scope>DBApp</scope><name>onSecondaryDBsInitCompleted</name></member>
      <member refid="class_d_b_app_1afe554a189b11334b21995785e390341e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onStartEntityCheckout</name></member>
      <member refid="class_d_b_app_1a8ef56498143b3dd387daed9303091628" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onStartRelogonAttempt</name></member>
      <member refid="class_d_b_app_1a04f5a4f5cf14355355e9c480782eb1df" prot="public" virt="non-virtual"><scope>DBApp</scope><name>onStatusCheck</name></member>
      <member refid="class_d_b_app_1a643278ddedae2cd552eae30244738289" prot="private" virt="non-virtual"><scope>DBApp</scope><name>onUpdateSecondaryDBsComplete</name></member>
      <member refid="class_d_b_app_1a4c86fa8dd0ae8d2aae2af670dce98fa3" prot="private" virt="non-virtual"><scope>DBApp</scope><name>outstandingEntityWrites_</name></member>
      <member refid="class_d_b_app_1ae8d431d20ef3d7875ee01bb1fe2f2ba3" prot="private" virt="non-virtual"><scope>DBApp</scope><name>overloadStartTime_</name></member>
      <member refid="class_d_b_app_1afb95f364286147e0012c1d9d671fb730" prot="public" virt="non-virtual"><scope>DBApp</scope><name>pBillingSystem</name></member>
      <member refid="class_d_b_app_1a96d8ee95c8846659829a1cded77fc98b" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pBillingSystem_</name></member>
      <member refid="class_d_b_app_1a70a01b825d320b48f5b8acaca3315030" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pBWMachineD_</name></member>
      <member refid="class_d_b_app_1ab1e02c1614c88af6d8cf5c05d481e2e6" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pConsolidator_</name></member>
      <member refid="class_d_b_app_1a2e4cbb708f1547219c50f0a30ab118ce" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pDatabase_</name></member>
      <member refid="class_d_b_app_1ab005a1699ed0952b684368db4e29dacb" prot="private" virt="non-virtual"><scope>DBApp</scope><name>PendingAttempts</name></member>
      <member refid="class_d_b_app_1a90ab7b1157ac2e85ce02488f2ec955d8" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pendingAttempts_</name></member>
      <member refid="class_d_b_app_1aa73290dd685f40dae1be7b4edb8b131a" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pendingNewInsertions_</name></member>
      <member refid="class_d_b_app_1a5cdd356f70cd1cf5194e4bb6eda0ee10" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pEntityDataBalancer_</name></member>
      <member refid="class_d_b_app_1a61d148ff97998d82776b95292a1e8fdd" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pEntityDefs_</name></member>
      <member refid="class_d_b_app_1a9ec74239f8f647a30bb39fd3223f3583" prot="public" virt="non-virtual"><scope>DBApp</scope><name>persistStorageShardAddition</name></member>
      <member refid="class_d_b_app_1ae15a9bc0917173be03b88854454db711" prot="public" virt="non-virtual"><scope>DBApp</scope><name>persistStorageShardRetirement</name></member>
      <member refid="class_d_b_app_1a835750e7cab1800bb84165b9461870be" prot="public" virt="non-virtual"><scope>DBApp</scope><name>persistTransitionCompletions</name></member>
      <member refid="class_d_b_app_1a366108181580768eca1c0c5f600e8bf5" prot="public" virt="non-virtual"><scope>DBApp</scope><name>persistTransitionCompletions</name></member>
      <member refid="class_d_b_app_1ae63610111788e2857ff9776823a7ca34" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pManagerAppGateway</name></member>
      <member refid="class_d_b_app_1a7a2e88f4f2c708cc583aeba3c74c3fdb" prot="public" virt="non-virtual"><scope>DBApp</scope><name>pStorageShard</name></member>
      <member refid="class_d_b_app_1aa37ae2585fb2d18574fe4e5954bae136" prot="private" virt="non-virtual"><scope>DBApp</scope><name>pStorageShard_</name></member>
      <member refid="class_d_b_app_1a5da8401f1ba01eace703630d98a6c62e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>putEntity</name></member>
      <member refid="class_d_b_app_1abb0f13900255a29851a4e66ddced628a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>putIDs</name></member>
      <member refid="class_d_b_app_1a8c4c98f1ede8e111caff84be7620858a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>pWatcher</name></member>
      <member refid="class_d_b_app_1a56c7e22d557a75f8ea928df486e9c45a" prot="private" virt="non-virtual"><scope>DBApp</scope><name>queueTransferCycleForDBID</name></member>
      <member refid="class_d_b_app_1a63c32f40a1b5dc5b847acd54728b8ea6" prot="private" virt="non-virtual"><scope>DBApp</scope><name>recentlyRemovedStorageShards_</name></member>
      <member refid="class_d_b_app_1a4147ba4ce9fc5e62d977fb6f690cb045" prot="private" virt="non-virtual"><scope>DBApp</scope><name>recentTransfersCache_</name></member>
      <member refid="class_d_b_app_1af7b8e880523261369ffe2c4355c7b52e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>registerCheckoutCompletionListener</name></member>
      <member refid="class_d_b_app_1aeb83361a3f1cdd690b8f8400301b45cb" prot="private" virt="non-virtual"><scope>DBApp</scope><name>RelogonAttemptHandler</name></member>
      <member refid="class_d_b_app_1a92983eb18f54de08f4b641d9f54a97d3" prot="public" virt="non-virtual"><scope>DBApp</scope><name>remapMailBox</name></member>
      <member refid="class_d_b_app_1a353a56c2ca544703fbd6883d7d0e8655" prot="public" virt="non-virtual"><scope>DBApp</scope><name>removeFromCache</name></member>
      <member refid="class_d_b_app_1a1da2f0a0d43a9349b4ad0e68a760104b" prot="public" virt="non-virtual"><scope>DBApp</scope><name>removeFromCache</name></member>
      <member refid="class_d_b_app_1ab6971651d1e7975521f3381a0215e401" prot="public" virt="non-virtual"><scope>DBApp</scope><name>requestPersistStorageShardAddition</name></member>
      <member refid="class_d_b_app_1aef7290832f89a513b046e2a7c1cc211d" prot="public" virt="non-virtual"><scope>DBApp</scope><name>requestPersistStorageShardRetirement</name></member>
      <member refid="class_d_b_app_1a3a6ef250e7188583794802170f35e6c9" prot="public" virt="non-virtual"><scope>DBApp</scope><name>resetStorageShard</name></member>
      <member refid="class_d_b_app_1af55ebb083009ec38686bd14253f001e3" prot="public" virt="non-virtual"><scope>DBApp</scope><name>retireApp</name></member>
      <member refid="class_d_b_app_1a038cf2d3d336e9df20e3baa7a0cd184d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>secondaryDBIndex_</name></member>
      <member refid="class_d_b_app_1a54d1a9014634d235e7641e5ddb42681c" prot="private" virt="non-virtual"><scope>DBApp</scope><name>secondaryDBPrefix_</name></member>
      <member refid="class_d_b_app_1a297a0e3a5281e57ae1d08ab0d67ee0a9" prot="public" virt="non-virtual"><scope>DBApp</scope><name>secondaryDBRegistration</name></member>
      <member refid="class_d_b_app_1a6f668f352e9f2abab3c27a78fdd7d14e" prot="private" virt="non-virtual"><scope>DBApp</scope><name>sendBaseAppMgrInitData</name></member>
      <member refid="class_d_b_app_1aaf8e89075507f6fbd2145fcc8bf02375" prot="public" virt="non-virtual"><scope>DBApp</scope><name>sendLogOnFailure</name></member>
      <member refid="class_d_b_app_1af2080f8c05cd36ccefa9b9d3e258beeb" prot="private" virt="non-virtual"><scope>DBApp</scope><name>sendRemoveDBCmd</name></member>
      <member refid="class_d_b_app_1a71792b0ad61c699c263bb630cab494cd" prot="public" virt="non-virtual"><scope>DBApp</scope><name>setBaseEntityLocation</name></member>
      <member refid="class_d_b_app_1ae6dd1c9e239095e13dc85db1c2afb066" prot="public" virt="non-virtual"><scope>DBApp</scope><name>setBaseRefToLoggingOn</name></member>
      <member refid="class_d_b_app_1a290171687b269b2ad070fffb18dd9c32" prot="public" virt="non-virtual"><scope>DBApp</scope><name>setClusterID</name></member>
      <member refid="class_d_b_app_1ac77762391289f14a7aa42644228f982c" prot="public" virt="non-virtual"><scope>DBApp</scope><name>setClusterID</name></member>
      <member refid="class_d_b_app_1ab2b6192287941386485b6242cce053a7" prot="public" virt="non-virtual"><scope>DBApp</scope><name>setStatus</name></member>
      <member refid="class_d_b_app_1abffa609ceee3291dc2de95d8136979d4" prot="public" virt="non-virtual"><scope>DBApp</scope><name>shardDescriptor</name></member>
      <member refid="class_d_b_app_1a96b1b209118ae0c7906b1a8f0f5b1e1b" prot="private" virt="non-virtual"><scope>DBApp</scope><name>shardDescriptor_</name></member>
      <member refid="class_d_b_app_1a1b0ba13833cd023a0046b76d844b6f65" prot="private" virt="non-virtual"><scope>DBApp</scope><name>ShardGUIDSet</name></member>
      <member refid="class_d_b_app_1a322f62db4062d962512cd99aabd895ef" prot="private" virt="non-virtual"><scope>DBApp</scope><name>shouldAlphaResetGameServerState_</name></member>
      <member refid="class_d_b_app_1a5f761741a852689754f9e91be7ff5a36" prot="public" virt="non-virtual"><scope>DBApp</scope><name>shouldCacheLogOnRecords</name></member>
      <member refid="class_d_b_app_1a3d3664307d2ef937559ec97d3cfcc74d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>shouldCacheLogOnRecords_</name></member>
      <member refid="class_d_b_app_1af995274d7d9955b4472f2ff42edeee9e" prot="public" virt="non-virtual"><scope>DBApp</scope><name>shutDown</name></member>
      <member refid="class_d_b_app_1a19a42f77994efd686e20e4fd19f12efa" prot="public" virt="non-virtual"><scope>DBApp</scope><name>shutDown</name></member>
      <member refid="class_d_b_app_1a544b5d835a55697a5b999197d05f157f" prot="public" virt="non-virtual"><scope>DBApp</scope><name>shutDownNicely</name></member>
      <member refid="class_d_b_app_1a46eec179df224cad33a594a44b341f89" prot="private" virt="non-virtual"><scope>DBApp</scope><name>startConsolidationProcess</name></member>
      <member refid="class_d_b_app_1ae0490df7a059c810d13911d2d5aedc6d" prot="public" virt="non-virtual"><scope>DBApp</scope><name>startSystemControlledShutdown</name></member>
      <member refid="class_d_b_app_1ab783d15fceaea415b8252d207b768020" prot="public" virt="non-virtual"><scope>DBApp</scope><name>startup</name></member>
      <member refid="class_d_b_app_1a978237f65e50fc6839072531846cfcd9" prot="private" virt="non-virtual"><scope>DBApp</scope><name>startup</name></member>
      <member refid="class_d_b_app_1a470a6d59968d8a57a4b656fb1f72739c" prot="public" virt="non-virtual"><scope>DBApp</scope><name>startup</name></member>
      <member refid="class_d_b_app_1aebf9fbda03f5d6954d1b5316bd2bf6cc" prot="private" virt="non-virtual"><scope>DBApp</scope><name>status_</name></member>
      <member refid="class_d_b_app_1a974ebcc117d4a3fe8fdf9d22e4b93aed" prot="private" virt="non-virtual"><scope>DBApp</scope><name>statusCheckTimer_</name></member>
      <member refid="class_d_b_app_1abeb6c9b9d5479b65c0061a854bc1dd90" prot="public" virt="non-virtual"><scope>DBApp</scope><name>storageShardGUID</name></member>
      <member refid="class_d_b_app_1a1a01ea607c17fb31139c365885d1c2fe" prot="public" virt="non-virtual"><scope>DBApp</scope><name>storageShardGUIDString</name></member>
      <member refid="class_d_b_app_1a5bbc41340a40f79b634c8588d0ff5381" prot="public" virt="non-virtual"><scope>DBApp</scope><name>storageShardHash</name></member>
      <member refid="class_d_b_app_1aa876d8f8851661988c3e38c48336a8b7" prot="public" virt="non-virtual"><scope>DBApp</scope><name>storageShardName</name></member>
      <member refid="class_d_b_app_1ad79e14403a8d8945b853de41f6f1d78a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>storageShardStatus</name></member>
      <member refid="class_d_b_app_1a621c70a774cc3af312a0f58abb956732" prot="public" virt="non-virtual"><scope>DBApp</scope><name>storageShardStatusString</name></member>
      <member refid="class_d_b_app_1a71e500a02be5122b6d769c0889863b9a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>swapEntityDefs</name></member>
      <member refid="class_d_b_app_1a87fe73427e032654182d7c29f8061462a5cb991eb451c1385ee5c1acde30959e9" prot="private" virt="non-virtual"><scope>DBApp</scope><name>TIMEOUT_DELAYED_STARTUP_MSG</name></member>
      <member refid="class_d_b_app_1a87fe73427e032654182d7c29f8061462a5118f36fdaec64ea8de26acd742dee0d" prot="private" virt="non-virtual"><scope>DBApp</scope><name>TIMEOUT_GAME_TICK</name></member>
      <member refid="class_d_b_app_1a87fe73427e032654182d7c29f8061462a2167d3a66a517ac97a08d284aac9fe1a" prot="private" virt="non-virtual"><scope>DBApp</scope><name>TIMEOUT_STATUS_CHECK</name></member>
      <member refid="class_d_b_app_1a87fe73427e032654182d7c29f8061462" prot="private" virt="non-virtual"><scope>DBApp</scope><name>TimeOutType</name></member>
      <member refid="class_d_b_app_1aa1a8c255da2a1874d2c15f9c197f020a" prot="public" virt="non-virtual"><scope>DBApp</scope><name>transferEntity</name></member>
      <member refid="class_d_b_app_1a1b451f3bfa2ff009e09f1f53095d0e81" prot="public" virt="non-virtual"><scope>DBApp</scope><name>updateDBAppHash</name></member>
      <member refid="class_d_b_app_1a7a9b45fc49a720e9766652143b6f93e9" prot="public" virt="non-virtual"><scope>DBApp</scope><name>updateDBAppHash</name></member>
      <member refid="class_d_b_app_1ab003ce1e5a5e7a46f222c4a5c8dc57e8" prot="private" virt="non-virtual"><scope>DBApp</scope><name>updateForExplicitDBID</name></member>
      <member refid="class_d_b_app_1a34c079b70dc79ed38ce3eff0fa2cd0f5" prot="public" virt="non-virtual"><scope>DBApp</scope><name>updateSecondaryDBs</name></member>
      <member refid="class_d_b_app_1a95a715c5504cba42e2b5da980910d177" prot="private" virt="non-virtual"><scope>DBApp</scope><name>watcherNub_</name></member>
      <member refid="class_d_b_app_1a7c55fadbbe4557bf198188de58ec5f10" prot="public" virt="non-virtual"><scope>DBApp</scope><name>writeEntity</name></member>
      <member refid="class_d_b_app_1afe930247687df535dba4073a5dd7b135" prot="public" virt="non-virtual"><scope>DBApp</scope><name>writeGameTime</name></member>
      <member refid="class_d_b_app_1a13a14e08a072315c54139e94a949a3a9" prot="public" virt="non-virtual"><scope>DBApp</scope><name>writeSpace</name></member>
      <member refid="class_d_b_app_1a049f8f51d89ee5a038d948d4552b6177" prot="public" virt="non-virtual"><scope>DBApp</scope><name>~DBApp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
