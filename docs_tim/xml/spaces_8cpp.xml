<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="spaces_8cpp" kind="file" language="C++">
    <compoundname>spaces.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="spaces_8hpp" local="yes">spaces.hpp</includes>
    <includes refid="profile_8hpp" local="yes">profile.hpp</includes>
    <includes refid="space_8hpp" local="yes">space.hpp</includes>
    <includes refid="cell__app__channel_8hpp" local="yes">cell_app_channel.hpp</includes>
    <incdepgraph>
      <node id="12560">
        <label>chunk_loading/edge_geometry_mappings.hpp</label>
      </node>
      <node id="12550">
        <label>math/rectt.hpp</label>
      </node>
      <node id="12558">
        <label>scene/collision_scene_view.hpp</label>
      </node>
      <node id="12566">
        <label>network/misc.hpp</label>
      </node>
      <node id="12545">
        <label>float.h</label>
      </node>
      <node id="12561">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="12536">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="12544">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="12543">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="12527">
        <label>script/first_include.hpp</label>
      </node>
      <node id="12569">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="12534">
        <label>space.hpp</label>
        <link refid="space_8hpp_source"/>
        <childnode refid="12535" relation="include">
        </childnode>
        <childnode refid="12541" relation="include">
        </childnode>
        <childnode refid="12548" relation="include">
        </childnode>
        <childnode refid="12563" relation="include">
        </childnode>
        <childnode refid="12561" relation="include">
        </childnode>
        <childnode refid="12560" relation="include">
        </childnode>
        <childnode refid="12568" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12547" relation="include">
        </childnode>
        <childnode refid="12569" relation="include">
        </childnode>
        <childnode refid="12554" relation="include">
        </childnode>
      </node>
      <node id="12535">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="12536" relation="include">
        </childnode>
        <childnode refid="12537" relation="include">
        </childnode>
        <childnode refid="12538" relation="include">
        </childnode>
        <childnode refid="12539" relation="include">
        </childnode>
        <childnode refid="12540" relation="include">
        </childnode>
      </node>
      <node id="12557">
        <label>chunk/chunk_space.hpp</label>
      </node>
      <node id="12567">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="12541">
        <label>cell_range_list.hpp</label>
        <link refid="cell__range__list_8hpp_source"/>
        <childnode refid="12542" relation="include">
        </childnode>
      </node>
      <node id="12539">
        <label>server/common.hpp</label>
      </node>
      <node id="12555">
        <label>chunk_space_collision_provider.hpp</label>
        <link refid="chunk__space__collision__provider_8hpp_source"/>
        <childnode refid="12556" relation="include">
        </childnode>
        <childnode refid="12557" relation="include">
        </childnode>
        <childnode refid="12558" relation="include">
        </childnode>
        <childnode refid="12559" relation="include">
        </childnode>
      </node>
      <node id="12554">
        <label>pyscript/script_math.hpp</label>
      </node>
      <node id="12552">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="12564">
        <label>entitydef/data_description.hpp</label>
      </node>
      <node id="12546">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="12551">
        <label>math/boundbox.hpp</label>
      </node>
      <node id="12531">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="12549">
        <label>physical_space.hpp</label>
        <link refid="physical__space_8hpp_source"/>
        <childnode refid="12550" relation="include">
        </childnode>
        <childnode refid="12551" relation="include">
        </childnode>
        <childnode refid="12552" relation="include">
        </childnode>
        <childnode refid="12553" relation="include">
        </childnode>
        <childnode refid="12554" relation="include">
        </childnode>
      </node>
      <node id="12542">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="12543" relation="include">
        </childnode>
        <childnode refid="12544" relation="include">
        </childnode>
        <childnode refid="12545" relation="include">
        </childnode>
        <childnode refid="12546" relation="include">
        </childnode>
        <childnode refid="12547" relation="include">
        </childnode>
      </node>
      <node id="12529">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="12563">
        <label>history_event.hpp</label>
        <link refid="history__event_8hpp_source"/>
        <childnode refid="12564" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12565" relation="include">
        </childnode>
        <childnode refid="12566" relation="include">
        </childnode>
        <childnode refid="12553" relation="include">
        </childnode>
        <childnode refid="12567" relation="include">
        </childnode>
      </node>
      <node id="12553">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="12528">
        <label>spaces.hpp</label>
        <link refid="spaces_8hpp_source"/>
        <childnode refid="12529" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12531" relation="include">
        </childnode>
      </node>
      <node id="12559">
        <label>scene/scene_provider.hpp</label>
      </node>
      <node id="12568">
        <label>math/math_extra.hpp</label>
      </node>
      <node id="12530">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="12540">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="12570">
        <label>cell_app_channel.hpp</label>
        <link refid="cell__app__channel_8hpp_source"/>
        <childnode refid="12571" relation="include">
        </childnode>
      </node>
      <node id="12538">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="12556">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="12526">
        <label>cellapp/spaces.cpp</label>
        <link refid="spaces.cpp"/>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12528" relation="include">
        </childnode>
        <childnode refid="12532" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
        <childnode refid="12570" relation="include">
        </childnode>
      </node>
      <node id="12547">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="12537">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="12532">
        <label>profile.hpp</label>
        <link refid="profile_8hpp_source"/>
        <childnode refid="12533" relation="include">
        </childnode>
      </node>
      <node id="12548">
        <label>physical_chunk_space.hpp</label>
        <link refid="physical__chunk__space_8hpp_source"/>
        <childnode refid="12549" relation="include">
        </childnode>
        <childnode refid="12555" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12556" relation="include">
        </childnode>
        <childnode refid="12557" relation="include">
        </childnode>
        <childnode refid="12560" relation="include">
        </childnode>
        <childnode refid="12561" relation="include">
        </childnode>
        <childnode refid="12562" relation="include">
        </childnode>
        <childnode refid="12554" relation="include">
        </childnode>
      </node>
      <node id="12533">
        <label>cstdmf/profile.hpp</label>
      </node>
      <node id="12565">
        <label>network/interface_element.hpp</label>
      </node>
      <node id="12571">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="12562">
        <label>scene/scene.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spaces.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;profile.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_app_channel.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="class_spaces_1a67ea2b11be363ff93376bd7f5b3545e1" kindref="member">Spaces::Spaces</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IContext<sp/>&amp;<sp/>context<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>context_(<sp/>context<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="class_spaces_1aea5ba3c4cd0f2a27a6cd8e908d126041" kindref="member">Spaces::~Spaces</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;Spaces::~Spaces:<sp/>going<sp/>to<sp/>free<sp/>%zu<sp/>spaces\n&quot;</highlight><highlight class="normal">,<sp/>container_.size()<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>Spaces::find(<sp/>SpaceID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="39"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::const_iterator<sp/>iter<sp/>=<sp/>container_.find(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())<sp/>?<sp/>iter-&gt;second<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>Spaces::create(<sp/>SpaceID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::StringRef<sp/>&amp;<sp/>spaceDataDef<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>this-&gt;find(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_space" kindref="compound">Space</ref>(<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>spaceDataDef,<sp/>context_<sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>container_[<sp/>id<sp/>]<sp/>=<sp/>pSpace;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSpace;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spaces_1abb1a5e5fdcc40f5848334fa16f7d4468" kindref="member">Spaces::prepareNewlyLoadedChunksForDelete</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;prepareNewlyLoadedChunksForDelete();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spaces_1ace87f6c412a7f66d5de7b691c20bb427" kindref="member">Spaces::tickChunks</ref>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;chunksMainThread&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>SCOPED_PROFILE(<sp/>TRANSIENT_LOAD_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter-&gt;second-&gt;chunkTick();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_spaces_1a0eb7fe7b96a39aacb8f48d977338d627" kindref="member">Spaces::deleteOldSpaces</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Container::iterator<sp/>currIter<sp/>=<sp/>iter;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>currIter-&gt;second;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace-&gt;pCell()<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>pSpace-&gt;<ref refid="class_space_1a9c28193d5d8423c6e57a63058d7acee0" kindref="member">isFullyUnloaded</ref>())</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spaces<sp/>only<sp/>erased<sp/>from<sp/>container_<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(no<sp/>reentrancy<sp/>to<sp/>invalidate<sp/>iterators)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_.erase(<sp/>currIter<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pSpace;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Spaces::writeRecoveryData(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>uint32(<sp/>container_.size()<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::iterator<sp/>spaceIter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spaceIter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace<sp/>=<sp/>spaceIter-&gt;second;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace-&gt;<ref refid="class_space_1aef4e1aba87c45238f4350cdb04fdfe23" kindref="member">writeRecoveryData</ref>(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++spaceIter;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/>Spaces::pWatcher()</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/>pWatcher<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MapWatcher&lt;Container&gt;(<sp/>container_<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BaseDereferenceWatcher(<sp/><ref refid="class_space_1a7b8de0d42c94f14862532957cfcab607" kindref="member">Space::pWatcher</ref>()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pWatcher;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_spaces_1a8591b591d07510a549249dd016fb40d7" kindref="member">Spaces::haveOtherCellsIn</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_cell_app_channel" kindref="compound">CellAppChannel</ref><sp/>&amp;<sp/>remoteChannel<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="153"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>Container::const_iterator<sp/>iter<sp/>=<sp/>container_.begin();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>container_.end())</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;second-&gt;findCell(<sp/>remoteChannel.addr()<sp/>)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spaces.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellapp/spaces.cpp"/>
  </compounddef>
</doxygen>
