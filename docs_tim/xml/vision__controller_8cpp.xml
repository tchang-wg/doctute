<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vision__controller_8cpp" kind="file" language="C++">
    <compoundname>vision_controller.cpp</compoundname>
    <includes local="yes">script/first_include.hpp</includes>
    <includes refid="vision__controller_8hpp" local="yes">vision_controller.hpp</includes>
    <includes refid="cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <includes refid="cellapp_2entity_8hpp" local="yes">entity.hpp</includes>
    <includes refid="entity__population_8hpp" local="yes">entity_population.hpp</includes>
    <includes refid="entity__vision_8hpp" local="yes">entity_vision.hpp</includes>
    <includes refid="range__trigger_8hpp" local="yes">range_trigger.hpp</includes>
    <incdepgraph>
      <node id="12900">
        <label>cstdmf/shared_ptr.hpp</label>
      </node>
      <node id="12901">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="12931">
        <label>entitydef_script/entity_method.hpp</label>
      </node>
      <node id="12909">
        <label>py_spaces.hpp</label>
        <link refid="cellapp_2py__spaces_8hpp_source"/>
        <childnode refid="12910" relation="include">
        </childnode>
        <childnode refid="12911" relation="include">
        </childnode>
        <childnode refid="12912" relation="include">
        </childnode>
      </node>
      <node id="12890">
        <label>network/misc.hpp</label>
      </node>
      <node id="12899">
        <label>cstdmf/memory_stream.hpp</label>
      </node>
      <node id="12946">
        <label>float.h</label>
      </node>
      <node id="12874">
        <label>build/bwapi.hpp</label>
      </node>
      <node id="12897">
        <label>chunk_loading/geometry_mapper.hpp</label>
      </node>
      <node id="12881">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="12945">
        <label>cstdmf/debug.hpp</label>
      </node>
      <node id="12887">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="12865">
        <label>script/first_include.hpp</label>
      </node>
      <node id="12908">
        <label>type_system/context.hpp</label>
      </node>
      <node id="12872">
        <label>script/script_object.hpp</label>
      </node>
      <node id="12911">
        <label>script/py_script_object.hpp</label>
      </node>
      <node id="12943">
        <label>entity_range_list_node.hpp</label>
        <link refid="entity__range__list__node_8hpp_source"/>
        <childnode refid="12944" relation="include">
        </childnode>
      </node>
      <node id="12880">
        <label>cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="12881" relation="include">
        </childnode>
        <childnode refid="12882" relation="include">
        </childnode>
        <childnode refid="12883" relation="include">
        </childnode>
        <childnode refid="12884" relation="include">
        </childnode>
        <childnode refid="12885" relation="include">
        </childnode>
      </node>
      <node id="12902">
        <label>cstdmf/stringmap.hpp</label>
      </node>
      <node id="12870">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="12884">
        <label>server/common.hpp</label>
      </node>
      <node id="12873">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="12904">
        <label>pyscript/pickler.hpp</label>
      </node>
      <node id="12930">
        <label>entitydef/py_volatile_info.hpp</label>
      </node>
      <node id="12923">
        <label>entity_callback_buffer.hpp</label>
        <link refid="entity__callback__buffer_8hpp_source"/>
        <childnode refid="12924" relation="include">
        </childnode>
        <childnode refid="12925" relation="include">
        </childnode>
        <childnode refid="12872" relation="include">
        </childnode>
      </node>
      <node id="12871">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="12933">
        <label>pyscript/script.hpp</label>
      </node>
      <node id="12921">
        <label>entitydef/data_description.hpp</label>
      </node>
      <node id="12866">
        <label>vision_controller.hpp</label>
        <link refid="vision__controller_8hpp_source"/>
        <childnode refid="12867" relation="include">
        </childnode>
        <childnode refid="12875" relation="include">
        </childnode>
      </node>
      <node id="12915">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="12914">
        <label>entity_type.hpp</label>
        <link refid="cellapp_2entity__type_8hpp_source"/>
        <childnode refid="12868" relation="include">
        </childnode>
        <childnode refid="12915" relation="include">
        </childnode>
        <childnode refid="12902" relation="include">
        </childnode>
        <childnode refid="12916" relation="include">
        </childnode>
        <childnode refid="12917" relation="include">
        </childnode>
        <childnode refid="12918" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12919" relation="include">
        </childnode>
        <childnode refid="12874" relation="include">
        </childnode>
      </node>
      <node id="12905">
        <label>server/entity_app.hpp</label>
      </node>
      <node id="12875">
        <label>server/updatable.hpp</label>
      </node>
      <node id="12926">
        <label>cstdmf/time_queue.hpp</label>
      </node>
      <node id="12928">
        <label>entitydef/property_event_stamps.hpp</label>
      </node>
      <node id="12932">
        <label>physics2/worldtri.hpp</label>
      </node>
      <node id="12893">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="12936">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="12944">
        <label>range_list_node.hpp</label>
        <link refid="range__list__node_8hpp_source"/>
        <childnode refid="12887" relation="include">
        </childnode>
        <childnode refid="12945" relation="include">
        </childnode>
        <childnode refid="12946" relation="include">
        </childnode>
        <childnode refid="12915" relation="include">
        </childnode>
        <childnode refid="12925" relation="include">
        </childnode>
      </node>
      <node id="12910">
        <label>pyscript/pyobject_plus.hpp</label>
      </node>
      <node id="12888">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="12879">
        <label>cstdmf/safe_static.hpp</label>
      </node>
      <node id="12894">
        <label>emergency_throttle.hpp</label>
        <link refid="emergency__throttle_8hpp_source"/>
        <childnode refid="12871" relation="include">
        </childnode>
      </node>
      <node id="12935">
        <label>server/entity_profiler.hpp</label>
      </node>
      <node id="12868">
        <label>Python.h</label>
      </node>
      <node id="12920">
        <label>history_event.hpp</label>
        <link refid="history__event_8hpp_source"/>
        <childnode refid="12921" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12922" relation="include">
        </childnode>
        <childnode refid="12890" relation="include">
        </childnode>
        <childnode refid="12878" relation="include">
        </childnode>
        <childnode refid="12870" relation="include">
        </childnode>
      </node>
      <node id="12878">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="12876">
        <label>cellapp.hpp</label>
        <link refid="cellapp_8hpp_source"/>
        <childnode refid="12868" relation="include">
        </childnode>
        <childnode refid="12874" relation="include">
        </childnode>
        <childnode refid="12877" relation="include">
        </childnode>
        <childnode refid="12880" relation="include">
        </childnode>
        <childnode refid="12886" relation="include">
        </childnode>
        <childnode refid="12892" relation="include">
        </childnode>
        <childnode refid="12894" relation="include">
        </childnode>
        <childnode refid="12895" relation="include">
        </childnode>
        <childnode refid="12897" relation="include">
        </childnode>
        <childnode refid="12898" relation="include">
        </childnode>
        <childnode refid="12899" relation="include">
        </childnode>
        <childnode refid="12900" relation="include">
        </childnode>
        <childnode refid="12901" relation="include">
        </childnode>
        <childnode refid="12902" relation="include">
        </childnode>
        <childnode refid="12903" relation="include">
        </childnode>
        <childnode refid="12904" relation="include">
        </childnode>
        <childnode refid="12884" relation="include">
        </childnode>
        <childnode refid="12905" relation="include">
        </childnode>
        <childnode refid="12906" relation="include">
        </childnode>
        <childnode refid="12907" relation="include">
        </childnode>
        <childnode refid="12872" relation="include">
        </childnode>
        <childnode refid="12908" relation="include">
        </childnode>
        <childnode refid="12909" relation="include">
        </childnode>
      </node>
      <node id="12929">
        <label>entitydef/property_owner.hpp</label>
      </node>
      <node id="12864">
        <label>cellapp/vision_controller.cpp</label>
        <link refid="vision_controller.cpp"/>
        <childnode refid="12865" relation="include">
        </childnode>
        <childnode refid="12866" relation="include">
        </childnode>
        <childnode refid="12876" relation="include">
        </childnode>
        <childnode refid="12913" relation="include">
        </childnode>
        <childnode refid="12937" relation="include">
        </childnode>
        <childnode refid="12940" relation="include">
        </childnode>
        <childnode refid="12942" relation="include">
        </childnode>
      </node>
      <node id="12903">
        <label>entitydef/entity_description_map.hpp</label>
      </node>
      <node id="12867">
        <label>controller.hpp</label>
        <link refid="controller_8hpp_source"/>
        <childnode refid="12868" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12870" relation="include">
        </childnode>
        <childnode refid="12871" relation="include">
        </childnode>
        <childnode refid="12872" relation="include">
        </childnode>
        <childnode refid="12873" relation="include">
        </childnode>
        <childnode refid="12874" relation="include">
        </childnode>
      </node>
      <node id="12891">
        <label>server/manager_app_gateway.hpp</label>
      </node>
      <node id="12919">
        <label>server/entity_type_profiler.hpp</label>
      </node>
      <node id="12918">
        <label>delegate_interface/entity_delegate.hpp</label>
      </node>
      <node id="12877">
        <label>cellapp_death_listener.hpp</label>
        <link refid="cellapp__death__listener_8hpp_source"/>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12878" relation="include">
        </childnode>
        <childnode refid="12879" relation="include">
        </childnode>
      </node>
      <node id="12942">
        <label>range_trigger.hpp</label>
        <link refid="range__trigger_8hpp_source"/>
        <childnode refid="12943" relation="include">
        </childnode>
      </node>
      <node id="12938">
        <label>ack_cell_app_death_helper.hpp</label>
        <link refid="ack__cell__app__death__helper_8hpp_source"/>
        <childnode refid="12913" relation="include">
        </childnode>
        <childnode refid="12939" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
      </node>
      <node id="12906">
        <label>server/id_client.hpp</label>
      </node>
      <node id="12917">
        <label>entitydef/method_description.hpp</label>
      </node>
      <node id="12869">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="12898">
        <label>chunk_loading/preloaded_chunk_space.hpp</label>
      </node>
      <node id="12885">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="12939">
        <label>network/interfaces.hpp</label>
      </node>
      <node id="12916">
        <label>entitydef/entity_description.hpp</label>
      </node>
      <node id="12883">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="12924">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="12886">
        <label>cellappmgr_gateway.hpp</label>
        <link refid="cellappmgr__gateway_8hpp_source"/>
        <childnode refid="12887" relation="include">
        </childnode>
        <childnode refid="12888" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12889" relation="include">
        </childnode>
        <childnode refid="12890" relation="include">
        </childnode>
        <childnode refid="12884" relation="include">
        </childnode>
        <childnode refid="12891" relation="include">
        </childnode>
        <childnode refid="12873" relation="include">
        </childnode>
      </node>
      <node id="12934">
        <label>server/backup_hash.hpp</label>
      </node>
      <node id="12941">
        <label>entity_extra.hpp</label>
        <link refid="entity__extra_8hpp_source"/>
        <childnode refid="12913" relation="include">
        </childnode>
      </node>
      <node id="12940">
        <label>entity_vision.hpp</label>
        <link refid="entity__vision_8hpp_source"/>
        <childnode refid="12913" relation="include">
        </childnode>
        <childnode refid="12941" relation="include">
        </childnode>
      </node>
      <node id="12892">
        <label>cells.hpp</label>
        <link refid="cells_8hpp_source"/>
        <childnode refid="12888" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12893" relation="include">
        </childnode>
      </node>
      <node id="12907">
        <label>server/py_services_map.hpp</label>
      </node>
      <node id="12925">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="12882">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="12895">
        <label>profile.hpp</label>
        <link refid="profile_8hpp_source"/>
        <childnode refid="12896" relation="include">
        </childnode>
      </node>
      <node id="12937">
        <label>entity_population.hpp</label>
        <link refid="entity__population_8hpp_source"/>
        <childnode refid="12938" relation="include">
        </childnode>
        <childnode refid="12877" relation="include">
        </childnode>
        <childnode refid="12869" relation="include">
        </childnode>
        <childnode refid="12893" relation="include">
        </childnode>
      </node>
      <node id="12913">
        <label>entity.hpp</label>
        <link refid="cellapp_2entity_8hpp_source"/>
        <childnode refid="12868" relation="include">
        </childnode>
        <childnode refid="12910" relation="include">
        </childnode>
        <childnode refid="12874" relation="include">
        </childnode>
        <childnode refid="12880" relation="include">
        </childnode>
        <childnode refid="12867" relation="include">
        </childnode>
        <childnode refid="12914" relation="include">
        </childnode>
        <childnode refid="12920" relation="include">
        </childnode>
        <childnode refid="12923" relation="include">
        </childnode>
        <childnode refid="12899" relation="include">
        </childnode>
        <childnode refid="12926" relation="include">
        </childnode>
        <childnode refid="12927" relation="include">
        </childnode>
        <childnode refid="12928" relation="include">
        </childnode>
        <childnode refid="12929" relation="include">
        </childnode>
        <childnode refid="12930" relation="include">
        </childnode>
        <childnode refid="12931" relation="include">
        </childnode>
        <childnode refid="12918" relation="include">
        </childnode>
        <childnode refid="12932" relation="include">
        </childnode>
        <childnode refid="12933" relation="include">
        </childnode>
        <childnode refid="12934" relation="include">
        </childnode>
        <childnode refid="12935" relation="include">
        </childnode>
        <childnode refid="12936" relation="include">
        </childnode>
        <childnode refid="12925" relation="include">
        </childnode>
        <childnode refid="12893" relation="include">
        </childnode>
      </node>
      <node id="12896">
        <label>cstdmf/profile.hpp</label>
      </node>
      <node id="12922">
        <label>network/interface_element.hpp</label>
      </node>
      <node id="12889">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="12927">
        <label>entitydef/mailbox_base.hpp</label>
      </node>
      <node id="12912">
        <label>space/forward_declarations.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_vision_range_trigger" prot="public">VisionRangeTrigger</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;script/first_include.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vision_controller.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_population.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;entity_vision.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;range_trigger.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">DECLARE_DEBUG_COMPONENT(0)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_vision_range_trigger" refkind="compound"><highlight class="normal">class<sp/><ref refid="class_vision_range_trigger" kindref="compound">VisionRangeTrigger</ref><sp/>:<sp/>public<sp/><ref refid="class_range_trigger" kindref="compound">RangeTrigger</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vision_range_trigger" kindref="compound">VisionRangeTrigger</ref>(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>around,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeTrigger(<sp/>around.pRangeListNode(),<sp/>range,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::FLAG_ENTITY_TRIGGER,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::FLAG_ENTITY_TRIGGER,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::FLAG_NO_TRIGGERS,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RangeListNode::FLAG_NO_TRIGGERS<sp/>),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disabled_(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;insert();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pEntity()-&gt;addTrigger(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_vision_range_trigger" kindref="compound">VisionRangeTrigger</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pEntity()-&gt;delTrigger(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disabled_)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;removeWithoutContracting();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keyword">remove</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setRangeAndMod(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setRange(<sp/>r<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pEntity()-&gt;modTrigger(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>BW::string<sp/>debugString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triggerEnter(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>entity<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triggerLeave(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>entity<sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_entity_range_list_node_1a78c137a34934e2622e5ce6ea88703ec5" kindref="member">EntityRangeListNode::getEntity</ref>(<sp/>this-&gt;pCentralNode()<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disable()<sp/><sp/>{<sp/>disabled_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>disabled_;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">IMPLEMENT_CONTROLLER_TYPE(<sp/><ref refid="class_vision_controller" kindref="compound">VisionController</ref>,<sp/>DOMAIN_REAL<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="class_vision_controller_1a6a3d966add70d739d48f8ea6d53be275" kindref="member">VisionController::VisionController</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>visionAngle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>visionRange,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>seeingHeight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>updatePeriod<sp/>):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>visionAngle_(<sp/>visionAngle<sp/>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>visionRange_(<sp/>visionRange<sp/>),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>seeingHeight_(<sp/>seeingHeight<sp/>),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>updatePeriod_(<sp/>updatePeriod<sp/>),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>tickSinceLast_(<sp/>0<sp/>),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>pVisionTrigger_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>pOnloadedVisible_(<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller_1adb07a77e63114b0edd3c3406b69fa54f" kindref="member">VisionController::startReal</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isInitialStart<sp/>)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>have<sp/>pOnloadedVisible_<sp/>if<sp/>this<sp/>is<sp/>not<sp/>the<sp/>initial<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!isInitialStart<sp/>||<sp/>(pOnloadedVisible_<sp/>==<sp/>NULL)<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity_vision" kindref="compound">EntityVision</ref><sp/>&amp;<sp/>ev<sp/>=<sp/>EntityVision::instance(<sp/>this-&gt;<ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref>()<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pOnloadedVisible_)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev.setVisibleEntities(<sp/>*pOnloadedVisible_<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vision_controller" kindref="compound">VisionController</ref>*<sp/>oldVC<sp/>=<sp/>ev.getVision();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldVC<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;VisionController::startReal:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Entity<sp/>%u<sp/>already<sp/>has<sp/>vision<sp/>controller.<sp/>old=%d,<sp/>new=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref>().</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>oldVC-&gt;<ref refid="class_controller_1a8c2f39fc63cd53d3a098b14310cdbc6c" kindref="member">id</ref>(),<sp/>this-&gt;<ref refid="class_controller_1a8c2f39fc63cd53d3a098b14310cdbc6c" kindref="member">id</ref>()<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ev.setVision(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>CellApp::instance().registerForUpdate(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>our<sp/>vision<sp/>trigger<sp/>if<sp/>we<sp/>have<sp/>an<sp/>appropriate<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_vision_controller_1a91f5ef302dd091694132dce91edf76d1" kindref="member">setVisionRange</ref>(<sp/>visionAngle_,<sp/>visionRange_<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>might<sp/>now<sp/>be<sp/>cancelled<sp/>or<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller_1aa17ba6f0ee414f81714628a8240c9296" kindref="member">VisionController::stopReal</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFinalStop<sp/>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_VERIFY(<sp/>CellApp::instance().deregisterForUpdate(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">EntityPtr</ref><sp/>pEntity<sp/>=<sp/>&amp;this-&gt;<ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isFinalStop<sp/>&amp;&amp;<sp/>pVisionTrigger_<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pVisionTrigger_-&gt;disable();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_vision_controller_1a91f5ef302dd091694132dce91edf76d1" kindref="member">setVisionRange</ref>(<sp/>visionAngle_,<sp/>0.f<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>might<sp/>now<sp/>be<sp/>cancelled<sp/>or<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>the<sp/>line<sp/>below<sp/>might<sp/>want<sp/>to<sp/>move<sp/>above<sp/>the<sp/>script<sp/>callbacks...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityVision::instance(<sp/>*pEntity<sp/>).setVision(<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller_1a6dc5ada6d419859ba02788040dd28b1f" kindref="member">VisionController::getYawOffset</ref>()</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller_1acc5f7c4aa240cb6aedc782780db027cb" kindref="member">VisionController::update</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>AUTO_SCOPED_PROFILE(<sp/></highlight><highlight class="stringliteral">&quot;visionUpdate&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tickSinceLast_<sp/>&gt;=<sp/>updatePeriod_)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickSinceLast_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>ourselves<sp/>alive<sp/>until<sp/>we<sp/>have<sp/>finished<sp/>cleaning<sp/>up,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>an<sp/>extra<sp/>reference<sp/>count<sp/>from<sp/>a<sp/>smart<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">ControllerPtr</ref><sp/>pController<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityVision::instance(<sp/>this-&gt;<ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref>()<sp/>).updateVisibleEntities(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seeingHeight_,<sp/>this-&gt;<ref refid="class_vision_controller_1a6dc5ada6d419859ba02788040dd28b1f" kindref="member">getYawOffset</ref>()<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tickSinceLast_++;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller_1ab606da1466ff834e127a331b3c2ab5af" kindref="member">VisionController::writeRealToStream</ref>(<sp/>BinaryOStream<sp/>&amp;<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Controller::writeRealToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>visionAngle_<sp/>&lt;&lt;<sp/>visionRange_<sp/>&lt;&lt;<sp/>tickSinceLast_<sp/>&lt;&lt;<sp/>updatePeriod_;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EntitySet<sp/>&amp;<sp/>visibleEntities<sp/>=</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EntityVision::instance(<sp/>this-&gt;<ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref>()<sp/>).visibleEntities();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(int32)visibleEntities.size();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet::const_iterator<sp/>iter<sp/>=<sp/>visibleEntities.begin();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>EntitySet::const_iterator<sp/>endIter<sp/>=<sp/>visibleEntities.end();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>endIter)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(*iter)-&gt;id();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller_1a168c358ed20ed3c440eefc0333c1afe4" kindref="member">VisionController::readRealFromStream</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>stream<sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Controller::readRealFromStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>visionAngle_<sp/>&gt;&gt;<sp/>visionRange_<sp/>&gt;&gt;<sp/>tickSinceLast_<sp/>&gt;&gt;<sp/>updatePeriod_;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>visibleSize;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>visibleSize;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(visibleSize<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pOnloadedVisible_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BW::vector&lt;<sp/>EntityID<sp/>&gt;(<sp/>visibleSize<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>visibleSize;<sp/>++i)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>(*pOnloadedVisible_)[i];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VisionController::seeingHeight(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>h<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/><ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref>().isReal()<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>seeingHeight_<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vision_controller_1a91f5ef302dd091694132dce91edf76d1" kindref="member">VisionController::setVisionRange</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>visionAngle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>visionAngle_<sp/>=<sp/>visionAngle;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>visionRange_<sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>three<sp/>of<sp/>the<sp/>cases<sp/>below<sp/>can<sp/>call<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>START_PROFILE(<sp/>SHUFFLE_TRIGGERS_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range<sp/>&lt;=<sp/>0.f)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pVisionTrigger_;<sp/></highlight><highlight class="comment">//<sp/>could<sp/>be<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pVisionTrigger_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visionRange_<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pVisionTrigger_<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pVisionTrigger_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vision_range_trigger" kindref="compound">VisionRangeTrigger</ref>(<sp/>this-&gt;<ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref>(),<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pVisionTrigger_-&gt;setRangeAndMod(<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>STOP_PROFILE(<sp/>SHUFFLE_TRIGGERS_PROFILE<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>Entity::callbacksPermitted(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>might<sp/>now<sp/>be<sp/>cancelled<sp/>or<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>VisionRangeTrigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vision_range_trigger_1a0141ac838c45f479b63bd578f7e3c82a" kindref="member">VisionRangeTrigger::triggerEnter</ref>(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/><ref refid="class_controller_1a9644932b8c5acaad28c5dc0ecda356a3" kindref="member">entity</ref><sp/>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!disabled_<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>this-&gt;pEntity();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ERROR_MSG(<sp/>&quot;VisionRangeTrigger::triggerEnter:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Called<sp/>on<sp/>destroyed<sp/>entity<sp/>%d\n&quot;,<sp/>pEntity-&gt;id()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityVision::instance(<sp/>*pEntity<sp/>).triggerVisionEnter(<sp/>&amp;entity<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vision_range_trigger_1acbe89e7c4bf443ff223f28aaa108e730" kindref="member">VisionRangeTrigger::triggerLeave</ref>(<sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>&amp;<sp/>entity<sp/>)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>!disabled_<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_entity" kindref="compound">Entity</ref><sp/>*<sp/>pEntity<sp/>=<sp/>this-&gt;pEntity();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntity-&gt;isDestroyed())</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ERROR_MSG(<sp/>&quot;VisionRangeTrigger::triggerLeave:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Called<sp/>on<sp/>destroyed<sp/>entity<sp/>%d\n&quot;,<sp/>pEntity-&gt;id()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>EntityVision::instance(<sp/>*pEntity<sp/>).triggerVisionLeave(<sp/>&amp;entity<sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">BW::string<sp/><ref refid="class_vision_range_trigger_1a2e43ef464b2f5e16cf1352409e13af4a" kindref="member">VisionRangeTrigger::debugString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="331"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[80];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>bw_snprintf(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>for<sp/>vision&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;pEntity()-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">()<sp/>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision_controller.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellapp/vision_controller.cpp"/>
  </compounddef>
</doxygen>
