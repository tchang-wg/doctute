<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_http_pipeline" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HttpPipeline</compoundname>
    <basecompoundref refid="class_tcp_connection" prot="private" virt="non-virtual">TcpConnection</basecompoundref>
    <derivedcompoundref refid="class_spa_pipeline" prot="public" virt="non-virtual">SpaPipeline</derivedcompoundref>
    <includes refid="http__pipeline_8hpp" local="no">http_pipeline.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_http_pipeline_1a11583d58063b6948821faeea16378b96" prot="private" static="no">
        <name>ParseResult</name>
        <enumvalue id="class_http_pipeline_1a11583d58063b6948821faeea16378b96acccf516695006135fa9b771bbd1003bf" prot="private">
          <name>NOT_ENOUGH_DATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_http_pipeline_1a11583d58063b6948821faeea16378b96aef96f930da7e2d399f72c1086223cd8b" prot="private">
          <name>PARSE_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_http_pipeline_1a11583d58063b6948821faeea16378b96ae2dae3c04f00ecd1490f13ec63f9050a" prot="private">
          <name>OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="103" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="102" bodyend="112"/>
      </memberdef>
      <memberdef kind="enum" id="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997" prot="private" static="no">
        <name>@8</name>
        <enumvalue id="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a564772bfe4832d079454f6b7a4082708" prot="private">
          <name>INSTANTIATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a800b14ce474e277d94a166dd7aa6ac8e" prot="private">
          <name>CONNECTING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997ab49c8ecd45b57d00b0d543f514fb46de" prot="private">
          <name>IDLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a6c6dfd5cc68fda576144742b459fd10c" prot="private">
          <name>SENDING_REQUESTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a156f6bf967e4362a14858b3c0f743e17" prot="private">
          <name>READING_RESPONSES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a91d32297df1fd834139a1bc76971b157" prot="private">
          <name>FAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="139" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="138" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_http_pipeline_1a74271087d08f5f775694d135d626a86d" prot="private" static="yes" mutable="no">
        <type>const uint32</type>
        <definition>const uint32 HttpPipeline::sendAtOnce_</definition>
        <argsstring></argsstring>
        <name>sendAtOnce_</name>
        <initializer>= 8192</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="126" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_http_pipeline_1a092aebc9c9f809bbac4c6d620bbb207e" prot="private" static="no" mutable="no">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; HttpPipeline::hostname_</definition>
        <argsstring></argsstring>
        <name>hostname_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="129" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1a28847e5f9ad6d796a75a91b69aabc0fe" prot="private" static="no" mutable="no">
        <type>uint16</type>
        <definition>uint16 HttpPipeline::port_</definition>
        <argsstring></argsstring>
        <name>port_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="132" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1a6ecb4fab2b22228eea2392bb6e5144d8" prot="private" static="no" mutable="no">
        <type>int64</type>
        <definition>int64 HttpPipeline::timeout_</definition>
        <argsstring></argsstring>
        <name>timeout_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="135" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1ad1fd31e6c48109e68b5fccd47692ceb8" prot="private" static="no" mutable="no">
        <type>enum HttpPipeline::@8</type>
        <definition>enum HttpPipeline::@8  HttpPipeline::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1a817e2a574368d100f0c8f2fef6e395a6" prot="private" static="no" mutable="no">
        <type>HttpRequestBatch</type>
        <definition>HttpRequestBatch HttpPipeline::batch_</definition>
        <argsstring></argsstring>
        <name>batch_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="153" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1aaa9bf16b32a63e7c077209865998cda6" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 HttpPipeline::txBytes_</definition>
        <argsstring></argsstring>
        <name>txBytes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="160" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1a1a812e500c9ca6e62ea9f637109006f2" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string HttpPipeline::txRequestsStr_</definition>
        <argsstring></argsstring>
        <name>txRequestsStr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="163" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1acff72ea7fbc551db6f53bf0b64a3c54e" prot="private" static="no" mutable="no">
        <type>BW::ostringstream</type>
        <definition>BW::ostringstream HttpPipeline::txRequests_</definition>
        <argsstring></argsstring>
        <name>txRequests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="166" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1a891a566133c6bf06022eba337b3d8631" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 HttpPipeline::parsedBytes_</definition>
        <argsstring></argsstring>
        <name>parsedBytes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="175" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1aadcbe046d28c302d6b95e38f5c63200b" prot="private" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 HttpPipeline::parsedRequests_</definition>
        <argsstring></argsstring>
        <name>parsedRequests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="179" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_http_pipeline_1afe5b4ab38f9bd1f334eab1effd893804" prot="private" static="no" mutable="no">
        <type>BW::ostringstream</type>
        <definition>BW::ostringstream HttpPipeline::rxRequests_</definition>
        <argsstring></argsstring>
        <name>rxRequests_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="182" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_http_pipeline_1aea919a94137bbaaf6ac43716a53ba70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HttpPipeline::HttpPipeline</definition>
        <argsstring>(Mercury::EventDispatcher &amp;dispatcher, DnsResolver &amp;resolver, const BW::string &amp;hostname, uint16 port, int64 timeout)</argsstring>
        <name>HttpPipeline</name>
        <param>
          <type>Mercury::EventDispatcher &amp;</type>
          <declname>dispatcher</declname>
        </param>
        <param>
          <type><ref refid="class_dns_resolver" kindref="compound">DnsResolver</ref> &amp;</type>
          <declname>resolver</declname>
        </param>
        <param>
          <type>const BW::string &amp;</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>uint16</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int64</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dispatcher</parametername>
</parameternamelist>
<parameterdescription>
<para>An EventDispatcher for orchestrating a <ref refid="class_tcp_connection" kindref="compound">TcpConnection</ref>, aggregated via private inheritance </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>The remote Endpoint&apos;s hostname. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The remote Endpoint&apos;s port. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>A timeout (in microseconds) for all blocking operations. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="56" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1ab4ccbb7ac5f03014d085f958c6085b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>HttpPipeline::~HttpPipeline</definition>
        <argsstring>()</argsstring>
        <name>~HttpPipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor.</para><para>As in <ref refid="class_tcp_connection" kindref="compound">TcpConnection</ref> (see appropriate comments in source code), this should only be invoked when connection is in failed state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="58" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a56dc7c97cf3b2be0ae7b5bab7c0ff23e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>INLINE bool HttpPipeline::isProcessing</definition>
        <argsstring>()</argsstring>
        <name>isProcessing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns whether there are batches currently being processed.</para><para><simplesect kind="return"><para>true if batches are processing, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="60" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.ipp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a5140097dcf4e7442ee32ef1886449614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HttpPipeline::processRequests</definition>
        <argsstring>(const HttpRequestBatch &amp;batch)</argsstring>
        <name>processRequests</name>
        <param>
          <type>const HttpRequestBatch &amp;</type>
          <declname>batch</declname>
          <defname>newBatch</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method assigns a request batch to the pipeline for processing.</para><para>Can be done if: no batch is already being processed and connection not in a failed state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>batch</parametername>
</parameternamelist>
<parameterdescription>
<para>The batch to assign for processing. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="61" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="73" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a38d8fb10f1afa46c003c72e6651c7051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HttpPipeline::fail</definition>
        <argsstring>()</argsstring>
        <name>fail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method will Forcefully put a pipeline in the FAILED state.</para><para>If nescessary it will perform a server connection reset. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="62" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="221" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a723fc3e7432b536bd679bc02c830f1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void HttpPipeline::onConnectionFailure</definition>
        <argsstring>(const HttpRequestBatch &amp;succeeded, const HttpRequestBatch &amp;failed)=0</argsstring>
        <name>onConnectionFailure</name>
        <reimplementedby refid="class_spa_pipeline_1a5cbdb938cd29003ae010de7c4b586ec8">onConnectionFailure</reimplementedby>
        <param>
          <type>const HttpRequestBatch &amp;</type>
          <declname>succeeded</declname>
        </param>
        <param>
          <type>const HttpRequestBatch &amp;</type>
          <declname>failed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked on a pipeline error before entering failed state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>succeeded</parametername>
</parameternamelist>
<parameterdescription>
<para>A colection of pointers to all the successfully processed requests from the batch.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>failed</parametername>
</parameternamelist>
<parameterdescription>
<para>A collection of pointers to all the requests that were enqueued, but could not be processed due to pipeline failure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a718ead8b514143486e2108869500cc0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void HttpPipeline::onBatchSuccess</definition>
        <argsstring>(const HttpRequestBatch &amp;succeeded)=0</argsstring>
        <name>onBatchSuccess</name>
        <reimplementedby refid="class_spa_pipeline_1a31e99449a683b02270ab44da7cf86343">onBatchSuccess</reimplementedby>
        <param>
          <type>const HttpRequestBatch &amp;</type>
          <declname>succeeded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked on a successful completion of request batch processing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>succeeded</parametername>
</parameternamelist>
<parameterdescription>
<para>A collection of pointers to all the processed requests. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="84" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_http_pipeline_1a92bf062f5c2c7ff9447a16818edf79bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HttpPipeline::doSuccess</definition>
        <argsstring>()</argsstring>
        <name>doSuccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method implements the state machine for the HTTP pipeline. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="87" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="89" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a2858591167764b0ea79ee9d90247c5e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HttpPipeline::onRead</definition>
        <argsstring>(const char *buffer, int size, bool isSuccess)</argsstring>
        <name>onRead</name>
        <reimplements refid="class_tcp_connection_1a343f74537fb5a335f9cf0cc975b8fbb0">onRead</reimplements>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked at the end of operation scheduled by &quot;read&quot;.</para><para>If &quot;isSuccess&quot; is true, &quot;buffer&quot; is non-NULL, &quot;size&quot; is positive. Otherwise &quot;buffer&quot; and &quot;size&quot; are unspecified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="90" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="264" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a9ee06882151563f7f3ac39bf8585b2d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void HttpPipeline::onWrite</definition>
        <argsstring>(int bytesWritten, bool isSuccess)</argsstring>
        <name>onWrite</name>
        <reimplements refid="class_tcp_connection_1a4578d5df77523a3e21f683aed124e4bd">onWrite</reimplements>
        <param>
          <type>int</type>
          <declname>bytesWritten</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSuccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked at the end of operation scheduled by &quot;write&quot;. If &quot;isSuccess&quot; is true, &quot;bytesWritten&quot; is non-negative </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="91" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="283" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1aacf98920f03cf389dd00ca598e23802b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>INLINE void HttpPipeline::onConnected</definition>
        <argsstring>()</argsstring>
        <name>onConnected</name>
        <reimplements refid="class_tcp_connection_1aa3ce13fb8be75bc6739a1e9bdc1c806b">onConnected</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked at the end of operation scheduled by &quot;connect&quot; if and only if connection had been successfully established. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="93" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.ipp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a074f3d279a61c4e4bdf6204029cab51a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>INLINE void HttpPipeline::onDisconnected</definition>
        <argsstring>()</argsstring>
        <name>onDisconnected</name>
        <reimplements refid="class_tcp_connection_1ade704dbaa89bd6ce8713c6ea7a340cf3">onDisconnected</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This abstract callback method is invoked either upon graceful shutdown at the end of &quot;read&quot;, failure of &quot;connect&quot;, or forceful connection reset due to &quot;disconnect&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="94" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.ipp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a7fd38a7a7d0eeecb2905d8d8f632e684" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HttpPipeline::serializeBatchForTx</definition>
        <argsstring>()</argsstring>
        <name>serializeBatchForTx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is a helper method that serialises a request batch into a raw HTTP request stream in txRequests_. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="96" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="303" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1aba530cfd310403077b8cd08f6da1d740" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BW::string</type>
        <definition>BW::string HttpPipeline::percentEncode</definition>
        <argsstring>(BW::string str)</argsstring>
        <name>percentEncode</name>
        <param>
          <type>BW::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs URL encoding of HTTP query parameters (RFC 1738). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="97" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="396" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a9bd526aeeceb71e8d9dc5cba7e02a3cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ParseResult</type>
        <definition>HttpPipeline::ParseResult HttpPipeline::parseResponse</definition>
        <argsstring>(HttpRequest *pRequest)</argsstring>
        <name>parseResponse</name>
        <param>
          <type><ref refid="class_http_request" kindref="compound">HttpRequest</ref> *</type>
          <declname>pRequest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is the grand HTTP response parse routine.</para><para>Attempt to extract response data from rxRequests_ raw data stream. ParseResult of OK means invocation of onResponseReceived() callback on supplied &quot;request&quot; and a corresponding update to &quot;parsedBytes_&quot; and &quot;parsedRequests&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="115" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="443" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1a0c92f751970553277dfc576a138c3213" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ParseResult</type>
        <definition>HttpPipeline::ParseResult HttpPipeline::parseResponseCode</definition>
        <argsstring>(const char *&amp;s, int &amp;len, int &amp;responseCode)</argsstring>
        <name>parseResponseCode</name>
        <param>
          <type>const char *&amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>responseCode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method parses the first line of HTTP response in order to obtain the response code of a HTTP reply. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="117" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="540" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1ae2e8d6dd6450a18f7e5662efab01d117" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ParseResult</type>
        <definition>HttpPipeline::ParseResult HttpPipeline::parseResponseHeaders</definition>
        <argsstring>(const char *&amp;s, int &amp;len, HttpRequest::NameValueStore &amp;headers)</argsstring>
        <name>parseResponseHeaders</name>
        <param>
          <type>const char *&amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>len</declname>
        </param>
        <param>
          <type>HttpRequest::NameValueStore &amp;</type>
          <declname>headers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method parses the HTTP response headers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="119" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="623" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="class_http_pipeline_1aa97d14982bfcd80f07013007a1fc6174" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ParseResult</type>
        <definition>HttpPipeline::ParseResult HttpPipeline::parseChunkedResponseBody</definition>
        <argsstring>(const char *&amp;s, int &amp;len, BW::string &amp;responseBody)</argsstring>
        <name>parseChunkedResponseBody</name>
        <param>
          <type>const char *&amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>len</declname>
        </param>
        <param>
          <type>BW::string &amp;</type>
          <declname>responseBody</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method parses the response body for &quot;Content-Encoding: chunked&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="121" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.cpp" bodystart="702" bodyend="810"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements the <ref refid="class_http_pipeline" kindref="compound">HttpPipeline</ref>.</para><para>An HTTP/1.1 pipeline, which is a persistent connection to a remote HTTP server capable of batch processing large amount of requests. This is achieved via two separate mechanisms:</para><para>1) HTTP Keep-Alive, which is a default connection management policy in HTTP/1.1, prescripts the server to leave connection open after writing the response to the stream (unless told otherwise), waiting for new requests to arrive;</para><para>2) HTTP pipelining - an ability to send several requests at once and then receive their responses &quot;in the bulk&quot; in FIFO order.</para><para>This class handles the processing of a request batch, implementing a subset of full HTTP/1.1 protocol providing a full implementation of URL encoding and chunked encoding. Features like compressed payload and redirects are not implemented and should be disabled on HTTP server for correct operation.</para><para><ref refid="class_http_pipeline" kindref="compound">HttpPipeline</ref> privately inherits <ref refid="class_tcp_connection" kindref="compound">TcpConnection</ref>, using it as a semantically unaware transport layer.</para><para><ref refid="class_http_pipeline" kindref="compound">HttpPipeline</ref> starts connecting to its fixed remote endpoint representing some HTTP server immediately after construction. Over the course of its lifetime pipeline may be connecting, idle, blocked on processing request batch or failed. Failed state is stuck state and represents irrecoverable failure. External users of a pipeline should process it by terminating this pipeline and instantiating a brand new one. Please note that &quot;graceful&quot; scenarios like &quot;Connection: close&quot; pipeline shutdown are still considered failures to make error processing and request resent uniform. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1474">
        <label>Mercury::InputNotificationHandler</label>
      </node>
      <node id="1473">
        <label>TcpConnection</label>
        <link refid="class_tcp_connection"/>
        <childnode refid="1474" relation="public-inheritance">
        </childnode>
        <childnode refid="1475" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1475">
        <label>TimerHandler</label>
      </node>
      <node id="1476">
        <label>SpaPipeline</label>
        <link refid="class_spa_pipeline"/>
        <childnode refid="1472" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1472">
        <label>HttpPipeline</label>
        <link refid="class_http_pipeline"/>
        <childnode refid="1473" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1479">
        <label>Mercury::InputNotificationHandler</label>
      </node>
      <node id="1478">
        <label>TcpConnection</label>
        <link refid="class_tcp_connection"/>
        <childnode refid="1479" relation="public-inheritance">
        </childnode>
        <childnode refid="1480" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1480">
        <label>TimerHandler</label>
      </node>
      <node id="1477">
        <label>HttpPipeline</label>
        <link refid="class_http_pipeline"/>
        <childnode refid="1478" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" line="53" column="1" bodyfile="dbapp_extensions/wgbilling_spa/http_pipeline.hpp" bodystart="52" bodyend="183"/>
    <listofallmembers>
      <member refid="class_http_pipeline_1a817e2a574368d100f0c8f2fef6e395a6" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>batch_</name></member>
      <member refid="class_tcp_connection_1aead4f95acd5db8a011065d3e5bf0f5c9" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>connect</name></member>
      <member refid="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a800b14ce474e277d94a166dd7aa6ac8e" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>CONNECTING</name></member>
      <member refid="class_tcp_connection_1ae75b03e8c0269eed7b2625ec9006aa95" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>disconnect</name></member>
      <member refid="class_http_pipeline_1a92bf062f5c2c7ff9447a16818edf79bd" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>doSuccess</name></member>
      <member refid="class_http_pipeline_1a38d8fb10f1afa46c003c72e6651c7051" prot="public" virt="non-virtual"><scope>HttpPipeline</scope><name>fail</name></member>
      <member refid="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a91d32297df1fd834139a1bc76971b157" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>FAILED</name></member>
      <member refid="class_tcp_connection_1a8cbba4e7763192e93059b2cdc04a9920" prot="private" virt="virtual"><scope>HttpPipeline</scope><name>handleInputNotification</name></member>
      <member refid="class_tcp_connection_1a933346ee0b9e8778693d59f2af07d905" prot="private" virt="virtual"><scope>HttpPipeline</scope><name>handleTimeout</name></member>
      <member refid="class_http_pipeline_1a092aebc9c9f809bbac4c6d620bbb207e" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>hostname_</name></member>
      <member refid="class_http_pipeline_1aea919a94137bbaaf6ac43716a53ba70d" prot="public" virt="non-virtual"><scope>HttpPipeline</scope><name>HttpPipeline</name></member>
      <member refid="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997ab49c8ecd45b57d00b0d543f514fb46de" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>IDLE</name></member>
      <member refid="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a564772bfe4832d079454f6b7a4082708" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>INSTANTIATED</name></member>
      <member refid="class_tcp_connection_1a00fcbaf21883a98483fed630fa2655b9" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>isBlocked</name></member>
      <member refid="class_tcp_connection_1a572e29fa5153753e32f1600f63731f48" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>isConnected</name></member>
      <member refid="class_http_pipeline_1a56dc7c97cf3b2be0ae7b5bab7c0ff23e" prot="public" virt="non-virtual"><scope>HttpPipeline</scope><name>isProcessing</name></member>
      <member refid="class_http_pipeline_1a11583d58063b6948821faeea16378b96acccf516695006135fa9b771bbd1003bf" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>NOT_ENOUGH_DATA</name></member>
      <member refid="class_http_pipeline_1a11583d58063b6948821faeea16378b96ae2dae3c04f00ecd1490f13ec63f9050a" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>OK</name></member>
      <member refid="class_http_pipeline_1a718ead8b514143486e2108869500cc0b" prot="public" virt="pure-virtual"><scope>HttpPipeline</scope><name>onBatchSuccess</name></member>
      <member refid="class_http_pipeline_1aacf98920f03cf389dd00ca598e23802b" prot="private" virt="virtual"><scope>HttpPipeline</scope><name>onConnected</name></member>
      <member refid="class_http_pipeline_1a723fc3e7432b536bd679bc02c830f1a4" prot="public" virt="pure-virtual"><scope>HttpPipeline</scope><name>onConnectionFailure</name></member>
      <member refid="class_http_pipeline_1a074f3d279a61c4e4bdf6204029cab51a" prot="private" virt="virtual"><scope>HttpPipeline</scope><name>onDisconnected</name></member>
      <member refid="class_http_pipeline_1a2858591167764b0ea79ee9d90247c5e9" prot="private" virt="virtual"><scope>HttpPipeline</scope><name>onRead</name></member>
      <member refid="class_http_pipeline_1a9ee06882151563f7f3ac39bf8585b2d5" prot="private" virt="virtual"><scope>HttpPipeline</scope><name>onWrite</name></member>
      <member refid="class_http_pipeline_1a11583d58063b6948821faeea16378b96aef96f930da7e2d399f72c1086223cd8b" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>PARSE_ERROR</name></member>
      <member refid="class_http_pipeline_1aa97d14982bfcd80f07013007a1fc6174" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>parseChunkedResponseBody</name></member>
      <member refid="class_http_pipeline_1a891a566133c6bf06022eba337b3d8631" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>parsedBytes_</name></member>
      <member refid="class_http_pipeline_1aadcbe046d28c302d6b95e38f5c63200b" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>parsedRequests_</name></member>
      <member refid="class_http_pipeline_1a9bd526aeeceb71e8d9dc5cba7e02a3cf" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>parseResponse</name></member>
      <member refid="class_http_pipeline_1a0c92f751970553277dfc576a138c3213" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>parseResponseCode</name></member>
      <member refid="class_http_pipeline_1ae2e8d6dd6450a18f7e5662efab01d117" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>parseResponseHeaders</name></member>
      <member refid="class_http_pipeline_1a11583d58063b6948821faeea16378b96" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>ParseResult</name></member>
      <member refid="class_http_pipeline_1aba530cfd310403077b8cd08f6da1d740" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>percentEncode</name></member>
      <member refid="class_http_pipeline_1a28847e5f9ad6d796a75a91b69aabc0fe" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>port_</name></member>
      <member refid="class_http_pipeline_1a5140097dcf4e7442ee32ef1886449614" prot="public" virt="non-virtual"><scope>HttpPipeline</scope><name>processRequests</name></member>
      <member refid="class_tcp_connection_1a8dea385ee1c102d45dce6c1838bc773e" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>read</name></member>
      <member refid="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a156f6bf967e4362a14858b3c0f743e17" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>READING_RESPONSES</name></member>
      <member refid="class_http_pipeline_1afe5b4ab38f9bd1f334eab1effd893804" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>rxRequests_</name></member>
      <member refid="class_http_pipeline_1a74271087d08f5f775694d135d626a86d" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>sendAtOnce_</name></member>
      <member refid="class_http_pipeline_1a0b848a2f2f3fa6e575671f428b8dd997a6c6dfd5cc68fda576144742b459fd10c" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>SENDING_REQUESTS</name></member>
      <member refid="class_http_pipeline_1a7fd38a7a7d0eeecb2905d8d8f632e684" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>serializeBatchForTx</name></member>
      <member refid="class_http_pipeline_1ad1fd31e6c48109e68b5fccd47692ceb8" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>state_</name></member>
      <member refid="class_tcp_connection_1ab88c48da7aeee8df77f31f52cb316196" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>TcpConnection</name></member>
      <member refid="class_http_pipeline_1a6ecb4fab2b22228eea2392bb6e5144d8" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>timeout_</name></member>
      <member refid="class_http_pipeline_1aaa9bf16b32a63e7c077209865998cda6" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>txBytes_</name></member>
      <member refid="class_http_pipeline_1acff72ea7fbc551db6f53bf0b64a3c54e" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>txRequests_</name></member>
      <member refid="class_http_pipeline_1a1a812e500c9ca6e62ea9f637109006f2" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>txRequestsStr_</name></member>
      <member refid="class_tcp_connection_1a9ed9b145b60b5af350cf73455937e7ce" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>write</name></member>
      <member refid="class_http_pipeline_1ab4ccbb7ac5f03014d085f958c6085b03" prot="public" virt="virtual"><scope>HttpPipeline</scope><name>~HttpPipeline</name></member>
      <member refid="class_tcp_connection_1a57f0a40516d8bc7f6c83de77b730cf29" prot="private" virt="non-virtual"><scope>HttpPipeline</scope><name>~TcpConnection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
