<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_bases" kind="class" language="C++" prot="public">
    <compoundname>Bases</compoundname>
    <includes refid="bases_8hpp" local="no">bases.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_bases_1add0a5f6ee4f35ffdee15d8edcba75fc7" prot="private" static="no">
        <type>BW::map&lt; EntityID, <ref refid="class_base" kindref="compound">Base</ref> * &gt;</type>
        <definition>typedef BW::map&lt; EntityID, Base * &gt; Bases::Container</definition>
        <argsstring></argsstring>
        <name>Container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="21" column="1" bodyfile="baseapp/bases.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_bases_1adefbb4a3d8bfffd30b04ec39a98cdea0" prot="public" static="no">
        <type>Container::iterator</type>
        <definition>typedef Container::iterator Bases::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="24" column="1" bodyfile="baseapp/bases.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bases_1ada610f08ba14b530a42367cc85d3d35d" prot="public" static="no">
        <type>Container::const_iterator</type>
        <definition>typedef Container::const_iterator Bases::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="25" column="1" bodyfile="baseapp/bases.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bases_1a4b22e5429eab5cb63380cbbb7dfdfd31" prot="public" static="no">
        <type>Container::size_type</type>
        <definition>typedef Container::size_type Bases::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="27" column="1" bodyfile="baseapp/bases.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bases_1a11dd6716eb22123355f2bcd44f231b4a" prot="public" static="no">
        <type>Container::mapped_type</type>
        <definition>typedef Container::mapped_type Bases::mapped_type</definition>
        <argsstring></argsstring>
        <name>mapped_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="28" column="1" bodyfile="baseapp/bases.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_bases_1afd9f2e4bedbeaaffcf7c6e7c199addef" prot="public" static="no">
        <type>Container::key_type</type>
        <definition>typedef Container::key_type Bases::key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="29" column="1" bodyfile="baseapp/bases.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_bases_1abf91a5b5f74f97720adcdf40546de4a8" prot="private" static="no" mutable="no">
        <type>Container</type>
        <definition>Container Bases::container_</definition>
        <argsstring></argsstring>
        <name>container_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="56" column="1" bodyfile="baseapp/bases.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bases_1a426a17893bad28e5c56628ce186ffea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator Bases::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="31" column="1" bodyfile="baseapp/bases.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1a5edf1219fdca54b54fcd5f2e2b3cfb0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator Bases::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="32" column="1" bodyfile="baseapp/bases.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1a2d552f507b924eff558226852835a64e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator Bases::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="34" column="1" bodyfile="baseapp/bases.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1a8c737e6afcf38f6f7cc1e501d5373ff6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator Bases::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="35" column="1" bodyfile="baseapp/bases.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1af014d707468010739a7085d1178b07da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type Bases::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="37" column="1" bodyfile="baseapp/bases.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1a62cac73c72bd6061e8a04b06bed27109" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Bases::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="39" column="1" bodyfile="baseapp/bases.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1aabd9ae1fa18296de76b60a07596acf65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator Bases::find</definition>
        <argsstring>(key_type key)</argsstring>
        <name>find</name>
        <param>
          <type>key_type</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="41" column="1" bodyfile="baseapp/bases.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1ae42170eb46bdbb8fb1a1624bef27c8d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Bases::BWAPI</definition>
        <argsstring>(BASEAPP_API) Base *findEntity(EntityID id) const </argsstring>
        <name>BWAPI</name>
        <param>
          <type>BASEAPP_API</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1ab2c28a0f0378c93b4fcb832feb2a5b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bases::add</definition>
        <argsstring>(Base *pBase)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="class_base" kindref="compound">Base</ref> *</type>
          <declname>pBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds the provided <ref refid="class_entity" kindref="compound">Entity</ref> to the set of known <ref refid="class_bases" kindref="compound">Bases</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="45" column="1" bodyfile="baseapp/bases.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1a2273663cd5c5604e60c39fe6eb84a417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bases::erase</definition>
        <argsstring>(EntityID id)</argsstring>
        <name>erase</name>
        <param>
          <type>EntityID</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="46" column="1" bodyfile="baseapp/bases.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1ad7de16e272fe59eb0c5f5504f9a0e787" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Bases::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="47" column="1" bodyfile="baseapp/bases.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1abab5d348b6cdee039168467c7448f195" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bases::discardAll</definition>
        <argsstring>(bool shouldDestroy=false)</argsstring>
        <name>discardAll</name>
        <param>
          <type>bool</type>
          <declname>shouldDestroy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method removes all known entities from the collection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="49" column="1" bodyfile="baseapp/bases.cpp" bodystart="37" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1a2bac2cbead90547cc46579469d6fea62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_base" kindref="compound">Base</ref> *</type>
        <definition>Base * Bases::findInstanceWithType</definition>
        <argsstring>(const char *typeName) const </argsstring>
        <name>findInstanceWithType</name>
        <param>
          <type>const char *</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a <ref refid="class_base" kindref="compound">Base</ref> entity that has a type that matches the string that is passed in. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="51" column="1" bodyfile="baseapp/bases.cpp" bodystart="78" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_bases_1a6dbc6d1813796f1faa3aa1be38639905" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bases::addServicesToStream</definition>
        <argsstring>(BinaryOStream &amp;stream) const </argsstring>
        <name>addServicesToStream</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is used to re-register services with a newly spawned <ref refid="class_base_app_mgr" kindref="compound">BaseAppMgr</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/bases.hpp" line="53" column="1" bodyfile="baseapp/bases.cpp" bodystart="103" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class represents a collection <ref refid="class_base" kindref="compound">Base</ref> entities mapped by EntityID. </para>    </detaileddescription>
    <location file="baseapp/bases.hpp" line="19" column="1" bodyfile="baseapp/bases.hpp" bodystart="18" bodyend="57"/>
    <listofallmembers>
      <member refid="class_bases_1ab2c28a0f0378c93b4fcb832feb2a5b30" prot="public" virt="non-virtual"><scope>Bases</scope><name>add</name></member>
      <member refid="class_bases_1a6dbc6d1813796f1faa3aa1be38639905" prot="public" virt="non-virtual"><scope>Bases</scope><name>addServicesToStream</name></member>
      <member refid="class_bases_1a426a17893bad28e5c56628ce186ffea4" prot="public" virt="non-virtual"><scope>Bases</scope><name>begin</name></member>
      <member refid="class_bases_1a5edf1219fdca54b54fcd5f2e2b3cfb0b" prot="public" virt="non-virtual"><scope>Bases</scope><name>begin</name></member>
      <member refid="class_bases_1ae42170eb46bdbb8fb1a1624bef27c8d5" prot="public" virt="non-virtual"><scope>Bases</scope><name>BWAPI</name></member>
      <member refid="class_bases_1ad7de16e272fe59eb0c5f5504f9a0e787" prot="public" virt="non-virtual"><scope>Bases</scope><name>clear</name></member>
      <member refid="class_bases_1ada610f08ba14b530a42367cc85d3d35d" prot="public" virt="non-virtual"><scope>Bases</scope><name>const_iterator</name></member>
      <member refid="class_bases_1add0a5f6ee4f35ffdee15d8edcba75fc7" prot="private" virt="non-virtual"><scope>Bases</scope><name>Container</name></member>
      <member refid="class_bases_1abf91a5b5f74f97720adcdf40546de4a8" prot="private" virt="non-virtual"><scope>Bases</scope><name>container_</name></member>
      <member refid="class_bases_1abab5d348b6cdee039168467c7448f195" prot="public" virt="non-virtual"><scope>Bases</scope><name>discardAll</name></member>
      <member refid="class_bases_1a62cac73c72bd6061e8a04b06bed27109" prot="public" virt="non-virtual"><scope>Bases</scope><name>empty</name></member>
      <member refid="class_bases_1a2d552f507b924eff558226852835a64e" prot="public" virt="non-virtual"><scope>Bases</scope><name>end</name></member>
      <member refid="class_bases_1a8c737e6afcf38f6f7cc1e501d5373ff6" prot="public" virt="non-virtual"><scope>Bases</scope><name>end</name></member>
      <member refid="class_bases_1a2273663cd5c5604e60c39fe6eb84a417" prot="public" virt="non-virtual"><scope>Bases</scope><name>erase</name></member>
      <member refid="class_bases_1aabd9ae1fa18296de76b60a07596acf65" prot="public" virt="non-virtual"><scope>Bases</scope><name>find</name></member>
      <member refid="class_bases_1a2bac2cbead90547cc46579469d6fea62" prot="public" virt="non-virtual"><scope>Bases</scope><name>findInstanceWithType</name></member>
      <member refid="class_bases_1adefbb4a3d8bfffd30b04ec39a98cdea0" prot="public" virt="non-virtual"><scope>Bases</scope><name>iterator</name></member>
      <member refid="class_bases_1afd9f2e4bedbeaaffcf7c6e7c199addef" prot="public" virt="non-virtual"><scope>Bases</scope><name>key_type</name></member>
      <member refid="class_bases_1a11dd6716eb22123355f2bcd44f231b4a" prot="public" virt="non-virtual"><scope>Bases</scope><name>mapped_type</name></member>
      <member refid="class_bases_1af014d707468010739a7085d1178b07da" prot="public" virt="non-virtual"><scope>Bases</scope><name>size</name></member>
      <member refid="class_bases_1a4b22e5429eab5cb63380cbbb7dfdfd31" prot="public" virt="non-virtual"><scope>Bases</scope><name>size_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
