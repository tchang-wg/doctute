<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="user__segment__reader_8cpp" kind="file" language="C++">
    <compoundname>user_segment_reader.cpp</compoundname>
    <includes local="no">Python.h</includes>
    <includes refid="user__segment__reader_8hpp" local="yes">user_segment_reader.hpp</includes>
    <includes refid="constants_8hpp" local="yes">constants.hpp</includes>
    <includes refid="log__entry_8hpp" local="yes">log_entry.hpp</includes>
    <includes refid="log__string__interpolator_8hpp" local="yes">log_string_interpolator.hpp</includes>
    <includes refid="py__query__result_8hpp" local="yes">py_query_result.hpp</includes>
    <incdepgraph>
      <node id="23054">
        <label>query_result.hpp</label>
        <link refid="query__result_8hpp_source"/>
        <childnode refid="23001" relation="include">
        </childnode>
        <childnode refid="23044" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23034">
        <label>py_query_result.hpp</label>
        <link refid="py__query__result_8hpp_source"/>
        <childnode refid="22996" relation="include">
        </childnode>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="23036" relation="include">
        </childnode>
        <childnode refid="23054" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23053">
        <label>query_range_iterator.hpp</label>
        <link refid="query__range__iterator_8hpp_source"/>
        <childnode refid="23023" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
      </node>
      <node id="23020">
        <label>unary_integer_file.hpp</label>
        <link refid="unary__integer__file_8hpp_source"/>
        <childnode refid="23013" relation="include">
        </childnode>
        <childnode refid="23014" relation="include">
        </childnode>
      </node>
      <node id="23032">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="23042">
        <label>query_params.hpp</label>
        <link refid="query__params_8hpp_source"/>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="22996" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23041" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23039" relation="include">
        </childnode>
        <childnode refid="23043" relation="include">
        </childnode>
        <childnode refid="23051" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23028" relation="include">
        </childnode>
        <childnode refid="23052" relation="include">
        </childnode>
      </node>
      <node id="23039">
        <label>user_log_reader.hpp</label>
        <link refid="user__log__reader_8hpp_source"/>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23001" relation="include">
        </childnode>
        <childnode refid="23040" relation="include">
        </childnode>
        <childnode refid="22997" relation="include">
        </childnode>
        <childnode refid="23000" relation="include">
        </childnode>
      </node>
      <node id="23010">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="22995">
        <label>tools/message_logger/user_segment_reader.cpp</label>
        <link refid="user_segment_reader.cpp"/>
        <childnode refid="22996" relation="include">
        </childnode>
        <childnode refid="22997" relation="include">
        </childnode>
        <childnode refid="23023" relation="include">
        </childnode>
        <childnode refid="23027" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23034" relation="include">
        </childnode>
      </node>
      <node id="23022">
        <label>log_time.hpp</label>
        <link refid="log__time_8hpp_source"/>
        <childnode refid="23023" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
        <childnode refid="23025" relation="include">
        </childnode>
      </node>
      <node id="23014">
        <label>stdlib.h</label>
      </node>
      <node id="23041">
        <label>log_entry_address_reader.hpp</label>
        <link refid="log__entry__address__reader_8hpp_source"/>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="22996" relation="include">
        </childnode>
      </node>
      <node id="23018">
        <label>user_segment_usage.hpp</label>
        <link refid="user__segment__usage_8hpp_source"/>
        <childnode refid="23019" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
      </node>
      <node id="23031">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
      </node>
      <node id="23038">
        <label>pyscript/pyobject_pointer.hpp</label>
      </node>
      <node id="23024">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="23011">
        <label>mldb/log_component_names.hpp</label>
        <link refid="mldb_2log__component__names_8hpp_source"/>
        <childnode refid="23012" relation="include">
        </childnode>
        <childnode refid="23013" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
      </node>
      <node id="23035">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="23006">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="23050">
        <label>../hostnames.hpp</label>
        <link refid="hostnames_8hpp_source"/>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
      </node>
      <node id="23033">
        <label>network/format_string_handler.hpp</label>
      </node>
      <node id="23015">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="23051">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="23040">
        <label>query_range.hpp</label>
        <link refid="query__range_8hpp_source"/>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="23041" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23042" relation="include">
        </childnode>
        <childnode refid="23053" relation="include">
        </childnode>
        <childnode refid="23039" relation="include">
        </childnode>
        <childnode refid="23027" relation="include">
        </childnode>
      </node>
      <node id="23028">
        <label>cstdmf/debug_message_source.hpp</label>
      </node>
      <node id="23047">
        <label>format_strings.hpp</label>
        <link refid="mldb_2format__strings_8hpp_source"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23048" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23027" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
      </node>
      <node id="23045">
        <label>categories.hpp</label>
        <link refid="mldb_2categories_8hpp_source"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23046" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23027">
        <label>log_entry.hpp</label>
        <link refid="log__entry_8hpp_source"/>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23028" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
      </node>
      <node id="23037">
        <label>py_user_log.hpp</label>
        <link refid="py__user__log_8hpp_source"/>
        <childnode refid="23038" relation="include">
        </childnode>
        <childnode refid="22996" relation="include">
        </childnode>
        <childnode refid="23036" relation="include">
        </childnode>
        <childnode refid="23039" relation="include">
        </childnode>
      </node>
      <node id="22996">
        <label>Python.h</label>
      </node>
      <node id="23019">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="23029">
        <label>log_string_interpolator.hpp</label>
        <link refid="log__string__interpolator_8hpp_source"/>
        <childnode refid="23030" relation="include">
        </childnode>
        <childnode refid="23031" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23032" relation="include">
        </childnode>
        <childnode refid="23007" relation="include">
        </childnode>
        <childnode refid="23033" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
        <childnode refid="23000" relation="include">
        </childnode>
      </node>
      <node id="23013">
        <label>../text_file_handler.hpp</label>
        <link refid="text__file__handler_8hpp_source"/>
        <childnode refid="23005" relation="include">
        </childnode>
        <childnode refid="23014" relation="include">
        </childnode>
      </node>
      <node id="22998">
        <label>user_segment.hpp</label>
        <link refid="user__segment_8hpp_source"/>
        <childnode refid="22999" relation="include">
        </childnode>
        <childnode refid="23000" relation="include">
        </childnode>
        <childnode refid="23001" relation="include">
        </childnode>
        <childnode refid="23022" relation="include">
        </childnode>
        <childnode refid="23026" relation="include">
        </childnode>
        <childnode refid="23007" relation="include">
        </childnode>
        <childnode refid="23014" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23004">
        <label>binary_file_handler.hpp</label>
        <link refid="binary__file__handler_8hpp_source"/>
        <childnode refid="23005" relation="include">
        </childnode>
        <childnode refid="23007" relation="include">
        </childnode>
      </node>
      <node id="23023">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="23017" relation="include">
        </childnode>
        <childnode refid="22999" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
      </node>
      <node id="23025">
        <label>time.h</label>
      </node>
      <node id="23009">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="23012">
        <label>../log_component_names.hpp</label>
        <link refid="log__component__names_8hpp_source"/>
        <childnode refid="23008" relation="include">
        </childnode>
      </node>
      <node id="23046">
        <label>../categories.hpp</label>
        <link refid="categories_8hpp_source"/>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
      </node>
      <node id="23008">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="23009" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
        <childnode refid="23000" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
      </node>
      <node id="23001">
        <label>user_log.hpp</label>
        <link refid="user__log_8hpp_source"/>
        <childnode refid="23002" relation="include">
        </childnode>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="22998" relation="include">
        </childnode>
        <childnode refid="23018" relation="include">
        </childnode>
        <childnode refid="23020" relation="include">
        </childnode>
        <childnode refid="23021" relation="include">
        </childnode>
      </node>
      <node id="23049">
        <label>hostnames.hpp</label>
        <link refid="mldb_2hostnames_8hpp_source"/>
        <childnode refid="23050" relation="include">
        </childnode>
        <childnode refid="23013" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23017">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="22999">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="23048">
        <label>../format_strings.hpp</label>
        <link refid="format__strings_8hpp_source"/>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23029" relation="include">
        </childnode>
        <childnode refid="23027" relation="include">
        </childnode>
      </node>
      <node id="23030">
        <label>string_offset.hpp</label>
        <link refid="string__offset_8hpp_source"/>
        <childnode refid="22999" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23000" relation="include">
        </childnode>
        <childnode refid="23024" relation="include">
        </childnode>
      </node>
      <node id="23005">
        <label>file_handler.hpp</label>
        <link refid="file__handler_8hpp_source"/>
        <childnode refid="22999" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23043">
        <label>mldb/log_reader.hpp</label>
        <link refid="log__reader_8hpp_source"/>
        <childnode refid="23044" relation="include">
        </childnode>
        <childnode refid="23050" relation="include">
        </childnode>
        <childnode refid="23039" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23002">
        <label>logging_component.hpp</label>
        <link refid="logging__component_8hpp_source"/>
        <childnode refid="23003" relation="include">
        </childnode>
        <childnode refid="23016" relation="include">
        </childnode>
        <childnode refid="23017" relation="include">
        </childnode>
      </node>
      <node id="22997">
        <label>user_segment_reader.hpp</label>
        <link refid="user__segment__reader_8hpp_source"/>
        <childnode refid="22998" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
        <childnode refid="23000" relation="include">
        </childnode>
      </node>
      <node id="23044">
        <label>log_common.hpp</label>
        <link refid="log__common_8hpp_source"/>
        <childnode refid="23045" relation="include">
        </childnode>
        <childnode refid="23047" relation="include">
        </childnode>
        <childnode refid="23049" relation="include">
        </childnode>
        <childnode refid="23011" relation="include">
        </childnode>
        <childnode refid="23020" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23026">
        <label>mldb/metadata.hpp</label>
        <link refid="mldb_2metadata_8hpp_source"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23010" relation="include">
        </childnode>
      </node>
      <node id="23000">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="23052">
        <label>regex.h</label>
      </node>
      <node id="23007">
        <label>network/file_stream.hpp</label>
      </node>
      <node id="23003">
        <label>user_components.hpp</label>
        <link refid="user__components_8hpp_source"/>
        <childnode refid="23004" relation="include">
        </childnode>
        <childnode refid="23008" relation="include">
        </childnode>
        <childnode refid="23011" relation="include">
        </childnode>
        <childnode refid="23009" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
        <childnode refid="23015" relation="include">
        </childnode>
      </node>
      <node id="23016">
        <label>log_entry_address.hpp</label>
        <link refid="log__entry__address_8hpp_source"/>
        <childnode refid="23010" relation="include">
        </childnode>
        <childnode refid="23006" relation="include">
        </childnode>
      </node>
      <node id="23036">
        <label>py_bwlog.hpp</label>
        <link refid="py__bwlog_8hpp_source"/>
        <childnode refid="22996" relation="include">
        </childnode>
        <childnode refid="23035" relation="include">
        </childnode>
        <childnode refid="23037" relation="include">
        </childnode>
        <childnode refid="23043" relation="include">
        </childnode>
      </node>
      <node id="23021">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Python.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;user_segment_reader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_entry.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_string_interpolator.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;py_query_result.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">UserSegmentReader::UserSegmentReader(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>userLogPath,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*suffix<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_user_segment" kindref="compound">UserSegment</ref>(<sp/>userLogPath,<sp/>suffix<sp/>),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>isSegmentOK_(<sp/>true<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Candidate<sp/>for<sp/>cleanup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>is<sp/>almost<sp/>identical<sp/>to<sp/>UserSegmentWriter.<sp/>is<sp/>it<sp/>worth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementing<sp/>in<sp/>the<sp/>base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UserSegmentReader::init()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[<sp/>1024<sp/>];</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;getEntriesFileName(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>buf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>pEntries_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FileStream(<sp/>buf,<sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pEntries_-&gt;good())</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserSegmentReader::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>entries<sp/>file<sp/>%s<sp/>for<sp/>reading:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/>pEntries_-&gt;strerror()<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isGood_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>args<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;getArgsFileName(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>buf<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>pArgs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FileStream(<sp/>buf,<sp/>mode<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pArgs_-&gt;good())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserSegmentReader::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>args<sp/>file<sp/>%s<sp/>for<sp/>reading:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,<sp/>pArgs_-&gt;strerror()<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isGood_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>entry<sp/>size<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEntries_-&gt;length()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSegmentOK_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isGood_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSegmentOK_)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isSegmentOK_<sp/>=<sp/>this-&gt;updateEntryBounds();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>pMetadataMLDB_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_metadata_m_l_d_b" kindref="compound">MetadataMLDB</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pMetadataMLDB_-&gt;init(<sp/>userLogPath_.c_str(),<sp/>suffix_.c_str(),<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;UserSegmentReader::init:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>initialise<sp/>metadata.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isSegmentOK_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader_1addfaf3c69e5c66205df7ddda50c29277" kindref="member">UserSegmentReader::isDirty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(<sp/>numEntries_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>)<sp/>)<sp/>&lt;<sp/>pEntries_-&gt;length();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader_1af0a911e5e455d7c759e884798e2b0c80" kindref="member">UserSegmentReader::findEntryNumber</ref>(<sp/><ref refid="class_log_time" kindref="compound">LogTime</ref><sp/>&amp;time,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchDirection<sp/>direction<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Early<sp/>return<sp/>if<sp/>time<sp/>is<sp/>outside<sp/>the<sp/>range<sp/>of<sp/>this<sp/>segment<sp/>(which<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>often<sp/>when<sp/>searching<sp/>from<sp/>the<sp/>beginning<sp/>or<sp/>to<sp/>the<sp/>end<sp/>of<sp/>a<sp/>log).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>QUERY_FORWARDS<sp/>&amp;&amp;<sp/>time<sp/>&lt;=<sp/>start_)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/>QUERY_BACKWARDS<sp/>&amp;&amp;<sp/>time<sp/>&gt;=<sp/>end_)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numEntries_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>do<sp/>binary<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>numEntries_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_time" kindref="compound">LogTime</ref><sp/>midtime;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid<sp/>=<sp/>direction<sp/>==<sp/>1<sp/>?<sp/>(left+right)/2<sp/>:<sp/>(left+right+1)/2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pEntries_-&gt;seek(<sp/>mid<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pEntries_<sp/>&gt;&gt;<sp/>midtime;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&gt;=<sp/>right)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&lt;=<sp/>midtime)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>mid+1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&lt;<sp/>midtime)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>mid-1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>mid;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((direction<sp/>==<sp/>QUERY_FORWARDS<sp/>&amp;&amp;<sp/>time<sp/>&lt;=<sp/>midtime)<sp/>||</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(direction<sp/>==<sp/>QUERY_BACKWARDS<sp/>&amp;&amp;<sp/>midtime<sp/>&lt;=<sp/>time))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mid;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Candidate<sp/>for<sp/>cleanup.<sp/>functionality<sp/>is<sp/>duplicated<sp/>in<sp/>UserSegment::readEntry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UserSegmentReader::seek(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pEntries_-&gt;seek(<sp/>n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_time" kindref="compound">LogTime</ref><sp/>&amp;<sp/>UserSegmentReader::getStartLogTime()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="166"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start_;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_time" kindref="compound">LogTime</ref><sp/>&amp;<sp/>UserSegmentReader::getEndLogTime()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Candidate<sp/>for<sp/>cleanup.<sp/>This<sp/>method<sp/>is<sp/>awful,<sp/>and<sp/>a<sp/>symptom<sp/>of<sp/>the<sp/>bad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>design<sp/>of<sp/>the<sp/>querying<sp/>structure<sp/>of<sp/>bwlog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UserSegmentReader::interpolateMessage(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;entry,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_string_interpolator" kindref="compound">LogStringInterpolator</ref><sp/>*pHandler,<sp/>BW::string<sp/>&amp;result<sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>pArgs_-&gt;seek(<sp/>entry.argsOffset()<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><sp/><ref refid="class_log_string_interpolator" kindref="compound">LogStringInterpolator</ref><sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>pHandler<sp/>)-&gt;streamToString(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pArgs_,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader_1a1195449b3612a1d392e238ae996049d8" kindref="member">UserSegmentReader::metadata</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;<sp/>entry,<sp/>BW::string<sp/>&amp;<sp/>result<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16<sp/>expectedLength<sp/>=<sp/>entry.metadataLength();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expectedLength)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isOK<sp/>=<sp/>pMetadataMLDB_-&gt;readFromOffset(</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.metadataOffset(),<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(isOK<sp/>&amp;&amp;<sp/>(result.length()<sp/>==<sp/>expectedLength));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">FileStream<sp/>*<sp/>UserSegmentReader::getArgStream()</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pArgs_;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UserSegmentReader::getEntriesLength()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pEntries_-&gt;length();</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UserSegmentReader::getArgsLength()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="223"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pArgs_-&gt;length();</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>UserSegmentReader::getMetadataLength()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="229"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pMetadataMLDB_-&gt;length();</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>user_segment_reader.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/user_segment_reader.cpp"/>
  </compounddef>
</doxygen>
