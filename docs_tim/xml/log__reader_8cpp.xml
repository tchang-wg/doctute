<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="log__reader_8cpp" kind="file" language="C++">
    <compoundname>log_reader.cpp</compoundname>
    <includes local="no">Python.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes refid="log__reader_8hpp" local="yes">log_reader.hpp</includes>
    <includes refid="mlutil_8hpp" local="yes">../mlutil.hpp</includes>
    <incdepgraph>
      <node id="20809">
        <label>query_range_iterator.hpp</label>
        <link refid="query__range__iterator_8hpp_source"/>
        <childnode refid="20783" relation="include">
        </childnode>
        <childnode refid="20798" relation="include">
        </childnode>
      </node>
      <node id="20792">
        <label>../unary_integer_file.hpp</label>
        <link refid="unary__integer__file_8hpp_source"/>
        <childnode refid="20788" relation="include">
        </childnode>
        <childnode refid="20789" relation="include">
        </childnode>
      </node>
      <node id="20811">
        <label>../mlutil.hpp</label>
        <link refid="mlutil_8hpp_source"/>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20778">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="20806">
        <label>query_params.hpp</label>
        <link refid="query__params_8hpp_source"/>
        <childnode refid="20794" relation="include">
        </childnode>
        <childnode refid="20756" relation="include">
        </childnode>
        <childnode refid="20782" relation="include">
        </childnode>
        <childnode refid="20805" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20793" relation="include">
        </childnode>
        <childnode refid="20758" relation="include">
        </childnode>
        <childnode refid="20807" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20785" relation="include">
        </childnode>
        <childnode refid="20808" relation="include">
        </childnode>
      </node>
      <node id="20793">
        <label>../user_log_reader.hpp</label>
        <link refid="user__log__reader_8hpp_source"/>
        <childnode refid="20794" relation="include">
        </childnode>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20795" relation="include">
        </childnode>
        <childnode refid="20804" relation="include">
        </childnode>
        <childnode refid="20810" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
      </node>
      <node id="20771">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="20789">
        <label>stdlib.h</label>
      </node>
      <node id="20782">
        <label>log_time.hpp</label>
        <link refid="log__time_8hpp_source"/>
        <childnode refid="20783" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20776" relation="include">
        </childnode>
        <childnode refid="20784" relation="include">
        </childnode>
      </node>
      <node id="20805">
        <label>log_entry_address_reader.hpp</label>
        <link refid="log__entry__address__reader_8hpp_source"/>
        <childnode refid="20798" relation="include">
        </childnode>
        <childnode refid="20756" relation="include">
        </childnode>
      </node>
      <node id="20802">
        <label>user_segment_usage.hpp</label>
        <link refid="user__segment__usage_8hpp_source"/>
        <childnode refid="20803" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
      </node>
      <node id="20777">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20776" relation="include">
        </childnode>
      </node>
      <node id="20776">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="20790">
        <label>log_component_names.hpp</label>
        <link refid="mldb_2log__component__names_8hpp_source"/>
        <childnode refid="20791" relation="include">
        </childnode>
        <childnode refid="20788" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
      </node>
      <node id="20794">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="20764">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="20787">
        <label>../hostnames.hpp</label>
        <link refid="hostnames_8hpp_source"/>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
      </node>
      <node id="20779">
        <label>network/format_string_handler.hpp</label>
      </node>
      <node id="20767">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="20807">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="20804">
        <label>query_range.hpp</label>
        <link refid="query__range_8hpp_source"/>
        <childnode refid="20794" relation="include">
        </childnode>
        <childnode refid="20805" relation="include">
        </childnode>
        <childnode refid="20782" relation="include">
        </childnode>
        <childnode refid="20806" relation="include">
        </childnode>
        <childnode refid="20809" relation="include">
        </childnode>
        <childnode refid="20793" relation="include">
        </childnode>
        <childnode refid="20781" relation="include">
        </childnode>
      </node>
      <node id="20785">
        <label>cstdmf/debug_message_source.hpp</label>
      </node>
      <node id="20757">
        <label>sys/types.h</label>
      </node>
      <node id="20772">
        <label>format_strings.hpp</label>
        <link refid="mldb_2format__strings_8hpp_source"/>
        <childnode refid="20761" relation="include">
        </childnode>
        <childnode refid="20773" relation="include">
        </childnode>
        <childnode refid="20774" relation="include">
        </childnode>
        <childnode refid="20781" relation="include">
        </childnode>
        <childnode refid="20767" relation="include">
        </childnode>
      </node>
      <node id="20760">
        <label>categories.hpp</label>
        <link refid="mldb_2categories_8hpp_source"/>
        <childnode refid="20761" relation="include">
        </childnode>
        <childnode refid="20766" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20781">
        <label>log_entry.hpp</label>
        <link refid="log__entry_8hpp_source"/>
        <childnode refid="20782" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20785" relation="include">
        </childnode>
        <childnode refid="20776" relation="include">
        </childnode>
      </node>
      <node id="20756">
        <label>Python.h</label>
      </node>
      <node id="20803">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="20755">
        <label>tools/message_logger/mldb/log_reader.cpp</label>
        <link refid="log_reader.cpp"/>
        <childnode refid="20756" relation="include">
        </childnode>
        <childnode refid="20757" relation="include">
        </childnode>
        <childnode refid="20758" relation="include">
        </childnode>
        <childnode refid="20811" relation="include">
        </childnode>
      </node>
      <node id="20774">
        <label>log_string_interpolator.hpp</label>
        <link refid="log__string__interpolator_8hpp_source"/>
        <childnode refid="20775" relation="include">
        </childnode>
        <childnode refid="20777" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20778" relation="include">
        </childnode>
        <childnode refid="20765" relation="include">
        </childnode>
        <childnode refid="20779" relation="include">
        </childnode>
        <childnode refid="20780" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
      </node>
      <node id="20788">
        <label>../text_file_handler.hpp</label>
        <link refid="text__file__handler_8hpp_source"/>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20789" relation="include">
        </childnode>
      </node>
      <node id="20799">
        <label>user_segment.hpp</label>
        <link refid="user__segment_8hpp_source"/>
        <childnode refid="20763" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
        <childnode refid="20795" relation="include">
        </childnode>
        <childnode refid="20782" relation="include">
        </childnode>
        <childnode refid="20800" relation="include">
        </childnode>
        <childnode refid="20765" relation="include">
        </childnode>
        <childnode refid="20789" relation="include">
        </childnode>
        <childnode refid="20801" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20761">
        <label>../binary_file_handler.hpp</label>
        <link refid="binary__file__handler_8hpp_source"/>
        <childnode refid="20762" relation="include">
        </childnode>
        <childnode refid="20765" relation="include">
        </childnode>
      </node>
      <node id="20783">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="20780" relation="include">
        </childnode>
        <childnode refid="20763" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
      </node>
      <node id="20784">
        <label>time.h</label>
      </node>
      <node id="20769">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="20791">
        <label>../log_component_names.hpp</label>
        <link refid="log__component__names_8hpp_source"/>
        <childnode refid="20768" relation="include">
        </childnode>
      </node>
      <node id="20766">
        <label>../categories.hpp</label>
        <link refid="categories_8hpp_source"/>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
      </node>
      <node id="20768">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="20769" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
      </node>
      <node id="20795">
        <label>user_log.hpp</label>
        <link refid="user__log_8hpp_source"/>
        <childnode refid="20796" relation="include">
        </childnode>
        <childnode refid="20797" relation="include">
        </childnode>
        <childnode refid="20799" relation="include">
        </childnode>
        <childnode refid="20802" relation="include">
        </childnode>
        <childnode refid="20792" relation="include">
        </childnode>
        <childnode refid="20801" relation="include">
        </childnode>
      </node>
      <node id="20786">
        <label>hostnames.hpp</label>
        <link refid="mldb_2hostnames_8hpp_source"/>
        <childnode refid="20787" relation="include">
        </childnode>
        <childnode refid="20788" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20780">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="20763">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="20773">
        <label>../format_strings.hpp</label>
        <link refid="format__strings_8hpp_source"/>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20774" relation="include">
        </childnode>
        <childnode refid="20781" relation="include">
        </childnode>
      </node>
      <node id="20775">
        <label>string_offset.hpp</label>
        <link refid="string__offset_8hpp_source"/>
        <childnode refid="20763" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
        <childnode refid="20776" relation="include">
        </childnode>
      </node>
      <node id="20762">
        <label>file_handler.hpp</label>
        <link refid="file__handler_8hpp_source"/>
        <childnode refid="20763" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20758">
        <label>log_reader.hpp</label>
        <link refid="log__reader_8hpp_source"/>
        <childnode refid="20759" relation="include">
        </childnode>
        <childnode refid="20787" relation="include">
        </childnode>
        <childnode refid="20793" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20767" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20796">
        <label>logging_component.hpp</label>
        <link refid="logging__component_8hpp_source"/>
        <childnode refid="20797" relation="include">
        </childnode>
        <childnode refid="20798" relation="include">
        </childnode>
        <childnode refid="20780" relation="include">
        </childnode>
      </node>
      <node id="20810">
        <label>user_segment_reader.hpp</label>
        <link refid="user__segment__reader_8hpp_source"/>
        <childnode refid="20799" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20770" relation="include">
        </childnode>
      </node>
      <node id="20759">
        <label>log_common.hpp</label>
        <link refid="log__common_8hpp_source"/>
        <childnode refid="20760" relation="include">
        </childnode>
        <childnode refid="20772" relation="include">
        </childnode>
        <childnode refid="20786" relation="include">
        </childnode>
        <childnode refid="20790" relation="include">
        </childnode>
        <childnode refid="20792" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20800">
        <label>mldb/metadata.hpp</label>
        <link refid="mldb_2metadata_8hpp_source"/>
        <childnode refid="20761" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20771" relation="include">
        </childnode>
      </node>
      <node id="20770">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="20808">
        <label>regex.h</label>
      </node>
      <node id="20765">
        <label>network/file_stream.hpp</label>
      </node>
      <node id="20797">
        <label>user_components.hpp</label>
        <link refid="user__components_8hpp_source"/>
        <childnode refid="20761" relation="include">
        </childnode>
        <childnode refid="20768" relation="include">
        </childnode>
        <childnode refid="20790" relation="include">
        </childnode>
        <childnode refid="20769" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
        <childnode refid="20767" relation="include">
        </childnode>
      </node>
      <node id="20798">
        <label>log_entry_address.hpp</label>
        <link refid="log__entry__address_8hpp_source"/>
        <childnode refid="20771" relation="include">
        </childnode>
        <childnode refid="20764" relation="include">
        </childnode>
      </node>
      <node id="20801">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_max_hostname_visitor" prot="public">BW_BEGIN_NAMESPACE::MaxHostnameVisitor</innerclass>
    <innernamespace refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e">BW_BEGIN_NAMESPACE</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Python.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_reader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../mlutil.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12" refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_max_hostname_visitor" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_max_hostname_visitor" kindref="compound">MaxHostnameVisitor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_user_component_visitor" kindref="compound">UserComponentVisitor</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_max_hostname_visitor" kindref="compound">MaxHostnameVisitor</ref>(<sp/><ref refid="class_log_common_m_l_d_b" kindref="compound">LogCommonMLDB</ref><sp/>*pBWLog<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBWLog_(<sp/>pBWLog<sp/>),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxHostnameLen_<sp/>(<sp/>8<sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onComponent(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_logging_component" kindref="compound">LoggingComponent</ref><sp/>&amp;component<sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxHostnameLen_<sp/>=<sp/>std::max(maxHostnameLen_,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBWLog_-&gt;getHostByAddr(<sp/>component.getAddress().ip<sp/>).length()<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxHostnameLen()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="27"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxHostnameLen_;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_log_common_m_l_d_b" kindref="compound">LogCommonMLDB</ref><sp/>*pBWLog_;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxHostnameLen_;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>anonymous<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>LogReaderMLDB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="class_log_reader_m_l_d_b_1a09118c2f33c8b1ff5c6febd6750b0054" kindref="member">LogReaderMLDB::~LogReaderMLDB</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>userLogs_.clear();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_reader_m_l_d_b_1a001cad7a3d3886e7707e2791bbd6abb9" kindref="member">LogReaderMLDB::onUserLogInit</ref>(<sp/>uint16<sp/>uid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;username<sp/>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>read<sp/>mode<sp/>we<sp/>just<sp/>make<sp/>a<sp/>record<sp/>of<sp/>the<sp/>uid<sp/>-&gt;<sp/>username<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>usernames_[<sp/>uid<sp/>]<sp/>=<sp/>username;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_reader_m_l_d_b_1a0e581f6faa46cc365227b1337dc699d1" kindref="member">LogReaderMLDB::init</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*root<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mode<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogReaderMLDB::init:<sp/>No<sp/>root<sp/>log<sp/>path<sp/>specified.\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;initRootLogPath(<sp/>root<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>root<sp/>directory<sp/>has<sp/>the<sp/>access<sp/>we<sp/>want</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MLUtil::isPathAccessible(<sp/>rootLogPath_.c_str()<sp/>))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogReaderMLDB::init:<sp/>Root<sp/>logdir<sp/>(%s)<sp/>not<sp/>accessible<sp/>in<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;read<sp/>mode.\n&quot;</highlight><highlight class="normal">,<sp/>rootLogPath_.c_str()<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>the<sp/>parent<sp/>class<sp/>common<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initCommonFiles(<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initUserLogs(<sp/>mode<sp/>))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_log_reader_m_l_d_b_1a6f02b5df17322147f68bdf2e2c460fe2" kindref="member">LogReaderMLDB::getLogDirectory</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rootLogPath_.c_str();</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_reader_m_l_d_b_1a0c5ea19b1db3ff5ffa7caf58afc8c3de" kindref="member">LogReaderMLDB::getCategoryNames</ref>(<sp/><ref refid="class_categories_visitor" kindref="compound">CategoriesVisitor</ref><sp/>&amp;<sp/>visitor<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="121"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>categories_.visitAllWith(<sp/>visitor<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_reader_m_l_d_b_1a81c85773b9c46a7cc5ba5bd94f09b8dc" kindref="member">LogReaderMLDB::getComponentNames</ref>(<sp/><ref refid="class_log_components_visitor" kindref="compound">LogComponentsVisitor</ref><sp/>&amp;visitor<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>componentNames_.visitAllWith(<sp/>visitor<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_reader_m_l_d_b_1ab23eda186af3ca86aa81a80995ecf512" kindref="member">LogReaderMLDB::getHostnames</ref>(<sp/><ref refid="class_hostname_visitor" kindref="compound">HostnameVisitor</ref><sp/>&amp;visitor<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="145"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hostnames_.visitAllWith(<sp/>visitor<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">FormatStringList<sp/><ref refid="class_log_reader_m_l_d_b_1a9791675fefcb70b1414e5b18ec59c07e" kindref="member">LogReaderMLDB::getFormatStrings</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="156"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatStrings_.getFormatStrings();</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UsernamesMap<sp/>&amp;<sp/><ref refid="class_log_reader_m_l_d_b_1abc739b4e3717d2537357db9f15cab090" kindref="member">LogReaderMLDB::getUsernames</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>usernames_;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_reader_m_l_d_b_1a282b88152c307b9f6bfb2917bad196f3" kindref="member">LogReaderMLDB::getCategoryIDByName</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;<sp/>categoryName,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageLogger::CategoryID<sp/>&amp;<sp/>categoryID<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>categories_.resolveNameToID(<sp/>categoryName,<sp/>categoryID<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">UserLogReaderPtr</ref><sp/><ref refid="class_log_reader_m_l_d_b_1ac7d5bd6fb14c2a0c394537717d3d247c" kindref="member">LogReaderMLDB::getUserLog</ref>(<sp/>uint16<sp/>uid<sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>UserLogs::iterator<sp/>it<sp/>=<sp/>userLogs_.find(<sp/>uid<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>userLogs_.end())</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>UsernamesMap::iterator<sp/>usernameIter<sp/>=<sp/>usernames_.find(<sp/>uid<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usernameIter<sp/>==<sp/>usernames_.end())</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NB:<sp/>This<sp/>has<sp/>been<sp/>made<sp/>an<sp/>error<sp/>message<sp/>to<sp/>assist<sp/>in<sp/>track<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>potential<sp/>issues.<sp/>Can<sp/>be<sp/>disabled<sp/>if<sp/>it<sp/>is<sp/>seen<sp/>in<sp/>syslog<sp/>a<sp/>lot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogReaderMLDB::getUserLog:<sp/>Unable<sp/>to<sp/>find<sp/>a<sp/>UserLog<sp/>for<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;UID<sp/>%hu.\n&quot;</highlight><highlight class="normal">,<sp/>uid<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;ve<sp/>found<sp/>the<sp/>UID<sp/>in<sp/>our<sp/>list<sp/>of<sp/>known<sp/>user<sp/>logs,<sp/>load<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UserLog<sp/>for<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UserLogReaderPtr</ref><sp/>pUserLog(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_user_log_reader" kindref="compound">UserLogReader</ref>(<sp/>uid,<sp/>usernameIter-&gt;second<sp/>),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UserLogReaderPtr::NEW_REFERENCE<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pUserLog-&gt;init(<sp/>rootLogPath_<sp/>)<sp/>||<sp/>!pUserLog-&gt;isGood())</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ERROR_MSG(<sp/></highlight><highlight class="stringliteral">&quot;LogReaderMLDB::getUserLog:<sp/>Failed<sp/>to<sp/>create<sp/>a<sp/>UserLog<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>%s.\n&quot;</highlight><highlight class="normal">,<sp/>usernameIter-&gt;second.c_str()<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>userLogs_[<sp/>uid<sp/>]<sp/>=<sp/>pUserLog;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e_1_1_max_hostname_visitor" kindref="compound">MaxHostnameVisitor</ref><sp/>maxHostVisitor(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>pUserLog-&gt;getUserComponents(<sp/>maxHostVisitor<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>pUserLog-&gt;maxHostnameLen(<sp/>maxHostVisitor.maxHostnameLen()<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pUserLog;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">uint32<sp/><ref refid="class_log_reader_m_l_d_b_1a5856bbc80b368f76d72437600c1f2dc7" kindref="member">LogReaderMLDB::getAddressFromHost</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hostname<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="244"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hostnames_.getHostByName(<sp/>hostname<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_string_interpolator" kindref="compound">LogStringInterpolator</ref><sp/>*<ref refid="class_log_reader_m_l_d_b_1a263e495c08bba247e9990ddc0edb95eb" kindref="member">LogReaderMLDB::getHandlerForLogEntry</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_log_entry" kindref="compound">LogEntry</ref><sp/>&amp;entry<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>formatStrings_.getHandlerForLogEntry(<sp/>entry<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_log_reader_m_l_d_b_1afdcd42eaea60b656db7c9ab661e3eeb9" kindref="member">LogReaderMLDB::refreshFileMaps</ref>()</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatStrings_.isDirty()<sp/>&amp;&amp;<sp/>!formatStrings_.refresh())</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hostnames_.reopenIfChanged())</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hostnames_.isDirty()<sp/>&amp;&amp;<sp/>!hostnames_.refresh())</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(componentNames_.isDirty()<sp/>&amp;&amp;<sp/>!componentNames_.refresh())</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(categories_.isDirty()<sp/>&amp;&amp;<sp/>!categories_.refresh())</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;initUserLogs(<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal"><sp/>))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>UserLogs::iterator<sp/>iter<sp/>=<sp/>userLogs_.begin();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>userLogs_.end())</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_smart_pointer" kindref="compound">UserLogReaderPtr</ref><sp/>pUserLog<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pUserLog-&gt;reloadFiles();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>log_reader.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/mldb/log_reader.cpp"/>
  </compounddef>
</doxygen>
