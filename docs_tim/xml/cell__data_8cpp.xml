<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cell__data_8cpp" kind="file" language="C++">
    <compoundname>cell_data.cpp</compoundname>
    <includes refid="cell__data_8hpp" local="yes">cell_data.hpp</includes>
    <includes refid="cell__data_8ipp" local="yes">cell_data.ipp</includes>
    <includes refid="gr_2cellapp_8hpp" local="yes">cellapp.hpp</includes>
    <includes refid="cellappmgr_8hpp" local="yes">cellappmgr.hpp</includes>
    <includes refid="cellappmgr__config_8hpp" local="yes">cellappmgr_config.hpp</includes>
    <includes refid="internal__node_8hpp" local="yes">internal_node.hpp</includes>
    <includes refid="gr_2space_8hpp" local="yes">space.hpp</includes>
    <includes refid="cellapp__interface_8hpp" local="yes">cellapp/cellapp_interface.hpp</includes>
    <includes local="yes">cstdmf/watcher.hpp</includes>
    <includes local="yes">network/bundle.hpp</includes>
    <includes local="no">limits</includes>
    <incdepgraph>
      <node id="13325">
        <label>cellapp.hpp</label>
        <link refid="gr_2cellapp_8hpp_source"/>
        <childnode refid="13326" relation="include">
        </childnode>
        <childnode refid="13327" relation="include">
        </childnode>
        <childnode refid="13333" relation="include">
        </childnode>
      </node>
      <node id="13314">
        <label>cellappmgr/cell_data.cpp</label>
        <link refid="cell_data.cpp"/>
        <childnode refid="13315" relation="include">
        </childnode>
        <childnode refid="13325" relation="include">
        </childnode>
        <childnode refid="13334" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
        <childnode refid="13351" relation="include">
        </childnode>
        <childnode refid="13342" relation="include">
        </childnode>
        <childnode refid="13352" relation="include">
        </childnode>
        <childnode refid="13322" relation="include">
        </childnode>
        <childnode refid="13355" relation="include">
        </childnode>
        <childnode refid="13356" relation="include">
        </childnode>
      </node>
      <node id="13356">
        <label>limits</label>
      </node>
      <node id="13347">
        <label>cstdmf/singleton.hpp</label>
      </node>
      <node id="13326">
        <label>cells.hpp</label>
        <link refid="gr_2cells_8hpp_source"/>
        <childnode refid="13322" relation="include">
        </childnode>
        <childnode refid="13320" relation="include">
        </childnode>
        <childnode refid="13318" relation="include">
        </childnode>
      </node>
      <node id="13323">
        <label>float.h</label>
      </node>
      <node id="13335">
        <label>cellapps.hpp</label>
        <link refid="cellapps_8hpp_source"/>
        <childnode refid="13322" relation="include">
        </childnode>
        <childnode refid="13320" relation="include">
        </childnode>
        <childnode refid="13331" relation="include">
        </childnode>
        <childnode refid="13336" relation="include">
        </childnode>
        <childnode refid="13337" relation="include">
        </childnode>
        <childnode refid="13342" relation="include">
        </childnode>
        <childnode refid="13346" relation="include">
        </childnode>
        <childnode refid="13343" relation="include">
        </childnode>
      </node>
      <node id="13348">
        <label>server/manager_app.hpp</label>
      </node>
      <node id="13353">
        <label>entitydef/volatile_info.hpp</label>
      </node>
      <node id="13334">
        <label>cellappmgr.hpp</label>
        <link refid="cellappmgr_8hpp_source"/>
        <childnode refid="13327" relation="include">
        </childnode>
        <childnode refid="13315" relation="include">
        </childnode>
        <childnode refid="13335" relation="include">
        </childnode>
        <childnode refid="13318" relation="include">
        </childnode>
        <childnode refid="13343" relation="include">
        </childnode>
        <childnode refid="13347" relation="include">
        </childnode>
        <childnode refid="13328" relation="include">
        </childnode>
        <childnode refid="13333" relation="include">
        </childnode>
        <childnode refid="13331" relation="include">
        </childnode>
        <childnode refid="13348" relation="include">
        </childnode>
        <childnode refid="13349" relation="include">
        </childnode>
        <childnode refid="13350" relation="include">
        </childnode>
      </node>
      <node id="13355">
        <label>network/bundle.hpp</label>
      </node>
      <node id="13352">
        <label>cellapp/cellapp_interface.hpp</label>
        <link refid="cellapp__interface_8hpp_source"/>
        <childnode refid="13353" relation="include">
        </childnode>
        <childnode refid="13329" relation="include">
        </childnode>
        <childnode refid="13354" relation="include">
        </childnode>
        <childnode refid="13331" relation="include">
        </childnode>
        <childnode refid="13330" relation="include">
        </childnode>
      </node>
      <node id="13327">
        <label>cellappmgr_interface.hpp</label>
        <link refid="cellappmgr__interface_8hpp_source"/>
        <childnode refid="13328" relation="include">
        </childnode>
        <childnode refid="13320" relation="include">
        </childnode>
        <childnode refid="13329" relation="include">
        </childnode>
        <childnode refid="13330" relation="include">
        </childnode>
        <childnode refid="13331" relation="include">
        </childnode>
        <childnode refid="13332" relation="include">
        </childnode>
      </node>
      <node id="13349">
        <label>server/services_map.hpp</label>
      </node>
      <node id="13331">
        <label>server/common.hpp</label>
      </node>
      <node id="13350">
        <label>cstdmf/md5.hpp</label>
      </node>
      <node id="13324">
        <label>cstdmf/smartpointer.hpp</label>
      </node>
      <node id="13321">
        <label>cstdmf/polymorphic_watcher.hpp</label>
      </node>
      <node id="13339">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="13317">
        <label>entity_bound_levels.hpp</label>
        <link refid="entity__bound__levels_8hpp_source"/>
        <childnode refid="13318" relation="include">
        </childnode>
        <childnode refid="13319" relation="include">
        </childnode>
        <childnode refid="13320" relation="include">
        </childnode>
      </node>
      <node id="13343">
        <label>cstdmf/bw_map.hpp</label>
      </node>
      <node id="13344">
        <label>cstdmf/bw_set.hpp</label>
      </node>
      <node id="13322">
        <label>cstdmf/watcher.hpp</label>
      </node>
      <node id="13346">
        <label>cstdmf/bw_list.hpp</label>
      </node>
      <node id="13316">
        <label>bsp_node.hpp</label>
        <link refid="bsp__node_8hpp_source"/>
        <childnode refid="13317" relation="include">
        </childnode>
        <childnode refid="13319" relation="include">
        </childnode>
        <childnode refid="13321" relation="include">
        </childnode>
        <childnode refid="13322" relation="include">
        </childnode>
        <childnode refid="13323" relation="include">
        </childnode>
      </node>
      <node id="13332">
        <label>server/reviver_subject.hpp</label>
      </node>
      <node id="13337">
        <label>cellapp_comparer.hpp</label>
        <link refid="cellapp__comparer_8hpp_source"/>
        <childnode refid="13338" relation="include">
        </childnode>
        <childnode refid="13339" relation="include">
        </childnode>
        <childnode refid="13318" relation="include">
        </childnode>
        <childnode refid="13340" relation="include">
        </childnode>
      </node>
      <node id="13336">
        <label>math/ema.hpp</label>
      </node>
      <node id="13340">
        <label>cellappmgr_config.hpp</label>
        <link refid="cellappmgr__config_8hpp_source"/>
        <childnode refid="13341" relation="include">
        </childnode>
      </node>
      <node id="13319">
        <label>math/math_extra.hpp</label>
      </node>
      <node id="13320">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="13330">
        <label>server/anonymous_channel_client.hpp</label>
      </node>
      <node id="13315">
        <label>cell_data.hpp</label>
        <link refid="cell__data_8hpp_source"/>
        <childnode refid="13316" relation="include">
        </childnode>
        <childnode refid="13324" relation="include">
        </childnode>
        <childnode refid="13320" relation="include">
        </childnode>
      </node>
      <node id="13351">
        <label>internal_node.hpp</label>
        <link refid="internal__node_8hpp_source"/>
        <childnode refid="13316" relation="include">
        </childnode>
      </node>
      <node id="13354">
        <label>network/msgtypes.hpp</label>
      </node>
      <node id="13338">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="13318">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="13329">
        <label>network/common_interface_macros.hpp</label>
      </node>
      <node id="13333">
        <label>network/channel_owner.hpp</label>
      </node>
      <node id="13345">
        <label>memory</label>
      </node>
      <node id="13341">
        <label>server/manager_app_config.hpp</label>
      </node>
      <node id="13328">
        <label>cstdmf/unique_id.hpp</label>
      </node>
      <node id="13342">
        <label>space.hpp</label>
        <link refid="gr_2space_8hpp_source"/>
        <childnode refid="13326" relation="include">
        </childnode>
        <childnode refid="13319" relation="include">
        </childnode>
        <childnode refid="13343" relation="include">
        </childnode>
        <childnode refid="13344" relation="include">
        </childnode>
        <childnode refid="13345" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;cell_data.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CODE_INLINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cell_data.ipp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellappmgr_config.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;internal_node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;space.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellapp/cellapp_interface.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cstdmf/watcher.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network/bundle.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">DECLARE_DEBUG_COMPONENT(<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>class<sp/>CellData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_cell_data" kindref="compound">CellData</ref>::<ref refid="class_cell_data" kindref="compound">CellData</ref>(<sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>&amp;<sp/>cellApp,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>&amp;<sp/>space<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_c_m" kindref="compound">CM</ref>::BSPNode(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_b_w" kindref="compound">BW</ref>::Rect(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&gt;::max()<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellApp_(<sp/>&amp;cellApp<sp/>),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_(<sp/>&amp;space<sp/>),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>hasBeenCreated_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>isOverloaded_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>hasHadLoadedArea_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>recoveringAddr_(<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>space.addCell(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApp.addCell(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="class_cell_data_1af36cd845d9c6a6fdcc5d01de2e8d5510" kindref="member">CellData::CellData</ref>(<sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>&amp;<sp/>space,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_c_m" kindref="compound">CM</ref>::BSPNode(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_b_w" kindref="compound">BW</ref>::Rect(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/>float<sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/>float<sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/>float<sp/>&gt;::max(),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::numeric_limits&lt;<sp/>float<sp/>&gt;::max()<sp/>)<sp/>),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellApp_(<sp/>NULL<sp/>),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_(<sp/>&amp;space<sp/>),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>hasBeenCreated_(<sp/>true<sp/>),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>isOverloaded_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>hasHadLoadedArea_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>recoveringAddr_(<sp/>0,<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>CellData::readRecoveryData(<sp/>recoveringAddr_,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>space.<ref refid="class_space_1ae966d51bc44d667a2ecc9a9af860307a" kindref="member">addCell</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>keep<sp/>the<sp/>Cells<sp/>that<sp/>are<sp/>waiting<sp/>to<sp/>be<sp/>recovered<sp/>in<sp/>the<sp/>space&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cellsToDelete_<sp/>collection.<sp/>These<sp/>are<sp/>removed<sp/>as<sp/>we<sp/>are<sp/>told<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recover<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>space.<ref refid="class_space_1aeea126431593d3a90b171716c35ca4a0" kindref="member">addCellToDelete</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="class_cell_data_1aaf439852120aadb5a267799e2a7bf2a3" kindref="member">CellData::~CellData</ref>()</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace_)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace_-&gt;eraseCell(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellApp_)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_-&gt;eraseCell(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numRetiring_)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_-&gt;decCellsRetiring();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1a3ec875f0d6c179dba499ea944a660359" kindref="member">CellData::updateBounds</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;updateEntityBounds(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>chunkBounds_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;space().<ref refid="class_space_1a46314908c0ce36791edc16afb2e2b19e" kindref="member">updateBounds</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>numEntities_;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numEntities_<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;space().hasHadEntities(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellData::updateEntityBounds(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>entityBoundLevels_.updateFromStream(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1a8d4a2824073b92921ed4fec9f76c09af" kindref="member">CellData::shouldOffload</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable<sp/>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>this-&gt;cellApp().bundle();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::shouldOffload<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>this-&gt;space().id()<sp/>&lt;&lt;<sp/>enable;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cellApp().send();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1aea0277cd805b82424a13003b61cfd938" kindref="member">CellData::setCellApp</ref>(<sp/><ref refid="class_cell_app" kindref="compound">CellApp</ref><sp/>&amp;<sp/>cellApp<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>pCellApp_<sp/>==<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>cellApp.addr()<sp/>==<sp/>recoveringAddr_<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>pCellApp_<sp/>=<sp/>&amp;cellApp;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>cellApp.<ref refid="class_cell_app_1afb3c3cd6e8998e9c5ff945c1f8993015" kindref="member">addCell</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mercury::Address<sp/>&amp;<sp/><ref refid="class_cell_data_1ac0259e687a3b2494ebeabf760c9b90be" kindref="member">CellData::addr</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;addr()<sp/>:<sp/>recoveringAddr_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellData::sendRetireCell(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRetiring<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellData::sendRetireCell:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Retiring<sp/>cell<sp/>%u<sp/>from<sp/>space<sp/>%u.<sp/>isRetiring<sp/>=<sp/>%d.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;id()<sp/>:<sp/>0,<sp/>pSpace_-&gt;id(),<sp/>isRetiring<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Bundle<sp/>&amp;<sp/>bundle<sp/>=<sp/>this-&gt;cellApp().bundle();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle.startMessage(<sp/>CellAppInterface::retireCell<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>pSpace_-&gt;id();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>bundle<sp/>&lt;&lt;<sp/>isRetiring;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>send<sp/>immediately<sp/>so<sp/>that<sp/>messages<sp/>are<sp/>aggregated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cellApp().channel().delayedSend();</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1a624a5c84731dd8a3163945d7464194fd" kindref="member">CellData::removeSelf</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellData::removeSelf:<sp/>Removed<sp/>%u<sp/>from<sp/>space<sp/>%u.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;id()<sp/>:<sp/>0,<sp/>pSpace_-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_-&gt;eraseCell(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>pSpace_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1afa11e094b633d16da6e11cb3c0f11ecf" kindref="member">CellData::startRetiring</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!numRetiring_)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellData::startRetiring:<sp/>cell<sp/>%u<sp/>from<sp/>space<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;id()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace_-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellApp_)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_-&gt;incCellsRetiring();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sendRetireCell(<sp/></highlight><highlight class="comment">/*isRetiring:*/</highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numRetiring_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1a4a613625442e4216e254271b713c168c" kindref="member">CellData::cancelRetiring</ref>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numRetiring_)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INFO_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellData::cancelRetiring:<sp/>cell<sp/>%u<sp/>from<sp/>space<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;id()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace_-&gt;id()<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellApp_)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_-&gt;decCellsRetiring();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sendRetireCell(<sp/></highlight><highlight class="comment">/*isRetiring:*/</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numRetiring_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><ref refid="class_c_m_1_1_b_s_p_node" kindref="compound">CM::BSPNode</ref><sp/>*<sp/><ref refid="class_cell_data_1ac80ce79a69f281279f3f8720a81622aa" kindref="member">CellData::readTree</ref>(<sp/><ref refid="class_space" kindref="compound">Space</ref><sp/>*<sp/>pSpace,<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.remainingLength()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLeaf;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>isLeaf;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pSpace)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLeaf)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_cell_data" kindref="compound">CellData</ref>(<sp/>*pSpace,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_m_1_1_internal_node" kindref="compound">CM::InternalNode</ref>(<sp/>*pSpace,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLeaf)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cell_data_1adcd07cd02846400779594390f95e1dbd" kindref="member">CellData::skipDataInStream</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m_1_1_internal_node_1a710b91101e74fa661d7c002667c2168f" kindref="member">CM::InternalNode::skipDataInStream</ref>(<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1adcd07cd02846400779594390f95e1dbd" kindref="member">CellData::skipDataInStream</ref>(<sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>Mercury::Address<sp/>addr;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>CellData::readRecoveryData(<sp/>addr,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellData::readRecoveryData(<sp/>Mercury::Address&amp;<sp/>addr,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>BinaryIStream<sp/>&amp;<sp/>data<sp/>)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>&gt;&gt;<sp/>addr;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/><ref refid="class_cell_data_1ad6f130ead005a9d98b68b1bda32f5cfb" kindref="member">CellData::pWatcher</ref>()</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/>pWatcher<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pWatcher<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher<sp/>=<sp/>BSPNode::createWatcher();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;range&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(<sp/>&amp;CellData::range_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pWatcher-&gt;addChild(<sp/>&quot;entityBounds&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>makeWatcher(<sp/>&amp;CellData::entityBounds_<sp/>)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;chunkBounds&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeWatcher(<sp/>&amp;CellData::chunkBounds_<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;isRetiring&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ACCESSORS_EX(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><ref refid="class_cell_data" kindref="compound">CellData</ref>,<sp/>isRetiring,<sp/>setIsRetiring<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;app&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BaseDereferenceWatcher(<sp/><ref refid="class_cell_app_1ae0fee2290fa904a12e8664d61efc2376" kindref="member">CellApp::pWatcher</ref>()<sp/>),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CellData::pCellApp_<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;space&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BaseDereferenceWatcher(<sp/><ref refid="class_space_1a7b8de0d42c94f14862532957cfcab607" kindref="member">Space::pWatcher</ref>()<sp/>),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;CellData::pSpace_<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pWatcher-&gt;addChild(<sp/></highlight><highlight class="stringliteral">&quot;isLeaf&quot;</highlight><highlight class="normal">,<sp/>makeWatcher(</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MF_ACCESSORS_EX(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><ref refid="class_cell_data" kindref="compound">CellData</ref>,<sp/>isLeaf,<sp/>setIsLeaf<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pWatcher;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section:<sp/>BSPNode<sp/>overrides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><ref refid="class_c_m_1_1_b_s_p_node" kindref="compound">CM::BSPNode</ref><sp/>*<sp/><ref refid="class_cell_data_1a2260a82bdf60d643b0487c77303eddee" kindref="member">CellData::addCell</ref>(<sp/><ref refid="class_cell_data" kindref="compound">CellData</ref><sp/>*<sp/>pCell,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHorizontal<sp/>)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>partitionPt<sp/>=<sp/>range_.range1D(<sp/>isHorizontal<sp/>).max_;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>newRange<sp/>=<sp/>range_;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>newRange.range1D(<sp/>isHorizontal<sp/>).min_<sp/>=<sp/>partitionPt;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>newRange.range1D(<sp/>isHorizontal<sp/>).max_<sp/>=<sp/>partitionPt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>pCell-&gt;setRange(<sp/>newRange<sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>At<sp/>the<sp/>moment,<sp/>the<sp/>new<sp/>cell<sp/>is<sp/>always<sp/>added<sp/>to<sp/>the<sp/>right<sp/>or<sp/>top.<sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>be<sp/>better<sp/>to<sp/>choose<sp/>the<sp/>side<sp/>based<sp/>on<sp/>which<sp/>side<sp/>is<sp/>unbounded.<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>test<sp/>might<sp/>be<sp/>to<sp/>check<sp/>if<sp/>fabs(<sp/>min_<sp/>)<sp/>&lt;<sp/>fabs(<sp/>max_<sp/>)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range_.range1D(<sp/>isHorizontal<sp/>).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_m_1_1_internal_node" kindref="compound">CM::InternalNode</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>pCell,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isHorizontal,<sp/>range_,<sp/>partitionPt<sp/>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="class_c_m_1_1_b_s_p_node" kindref="compound">CM::BSPNode</ref><sp/>*<sp/><ref refid="class_cell_data_1a77a2d1f4ec0ca22ef3636f438f225d5a" kindref="member">CellData::removeCell</ref>(<sp/><ref refid="class_cell_data" kindref="compound">CellData</ref><sp/>*<sp/>pCell<sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellData::visit(<sp/><ref refid="class_c_m_1_1_cell_visitor" kindref="compound">CM::CellVisitor</ref><sp/>&amp;<sp/>visitor<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="384"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>visitor.visitCell(<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::calculateAreaNotLoaded()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="394"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>NOTE:<sp/><sp/><sp/>It&apos;s<sp/>perfectly<sp/>normal<sp/>for<sp/>a<sp/>cell<sp/>to<sp/>be<sp/>extended<sp/>into<sp/>a<sp/>not<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loaded<sp/>area<sp/>during<sp/>unloaded<sp/>chunk<sp/>balancing.<sp/>The<sp/>interesting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>to<sp/>debug<sp/>is<sp/>when<sp/>whis<sp/>cell&apos;s<sp/>unloaded<sp/>area<sp/>becomes<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-zero<sp/>but<sp/>the<sp/>entire<sp/>space<sp/>has<sp/>been<sp/>marked<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>completely<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldDebugIfNonZero<sp/>=</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasHadLoadedArea_<sp/>&amp;&amp;<sp/>isZero(<sp/>pSpace_-&gt;areaNotLoaded()<sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;calculateAreaNotLoaded(<sp/>range_,<sp/>shouldDebugIfNonZero<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1a746c1f82820fc430ee3531628b86ea7d" kindref="member">CellData::calculateNewAreaNotLoaded</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changeY,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changeMax,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>moveLeft<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="418"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>range(<sp/>range_<sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>range.range1D(<sp/>changeY<sp/>)[<sp/>changeMax<sp/>]<sp/>+=</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveLeft<sp/>?<sp/>-pSpace_-&gt;spaceGrid()<sp/>:<sp/>pSpace_-&gt;spaceGrid();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;calculateAreaNotLoaded(<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::calculateAreaNotLoaded(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shouldDebugIfNonZero<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="433"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((range.xRange().length()<sp/>&lt;=<sp/>0.f)<sp/>||</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(range.yRange().length()<sp/>&lt;=<sp/>0.f))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/>spaceBounds<sp/>=<sp/>pSpace_-&gt;spaceBounds();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>load<sp/>chunks<sp/>within<sp/>ghost<sp/>distance<sp/>of<sp/>our<sp/>boundaries<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>desiredRect(<sp/>range<sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FLOATING_POINT_TOLERANCE<sp/>=<sp/>1.f;<sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>floating<sp/>point<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>desiredRect.safeInflateBy(</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrConfig::ghostDistance()<sp/>-<sp/>FLOATING_POINT_TOLERANCE<sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>clippedDesiredRect;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>clippedDesiredRect.setToIntersection(<sp/>spaceBounds,<sp/>desiredRect<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>clippedChunkRect;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>clippedChunkRect.setToIntersection(<sp/>chunkBounds_,<sp/>clippedDesiredRect<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>innerArea<sp/>=<sp/>clippedChunkRect.area();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>outerArea<sp/>=<sp/>clippedDesiredRect.area();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>areaNotLoaded<sp/>=<sp/>outerArea<sp/>-<sp/>innerArea;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shouldDebugIfNonZero<sp/>&amp;&amp;<sp/>(areaNotLoaded<sp/>&gt;<sp/>0.f))</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>here<sp/>to<sp/>debug<sp/>the<sp/>case<sp/>where<sp/>this<sp/>cell<sp/>reverts<sp/>from<sp/>having</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>area<sp/>loaded<sp/>to<sp/>not<sp/>(which<sp/>should<sp/>not<sp/>really<sp/>happen).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WARNING_MSG(<sp/></highlight><highlight class="stringliteral">&quot;CellData::calculateAreaNotLoaded:<sp/>Cell<sp/>%d<sp/>in<sp/>Space<sp/>%d<sp/>reverted<sp/>to<sp/>not<sp/>having<sp/>chunks<sp/>loaded.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tareaNotLoaded<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tspace.hasLoadedRequiredChunks<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\trange:<sp/>(%f,<sp/>%f)<sp/>-&gt;<sp/>(%f,<sp/>%f)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tdesiredRect:<sp/>(%f,<sp/>%f)<sp/>-&gt;<sp/>(%f,<sp/>%f)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tspaceBounds:<sp/>(%f,<sp/>%f)<sp/>-&gt;<sp/>(%f,<sp/>%f)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tclippedDesiredRect:<sp/>(%f,<sp/>%f)<sp/>-&gt;<sp/>(%f,<sp/>%f)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tchunkBounds_:<sp/>(%f,<sp/>%f)<sp/>-&gt;<sp/>(%f,<sp/>%f)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tclippedChunkRect:<sp/>(%f,<sp/>%f)<sp/>-&gt;<sp/>(%f,<sp/>%f)\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\touterArea:<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\tinnerArea:<sp/>%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cellApp().</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace_-&gt;id(),</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>areaNotLoaded,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace_-&gt;hasLoadedRequiredChunks(),</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range.xMin(),<sp/>range.yMin(),<sp/>range.xMax(),<sp/>range.yMax(),</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desiredRect.xMin(),<sp/>desiredRect.yMin(),<sp/>desiredRect.xMax(),<sp/>desiredRect.yMax(),</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spaceBounds.xMin(),<sp/>spaceBounds.yMin(),<sp/>spaceBounds.xMax(),<sp/>spaceBounds.yMax(),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clippedDesiredRect.xMin(),<sp/>clippedDesiredRect.yMin(),<sp/>clippedDesiredRect.xMax(),<sp/>clippedDesiredRect.yMax(),</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkBounds_.xMin(),<sp/>chunkBounds_.yMin(),<sp/>chunkBounds_.xMax(),<sp/>chunkBounds_.yMax(),</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clippedChunkRect.xMin(),<sp/>clippedChunkRect.yMin(),<sp/>clippedChunkRect.xMax(),<sp/>clippedChunkRect.yMax(),</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outerArea,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>innerArea<sp/>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pSpace_-&gt;debugPrint();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>areaNotLoaded;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1a453a79cfb756ad022834315e5946a6cf" kindref="member">CellData::setIsRetiring</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;startRetiring();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cancelRetiring();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1aecf7ab44ef45ebd4b810aa90aedcb014" kindref="member">CellData::setIsLeaf</ref>(<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLeaf<sp/>)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isLeaf)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSpace_-&gt;addCellTo(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><ref refid="class_c_m_1_1_b_s_p_node" kindref="compound">CM::BSPNode</ref><sp/>*<sp/><ref refid="class_cell_data_1a15881f65a6cd5bee8a6c54a94603cc86" kindref="member">CellData::addCellTo</ref>(<sp/><ref refid="class_cell_data" kindref="compound">CellData</ref><sp/>*<sp/>pNewCell,<sp/><ref refid="class_cell_data" kindref="compound">CellData</ref><sp/>*<sp/>pCellToSplit,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHorizontal<sp/>)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellToSplit<sp/>!=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;addCell(<sp/>pNewCell,<sp/>isHorizontal<sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::updateLoad()</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>also<sp/>calculate<sp/>the<sp/>area<sp/>not<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>areaNotLoaded_<sp/>=<sp/>this-&gt;calculateAreaNotLoaded();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasHadLoadedArea_)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rect<sp/>&amp;<sp/>spaceBounds<sp/>=<sp/>this-&gt;space().spaceBounds();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasHadLoadedArea_<sp/>=</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(spaceBounds.area()<sp/>&gt;<sp/>0.f)<sp/>&amp;&amp;<sp/>spaceBounds.intersects(<sp/>range_<sp/>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;currLoad()<sp/>:<sp/>0.f;</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::avgLoad()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="563"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cellApp().currLoad();</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::avgSmoothedLoad()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="572"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cellApp().smoothedLoad();</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::totalSmoothedLoad()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="581"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cellApp().smoothedLoad();</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::minLoad()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="590"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>this<sp/>be<sp/>smoothed<sp/>or<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cellApp().smoothedLoad();</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::maxLoad()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="600"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>this<sp/>be<sp/>smoothed<sp/>or<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;cellApp().smoothedLoad();</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/><sp/>Returns<sp/>last<sp/>received<sp/>load<sp/>on<sp/>the<sp/>associated<sp/>CellApp</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CellData::lastReceivedLoad()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="610"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO<sp/>decide<sp/>whether<sp/>we<sp/>want<sp/>the<sp/>check<sp/>of<sp/>pCellApp_<sp/>against<sp/>NULL</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>be<sp/>in<sp/>a<sp/>form<sp/>of<sp/>IF_NOT_MF_ASSERT_DEV(<sp/>pCellApp_<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>this<sp/>be<sp/>smoothed<sp/>or<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;lastReceivedLoad()<sp/>:<sp/>0.f;</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellData::balance(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>loadSafetyBound,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isShrinking<sp/>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>shrink<sp/>if<sp/>not<sp/>yet<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>MF_ASSERT(<sp/>hasBeenCreated_<sp/>||<sp/>!isShrinking<sp/>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>range_<sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>isOverloaded_<sp/>=<sp/>(this-&gt;cellApp().smoothedLoad()<sp/>&gt;<sp/>loadSafetyBound);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasArea<sp/>=<sp/>(range.xMin()<sp/>&lt;<sp/>range.xMax())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(range.yMin()<sp/>&lt;<sp/>range.yMax());</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>a<sp/>cell<sp/>has<sp/>no<sp/>area,<sp/>it<sp/>should<sp/>be<sp/>removed<sp/>if<sp/>load<sp/>balancing<sp/>is<sp/>trying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>make<sp/>it<sp/>smaller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hasArea<sp/>&amp;&amp;<sp/>(isShrinking<sp/>||<sp/>numRetiring_)<sp/>&amp;&amp;<sp/>(this-&gt;numEntities()<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_space_1aeea126431593d3a90b171716c35ca4a0" kindref="member">Space::addCellToDelete</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellData::updateRanges(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/>range<sp/>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>range_<sp/>=<sp/>range;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/><sp/>Override<sp/>from<sp/>BSPNode.</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CellData::addToStream(<sp/>BinaryOStream<sp/>&amp;<sp/>stream,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isForViewer<sp/>)</highlight></codeline>
<codeline lineno="655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smoothedLoad<sp/>=</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pCellApp_<sp/>?<sp/>pCellApp_-&gt;smoothedLoad()<sp/>:<sp/>0.f;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>uint8(<sp/>CM::BSP_NODE_LEAF<sp/>)<sp/>&lt;&lt;<sp/>this-&gt;addr()<sp/>&lt;&lt;<sp/>smoothedLoad;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isForViewer)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preserve<sp/>backwards<sp/>compatibility<sp/>for<sp/>SpaceViewer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>uint8(<sp/>this-&gt;hasBeenCreated()<sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pCellApp_)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>this-&gt;cellApp().id();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>this-&gt;cellApp().viewerPort();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>CellAppID(<sp/>0<sp/>)<sp/>&lt;&lt;<sp/>uint16(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entityBoundLevels_.addToStream(<sp/>stream<sp/>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>chunkBounds_;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(int8)this-&gt;isRetiring();</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>isOverloaded_;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::Rect<sp/>&amp;<sp/><ref refid="class_cell_data_1afb7be61bcfd72518b8ccdd6e64f2f5f8" kindref="member">CellData::balanceChunkBounds</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="689"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FLOATING_POINT_TOLERANCE<sp/>=<sp/>1.f;<sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>floating<sp/>point<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::Rect<sp/>desiredRect(<sp/>range_<sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>desiredRect.safeInflateBy(</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CellAppMgrConfig::ghostDistance()<sp/>-<sp/>FLOATING_POINT_TOLERANCE<sp/>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chunkBounds_.contains(<sp/>desiredRect<sp/>)<sp/>?</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkBounds_<sp/>:<sp/>range_;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1a808eea852ea2c536cdd10496a56fc66c" kindref="member">CellData::debugPrint</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent<sp/>)</highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rect<sp/>&amp;<sp/>rect<sp/>=<sp/>this-&gt;balanceChunkBounds();</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>DEBUG_MSG(<sp/></highlight><highlight class="stringliteral">&quot;%*sCell:<sp/>%d.<sp/>(%f,%f)-&gt;(%f,%f).<sp/>(%f,%f)-&gt;(%f,%f).<sp/>(%f,%f)-&gt;(%f,%f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>indent<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cellApp().</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkBounds_.xMin(),<sp/>chunkBounds_.yMin(),</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkBounds_.xMax(),<sp/>chunkBounds_.yMax(),</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range_.xMin(),<sp/>range_.yMin(),</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range_.xMax(),<sp/>range_.yMax(),</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.xMin(),<sp/>rect.yMin(),</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect.xMax(),<sp/>rect.yMax()<sp/>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>method<sp/>overrides<sp/>WatcherProvider<sp/>to<sp/>support<sp/>polymorphic<sp/>watchers.</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><ref refid="class_smart_pointer" kindref="compound">WatcherPtr</ref><sp/>CellData::getWatcher()</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_cell_data_1ad6f130ead005a9d98b68b1bda32f5cfb" kindref="member">CellData::pWatcher</ref>();</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cell_data.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cellappmgr/cell_data.cpp"/>
  </compounddef>
</doxygen>
