<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="query__range__iterator_8hpp" kind="file" language="C++">
    <compoundname>query_range_iterator.hpp</compoundname>
    <includes refid="constants_8hpp" local="yes">constants.hpp</includes>
    <includes refid="log__entry__address_8hpp" local="yes">log_entry_address.hpp</includes>
    <includedby refid="query__range_8hpp" local="yes">tools/message_logger/query_range.hpp</includedby>
    <includedby refid="query__range__iterator_8cpp" local="yes">tools/message_logger/query_range_iterator.cpp</includedby>
    <incdepgraph>
      <node id="22364">
        <label>tools/message_logger/query_range_iterator.hpp</label>
        <link refid="query_range_iterator.hpp"/>
        <childnode refid="22365" relation="include">
        </childnode>
        <childnode refid="22373" relation="include">
        </childnode>
      </node>
      <node id="22372">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="22370">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="22365">
        <label>constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="22366" relation="include">
        </childnode>
        <childnode refid="22367" relation="include">
        </childnode>
        <childnode refid="22368" relation="include">
        </childnode>
      </node>
      <node id="22369">
        <label>network/basictypes.hpp</label>
      </node>
      <node id="22368">
        <label>types.hpp</label>
        <link refid="tools_2message__logger_2types_8hpp_source"/>
        <childnode refid="22369" relation="include">
        </childnode>
        <childnode refid="22370" relation="include">
        </childnode>
        <childnode refid="22371" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
      </node>
      <node id="22367">
        <label>cstdmf/bw_namespace.hpp</label>
      </node>
      <node id="22366">
        <label>network/logger_message_forwarder.hpp</label>
      </node>
      <node id="22371">
        <label>cstdmf/bw_vector.hpp</label>
      </node>
      <node id="22373">
        <label>log_entry_address.hpp</label>
        <link refid="log__entry__address_8hpp_source"/>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22370" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22379">
        <label>tools/message_logger/py_query_result.hpp</label>
        <link refid="py__query__result_8hpp_source"/>
        <childnode refid="22380" relation="include">
        </childnode>
      </node>
      <node id="22374">
        <label>tools/message_logger/query_range_iterator.hpp</label>
        <link refid="query_range_iterator.hpp"/>
        <childnode refid="22375" relation="include">
        </childnode>
      </node>
      <node id="22381">
        <label>tools/message_logger/query_params.hpp</label>
        <link refid="query__params_8hpp_source"/>
        <childnode refid="22375" relation="include">
        </childnode>
      </node>
      <node id="22376">
        <label>tools/message_logger/user_log_reader.hpp</label>
        <link refid="user__log__reader_8hpp_source"/>
        <childnode refid="22377" relation="include">
        </childnode>
        <childnode refid="22381" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
        <childnode refid="22375" relation="include">
        </childnode>
        <childnode refid="22380" relation="include">
        </childnode>
      </node>
      <node id="22380">
        <label>tools/message_logger/py_query.hpp</label>
        <link refid="py__query_8hpp_source"/>
      </node>
      <node id="22375">
        <label>tools/message_logger/query_range.hpp</label>
        <link refid="query__range_8hpp_source"/>
        <childnode refid="22376" relation="include">
        </childnode>
        <childnode refid="22380" relation="include">
        </childnode>
      </node>
      <node id="22377">
        <label>tools/message_logger/py_user_log.hpp</label>
        <link refid="py__user__log_8hpp_source"/>
        <childnode refid="22378" relation="include">
        </childnode>
      </node>
      <node id="22382">
        <label>tools/message_logger/mldb/log_reader.hpp</label>
        <link refid="log__reader_8hpp_source"/>
        <childnode refid="22381" relation="include">
        </childnode>
        <childnode refid="22378" relation="include">
        </childnode>
      </node>
      <node id="22378">
        <label>tools/message_logger/py_bwlog.hpp</label>
        <link refid="py__bwlog_8hpp_source"/>
        <childnode refid="22377" relation="include">
        </childnode>
        <childnode refid="22379" relation="include">
        </childnode>
        <childnode refid="22380" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_query_range_iterator" prot="public">QueryRangeIterator</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>QUERY_RANGE_ITERATOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QUERY_RANGE_ITERATOR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;log_entry_address.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_range" kindref="compound">QueryRange</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_query_range_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_query_range_iterator_1a69fcb4509259c9c0b50a526a13d14a37" kindref="member">QueryRangeIterator</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range" kindref="compound">QueryRange</ref><sp/>*queryRange,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum<sp/>=<sp/>-1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metaOffset<sp/>=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>error(<sp/><ref refid="class_query_range" kindref="compound">QueryRange</ref><sp/>&amp;queryRange<sp/>)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator_1a69fcb4509259c9c0b50a526a13d14a37" kindref="member">QueryRangeIterator</ref>(<sp/>&amp;queryRange<sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator_1a83f6a1111791b14a09291cf77d11cdc3" kindref="member">isGood</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_user_segment_reader" kindref="compound">UserSegmentReader</ref><sp/>*<sp/>getSegment()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getSegmentNumber()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getEntryNumber()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getArgsOffset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getMetaOffset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref><sp/>getAddress()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>BW::string<sp/><ref refid="class_query_range_iterator_1a14f49674da1bf3c362b2b9c610645e53" kindref="member">asString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(<sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator_1abb95ef2e69f8f17e38e07449460aad0f" kindref="member">operator-</ref>(<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref><sp/>&amp;other<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref>&amp;<sp/>operator++();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_query_range_iterator" kindref="compound">QueryRangeIterator</ref>&amp;<sp/>operator--();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>step(<sp/>SearchDirection<sp/>direction<sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parent<sp/>QueryRange<sp/>that<sp/>we<sp/>are<sp/>iterating<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_query_range" kindref="compound">QueryRange</ref><sp/>*pQueryRange_;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>into<sp/>the<sp/>UserLog<sp/>list<sp/>of<sp/>UserSegments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segmentNum_;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>is<sp/>there<sp/>any<sp/>good<sp/>reason<sp/>for<sp/>this<sp/>to<sp/>be<sp/>a<sp/>union?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entryNum_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argsOffset_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>metaOffset_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QUERY_RANGE_ITERATOR_HPP</highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/query_range_iterator.hpp"/>
  </compounddef>
</doxygen>
