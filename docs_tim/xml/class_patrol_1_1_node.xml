<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_patrol_1_1_node" kind="class" language="C++" prot="public">
    <compoundname>Patrol::Node</compoundname>
    <includes refid="patrol__graph_8hpp" local="no">patrol_graph.hpp</includes>
    <innerclass refid="class_patrol_1_1_node_1_1_properties" prot="public">Patrol::Node::Properties</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_patrol_1_1_node_1a0f3bbd2d72fc737829d4c7afd46668d9" prot="public" static="no">
        <type>BW::map&lt; BW::string, int &gt;</type>
        <definition>typedef BW::map&lt; BW::string, int &gt; Patrol::Node::NodeMap</definition>
        <argsstring></argsstring>
        <name>NodeMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="57" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_patrol_1_1_node_1a23f54159a823ddcfdc067a1101ce3dd7" prot="private" static="no">
        <type>BW::vector&lt; int &gt;</type>
        <definition>typedef BW::vector&lt; int &gt; Patrol::Node::Adjacencies</definition>
        <argsstring></argsstring>
        <name>Adjacencies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="79" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_patrol_1_1_node_1a1f0aa6e43d7ab0e33f003e23d099aa2a" prot="private" static="no" mutable="no">
        <type>Adjacencies</type>
        <definition>Adjacencies Patrol::Node::toNodes_</definition>
        <argsstring></argsstring>
        <name>toNodes_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="80" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_patrol_1_1_node_1aa95bc992a1f3d3b2368045eaae3755c3" prot="private" static="no" mutable="no">
        <type>Vector3</type>
        <definition>Vector3 Patrol::Node::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="81" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_patrol_1_1_node_1aa0d1b13240fb48d7c7cd2c218e1c7b7f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Patrol::Node::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="82" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_patrol_1_1_node_1afb391a05e55201ce53d4f6063b34053c" prot="private" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string Patrol::Node::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="83" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_patrol_1_1_node_1afddc4f3e65bfa7a7337b80fde3142ed8" prot="private" static="no" mutable="no">
        <type><ref refid="class_patrol_1_1_node_1_1_properties" kindref="compound">Properties</ref></type>
        <definition>Properties Patrol::Node::props_</definition>
        <argsstring></argsstring>
        <name>props_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="85" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_patrol_1_1_node_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Graph</definition>
        <argsstring></argsstring>
        <name>Graph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="87" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_patrol_1_1_node_1a1e43c74c14f41550cb8e1cbad2cd4efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Patrol::Node::Node</definition>
        <argsstring>()</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="55" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a2b6c791c7a13ecff79f313e4e797aeb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Patrol::Node::init1</definition>
        <argsstring>(int index, DataSection *pSection, const Properties &amp;defaultProps)</argsstring>
        <name>init1</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>DataSection *</type>
          <declname>pSection</declname>
        </param>
        <param>
          <type>const <ref refid="class_patrol_1_1_node_1_1_properties" kindref="compound">Properties</ref> &amp;</type>
          <declname>defaultProps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method initialises this node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="59" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="34" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a156ffa9287b14777712918e5d53557b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Patrol::Node::init2</definition>
        <argsstring>(const NodeMap &amp;map, DataSection *pSection)</argsstring>
        <name>init2</name>
        <param>
          <type>const NodeMap &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>DataSection *</type>
          <declname>pSection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="61" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="62" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1af45c2e7abfe2afbe0f6e5b917b2fde7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Patrol::Node::flatDistTo</definition>
        <argsstring>(const Vector3 &amp;pos) const </argsstring>
        <name>flatDistTo</name>
        <param>
          <type>const Vector3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the distance to the input position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="63" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1af8e149258461ccd0fc6ce6704cd75a0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Patrol::Node::flatDistSqrTo</definition>
        <argsstring>(const Vector3 &amp;pos) const </argsstring>
        <name>flatDistSqrTo</name>
        <param>
          <type>const Vector3 &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the square of the distance to the input position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="64" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a709ab88da1b23ba6efae607c5289b962" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Patrol::Node::nextNode</definition>
        <argsstring>() const </argsstring>
        <name>nextNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the next node to travel to from this one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="66" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="120" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a6922f4bcb3f7f828c1e9665893cce885" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Patrol::Node::randomisePosition</definition>
        <argsstring>(Vector3 &amp;pos, const Graph &amp;graph) const </argsstring>
        <name>randomisePosition</name>
        <param>
          <type>Vector3 &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="class_patrol_1_1_graph" kindref="compound">Graph</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Randomise the input position to be on the path from this node to one of our adjacencies, and return which adjacency we selected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="67" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="137" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a8e0f92b62a52722da815df1412103da4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Vector3</type>
        <definition>Vector3 Patrol::Node::generateDestination</definition>
        <argsstring>() const </argsstring>
        <name>generateDestination</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a random destination position around this node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="69" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a312467f6981dc2d81470126d75dfe91a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Patrol::Node::generateStayTime</definition>
        <argsstring>() const </argsstring>
        <name>generateStayTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a random wait time associated with the node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="70" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a27895426e11e674fc7cdaf7a7cfbf3c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Patrol::Node::generateSpeed</definition>
        <argsstring>(float ospeed) const </argsstring>
        <name>generateSpeed</name>
        <param>
          <type>float</type>
          <declname>ospeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a random speed associated with the node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="71" column="1" bodyfile="tools/bots/patrol_graph.cpp" bodystart="178" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a832418ab0b984c6f20ca986afab3cf11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const BW::string &amp;</type>
        <definition>const BW::string&amp; Patrol::Node::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="73" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1a8544880c531833448f219cf30d45a5c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_patrol_1_1_node_1_1_properties" kindref="compound">Properties</ref> &amp;</type>
        <definition>const Properties&amp; Patrol::Node::props</definition>
        <argsstring>() const </argsstring>
        <name>props</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="74" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_patrol_1_1_node_1ac4ec86192b5ee44f00ed8d2a24e7fb26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Vector3 &amp;</type>
        <definition>const Vector3&amp; Patrol::Node::position</definition>
        <argsstring>() const </argsstring>
        <name>position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/bots/patrol_graph.hpp" line="76" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class implements a patrol node that is used by the patrol graph. </para>    </detaileddescription>
    <location file="tools/bots/patrol_graph.hpp" line="24" column="1" bodyfile="tools/bots/patrol_graph.hpp" bodystart="23" bodyend="88"/>
    <listofallmembers>
      <member refid="class_patrol_1_1_node_1a23f54159a823ddcfdc067a1101ce3dd7" prot="private" virt="non-virtual"><scope>Patrol::Node</scope><name>Adjacencies</name></member>
      <member refid="class_patrol_1_1_node_1af8e149258461ccd0fc6ce6704cd75a0a" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>flatDistSqrTo</name></member>
      <member refid="class_patrol_1_1_node_1af45c2e7abfe2afbe0f6e5b917b2fde7e" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>flatDistTo</name></member>
      <member refid="class_patrol_1_1_node_1a8e0f92b62a52722da815df1412103da4" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>generateDestination</name></member>
      <member refid="class_patrol_1_1_node_1a27895426e11e674fc7cdaf7a7cfbf3c4" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>generateSpeed</name></member>
      <member refid="class_patrol_1_1_node_1a312467f6981dc2d81470126d75dfe91a" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>generateStayTime</name></member>
      <member refid="class_patrol_1_1_node_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" virt="non-virtual"><scope>Patrol::Node</scope><name>Graph</name></member>
      <member refid="class_patrol_1_1_node_1aa0d1b13240fb48d7c7cd2c218e1c7b7f" prot="private" virt="non-virtual"><scope>Patrol::Node</scope><name>id_</name></member>
      <member refid="class_patrol_1_1_node_1a2b6c791c7a13ecff79f313e4e797aeb7" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>init1</name></member>
      <member refid="class_patrol_1_1_node_1a156ffa9287b14777712918e5d53557b8" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>init2</name></member>
      <member refid="class_patrol_1_1_node_1a832418ab0b984c6f20ca986afab3cf11" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>name</name></member>
      <member refid="class_patrol_1_1_node_1afb391a05e55201ce53d4f6063b34053c" prot="private" virt="non-virtual"><scope>Patrol::Node</scope><name>name_</name></member>
      <member refid="class_patrol_1_1_node_1a709ab88da1b23ba6efae607c5289b962" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>nextNode</name></member>
      <member refid="class_patrol_1_1_node_1a1e43c74c14f41550cb8e1cbad2cd4efa" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>Node</name></member>
      <member refid="class_patrol_1_1_node_1a0f3bbd2d72fc737829d4c7afd46668d9" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>NodeMap</name></member>
      <member refid="class_patrol_1_1_node_1ac4ec86192b5ee44f00ed8d2a24e7fb26" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>position</name></member>
      <member refid="class_patrol_1_1_node_1aa95bc992a1f3d3b2368045eaae3755c3" prot="private" virt="non-virtual"><scope>Patrol::Node</scope><name>position_</name></member>
      <member refid="class_patrol_1_1_node_1a8544880c531833448f219cf30d45a5c0" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>props</name></member>
      <member refid="class_patrol_1_1_node_1afddc4f3e65bfa7a7337b80fde3142ed8" prot="private" virt="non-virtual"><scope>Patrol::Node</scope><name>props_</name></member>
      <member refid="class_patrol_1_1_node_1a6922f4bcb3f7f828c1e9665893cce885" prot="public" virt="non-virtual"><scope>Patrol::Node</scope><name>randomisePosition</name></member>
      <member refid="class_patrol_1_1_node_1a1f0aa6e43d7ab0e33f003e23d099aa2a" prot="private" virt="non-virtual"><scope>Patrol::Node</scope><name>toNodes_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
