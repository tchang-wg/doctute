<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_fixture" kind="class" language="C++" prot="public">
    <compoundname>Fixture</compoundname>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_fixture_1a4363ffacbdae5d6c485bd4f699587bce" prot="protected" static="no" mutable="no">
        <type><ref refid="class_mock_background_file_writer_listener" kindref="compound">MockBackgroundFileWriterListener</ref></type>
        <definition>MockBackgroundFileWriterListener Fixture::listener_</definition>
        <argsstring></argsstring>
        <name>listener_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="507" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fixture_1a08c498eea7ae8b8fc765f0bbcf6e89d8" prot="protected" static="no" mutable="no">
        <type>ChecksumSchemePtr</type>
        <definition>ChecksumSchemePtr Fixture::pPrivateScheme_</definition>
        <argsstring></argsstring>
        <name>pPrivateScheme_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="509" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fixture_1aebf5e3403076e49ccece9d3f79fb85a3" prot="protected" static="no" mutable="no">
        <type>ChecksumSchemePtr</type>
        <definition>ChecksumSchemePtr Fixture::pPublicScheme_</definition>
        <argsstring></argsstring>
        <name>pPublicScheme_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="510" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fixture_1af3e4e388ba6377108efc8eaacbaf77da" prot="protected" static="no" mutable="no">
        <type>ReplayMetaData</type>
        <definition>ReplayMetaData Fixture::metaData_</definition>
        <argsstring></argsstring>
        <name>metaData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="511" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_fixture_1ae52ebd8555ff8737ef3987486710a11e" prot="protected" static="no" mutable="no">
        <type>MD5::Digest</type>
        <definition>MD5::Digest Fixture::digest_</definition>
        <argsstring></argsstring>
        <name>digest_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="512" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="512" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_fixture_1a08c4ccc40ce935569bd2000053ca67a2" prot="private" static="no" mutable="no">
        <type>IBackgroundFileWriterPtr</type>
        <definition>IBackgroundFileWriterPtr Fixture::pFileWriter_</definition>
        <argsstring></argsstring>
        <name>pFileWriter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="515" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="515" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_fixture_1a7bd87f852602d02a205b4a811530dfe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Fixture::Fixture</definition>
        <argsstring>()</argsstring>
        <name>Fixture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="480" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="522" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_fixture_1a2ff90260e9f62a5bcac1c032edb36077" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_mock_background_file_writer" kindref="compound">MockBackgroundFileWriter</ref> &amp;</type>
        <definition>MockBackgroundFileWriter&amp; Fixture::fileWriter</definition>
        <argsstring>()</argsstring>
        <name>fileWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the file writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="486" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="486" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_fixture_1abddb815ccd661db42d2450182a337c43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Fixture::setFileWriter</definition>
        <argsstring>(MockBackgroundFileWriter *pNewWriter)</argsstring>
        <name>setFileWriter</name>
        <param>
          <type><ref refid="class_mock_background_file_writer" kindref="compound">MockBackgroundFileWriter</ref> *</type>
          <declname>pNewWriter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the file writer to a new instance.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pNewWriter</parametername>
</parameternamelist>
<parameterdescription>
<para>The new writer instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="496" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="496" bodyend="499"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_fixture_1acfa17c8532530cbdf497fae99fc1ea42" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Fixture::addSampleTickData</definition>
        <argsstring>(ReplayDataFileWriter &amp;writer, GameTime tick)</argsstring>
        <name>addSampleTickData</name>
        <param>
          <type><ref refid="class_replay_data_file_writer" kindref="compound">ReplayDataFileWriter</ref> &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>GameTime</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method adds sample tick data to the file writer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>The replay data file writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tick</parametername>
</parameternamelist>
<parameterdescription>
<para>The game time of the tick to write. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="502" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="547" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="class_fixture_1a8ea9efd8d081e02d39039dd11bf8dbbf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Fixture::verifySampleTickData</definition>
        <argsstring>(BinaryIStream &amp;stream, GameTime tick)</argsstring>
        <name>verifySampleTickData</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>GameTime</type>
          <declname>tick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method verifies the sample tick data from the given stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream containing the tick data to verify. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tick</parametername>
</parameternamelist>
<parameterdescription>
<para>The game time that it should match up to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="503" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="569" bodyend="589"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_fixture" kindref="compound">Fixture</ref> for recording class unit tests. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1314">
        <label>BackgroundFileWriterListener</label>
      </node>
      <node id="1313">
        <label>MockBackgroundFileWriterListener</label>
        <link refid="class_mock_background_file_writer_listener"/>
        <childnode refid="1314" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1312">
        <label>Fixture</label>
        <link refid="class_fixture"/>
        <childnode refid="1313" relation="usage">
          <edgelabel>listener_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="baseapp/unit_test/test_recording.cpp" line="478" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="477" bodyend="516"/>
    <listofallmembers>
      <member refid="class_fixture_1acfa17c8532530cbdf497fae99fc1ea42" prot="protected" virt="non-virtual"><scope>Fixture</scope><name>addSampleTickData</name></member>
      <member refid="class_fixture_1ae52ebd8555ff8737ef3987486710a11e" prot="protected" virt="non-virtual"><scope>Fixture</scope><name>digest_</name></member>
      <member refid="class_fixture_1a2ff90260e9f62a5bcac1c032edb36077" prot="public" virt="non-virtual"><scope>Fixture</scope><name>fileWriter</name></member>
      <member refid="class_fixture_1a7bd87f852602d02a205b4a811530dfe4" prot="public" virt="non-virtual"><scope>Fixture</scope><name>Fixture</name></member>
      <member refid="class_fixture_1a4363ffacbdae5d6c485bd4f699587bce" prot="protected" virt="non-virtual"><scope>Fixture</scope><name>listener_</name></member>
      <member refid="class_fixture_1af3e4e388ba6377108efc8eaacbaf77da" prot="protected" virt="non-virtual"><scope>Fixture</scope><name>metaData_</name></member>
      <member refid="class_fixture_1a08c4ccc40ce935569bd2000053ca67a2" prot="private" virt="non-virtual"><scope>Fixture</scope><name>pFileWriter_</name></member>
      <member refid="class_fixture_1a08c498eea7ae8b8fc765f0bbcf6e89d8" prot="protected" virt="non-virtual"><scope>Fixture</scope><name>pPrivateScheme_</name></member>
      <member refid="class_fixture_1aebf5e3403076e49ccece9d3f79fb85a3" prot="protected" virt="non-virtual"><scope>Fixture</scope><name>pPublicScheme_</name></member>
      <member refid="class_fixture_1abddb815ccd661db42d2450182a337c43" prot="public" virt="non-virtual"><scope>Fixture</scope><name>setFileWriter</name></member>
      <member refid="class_fixture_1a8ea9efd8d081e02d39039dd11bf8dbbf" prot="protected" virt="non-virtual"><scope>Fixture</scope><name>verifySampleTickData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
