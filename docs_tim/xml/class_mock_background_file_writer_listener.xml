<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_mock_background_file_writer_listener" kind="class" language="C++" prot="public">
    <compoundname>MockBackgroundFileWriterListener</compoundname>
    <basecompoundref prot="public" virt="non-virtual">BackgroundFileWriterListener</basecompoundref>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_mock_background_file_writer_listener_1ac3a66bb0a7c3b2189eb6fdfd116f2a25" prot="public" static="no">
        <type>std::pair&lt; long, int &gt;</type>
        <definition>typedef std::pair&lt; long, int &gt; MockBackgroundFileWriterListener::UserDataValue</definition>
        <argsstring></argsstring>
        <name>UserDataValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="356" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_mock_background_file_writer_listener_1a091b7688b6d079c5195e87a37ce9459a" prot="public" static="no">
        <type>BW::vector&lt; UserDataValue &gt;</type>
        <definition>typedef BW::vector&lt; UserDataValue &gt; MockBackgroundFileWriterListener::UserDataValues</definition>
        <argsstring></argsstring>
        <name>UserDataValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="357" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mock_background_file_writer_listener_1a9325196386da6bbbee69616cbc5378a4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MockBackgroundFileWriterListener::hasError_</definition>
        <argsstring></argsstring>
        <name>hasError_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="362" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mock_background_file_writer_listener_1aba6ea297068c476c91c5e46934d48804" prot="private" static="no" mutable="no">
        <type>UserDataValues</type>
        <definition>UserDataValues MockBackgroundFileWriterListener::userDataValues_</definition>
        <argsstring></argsstring>
        <name>userDataValues_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="363" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mock_background_file_writer_listener_1a9345d5ba47f9d9a14ec0a1e50df7fd5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MockBackgroundFileWriterListener::MockBackgroundFileWriterListener</definition>
        <argsstring>()</argsstring>
        <name>MockBackgroundFileWriterListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="326" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_background_file_writer_listener_1a5b6d6aa57fe541cc4e293e11b6c5de50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual MockBackgroundFileWriterListener::~MockBackgroundFileWriterListener</definition>
        <argsstring>()</argsstring>
        <name>~MockBackgroundFileWriterListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="334" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="334" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_background_file_writer_listener_1af3b81ff059f182e28b678fe97ac33a28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void MockBackgroundFileWriterListener::onBackgroundFileWritingError</definition>
        <argsstring>(IBackgroundFileWriter &amp;writer)</argsstring>
        <name>onBackgroundFileWritingError</name>
        <param>
          <type>IBackgroundFileWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="339" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="339" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_background_file_writer_listener_1a3fc1c3d27e0b088f84055783a6ac52a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void MockBackgroundFileWriterListener::onBackgroundFileWritingComplete</definition>
        <argsstring>(IBackgroundFileWriter &amp;writer, long filePosition, int userData)</argsstring>
        <name>onBackgroundFileWritingComplete</name>
        <param>
          <type>IBackgroundFileWriter &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>long</type>
          <declname>filePosition</declname>
        </param>
        <param>
          <type>int</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="346" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="346" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_background_file_writer_listener_1a424cfb28f1f435ad8fd05cabaf3fd7b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MockBackgroundFileWriterListener::hasError</definition>
        <argsstring>() const </argsstring>
        <name>hasError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="353" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="353" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_background_file_writer_listener_1a8c83f4fe7e27a7fc4cef40a22b617723" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MockBackgroundFileWriterListener::clearError</definition>
        <argsstring>()</argsstring>
        <name>clearError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="354" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_mock_background_file_writer_listener_1a52d3f23e92ad53910488870d45000373" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const UserDataValues &amp;</type>
        <definition>const UserDataValues&amp; MockBackgroundFileWriterListener::userDataValues</definition>
        <argsstring>() const </argsstring>
        <name>userDataValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="baseapp/unit_test/test_recording.cpp" line="359" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="359" bodyend="359"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class mocks a listener class that stores away the user data values that are given to the completion callbacks for later query and verification by unit tests. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1924">
        <label>BackgroundFileWriterListener</label>
      </node>
      <node id="1923">
        <label>MockBackgroundFileWriterListener</label>
        <link refid="class_mock_background_file_writer_listener"/>
        <childnode refid="1924" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1926">
        <label>BackgroundFileWriterListener</label>
      </node>
      <node id="1925">
        <label>MockBackgroundFileWriterListener</label>
        <link refid="class_mock_background_file_writer_listener"/>
        <childnode refid="1926" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="baseapp/unit_test/test_recording.cpp" line="321" column="1" bodyfile="baseapp/unit_test/test_recording.cpp" bodystart="320" bodyend="364"/>
    <listofallmembers>
      <member refid="class_mock_background_file_writer_listener_1a8c83f4fe7e27a7fc4cef40a22b617723" prot="public" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>clearError</name></member>
      <member refid="class_mock_background_file_writer_listener_1a424cfb28f1f435ad8fd05cabaf3fd7b5" prot="public" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>hasError</name></member>
      <member refid="class_mock_background_file_writer_listener_1a9325196386da6bbbee69616cbc5378a4" prot="private" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>hasError_</name></member>
      <member refid="class_mock_background_file_writer_listener_1a9345d5ba47f9d9a14ec0a1e50df7fd5e" prot="public" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>MockBackgroundFileWriterListener</name></member>
      <member refid="class_mock_background_file_writer_listener_1a3fc1c3d27e0b088f84055783a6ac52a6" prot="public" virt="virtual"><scope>MockBackgroundFileWriterListener</scope><name>onBackgroundFileWritingComplete</name></member>
      <member refid="class_mock_background_file_writer_listener_1af3b81ff059f182e28b678fe97ac33a28" prot="public" virt="virtual"><scope>MockBackgroundFileWriterListener</scope><name>onBackgroundFileWritingError</name></member>
      <member refid="class_mock_background_file_writer_listener_1ac3a66bb0a7c3b2189eb6fdfd116f2a25" prot="public" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>UserDataValue</name></member>
      <member refid="class_mock_background_file_writer_listener_1a52d3f23e92ad53910488870d45000373" prot="public" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>userDataValues</name></member>
      <member refid="class_mock_background_file_writer_listener_1a091b7688b6d079c5195e87a37ce9459a" prot="public" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>UserDataValues</name></member>
      <member refid="class_mock_background_file_writer_listener_1aba6ea297068c476c91c5e46934d48804" prot="private" virt="non-virtual"><scope>MockBackgroundFileWriterListener</scope><name>userDataValues_</name></member>
      <member refid="class_mock_background_file_writer_listener_1a5b6d6aa57fe541cc4e293e11b6c5de50" prot="public" virt="virtual"><scope>MockBackgroundFileWriterListener</scope><name>~MockBackgroundFileWriterListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
