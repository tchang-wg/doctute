<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="log__string__writer_8cpp" kind="file" language="C++">
    <compoundname>log_string_writer.cpp</compoundname>
    <includes refid="log__string__writer_8hpp" local="yes">log_string_writer.hpp</includes>
    <incdepgraph>
      <node id="20361">
        <label>network/bsd_snprintf.h</label>
      </node>
      <node id="20357">
        <label>cstdmf/stdmf.hpp</label>
      </node>
      <node id="20356">
        <label>format_data.hpp</label>
        <link refid="format__data_8hpp_source"/>
        <childnode refid="20357" relation="include">
        </childnode>
        <childnode refid="20358" relation="include">
        </childnode>
      </node>
      <node id="20358">
        <label>cstdmf/binary_stream.hpp</label>
      </node>
      <node id="20362">
        <label>cstdmf/bw_string.hpp</label>
      </node>
      <node id="20354">
        <label>tools/message_logger/log_string_writer.cpp</label>
        <link refid="log_string_writer.cpp"/>
        <childnode refid="20355" relation="include">
        </childnode>
      </node>
      <node id="20360">
        <label>network/forwarding_string_handler.hpp</label>
      </node>
      <node id="20355">
        <label>log_string_writer.hpp</label>
        <link refid="log__string__writer_8hpp_source"/>
        <childnode refid="20356" relation="include">
        </childnode>
        <childnode refid="20359" relation="include">
        </childnode>
        <childnode refid="20360" relation="include">
        </childnode>
        <childnode refid="20361" relation="include">
        </childnode>
        <childnode refid="20362" relation="include">
        </childnode>
      </node>
      <node id="20359">
        <label>network/file_stream.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;log_string_writer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="namespace_b_w___b_e_g_i_n___n_a_m_e_s_p_a_c_e" kindref="compound">BW_BEGIN_NAMESPACE</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">LogStringWriter::LogStringWriter(<sp/>FileStream<sp/>&amp;blobFile<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>isGood_(<sp/>false<sp/>),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>blobFile_(<sp/>blobFile<sp/>)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LogStringWriter::isGood()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="13"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(isGood_<sp/>&amp;&amp;<sp/>blobFile_.good());</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onParseComplete()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>blobFile_.commit();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>isGood_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onError()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>isGood_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onFmtStringSection(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BW::string<sp/>&amp;fmt,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onMinWidth(<sp/>WidthType<sp/>w,<sp/><ref refid="class_format_data" kindref="compound">FormatData</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>fd<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>blobFile_<sp/>&lt;&lt;<sp/>w;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onMaxWidth(<sp/>WidthType<sp/>w,<sp/><ref refid="class_format_data" kindref="compound">FormatData</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>fd<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>blobFile_<sp/>&lt;&lt;<sp/>w;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onString(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_format_data" kindref="compound">FormatData</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>fd<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>blobFile_<sp/>&lt;&lt;<sp/>s;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onPointer(<sp/>int64<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_format_data" kindref="compound">FormatData</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>fd<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>blobFile_<sp/>&lt;&lt;<sp/>ptr;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogStringWriter::onChar(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_format_data" kindref="compound">FormatData</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>fd<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>blobFile_<sp/>&lt;&lt;<sp/>c;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">BW_END_NAMESPACE</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>log_string_writer.cpp</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tools/message_logger/log_string_writer.cpp"/>
  </compounddef>
</doxygen>
