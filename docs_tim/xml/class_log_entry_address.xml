<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_log_entry_address" kind="class" language="C++" prot="public">
    <compoundname>LogEntryAddress</compoundname>
    <derivedcompoundref refid="class_log_entry_address_reader" prot="public" virt="non-virtual">LogEntryAddressReader</derivedcompoundref>
    <includes refid="log__entry__address_8hpp" local="no">log_entry_address.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_log_entry_address_1ab86145d1249d08d25cb0cea776703c13" prot="protected" static="no" mutable="no">
        <type>BW::string</type>
        <definition>BW::string LogEntryAddress::suffix_</definition>
        <argsstring></argsstring>
        <name>suffix_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="37" column="1" bodyfile="tools/message_logger/log_entry_address.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_log_entry_address_1a1a63e5fb6b143f97ae5c6c990ae43453" prot="protected" static="no" mutable="no">
        <type>int32</type>
        <definition>int32 LogEntryAddress::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="38" column="1" bodyfile="tools/message_logger/log_entry_address.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_log_entry_address_1a3e9cce86ee593eb49bf2d772a620532c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BW_BEGIN_NAMESPACE LogEntryAddress::LogEntryAddress</definition>
        <argsstring>()</argsstring>
        <name>LogEntryAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="24" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="8" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="class_log_entry_address_1a9dff7162695c8eb560e665390fb7e184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogEntryAddress::LogEntryAddress</definition>
        <argsstring>(const char *suffix, int index)</argsstring>
        <name>LogEntryAddress</name>
        <param>
          <type>const char *</type>
          <declname>suffix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="25" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_log_entry_address_1a7e61a2590d0b0e7fe04ba69f65ca2903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogEntryAddress::LogEntryAddress</definition>
        <argsstring>(const BW::string &amp;suffix, int index)</argsstring>
        <name>LogEntryAddress</name>
        <param>
          <type>const BW::string &amp;</type>
          <declname>suffix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="26" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_log_entry_address_1a8c513e4ad92382e97ccfb50eead8bf13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogEntryAddress::write</definition>
        <argsstring>(BinaryOStream &amp;os) const </argsstring>
        <name>write</name>
        <param>
          <type>BinaryOStream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="28" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_log_entry_address_1a40257a11d32d82674e58c4c7376596ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogEntryAddress::read</definition>
        <argsstring>(BinaryIStream &amp;is)</argsstring>
        <name>read</name>
        <param>
          <type>BinaryIStream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="29" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_log_entry_address_1a449d39a83711a3e967af613e73d3df8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool LogEntryAddress::operator&lt;</definition>
        <argsstring>(const LogEntryAddress &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_log_entry_address" kindref="compound">LogEntryAddress</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="31" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_log_entry_address_1a965be4e07d299f401f1d53a94478dbc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * LogEntryAddress::getSuffix</definition>
        <argsstring>() const </argsstring>
        <name>getSuffix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="33" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_log_entry_address_1a0954b878f0f3a19b1a7cbaa3a8ad1972" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int LogEntryAddress::getIndex</definition>
        <argsstring>() const </argsstring>
        <name>getIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tools/message_logger/log_entry_address.hpp" line="34" column="1" bodyfile="tools/message_logger/log_entry_address.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class represents the on disk address of a log entry. Notice that we reference by suffix instead of segment number to handle segment deletion on disk. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1691">
        <label>LogEntryAddress</label>
        <link refid="class_log_entry_address"/>
      </node>
      <node id="1692">
        <label>LogEntryAddressReader</label>
        <link refid="class_log_entry_address_reader"/>
        <childnode refid="1691" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="tools/message_logger/log_entry_address.hpp" line="22" column="1" bodyfile="tools/message_logger/log_entry_address.hpp" bodystart="21" bodyend="39"/>
    <listofallmembers>
      <member refid="class_log_entry_address_1a0954b878f0f3a19b1a7cbaa3a8ad1972" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>getIndex</name></member>
      <member refid="class_log_entry_address_1a965be4e07d299f401f1d53a94478dbc5" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>getSuffix</name></member>
      <member refid="class_log_entry_address_1a1a63e5fb6b143f97ae5c6c990ae43453" prot="protected" virt="non-virtual"><scope>LogEntryAddress</scope><name>index_</name></member>
      <member refid="class_log_entry_address_1a3e9cce86ee593eb49bf2d772a620532c" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>LogEntryAddress</name></member>
      <member refid="class_log_entry_address_1a9dff7162695c8eb560e665390fb7e184" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>LogEntryAddress</name></member>
      <member refid="class_log_entry_address_1a7e61a2590d0b0e7fe04ba69f65ca2903" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>LogEntryAddress</name></member>
      <member refid="class_log_entry_address_1a449d39a83711a3e967af613e73d3df8a" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>operator&lt;</name></member>
      <member refid="class_log_entry_address_1a40257a11d32d82674e58c4c7376596ac" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>read</name></member>
      <member refid="class_log_entry_address_1ab86145d1249d08d25cb0cea776703c13" prot="protected" virt="non-virtual"><scope>LogEntryAddress</scope><name>suffix_</name></member>
      <member refid="class_log_entry_address_1a8c513e4ad92382e97ccfb50eead8bf13" prot="public" virt="non-virtual"><scope>LogEntryAddress</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
